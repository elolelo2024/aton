/*! For license information please see THREE.bundle.js.LICENSE.txt */
(()=>{"use strict";var t={825:t=>{t.exports="data:application/wasm;base64,"}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,n),r.exports}n.m=t,n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.b=document.baseURI||self.location.href;var i={};n.r(i),n.d(i,{ACESFilmicToneMapping:()=>mt,AddEquation:()=>L,AddOperation:()=>ut,AdditiveAnimationBlendMode:()=>$e,AdditiveBlending:()=>D,AgXToneMapping:()=>It,AlphaFormat:()=>te,AlwaysCompare:()=>Nn,AlwaysDepth:()=>it,AlwaysStencilFunc:()=>Tn,AmbientLight:()=>eh,AnimationAction:()=>qh,AnimationClip:()=>xA,AnimationLoader:()=>DA,AnimationMixer:()=>Jh,AnimationObjectGroup:()=>Yh,AnimationUtils:()=>AA,ArcCurve:()=>Pl,ArrayCamera:()=>vh,ArrowHelper:()=>ju,AttachedBindMode:()=>Et,Audio:()=>Th,AudioAnalyser:()=>Lh,AudioContext:()=>fh,AudioListener:()=>Mh,AudioLoader:()=>mh,AxesHelper:()=>Xu,BackSide:()=>b,BasicDepthPacking:()=>sn,BasicShadowMap:()=>x,BatchedMesh:()=>qo,Bone:()=>no,BooleanKeyframeTrack:()=>fA,Box2:()=>hu,Box3:()=>Ji,Box3Helper:()=>Vu,BoxGeometry:()=>ia,BoxHelper:()=>Hu,BufferAttribute:()=>Br,BufferGeometry:()=>Hr,BufferGeometryLoader:()=>lh,ByteType:()=>Ht,Cache:()=>_A,Camera:()=>ca,CameraHelper:()=>Ou,CanvasTexture:()=>Cl,CapsuleGeometry:()=>vl,CatmullRomCurve3:()=>zl,CineonToneMapping:()=>ft,CircleGeometry:()=>xl,ClampToEdgeWrapping:()=>Tt,Clock:()=>xh,Color:()=>dr,ColorKeyframeTrack:()=>mA,ColorManagement:()=>Ti,CompressedArrayTexture:()=>yl,CompressedCubeTexture:()=>Il,CompressedTexture:()=>ml,CompressedTextureLoader:()=>RA,ConeGeometry:()=>_l,ConstantAlphaFactor:()=>tt,ConstantColorFactor:()=>Z,Controls:()=>Zu,CubeCamera:()=>ga,CubeReflectionMapping:()=>wt,CubeRefractionMapping:()=>_t,CubeTexture:()=>fa,CubeTextureLoader:()=>LA,CubeUVReflectionMapping:()=>bt,CubicBezierCurve:()=>Yl,CubicBezierCurve3:()=>ql,CubicInterpolant:()=>uA,CullFaceBack:()=>C,CullFaceFront:()=>E,CullFaceFrontBack:()=>v,CullFaceNone:()=>I,Curve:()=>Rl,CurvePath:()=>$l,CustomBlending:()=>P,CustomToneMapping:()=>yt,CylinderGeometry:()=>wl,Cylindrical:()=>lu,Data3DTexture:()=>qi,DataArrayTexture:()=>Vi,DataTexture:()=>io,DataTextureLoader:()=>FA,DataUtils:()=>vr,DecrementStencilOp:()=>In,DecrementWrapStencilOp:()=>En,DefaultLoadingManager:()=>SA,DepthFormat:()=>ie,DepthStencilFormat:()=>se,DepthTexture:()=>El,DetachedBindMode:()=>vt,DirectionalLight:()=>th,DirectionalLightHelper:()=>Fu,DiscreteInterpolant:()=>pA,DodecahedronGeometry:()=>Sl,DoubleSide:()=>M,DstAlphaFactor:()=>W,DstColorFactor:()=>j,DynamicCopyUsage:()=>qn,DynamicDrawUsage:()=>On,DynamicReadUsage:()=>Hn,EdgesGeometry:()=>Dl,EllipseCurve:()=>Ul,EqualCompare:()=>Rn,EqualDepth:()=>at,EqualStencilFunc:()=>_n,EquirectangularReflectionMapping:()=>Bt,EquirectangularRefractionMapping:()=>St,Euler:()=>Qs,EventDispatcher:()=>ei,ExtrudeGeometry:()=>Qc,FileLoader:()=>QA,Float16BufferAttribute:()=>Ur,Float32BufferAttribute:()=>Pr,FloatType:()=>Jt,Fog:()=>va,FogExp2:()=>Ea,FramebufferTexture:()=>fl,FrontSide:()=>S,Frustum:()=>wo,FrustumArray:()=>So,GLBufferAttribute:()=>tu,GLSL1:()=>Jn,GLSL3:()=>jn,GreaterCompare:()=>Pn,GreaterDepth:()=>lt,GreaterEqualCompare:()=>Fn,GreaterEqualDepth:()=>ot,GreaterEqualStencilFunc:()=>Mn,GreaterStencilFunc:()=>Sn,GridHelper:()=>Du,Group:()=>ya,HalfFloatType:()=>jt,HemisphereLight:()=>OA,HemisphereLightHelper:()=>Qu,IcosahedronGeometry:()=>Rc,ImageBitmapLoader:()=>ph,ImageLoader:()=>PA,ImageUtils:()=>Ui,IncrementStencilOp:()=>yn,IncrementWrapStencilOp:()=>Cn,InstancedBufferAttribute:()=>oo,InstancedBufferGeometry:()=>oh,InstancedInterleavedBuffer:()=>$h,InstancedMesh:()=>fo,Int16BufferAttribute:()=>Tr,Int32BufferAttribute:()=>Dr,Int8BufferAttribute:()=>Sr,IntType:()=>qt,InterleavedBuffer:()=>wa,InterleavedBufferAttribute:()=>Ba,Interpolant:()=>hA,InterpolateDiscrete:()=>qe,InterpolateLinear:()=>We,InterpolateSmooth:()=>Je,InterpolationSamplingMode:()=>ti,InterpolationSamplingType:()=>$n,InvertStencilOp:()=>vn,KeepStencilOp:()=>fn,KeyframeTrack:()=>gA,LOD:()=>Ya,LatheGeometry:()=>Uc,Layers:()=>Ds,LessCompare:()=>Dn,LessDepth:()=>st,LessEqualCompare:()=>Un,LessEqualDepth:()=>rt,LessEqualStencilFunc:()=>Bn,LessStencilFunc:()=>wn,Light:()=>kA,LightProbe:()=>sh,Line:()=>el,Line3:()=>Iu,LineBasicMaterial:()=>Wo,LineCurve:()=>Wl,LineCurve3:()=>Jl,LineDashedMaterial:()=>sA,LineLoop:()=>al,LineSegments:()=>rl,LinearFilter:()=>Ft,LinearInterpolant:()=>dA,LinearMipMapLinearFilter:()=>zt,LinearMipMapNearestFilter:()=>kt,LinearMipmapLinearFilter:()=>Ot,LinearMipmapNearestFilter:()=>Nt,LinearSRGBColorSpace:()=>un,LinearToneMapping:()=>pt,LinearTransfer:()=>dn,Loader:()=>bA,LoaderUtils:()=>ah,LoadingManager:()=>BA,LoopOnce:()=>He,LoopPingPong:()=>Ye,LoopRepeat:()=>Ve,MOUSE:()=>m,Material:()=>fr,MaterialLoader:()=>rh,MathUtils:()=>ui,Matrix2:()=>cu,Matrix3:()=>yi,Matrix4:()=>Es,MaxEquation:()=>O,Mesh:()=>ea,MeshBasicMaterial:()=>mr,MeshDepthMaterial:()=>eA,MeshDistanceMaterial:()=>nA,MeshLambertMaterial:()=>tA,MeshMatcapMaterial:()=>iA,MeshNormalMaterial:()=>$c,MeshPhongMaterial:()=>Kc,MeshPhysicalMaterial:()=>Xc,MeshStandardMaterial:()=>jc,MeshToonMaterial:()=>Zc,MinEquation:()=>k,MirroredRepeatWrapping:()=>Qt,MixOperation:()=>ht,MultiplyBlending:()=>U,MultiplyOperation:()=>At,NearestFilter:()=>Dt,NearestMipMapLinearFilter:()=>Lt,NearestMipMapNearestFilter:()=>Ut,NearestMipmapLinearFilter:()=>Pt,NearestMipmapNearestFilter:()=>Rt,NeutralToneMapping:()=>Ct,NeverCompare:()=>Qn,NeverDepth:()=>nt,NeverStencilFunc:()=>xn,NoBlending:()=>T,NoColorSpace:()=>An,NoToneMapping:()=>dt,NormalAnimationBlendMode:()=>Ze,NormalBlending:()=>Q,NotEqualCompare:()=>Ln,NotEqualDepth:()=>ct,NotEqualStencilFunc:()=>bn,NumberKeyframeTrack:()=>yA,Object3D:()=>Js,ObjectLoader:()=>ch,ObjectSpaceNormalMap:()=>cn,OctahedronGeometry:()=>Pc,OneFactor:()=>G,OneMinusConstantAlphaFactor:()=>et,OneMinusConstantColorFactor:()=>$,OneMinusDstAlphaFactor:()=>J,OneMinusDstColorFactor:()=>X,OneMinusSrcAlphaFactor:()=>q,OneMinusSrcColorFactor:()=>V,OrthographicCamera:()=>ZA,PCFShadowMap:()=>w,PCFSoftShadowMap:()=>_,PMREMGenerator:()=>Bd,Path:()=>tc,PerspectiveCamera:()=>da,Plane:()=>Co,PlaneGeometry:()=>Lc,PlaneHelper:()=>Yu,PointLight:()=>KA,PointLightHelper:()=>Su,Points:()=>ul,PointsMaterial:()=>ol,PolarGridHelper:()=>Ru,PolyhedronGeometry:()=>Bl,PositionalAudio:()=>Ph,PropertyBinding:()=>Vh,PropertyMixer:()=>Fh,QuadraticBezierCurve:()=>jl,QuadraticBezierCurve3:()=>Xl,Quaternion:()=>pi,QuaternionKeyframeTrack:()=>CA,QuaternionLinearInterpolant:()=>IA,RED_GREEN_RGTC2_Format:()=>ze,RED_RGTC1_Format:()=>ke,REVISION:()=>f,RGBADepthPacking:()=>rn,RGBAFormat:()=>ne,RGBAIntegerFormat:()=>Ae,RGBA_ASTC_10x10_Format:()=>Re,RGBA_ASTC_10x5_Format:()=>Te,RGBA_ASTC_10x6_Format:()=>Qe,RGBA_ASTC_10x8_Format:()=>De,RGBA_ASTC_12x10_Format:()=>Ue,RGBA_ASTC_12x12_Format:()=>Pe,RGBA_ASTC_4x4_Format:()=>ve,RGBA_ASTC_5x4_Format:()=>xe,RGBA_ASTC_5x5_Format:()=>we,RGBA_ASTC_6x5_Format:()=>_e,RGBA_ASTC_6x6_Format:()=>Be,RGBA_ASTC_8x5_Format:()=>Se,RGBA_ASTC_8x6_Format:()=>be,RGBA_ASTC_8x8_Format:()=>Me,RGBA_BPTC_Format:()=>Le,RGBA_ETC2_EAC_Format:()=>Ee,RGBA_PVRTC_2BPPV1_Format:()=>ye,RGBA_PVRTC_4BPPV1_Format:()=>me,RGBA_S3TC_DXT1_Format:()=>ue,RGBA_S3TC_DXT3_Format:()=>de,RGBA_S3TC_DXT5_Format:()=>pe,RGBDepthPacking:()=>an,RGBFormat:()=>ee,RGBIntegerFormat:()=>ce,RGB_BPTC_SIGNED_Format:()=>Fe,RGB_BPTC_UNSIGNED_Format:()=>Ne,RGB_ETC1_Format:()=>Ie,RGB_ETC2_Format:()=>Ce,RGB_PVRTC_2BPPV1_Format:()=>fe,RGB_PVRTC_4BPPV1_Format:()=>ge,RGB_S3TC_DXT1_Format:()=>he,RGDepthPacking:()=>on,RGFormat:()=>oe,RGIntegerFormat:()=>le,RawShaderMaterial:()=>Jc,Ray:()=>Cs,Raycaster:()=>nu,RectAreaLight:()=>nh,RedFormat:()=>re,RedIntegerFormat:()=>ae,ReinhardToneMapping:()=>gt,RenderTarget:()=>Gi,RenderTarget3D:()=>jh,RepeatWrapping:()=>Mt,ReplaceStencilOp:()=>mn,ReverseSubtractEquation:()=>N,RingGeometry:()=>Fc,SIGNED_RED_GREEN_RGTC2_Format:()=>Ge,SIGNED_RED_RGTC1_Format:()=>Oe,SRGBColorSpace:()=>hn,SRGBTransfer:()=>pn,Scene:()=>xa,ShaderChunk:()=>id,ShaderLib:()=>rd,ShaderMaterial:()=>la,ShadowMaterial:()=>Wc,Shape:()=>ec,ShapeGeometry:()=>Nc,ShapePath:()=>Ku,ShapeUtils:()=>bc,ShortType:()=>Vt,Skeleton:()=>ao,SkeletonHelper:()=>_u,SkinnedMesh:()=>eo,Source:()=>Li,Sphere:()=>us,SphereGeometry:()=>kc,Spherical:()=>ou,SphericalHarmonics3:()=>ih,SplineCurve:()=>Kl,SpotLight:()=>qA,SpotLightHelper:()=>Eu,Sprite:()=>za,SpriteMaterial:()=>Sa,SrcAlphaFactor:()=>Y,SrcAlphaSaturateFactor:()=>K,SrcColorFactor:()=>H,StaticCopyUsage:()=>Yn,StaticDrawUsage:()=>kn,StaticReadUsage:()=>Gn,StereoCamera:()=>Eh,StreamCopyUsage:()=>Wn,StreamDrawUsage:()=>zn,StreamReadUsage:()=>Vn,StringKeyframeTrack:()=>EA,SubtractEquation:()=>F,SubtractiveBlending:()=>R,TOUCH:()=>y,TangentSpaceNormalMap:()=>ln,TetrahedronGeometry:()=>Oc,Texture:()=>Oi,TextureLoader:()=>NA,TextureUtils:()=>td,Timer:()=>ru,TimestampQuery:()=>Zn,TorusGeometry:()=>zc,TorusKnotGeometry:()=>Gc,Triangle:()=>lr,TriangleFanDrawMode:()=>nn,TriangleStripDrawMode:()=>en,TrianglesDrawMode:()=>tn,TubeGeometry:()=>Hc,UVMapping:()=>xt,Uint16BufferAttribute:()=>Qr,Uint32BufferAttribute:()=>Rr,Uint8BufferAttribute:()=>br,Uint8ClampedBufferAttribute:()=>Mr,Uniform:()=>Xh,UniformsGroup:()=>Zh,UniformsLib:()=>sd,UniformsUtils:()=>oa,UnsignedByteType:()=>Gt,UnsignedInt248Type:()=>Zt,UnsignedInt5999Type:()=>$t,UnsignedIntType:()=>Wt,UnsignedShort4444Type:()=>Xt,UnsignedShort5551Type:()=>Kt,UnsignedShortType:()=>Yt,VSMShadowMap:()=>B,Vector2:()=>di,Vector3:()=>gi,Vector4:()=>zi,VectorKeyframeTrack:()=>vA,VideoFrameTexture:()=>gl,VideoTexture:()=>pl,WebGL3DRenderTarget:()=>Wi,WebGLArrayRenderTarget:()=>Yi,WebGLCoordinateSystem:()=>Xn,WebGLCubeRenderTarget:()=>ma,WebGLRenderTarget:()=>Hi,WebGLRenderer:()=>Pg,WebGLUtils:()=>Sg,WebGPUCoordinateSystem:()=>Kn,WebXRController:()=>Ca,WireframeGeometry:()=>Vc,WrapAroundEnding:()=>Ke,ZeroCurvatureEnding:()=>je,ZeroFactor:()=>z,ZeroSlopeEnding:()=>Xe,ZeroStencilOp:()=>gn,createCanvasElement:()=>wi});var s={};n.r(s),n.d(s,{ru:()=>sm,pP:()=>nm,_c:()=>rm});var r={};n.r(r);var a={};n.r(a),n.d(a,{COLUMN:()=>Tv,COLUMN_REVERSE:()=>Qv,ROW:()=>bv,ROW_REVERSE:()=>Mv,contentDirection:()=>Dv});var o={};n.r(o),n.d(o,{CENTER:()=>Uv,END:()=>Pv,START:()=>Rv,STRETCH:()=>Lv,alignItems:()=>Fv,warnAboutDeprecatedAlignItems:()=>Nv});var l={};n.r(l),n.d(l,{CENTER:()=>Gv,END:()=>Hv,SPACE_AROUND:()=>Vv,SPACE_BETWEEN:()=>Yv,SPACE_EVENLY:()=>qv,START:()=>zv,justifyContent:()=>Wv});var c={};n.r(c),n.d(c,{NORMAL:()=>Kv,NOWRAP:()=>Zv,PRE:()=>$v,PRE_LINE:()=>tx,PRE_WRAP:()=>ex,WHITE_CHARS:()=>Xv,collapseWhitespaceOnInlines:()=>rx,collapseWhitespaceOnString:()=>nx,newlineBreakability:()=>ix,shouldBreak:()=>sx});var A={};n.r(A),n.d(A,{CENTER:()=>hx,JUSTIFY:()=>ux,JUSTIFY_CENTER:()=>gx,JUSTIFY_LEFT:()=>dx,JUSTIFY_RIGHT:()=>px,LEFT:()=>cx,RIGHT:()=>Ax,textAlign:()=>fx});var h={};n.r(h),n.d(h,{bvh_distance_functions:()=>VS,bvh_ray_functions:()=>YS,bvh_struct_definitions:()=>qS,common_functions:()=>HS});var u={};n.r(u),n.d(u,{AVERAGE:()=>ow,BVHShaderGLSL:()=>h,CENTER:()=>aw,CONTAINED:()=>hw,ExtendedTriangle:()=>i_,FloatVertexAttributeTexture:()=>xS,INTERSECTED:()=>Aw,IntVertexAttributeTexture:()=>vS,MeshBVH:()=>HB,MeshBVHHelper:()=>cS,MeshBVHUniformStruct:()=>wS,NOT_INTERSECTED:()=>cw,OrientedBox:()=>s_,SAH:()=>lw,StaticGeometryGenerator:()=>GS,UIntVertexAttributeTexture:()=>ES,VertexAttributeTexture:()=>CS,acceleratedRaycast:()=>$B,computeBatchedBoundsTree:()=>sS,computeBoundsTree:()=>nS,disposeBatchedBoundsTree:()=>rS,disposeBoundsTree:()=>iS,estimateMemoryInBytes:()=>fS,getBVHExtremes:()=>gS,getJSONStructure:()=>yS,getTriangleHitPointInfo:()=>L_,shaderDistanceFunction:()=>JS,shaderIntersectFunction:()=>jS,shaderStructs:()=>WS,validateBounds:()=>mS});var d={};n.r(d),n.d(d,{latitudeToSphericalPhi:()=>Wb,sphericalPhiToLatitude:()=>qb,swapToGeoFrame:()=>Vb,swapToThreeFrame:()=>Yb,toLatLonString:()=>jb});var p={};n.r(p),n.d(p,{B3DMLoader:()=>Pb,B3DMLoaderBase:()=>Qb,CAMERA_FRAME:()=>hM,CMPTLoader:()=>bM,CMPTLoaderBase:()=>Ub,CameraTransitionManager:()=>DQ,ENU_FRAME:()=>AM,Ellipsoid:()=>dM,EllipsoidRegion:()=>tT,EnvironmentControls:()=>oQ,FAILED:()=>$S,GeoUtils:()=>d,GlobeControls:()=>xQ,I3DMLoader:()=>SM,I3DMLoaderBase:()=>Db,LOADED:()=>ib,LOADING:()=>eb,LRUCache:()=>KS,LoaderBase:()=>xb,OBB:()=>HM,OBJECT_FRAME:()=>uM,PARSING:()=>nb,PNTSLoader:()=>Ob,PNTSLoaderBase:()=>Rb,PriorityQueue:()=>ZS,TilesRenderer:()=>CT,TilesRendererBase:()=>vb,UNLOADED:()=>tb,WGS84_ELLIPSOID:()=>pM,WGS84_FLATTENING:()=>rb,WGS84_HEIGHT:()=>ab,WGS84_RADIUS:()=>sb});var g={};n.r(g),n.d(g,{FINGER_TIPS:()=>Uz,FpsMovement:()=>Vz,HANDS:()=>Lz,Hand:()=>Pz,HandMovement:()=>Nz,JOINT_IDS:()=>Sz,JOINT_INDEX:()=>Mz,JOINT_RADIUS:()=>Tz,JOINT_SEGMENTS:()=>Qz,JOINT_SEGMENT_STEPS:()=>Dz,JOINT_TIPS:()=>Rz,JointEnum:()=>Bz,LN_SCALE_MAX:()=>nR,LN_SCALE_MIN:()=>eR,NUM_JOINTS:()=>bz,PackedSplats:()=>PO,PlyReader:()=>aO,PointerControls:()=>Yz,Readback:()=>Uk,Sint8ToFloat:()=>IP,SparkControls:()=>Hz,SparkRenderer:()=>ZO,SparkViewpoint:()=>zO,SplatAccumulator:()=>VO,SplatEdit:()=>Yk,SplatEditRgbaBlendMode:()=>zk,SplatEditSdf:()=>Hk,SplatEditSdfType:()=>kk,SplatEdits:()=>qk,SplatFileType:()=>BO,SplatGenerator:()=>$k,SplatLoader:()=>wO,SplatMesh:()=>eO,SplatModifier:()=>Kk,SplatSkinning:()=>cz,SplatTransformer:()=>Zk,SpzReader:()=>sz,SpzWriter:()=>oz,Uint8ToFloat:()=>yP,VRButton:()=>_z,XrHands:()=>Fz,constructAxes:()=>pz,constructGrid:()=>dz,constructSpherePoints:()=>gz,defines:()=>hR,dyno:()=>Dk,flipPixels:()=>MP,floatToSint8:()=>mP,floatToUint8:()=>fP,fromHalf:()=>gP,generators:()=>Cz,getSplatFileType:()=>SO,imageSplats:()=>mz,isAndroid:()=>SP,isMobile:()=>BP,isOculus:()=>bP,isPcSogs:()=>MO,modifiers:()=>xz,pixelsToPngUrl:()=>TP,setPackedSplat:()=>vP,textSplats:()=>fz,toHalf:()=>pP,transcodeSpz:()=>lz,unpackSplat:()=>wP,unpackSplats:()=>QO,utils:()=>HP});const f="179",m={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},y={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},I=0,C=1,E=2,v=3,x=0,w=1,_=2,B=3,S=0,b=1,M=2,T=0,Q=1,D=2,R=3,U=4,P=5,L=100,F=101,N=102,k=103,O=104,z=200,G=201,H=202,V=203,Y=204,q=205,W=206,J=207,j=208,X=209,K=210,Z=211,$=212,tt=213,et=214,nt=0,it=1,st=2,rt=3,at=4,ot=5,lt=6,ct=7,At=0,ht=1,ut=2,dt=0,pt=1,gt=2,ft=3,mt=4,yt=5,It=6,Ct=7,Et="attached",vt="detached",xt=300,wt=301,_t=302,Bt=303,St=304,bt=306,Mt=1e3,Tt=1001,Qt=1002,Dt=1003,Rt=1004,Ut=1004,Pt=1005,Lt=1005,Ft=1006,Nt=1007,kt=1007,Ot=1008,zt=1008,Gt=1009,Ht=1010,Vt=1011,Yt=1012,qt=1013,Wt=1014,Jt=1015,jt=1016,Xt=1017,Kt=1018,Zt=1020,$t=35902,te=1021,ee=1022,ne=1023,ie=1026,se=1027,re=1028,ae=1029,oe=1030,le=1031,ce=1032,Ae=1033,he=33776,ue=33777,de=33778,pe=33779,ge=35840,fe=35841,me=35842,ye=35843,Ie=36196,Ce=37492,Ee=37496,ve=37808,xe=37809,we=37810,_e=37811,Be=37812,Se=37813,be=37814,Me=37815,Te=37816,Qe=37817,De=37818,Re=37819,Ue=37820,Pe=37821,Le=36492,Fe=36494,Ne=36495,ke=36283,Oe=36284,ze=36285,Ge=36286,He=2200,Ve=2201,Ye=2202,qe=2300,We=2301,Je=2302,je=2400,Xe=2401,Ke=2402,Ze=2500,$e=2501,tn=0,en=1,nn=2,sn=3200,rn=3201,an=3202,on=3203,ln=0,cn=1,An="",hn="srgb",un="srgb-linear",dn="linear",pn="srgb",gn=0,fn=7680,mn=7681,yn=7682,In=7683,Cn=34055,En=34056,vn=5386,xn=512,wn=513,_n=514,Bn=515,Sn=516,bn=517,Mn=518,Tn=519,Qn=512,Dn=513,Rn=514,Un=515,Pn=516,Ln=517,Fn=518,Nn=519,kn=35044,On=35048,zn=35040,Gn=35045,Hn=35049,Vn=35041,Yn=35046,qn=35050,Wn=35042,Jn="100",jn="300 es",Xn=2e3,Kn=2001,Zn={COMPUTE:"compute",RENDER:"render"},$n={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},ti={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class ei{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return void 0!==n&&void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){const n=this._listeners;if(void 0===n)return;const i=n[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){const e=this._listeners;if(void 0===e)return;const n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,i=e.length;n<i;n++)e[n].call(this,t);t.target=null}}}const ni=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let ii=1234567;const si=Math.PI/180,ri=180/Math.PI;function ai(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(ni[255&t]+ni[t>>8&255]+ni[t>>16&255]+ni[t>>24&255]+"-"+ni[255&e]+ni[e>>8&255]+"-"+ni[e>>16&15|64]+ni[e>>24&255]+"-"+ni[63&n|128]+ni[n>>8&255]+"-"+ni[n>>16&255]+ni[n>>24&255]+ni[255&i]+ni[i>>8&255]+ni[i>>16&255]+ni[i>>24&255]).toLowerCase()}function oi(t,e,n){return Math.max(e,Math.min(n,t))}function li(t,e){return(t%e+e)%e}function ci(t,e,n){return(1-n)*t+n*e}function Ai(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function hi(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const ui={DEG2RAD:si,RAD2DEG:ri,generateUUID:ai,clamp:oi,euclideanModulo:li,mapLinear:function(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:ci,damp:function(t,e,n,i){return ci(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(li(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(ii=t);let e=ii+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*si},radToDeg:function(t){return t*ri},isPowerOfTwo:function(t){return!(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,s){const r=Math.cos,a=Math.sin,o=r(n/2),l=a(n/2),c=r((e+i)/2),A=a((e+i)/2),h=r((e-i)/2),u=a((e-i)/2),d=r((i-e)/2),p=a((i-e)/2);switch(s){case"XYX":t.set(o*A,l*h,l*u,o*c);break;case"YZY":t.set(l*u,o*A,l*h,o*c);break;case"ZXZ":t.set(l*h,l*u,o*A,o*c);break;case"XZX":t.set(o*A,l*p,l*d,o*c);break;case"YXY":t.set(l*d,o*A,l*p,o*c);break;case"ZYZ":t.set(l*p,l*d,o*A,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:hi,denormalize:Ai};class di{constructor(t=0,e=0){di.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=oi(this.x,t.x,e.x),this.y=oi(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=oi(this.x,t,e),this.y=oi(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oi(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oi(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,r=this.y-t.y;return this.x=s*n-r*i+t.x,this.y=s*i+r*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pi{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,r,a){let o=n[i+0],l=n[i+1],c=n[i+2],A=n[i+3];const h=s[r+0],u=s[r+1],d=s[r+2],p=s[r+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=A);if(1===a)return t[e+0]=h,t[e+1]=u,t[e+2]=d,void(t[e+3]=p);if(A!==p||o!==h||l!==u||c!==d){let t=1-a;const e=o*h+l*u+c*d+A*p,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const s=Math.sqrt(i),r=Math.atan2(s,e*n);t=Math.sin(t*r)/s,a=Math.sin(a*r)/s}const s=a*n;if(o=o*t+h*s,l=l*t+u*s,c=c*t+d*s,A=A*t+p*s,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+A*A);o*=t,l*=t,c*=t,A*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=A}static multiplyQuaternionsFlat(t,e,n,i,s,r){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],A=s[r],h=s[r+1],u=s[r+2],d=s[r+3];return t[e]=a*d+c*A+o*u-l*h,t[e+1]=o*d+c*h+l*A-a*u,t[e+2]=l*d+c*u+a*h-o*A,t[e+3]=c*d-a*A-o*h-l*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,s=t._z,r=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),A=a(s/2),h=o(n/2),u=o(i/2),d=o(s/2);switch(r){case"XYZ":this._x=h*c*A+l*u*d,this._y=l*u*A-h*c*d,this._z=l*c*d+h*u*A,this._w=l*c*A-h*u*d;break;case"YXZ":this._x=h*c*A+l*u*d,this._y=l*u*A-h*c*d,this._z=l*c*d-h*u*A,this._w=l*c*A+h*u*d;break;case"ZXY":this._x=h*c*A-l*u*d,this._y=l*u*A+h*c*d,this._z=l*c*d+h*u*A,this._w=l*c*A-h*u*d;break;case"ZYX":this._x=h*c*A-l*u*d,this._y=l*u*A+h*c*d,this._z=l*c*d-h*u*A,this._w=l*c*A+h*u*d;break;case"YZX":this._x=h*c*A+l*u*d,this._y=l*u*A+h*c*d,this._z=l*c*d-h*u*A,this._w=l*c*A-h*u*d;break;case"XZY":this._x=h*c*A-l*u*d,this._y=l*u*A-h*c*d,this._z=l*c*d+h*u*A,this._w=l*c*A+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],r=e[1],a=e[5],o=e[9],l=e[2],c=e[6],A=e[10],h=n+a+A;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(c-o)*t,this._y=(s-l)*t,this._z=(r-i)*t}else if(n>a&&n>A){const t=2*Math.sqrt(1+n-a-A);this._w=(c-o)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(s+l)/t}else if(a>A){const t=2*Math.sqrt(1+a-n-A);this._w=(s-l)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+A-n-a);this._w=(r-i)/t,this._x=(s+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(oi(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,r=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+r*a+i*l-s*o,this._y=i*c+r*o+s*a-n*l,this._z=s*c+r*l+n*o-i*a,this._w=r*c-n*a-i*o-s*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*s+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),A=Math.sin((1-e)*c)/l,h=Math.sin(e*c)/l;return this._w=r*A+this._w*h,this._x=n*A+this._x*h,this._y=i*A+this._y*h,this._z=s*A+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class gi{constructor(t=0,e=0,n=0){gi.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(mi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(mi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,r=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,r=t.y,a=t.z,o=t.w,l=2*(r*i-a*n),c=2*(a*e-s*i),A=2*(s*n-r*e);return this.x=e+o*l+r*A-a*c,this.y=n+o*c+a*l-s*A,this.z=i+o*A+s*c-r*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=oi(this.x,t.x,e.x),this.y=oi(this.y,t.y,e.y),this.z=oi(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=oi(this.x,t,e),this.y=oi(this.y,t,e),this.z=oi(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oi(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,r=e.x,a=e.y,o=e.z;return this.x=i*o-s*a,this.y=s*r-n*o,this.z=n*a-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return fi.copy(this).projectOnVector(t),this.sub(fi)}reflect(t){return this.sub(fi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oi(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const fi=new gi,mi=new pi;class yi{constructor(t,e,n,i,s,r,a,o,l){yi.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,s,r,a,o,l)}set(t,e,n,i,s,r,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=s,c[5]=o,c[6]=n,c[7]=r,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,r=n[0],a=n[3],o=n[6],l=n[1],c=n[4],A=n[7],h=n[2],u=n[5],d=n[8],p=i[0],g=i[3],f=i[6],m=i[1],y=i[4],I=i[7],C=i[2],E=i[5],v=i[8];return s[0]=r*p+a*m+o*C,s[3]=r*g+a*y+o*E,s[6]=r*f+a*I+o*v,s[1]=l*p+c*m+A*C,s[4]=l*g+c*y+A*E,s[7]=l*f+c*I+A*v,s[2]=h*p+u*m+d*C,s[5]=h*g+u*y+d*E,s[8]=h*f+u*I+d*v,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*r*c-e*a*l-n*s*c+n*a*o+i*s*l-i*r*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8],A=c*r-a*l,h=a*o-c*s,u=l*s-r*o,d=e*A+n*h+i*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return t[0]=A*p,t[1]=(i*l-c*n)*p,t[2]=(a*n-i*r)*p,t[3]=h*p,t[4]=(c*e-i*o)*p,t[5]=(i*s-a*e)*p,t[6]=u*p,t[7]=(n*o-l*e)*p,t[8]=(r*e-n*s)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,r,a){const o=Math.cos(s),l=Math.sin(s);return this.set(n*o,n*l,-n*(o*r+l*a)+r+t,-i*l,i*o,-i*(-l*r+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ii.makeScale(t,e)),this}rotate(t){return this.premultiply(Ii.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ii.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const Ii=new yi;function Ci(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const Ei={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function vi(t,e){return new Ei[t](e)}function xi(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function wi(){const t=xi("canvas");return t.style.display="block",t}const _i={};function Bi(t){t in _i||(_i[t]=!0,console.warn(t))}const Si=(new yi).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),bi=(new yi).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Mi(){const t={enabled:!0,workingColorSpace:un,spaces:{},convert:function(t,e,n){return!1!==this.enabled&&e!==n&&e&&n?(this.spaces[e].transfer===pn&&(t.r=Qi(t.r),t.g=Qi(t.g),t.b=Qi(t.b)),this.spaces[e].primaries!==this.spaces[n].primaries&&(t.applyMatrix3(this.spaces[e].toXYZ),t.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===pn&&(t.r=Di(t.r),t.g=Di(t.g),t.b=Di(t.b)),t):t},workingToColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},colorSpaceToWorking:function(t,e){return this.convert(t,e,this.workingColorSpace)},getPrimaries:function(t){return this.spaces[t].primaries},getTransfer:function(t){return t===An?dn:this.spaces[t].transfer},getLuminanceCoefficients:function(t,e=this.workingColorSpace){return t.fromArray(this.spaces[e].luminanceCoefficients)},define:function(t){Object.assign(this.spaces,t)},_getMatrix:function(t,e,n){return t.copy(this.spaces[e].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(t){return this.spaces[t].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(t=this.workingColorSpace){return this.spaces[t].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(e,n){return Bi("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),t.workingToColorSpace(e,n)},toWorkingColorSpace:function(e,n){return Bi("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),t.colorSpaceToWorking(e,n)}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return t.define({[un]:{primaries:e,whitePoint:i,transfer:dn,toXYZ:Si,fromXYZ:bi,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:hn},outputColorSpaceConfig:{drawingBufferColorSpace:hn}},[hn]:{primaries:e,whitePoint:i,transfer:pn,toXYZ:Si,fromXYZ:bi,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:hn}}}),t}const Ti=Mi();function Qi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Di(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Ri;class Ui{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{void 0===Ri&&(Ri=xi("canvas")),Ri.width=t.width,Ri.height=t.height;const e=Ri.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),n=Ri}return n.toDataURL(e)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=xi("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let t=0;t<s.length;t++)s[t]=255*Qi(s[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Qi(e[t]/255)):e[t]=Qi(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Pi=0;class Li{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Pi++}),this.uuid=ai(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):null!==e?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Fi(i[e].image)):t.push(Fi(i[e]))}else t=Fi(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Fi(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Ui.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ni=0;const ki=new gi;class Oi extends ei{constructor(t=Oi.DEFAULT_IMAGE,e=Oi.DEFAULT_MAPPING,n=Tt,i=Tt,s=Ft,r=Ot,a=ne,o=Gt,l=Oi.DEFAULT_ANISOTROPY,c=An){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ni++}),this.uuid=ai(),this.name="",this.source=new Li(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new di(0,0),this.repeat=new di(1,1),this.center=new di(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(ki).x}get height(){return this.source.getSize(ki).y}get depth(){return this.source.getSize(ki).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n:console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==xt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Mt:t.x=t.x-Math.floor(t.x);break;case Tt:t.x=t.x<0?0:1;break;case Qt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Mt:t.y=t.y-Math.floor(t.y);break;case Tt:t.y=t.y<0?0:1;break;case Qt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}Oi.DEFAULT_IMAGE=null,Oi.DEFAULT_MAPPING=xt,Oi.DEFAULT_ANISOTROPY=1;class zi{constructor(t=0,e=0,n=0,i=1){zi.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*e+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*e+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*e+r[7]*n+r[11]*i+r[15]*s,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const r=.01,a=.1,o=t.elements,l=o[0],c=o[4],A=o[8],h=o[1],u=o[5],d=o[9],p=o[2],g=o[6],f=o[10];if(Math.abs(c-h)<r&&Math.abs(A-p)<r&&Math.abs(d-g)<r){if(Math.abs(c+h)<a&&Math.abs(A+p)<a&&Math.abs(d+g)<a&&Math.abs(l+u+f-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(u+1)/2,m=(f+1)/2,y=(c+h)/4,I=(A+p)/4,C=(d+g)/4;return t>o&&t>m?t<r?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(t),i=y/n,s=I/n):o>m?o<r?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(o),n=y/i,s=C/i):m<r?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(m),n=I/s,i=C/s),this.set(n,i,s,e),this}let m=Math.sqrt((g-d)*(g-d)+(A-p)*(A-p)+(h-c)*(h-c));return Math.abs(m)<.001&&(m=1),this.x=(g-d)/m,this.y=(A-p)/m,this.z=(h-c)/m,this.w=Math.acos((l+u+f-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=oi(this.x,t.x,e.x),this.y=oi(this.y,t.y,e.y),this.z=oi(this.z,t.z,e.z),this.w=oi(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=oi(this.x,t,e),this.y=oi(this.y,t,e),this.z=oi(this.z,t,e),this.w=oi(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oi(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Gi extends ei{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ft,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new zi(0,0,t,e),this.scissorTest=!1,this.viewport=new zi(0,0,t,e);const i={width:t,height:e,depth:n.depth},s=new Oi(i);this.textures=[];const r=n.count;for(let t=0;t<r;t++)this.textures[t]=s.clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:Ft,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==t.mapping&&(e.mapping=t.mapping),void 0!==t.wrapS&&(e.wrapS=t.wrapS),void 0!==t.wrapT&&(e.wrapT=t.wrapT),void 0!==t.wrapR&&(e.wrapR=t.wrapR),void 0!==t.magFilter&&(e.magFilter=t.magFilter),void 0!==t.minFilter&&(e.minFilter=t.minFilter),void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.anisotropy&&(e.anisotropy=t.anisotropy),void 0!==t.colorSpace&&(e.colorSpace=t.colorSpace),void 0!==t.flipY&&(e.flipY=t.flipY),void 0!==t.generateMipmaps&&(e.generateMipmaps=t.generateMipmaps),void 0!==t.internalFormat&&(e.internalFormat=t.internalFormat);for(let t=0;t<this.textures.length;t++)this.textures[t].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const n=Object.assign({},t.textures[e].image);this.textures[e].source=new Li(n)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Hi extends Gi{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Vi extends Oi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Tt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Yi extends Hi{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Vi(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class qi extends Oi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Tt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wi extends Hi{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new qi(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Ji{constructor(t=new gi(1/0,1/0,1/0),e=new gi(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Xi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Xi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Xi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,Xi):Xi.fromBufferAttribute(i,e),Xi.applyMatrix4(t.matrixWorld),this.expandByPoint(Xi);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Ki.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),Ki.copy(n.boundingBox)),Ki.applyMatrix4(t.matrixWorld),this.union(Ki)}const i=t.children;for(let t=0,n=i.length;t<n;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Xi),Xi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ss),rs.subVectors(this.max,ss),Zi.subVectors(t.a,ss),$i.subVectors(t.b,ss),ts.subVectors(t.c,ss),es.subVectors($i,Zi),ns.subVectors(ts,$i),is.subVectors(Zi,ts);let e=[0,-es.z,es.y,0,-ns.z,ns.y,0,-is.z,is.y,es.z,0,-es.x,ns.z,0,-ns.x,is.z,0,-is.x,-es.y,es.x,0,-ns.y,ns.x,0,-is.y,is.x,0];return!!ls(e,Zi,$i,ts,rs)&&(e=[1,0,0,0,1,0,0,0,1],!!ls(e,Zi,$i,ts,rs)&&(as.crossVectors(es,ns),e=[as.x,as.y,as.z],ls(e,Zi,$i,ts,rs)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Xi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(Xi).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ji[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ji[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ji[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ji[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ji[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ji[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ji[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ji[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ji)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const ji=[new gi,new gi,new gi,new gi,new gi,new gi,new gi,new gi],Xi=new gi,Ki=new Ji,Zi=new gi,$i=new gi,ts=new gi,es=new gi,ns=new gi,is=new gi,ss=new gi,rs=new gi,as=new gi,os=new gi;function ls(t,e,n,i,s){for(let r=0,a=t.length-3;r<=a;r+=3){os.fromArray(t,r);const a=s.x*Math.abs(os.x)+s.y*Math.abs(os.y)+s.z*Math.abs(os.z),o=e.dot(os),l=n.dot(os),c=i.dot(os);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const cs=new Ji,As=new gi,hs=new gi;class us{constructor(t=new gi,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):cs.setFromPoints(t).getCenter(n);let i=0;for(let e=0,s=t.length;e<s;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;As.subVectors(t,this.center);const e=As.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(As,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(hs.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(As.copy(t.center).add(hs)),this.expandByPoint(As.copy(t.center).sub(hs))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const ds=new gi,ps=new gi,gs=new gi,fs=new gi,ms=new gi,ys=new gi,Is=new gi;class Cs{constructor(t=new gi,e=new gi(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ds)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ds.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ds.copy(this.origin).addScaledVector(this.direction,e),ds.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ps.copy(t).add(e).multiplyScalar(.5),gs.copy(e).sub(t).normalize(),fs.copy(this.origin).sub(ps);const s=.5*t.distanceTo(e),r=-this.direction.dot(gs),a=fs.dot(this.direction),o=-fs.dot(gs),l=fs.lengthSq(),c=Math.abs(1-r*r);let A,h,u,d;if(c>0)if(A=r*o-a,h=r*a-o,d=s*c,A>=0)if(h>=-d)if(h<=d){const t=1/c;A*=t,h*=t,u=A*(A+r*h+2*a)+h*(r*A+h+2*o)+l}else h=s,A=Math.max(0,-(r*h+a)),u=-A*A+h*(h+2*o)+l;else h=-s,A=Math.max(0,-(r*h+a)),u=-A*A+h*(h+2*o)+l;else h<=-d?(A=Math.max(0,-(-r*s+a)),h=A>0?-s:Math.min(Math.max(-s,-o),s),u=-A*A+h*(h+2*o)+l):h<=d?(A=0,h=Math.min(Math.max(-s,-o),s),u=h*(h+2*o)+l):(A=Math.max(0,-(r*s+a)),h=A>0?s:Math.min(Math.max(-s,-o),s),u=-A*A+h*(h+2*o)+l);else h=r>0?-s:s,A=Math.max(0,-(r*h+a)),u=-A*A+h*(h+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,A),i&&i.copy(ps).addScaledVector(gs,h),u}intersectSphere(t,e){ds.subVectors(t.center,this.origin);const n=ds.dot(this.direction),i=ds.dot(ds)-n*n,s=t.radius*t.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,o=n+r;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return!(t.radius<0)&&this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,r,a,o;const l=1/this.direction.x,c=1/this.direction.y,A=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,i=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,i=(t.min.x-h.x)*l),c>=0?(s=(t.min.y-h.y)*c,r=(t.max.y-h.y)*c):(s=(t.max.y-h.y)*c,r=(t.min.y-h.y)*c),n>r||s>i?null:((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),A>=0?(a=(t.min.z-h.z)*A,o=(t.max.z-h.z)*A):(a=(t.max.z-h.z)*A,o=(t.min.z-h.z)*A),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,ds)}intersectTriangle(t,e,n,i,s){ms.subVectors(e,t),ys.subVectors(n,t),Is.crossVectors(ms,ys);let r,a=this.direction.dot(Is);if(a>0){if(i)return null;r=1}else{if(!(a<0))return null;r=-1,a=-a}fs.subVectors(this.origin,t);const o=r*this.direction.dot(ys.crossVectors(fs,ys));if(o<0)return null;const l=r*this.direction.dot(ms.cross(fs));if(l<0)return null;if(o+l>a)return null;const c=-r*fs.dot(Is);return c<0?null:this.at(c/a,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Es{constructor(t,e,n,i,s,r,a,o,l,c,A,h,u,d,p,g){Es.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,s,r,a,o,l,c,A,h,u,d,p,g)}set(t,e,n,i,s,r,a,o,l,c,A,h,u,d,p,g){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=i,f[1]=s,f[5]=r,f[9]=a,f[13]=o,f[2]=l,f[6]=c,f[10]=A,f[14]=h,f[3]=u,f[7]=d,f[11]=p,f[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Es).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/vs.setFromMatrixColumn(t,0).length(),s=1/vs.setFromMatrixColumn(t,1).length(),r=1/vs.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*r,e[9]=n[9]*r,e[10]=n[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,r=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(s),A=Math.sin(s);if("XYZ"===t.order){const t=r*c,n=r*A,i=a*c,s=a*A;e[0]=o*c,e[4]=-o*A,e[8]=l,e[1]=n+i*l,e[5]=t-s*l,e[9]=-a*o,e[2]=s-t*l,e[6]=i+n*l,e[10]=r*o}else if("YXZ"===t.order){const t=o*c,n=o*A,i=l*c,s=l*A;e[0]=t+s*a,e[4]=i*a-n,e[8]=r*l,e[1]=r*A,e[5]=r*c,e[9]=-a,e[2]=n*a-i,e[6]=s+t*a,e[10]=r*o}else if("ZXY"===t.order){const t=o*c,n=o*A,i=l*c,s=l*A;e[0]=t-s*a,e[4]=-r*A,e[8]=i+n*a,e[1]=n+i*a,e[5]=r*c,e[9]=s-t*a,e[2]=-r*l,e[6]=a,e[10]=r*o}else if("ZYX"===t.order){const t=r*c,n=r*A,i=a*c,s=a*A;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+s,e[1]=o*A,e[5]=s*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=r*o}else if("YZX"===t.order){const t=r*o,n=r*l,i=a*o,s=a*l;e[0]=o*c,e[4]=s-t*A,e[8]=i*A+n,e[1]=A,e[5]=r*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*A+i,e[10]=t-s*A}else if("XZY"===t.order){const t=r*o,n=r*l,i=a*o,s=a*l;e[0]=o*c,e[4]=-A,e[8]=l*c,e[1]=t*A+s,e[5]=r*c,e[9]=n*A-i,e[2]=i*A-n,e[6]=a*c,e[10]=s*A+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ws,t,_s)}lookAt(t,e,n){const i=this.elements;return bs.subVectors(t,e),0===bs.lengthSq()&&(bs.z=1),bs.normalize(),Bs.crossVectors(n,bs),0===Bs.lengthSq()&&(1===Math.abs(n.z)?bs.x+=1e-4:bs.z+=1e-4,bs.normalize(),Bs.crossVectors(n,bs)),Bs.normalize(),Ss.crossVectors(bs,Bs),i[0]=Bs.x,i[4]=Ss.x,i[8]=bs.x,i[1]=Bs.y,i[5]=Ss.y,i[9]=bs.y,i[2]=Bs.z,i[6]=Ss.z,i[10]=bs.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,r=n[0],a=n[4],o=n[8],l=n[12],c=n[1],A=n[5],h=n[9],u=n[13],d=n[2],p=n[6],g=n[10],f=n[14],m=n[3],y=n[7],I=n[11],C=n[15],E=i[0],v=i[4],x=i[8],w=i[12],_=i[1],B=i[5],S=i[9],b=i[13],M=i[2],T=i[6],Q=i[10],D=i[14],R=i[3],U=i[7],P=i[11],L=i[15];return s[0]=r*E+a*_+o*M+l*R,s[4]=r*v+a*B+o*T+l*U,s[8]=r*x+a*S+o*Q+l*P,s[12]=r*w+a*b+o*D+l*L,s[1]=c*E+A*_+h*M+u*R,s[5]=c*v+A*B+h*T+u*U,s[9]=c*x+A*S+h*Q+u*P,s[13]=c*w+A*b+h*D+u*L,s[2]=d*E+p*_+g*M+f*R,s[6]=d*v+p*B+g*T+f*U,s[10]=d*x+p*S+g*Q+f*P,s[14]=d*w+p*b+g*D+f*L,s[3]=m*E+y*_+I*M+C*R,s[7]=m*v+y*B+I*T+C*U,s[11]=m*x+y*S+I*Q+C*P,s[15]=m*w+y*b+I*D+C*L,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],r=t[1],a=t[5],o=t[9],l=t[13],c=t[2],A=t[6],h=t[10],u=t[14];return t[3]*(+s*o*A-i*l*A-s*a*h+n*l*h+i*a*u-n*o*u)+t[7]*(+e*o*u-e*l*h+s*r*h-i*r*u+i*l*c-s*o*c)+t[11]*(+e*l*A-e*a*u-s*r*A+n*r*u+s*a*c-n*l*c)+t[15]*(-i*a*c-e*o*A+e*a*h+i*r*A-n*r*h+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],r=t[4],a=t[5],o=t[6],l=t[7],c=t[8],A=t[9],h=t[10],u=t[11],d=t[12],p=t[13],g=t[14],f=t[15],m=A*g*l-p*h*l+p*o*u-a*g*u-A*o*f+a*h*f,y=d*h*l-c*g*l-d*o*u+r*g*u+c*o*f-r*h*f,I=c*p*l-d*A*l+d*a*u-r*p*u-c*a*f+r*A*f,C=d*A*o-c*p*o-d*a*h+r*p*h+c*a*g-r*A*g,E=e*m+n*y+i*I+s*C;if(0===E)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const v=1/E;return t[0]=m*v,t[1]=(p*h*s-A*g*s-p*i*u+n*g*u+A*i*f-n*h*f)*v,t[2]=(a*g*s-p*o*s+p*i*l-n*g*l-a*i*f+n*o*f)*v,t[3]=(A*o*s-a*h*s-A*i*l+n*h*l+a*i*u-n*o*u)*v,t[4]=y*v,t[5]=(c*g*s-d*h*s+d*i*u-e*g*u-c*i*f+e*h*f)*v,t[6]=(d*o*s-r*g*s-d*i*l+e*g*l+r*i*f-e*o*f)*v,t[7]=(r*h*s-c*o*s+c*i*l-e*h*l-r*i*u+e*o*u)*v,t[8]=I*v,t[9]=(d*A*s-c*p*s-d*n*u+e*p*u+c*n*f-e*A*f)*v,t[10]=(r*p*s-d*a*s+d*n*l-e*p*l-r*n*f+e*a*f)*v,t[11]=(c*a*s-r*A*s-c*n*l+e*A*l+r*n*u-e*a*u)*v,t[12]=C*v,t[13]=(c*p*i-d*A*i+d*n*h-e*p*h-c*n*g+e*A*g)*v,t[14]=(d*a*i-r*p*i-d*n*o+e*p*o+r*n*g-e*a*g)*v,t[15]=(r*A*i-c*a*i+c*n*o-e*A*o-r*n*h+e*a*h)*v,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,r=t.x,a=t.y,o=t.z,l=s*r,c=s*a;return this.set(l*r+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*r,0,l*o-i*a,c*o+i*r,s*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,r){return this.set(1,n,s,0,t,1,r,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,r=e._y,a=e._z,o=e._w,l=s+s,c=r+r,A=a+a,h=s*l,u=s*c,d=s*A,p=r*c,g=r*A,f=a*A,m=o*l,y=o*c,I=o*A,C=n.x,E=n.y,v=n.z;return i[0]=(1-(p+f))*C,i[1]=(u+I)*C,i[2]=(d-y)*C,i[3]=0,i[4]=(u-I)*E,i[5]=(1-(h+f))*E,i[6]=(g+m)*E,i[7]=0,i[8]=(d+y)*v,i[9]=(g-m)*v,i[10]=(1-(h+p))*v,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=vs.set(i[0],i[1],i[2]).length();const r=vs.set(i[4],i[5],i[6]).length(),a=vs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],xs.copy(this);const o=1/s,l=1/r,c=1/a;return xs.elements[0]*=o,xs.elements[1]*=o,xs.elements[2]*=o,xs.elements[4]*=l,xs.elements[5]*=l,xs.elements[6]*=l,xs.elements[8]*=c,xs.elements[9]*=c,xs.elements[10]*=c,e.setFromRotationMatrix(xs),n.x=s,n.y=r,n.z=a,this}makePerspective(t,e,n,i,s,r,a=Xn,o=!1){const l=this.elements,c=2*s/(e-t),A=2*s/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i);let d,p;if(o)d=s/(r-s),p=r*s/(r-s);else if(a===Xn)d=-(r+s)/(r-s),p=-2*r*s/(r-s);else{if(a!==Kn)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-r/(r-s),p=-r*s/(r-s)}return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=A,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,s,r,a=Xn,o=!1){const l=this.elements,c=2/(e-t),A=2/(n-i),h=-(e+t)/(e-t),u=-(n+i)/(n-i);let d,p;if(o)d=1/(r-s),p=r/(r-s);else if(a===Xn)d=-2/(r-s),p=-(r+s)/(r-s);else{if(a!==Kn)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);d=-1/(r-s),p=-s/(r-s)}return l[0]=c,l[4]=0,l[8]=0,l[12]=h,l[1]=0,l[5]=A,l[9]=0,l[13]=u,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const vs=new gi,xs=new Es,ws=new gi(0,0,0),_s=new gi(1,1,1),Bs=new gi,Ss=new gi,bs=new gi,Ms=new Es,Ts=new pi;class Qs{constructor(t=0,e=0,n=0,i=Qs.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],r=i[4],a=i[8],o=i[1],l=i[5],c=i[9],A=i[2],h=i[6],u=i[10];switch(e){case"XYZ":this._y=Math.asin(oi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,u),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-oi(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-A,s),this._z=0);break;case"ZXY":this._x=Math.asin(oi(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-A,u),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-oi(A,-1,1)),Math.abs(A)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(oi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-A,s)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-oi(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ms.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ms,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ts.setFromEuler(this),this.setFromQuaternion(Ts,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Qs.DEFAULT_ORDER="XYZ";class Ds{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let Rs=0;const Us=new gi,Ps=new pi,Ls=new Es,Fs=new gi,Ns=new gi,ks=new gi,Os=new pi,zs=new gi(1,0,0),Gs=new gi(0,1,0),Hs=new gi(0,0,1),Vs={type:"added"},Ys={type:"removed"},qs={type:"childadded",child:null},Ws={type:"childremoved",child:null};class Js extends ei{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Rs++}),this.uuid=ai(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Js.DEFAULT_UP.clone();const t=new gi,e=new Qs,n=new pi,i=new gi(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Es},normalMatrix:{value:new yi}}),this.matrix=new Es,this.matrixWorld=new Es,this.matrixAutoUpdate=Js.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Js.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ds,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ps.setFromAxisAngle(t,e),this.quaternion.multiply(Ps),this}rotateOnWorldAxis(t,e){return Ps.setFromAxisAngle(t,e),this.quaternion.premultiply(Ps),this}rotateX(t){return this.rotateOnAxis(zs,t)}rotateY(t){return this.rotateOnAxis(Gs,t)}rotateZ(t){return this.rotateOnAxis(Hs,t)}translateOnAxis(t,e){return Us.copy(t).applyQuaternion(this.quaternion),this.position.add(Us.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(zs,t)}translateY(t){return this.translateOnAxis(Gs,t)}translateZ(t){return this.translateOnAxis(Hs,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ls.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Fs.copy(t):Fs.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ns.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ls.lookAt(Ns,Fs,this.up):Ls.lookAt(Fs,Ns,this.up),this.quaternion.setFromRotationMatrix(Ls),i&&(Ls.extractRotation(i.matrixWorld),Ps.setFromRotationMatrix(Ls),this.quaternion.premultiply(Ps.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Vs),qs.child=t,this.dispatchEvent(qs),qs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ys),Ws.child=t,this.dispatchEvent(Ws),Ws.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ls.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ls.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ls),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Vs),qs.child=t,this.dispatchEvent(qs),qs.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ns,t,ks),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ns,Os,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};function s(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(t=>({...t})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(i.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];s(t.shapes,i)}else s(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(s(t.materials,this.material[n]));i.material=e}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(s(t.animations,n))}}if(e){const e=r(t.geometries),i=r(t.materials),s=r(t.textures),a=r(t.images),o=r(t.shapes),l=r(t.skeletons),c=r(t.animations),A=r(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),s.length>0&&(n.textures=s),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),A.length>0&&(n.nodes=A)}return n.object=i,n;function r(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}Js.DEFAULT_UP=new gi(0,1,0),Js.DEFAULT_MATRIX_AUTO_UPDATE=!0,Js.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const js=new gi,Xs=new gi,Ks=new gi,Zs=new gi,$s=new gi,tr=new gi,er=new gi,nr=new gi,ir=new gi,sr=new gi,rr=new zi,ar=new zi,or=new zi;class lr{constructor(t=new gi,e=new gi,n=new gi){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),js.subVectors(t,e),i.cross(js);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){js.subVectors(i,e),Xs.subVectors(n,e),Ks.subVectors(t,e);const r=js.dot(js),a=js.dot(Xs),o=js.dot(Ks),l=Xs.dot(Xs),c=Xs.dot(Ks),A=r*l-a*a;if(0===A)return s.set(0,0,0),null;const h=1/A,u=(l*o-a*c)*h,d=(r*c-a*o)*h;return s.set(1-u-d,d,u)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,Zs)&&Zs.x>=0&&Zs.y>=0&&Zs.x+Zs.y<=1}static getInterpolation(t,e,n,i,s,r,a,o){return null===this.getBarycoord(t,e,n,i,Zs)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(s,Zs.x),o.addScaledVector(r,Zs.y),o.addScaledVector(a,Zs.z),o)}static getInterpolatedAttribute(t,e,n,i,s,r){return rr.setScalar(0),ar.setScalar(0),or.setScalar(0),rr.fromBufferAttribute(t,e),ar.fromBufferAttribute(t,n),or.fromBufferAttribute(t,i),r.setScalar(0),r.addScaledVector(rr,s.x),r.addScaledVector(ar,s.y),r.addScaledVector(or,s.z),r}static isFrontFacing(t,e,n,i){return js.subVectors(n,e),Xs.subVectors(t,e),js.cross(Xs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return js.subVectors(this.c,this.b),Xs.subVectors(this.a,this.b),.5*js.cross(Xs).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return lr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return lr.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,s){return lr.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return lr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return lr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let r,a;$s.subVectors(i,n),tr.subVectors(s,n),nr.subVectors(t,n);const o=$s.dot(nr),l=tr.dot(nr);if(o<=0&&l<=0)return e.copy(n);ir.subVectors(t,i);const c=$s.dot(ir),A=tr.dot(ir);if(c>=0&&A<=c)return e.copy(i);const h=o*A-c*l;if(h<=0&&o>=0&&c<=0)return r=o/(o-c),e.copy(n).addScaledVector($s,r);sr.subVectors(t,s);const u=$s.dot(sr),d=tr.dot(sr);if(d>=0&&u<=d)return e.copy(s);const p=u*l-o*d;if(p<=0&&l>=0&&d<=0)return a=l/(l-d),e.copy(n).addScaledVector(tr,a);const g=c*d-u*A;if(g<=0&&A-c>=0&&u-d>=0)return er.subVectors(s,i),a=(A-c)/(A-c+(u-d)),e.copy(i).addScaledVector(er,a);const f=1/(g+p+h);return r=p*f,a=h*f,e.copy(n).addScaledVector($s,r).addScaledVector(tr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const cr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ar={h:0,s:0,l:0},hr={h:0,s:0,l:0};function ur(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class dr{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=hn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Ti.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Ti.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ti.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Ti.workingColorSpace){if(t=li(t,1),e=oi(e,0,1),n=oi(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,s=2*n-i;this.r=ur(s,i,t+1/3),this.g=ur(s,i,t),this.b=ur(s,i,t-1/3)}return Ti.colorSpaceToWorking(this,i),this}setStyle(t,e=hn){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=i[1],s=n.length;if(3===s)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===s)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=hn){const n=cr[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Qi(t.r),this.g=Qi(t.g),this.b=Qi(t.b),this}copyLinearToSRGB(t){return this.r=Di(t.r),this.g=Di(t.g),this.b=Di(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=hn){return Ti.workingToColorSpace(pr.copy(this),t),65536*Math.round(oi(255*pr.r,0,255))+256*Math.round(oi(255*pr.g,0,255))+Math.round(oi(255*pr.b,0,255))}getHexString(t=hn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ti.workingColorSpace){Ti.workingToColorSpace(pr.copy(this),e);const n=pr.r,i=pr.g,s=pr.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let o,l;const c=(a+r)/2;if(a===r)o=0,l=0;else{const t=r-a;switch(l=c<=.5?t/(r+a):t/(2-r-a),r){case n:o=(i-s)/t+(i<s?6:0);break;case i:o=(s-n)/t+2;break;case s:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=Ti.workingColorSpace){return Ti.workingToColorSpace(pr.copy(this),e),t.r=pr.r,t.g=pr.g,t.b=pr.b,t}getStyle(t=hn){Ti.workingToColorSpace(pr.copy(this),t);const e=pr.r,n=pr.g,i=pr.b;return t!==hn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(Ar),this.setHSL(Ar.h+t,Ar.s+e,Ar.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ar),t.getHSL(hr);const n=ci(Ar.h,hr.h,e),i=ci(Ar.s,hr.s,e),s=ci(Ar.l,hr.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const pr=new dr;dr.NAMES=cr;let gr=0;class fr extends ei{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:gr++}),this.uuid=ai(),this.name="",this.type="Material",this.blending=Q,this.side=S,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Y,this.blendDst=q,this.blendEquation=L,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new dr(0,0,0),this.blendAlpha=0,this.depthFunc=rt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Tn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fn,this.stencilZFail=fn,this.stencilZPass=fn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Q&&(n.blending=this.blending),this.side!==S&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==Y&&(n.blendSrc=this.blendSrc),this.blendDst!==q&&(n.blendDst=this.blendDst),this.blendEquation!==L&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==rt&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Tn&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==fn&&(n.stencilFail=this.stencilFail),this.stencilZFail!==fn&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==fn&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),s=i(t.images);e.length>0&&(n.textures=e),s.length>0&&(n.images=s)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class mr extends fr{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new dr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qs,this.combine=At,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const yr=Ir();function Ir(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),i=new Uint32Array(512),s=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(i[t]=0,i[256|t]=32768,s[t]=24,s[256|t]=24):e<-14?(i[t]=1024>>-e-14,i[256|t]=1024>>-e-14|32768,s[t]=-e-1,s[256|t]=-e-1):e<=15?(i[t]=e+15<<10,i[256|t]=e+15<<10|32768,s[t]=13,s[256|t]=13):e<128?(i[t]=31744,i[256|t]=64512,s[t]=24,s[256|t]=24):(i[t]=31744,i[256|t]=64512,s[t]=13,s[256|t]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;!(8388608&e);)e<<=1,n-=8388608;e&=-8388609,n+=947912704,r[t]=e|n}for(let t=1024;t<2048;++t)r[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}function Cr(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=oi(t,-65504,65504),yr.floatView[0]=t;const e=yr.uint32View[0],n=e>>23&511;return yr.baseTable[n]+((8388607&e)>>yr.shiftTable[n])}function Er(t){const e=t>>10;return yr.uint32View[0]=yr.mantissaTable[yr.offsetTable[e]+(1023&t)]+yr.exponentTable[e],yr.floatView[0]}class vr{static toHalfFloat(t){return Cr(t)}static fromHalfFloat(t){return Er(t)}}const xr=new gi,wr=new di;let _r=0;class Br{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:_r++}),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=kn,this.updateRanges=[],this.gpuType=Jt,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)wr.fromBufferAttribute(this,e),wr.applyMatrix3(t),this.setXY(e,wr.x,wr.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)xr.fromBufferAttribute(this,e),xr.applyMatrix3(t),this.setXYZ(e,xr.x,xr.y,xr.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)xr.fromBufferAttribute(this,e),xr.applyMatrix4(t),this.setXYZ(e,xr.x,xr.y,xr.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)xr.fromBufferAttribute(this,e),xr.applyNormalMatrix(t),this.setXYZ(e,xr.x,xr.y,xr.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)xr.fromBufferAttribute(this,e),xr.transformDirection(t),this.setXYZ(e,xr.x,xr.y,xr.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Ai(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=hi(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ai(e,this.array)),e}setX(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ai(e,this.array)),e}setY(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ai(e,this.array)),e}setZ(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ai(e,this.array)),e}setW(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array),s=hi(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==kn&&(t.usage=this.usage),t}}class Sr extends Br{constructor(t,e,n){super(new Int8Array(t),e,n)}}class br extends Br{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class Mr extends Br{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Tr extends Br{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Qr extends Br{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Dr extends Br{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Rr extends Br{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ur extends Br{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Er(this.array[t*this.itemSize]);return this.normalized&&(e=Ai(e,this.array)),e}setX(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize]=Cr(e),this}getY(t){let e=Er(this.array[t*this.itemSize+1]);return this.normalized&&(e=Ai(e,this.array)),e}setY(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+1]=Cr(e),this}getZ(t){let e=Er(this.array[t*this.itemSize+2]);return this.normalized&&(e=Ai(e,this.array)),e}setZ(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+2]=Cr(e),this}getW(t){let e=Er(this.array[t*this.itemSize+3]);return this.normalized&&(e=Ai(e,this.array)),e}setW(t,e){return this.normalized&&(e=hi(e,this.array)),this.array[t*this.itemSize+3]=Cr(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array)),this.array[t+0]=Cr(e),this.array[t+1]=Cr(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array)),this.array[t+0]=Cr(e),this.array[t+1]=Cr(n),this.array[t+2]=Cr(i),this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array),s=hi(s,this.array)),this.array[t+0]=Cr(e),this.array[t+1]=Cr(n),this.array[t+2]=Cr(i),this.array[t+3]=Cr(s),this}}class Pr extends Br{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Lr=0;const Fr=new Es,Nr=new Js,kr=new gi,Or=new Ji,zr=new Ji,Gr=new gi;class Hr extends ei{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Lr++}),this.uuid=ai(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ci(t)?Rr:Qr)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new yi).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Fr.makeRotationFromQuaternion(t),this.applyMatrix4(Fr),this}rotateX(t){return Fr.makeRotationX(t),this.applyMatrix4(Fr),this}rotateY(t){return Fr.makeRotationY(t),this.applyMatrix4(Fr),this}rotateZ(t){return Fr.makeRotationZ(t),this.applyMatrix4(Fr),this}translate(t,e,n){return Fr.makeTranslation(t,e,n),this.applyMatrix4(Fr),this}scale(t,e,n){return Fr.makeScale(t,e,n),this.applyMatrix4(Fr),this}lookAt(t){return Nr.lookAt(t),Nr.updateMatrix(),this.applyMatrix4(Nr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(kr).negate(),this.translate(kr.x,kr.y,kr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}this.setAttribute("position",new Pr(e,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const n=t[i];e.setXYZ(i,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ji);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new gi(-1/0,-1/0,-1/0),new gi(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Or.setFromBufferAttribute(n),this.morphTargetsRelative?(Gr.addVectors(this.boundingBox.min,Or.min),this.boundingBox.expandByPoint(Gr),Gr.addVectors(this.boundingBox.max,Or.max),this.boundingBox.expandByPoint(Gr)):(this.boundingBox.expandByPoint(Or.min),this.boundingBox.expandByPoint(Or.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new us);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new gi,1/0);if(t){const n=this.boundingSphere.center;if(Or.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];zr.setFromBufferAttribute(n),this.morphTargetsRelative?(Gr.addVectors(Or.min,zr.min),Or.expandByPoint(Gr),Gr.addVectors(Or.max,zr.max),Or.expandByPoint(Gr)):(Or.expandByPoint(zr.min),Or.expandByPoint(zr.max))}Or.getCenter(n);let i=0;for(let e=0,s=t.count;e<s;e++)Gr.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Gr));if(e)for(let s=0,r=e.length;s<r;s++){const r=e[s],a=this.morphTargetsRelative;for(let e=0,s=r.count;e<s;e++)Gr.fromBufferAttribute(r,e),a&&(kr.fromBufferAttribute(t,e),Gr.add(kr)),i=Math.max(i,n.distanceToSquared(Gr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,i=e.normal,s=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Br(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<n.count;t++)a[t]=new gi,o[t]=new gi;const l=new gi,c=new gi,A=new gi,h=new di,u=new di,d=new di,p=new gi,g=new gi;function f(t,e,i){l.fromBufferAttribute(n,t),c.fromBufferAttribute(n,e),A.fromBufferAttribute(n,i),h.fromBufferAttribute(s,t),u.fromBufferAttribute(s,e),d.fromBufferAttribute(s,i),c.sub(l),A.sub(l),u.sub(h),d.sub(h);const r=1/(u.x*d.y-d.x*u.y);isFinite(r)&&(p.copy(c).multiplyScalar(d.y).addScaledVector(A,-u.y).multiplyScalar(r),g.copy(A).multiplyScalar(u.x).addScaledVector(c,-d.x).multiplyScalar(r),a[t].add(p),a[e].add(p),a[i].add(p),o[t].add(g),o[e].add(g),o[i].add(g))}let m=this.groups;0===m.length&&(m=[{start:0,count:t.count}]);for(let e=0,n=m.length;e<n;++e){const n=m[e],i=n.start;for(let e=i,s=i+n.count;e<s;e+=3)f(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const y=new gi,I=new gi,C=new gi,E=new gi;function v(t){C.fromBufferAttribute(i,t),E.copy(C);const e=a[t];y.copy(e),y.sub(C.multiplyScalar(C.dot(e))).normalize(),I.crossVectors(E,e);const n=I.dot(o[t])<0?-1:1;r.setXYZW(t,y.x,y.y,y.z,n)}for(let e=0,n=m.length;e<n;++e){const n=m[e],i=n.start;for(let e=i,s=i+n.count;e<s;e+=3)v(t.getX(e+0)),v(t.getX(e+1)),v(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Br(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new gi,s=new gi,r=new gi,a=new gi,o=new gi,l=new gi,c=new gi,A=new gi;if(t)for(let h=0,u=t.count;h<u;h+=3){const u=t.getX(h+0),d=t.getX(h+1),p=t.getX(h+2);i.fromBufferAttribute(e,u),s.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),c.subVectors(r,s),A.subVectors(i,s),c.cross(A),a.fromBufferAttribute(n,u),o.fromBufferAttribute(n,d),l.fromBufferAttribute(n,p),a.add(c),o.add(c),l.add(c),n.setXYZ(u,a.x,a.y,a.z),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),s.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),c.subVectors(r,s),A.subVectors(i,s),c.cross(A),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Gr.fromBufferAttribute(t,e),Gr.normalize(),t.setXYZ(e,Gr.x,Gr.y,Gr.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,s=t.normalized,r=new n.constructor(e.length*i);let a=0,o=0;for(let s=0,l=e.length;s<l;s++){a=t.isInterleavedBufferAttribute?e[s]*t.data.stride+t.offset:e[s]*i;for(let t=0;t<i;t++)r[o++]=n[a++]}return new Br(r,i,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Hr,n=this.index.array,i=this.attributes;for(const s in i){const r=t(i[s],n);e.setAttribute(s,r)}const s=this.morphAttributes;for(const i in s){const r=[],a=s[i];for(let e=0,i=a.length;e<i;e++){const i=t(a[e],n);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,n=r.length;t<n;t++){const n=r[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let s=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],r=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere=a.toJSON()),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone());const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const s=t.morphAttributes;for(const t in s){const n=[],i=s[t];for(let t=0,s=i.length;t<s;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Vr=new Es,Yr=new Cs,qr=new us,Wr=new gi,Jr=new gi,jr=new gi,Xr=new gi,Kr=new gi,Zr=new gi,$r=new gi,ta=new gi;class ea extends Js{constructor(t=new Hr,e=new mr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){Zr.set(0,0,0);for(let n=0,i=s.length;n<i;n++){const i=a[n],o=s[n];0!==i&&(Kr.fromBufferAttribute(o,t),r?Zr.addScaledVector(Kr,i):Zr.addScaledVector(Kr.sub(e),i))}e.add(Zr)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),qr.copy(n.boundingSphere),qr.applyMatrix4(s),Yr.copy(t.ray).recast(t.near),!1===qr.containsPoint(Yr.origin)){if(null===Yr.intersectSphere(qr,Wr))return;if(Yr.origin.distanceToSquared(Wr)>(t.far-t.near)**2)return}Vr.copy(s).invert(),Yr.copy(t.ray).applyMatrix4(Vr),null!==n.boundingBox&&!1===Yr.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Yr)}}_computeIntersections(t,e,n){let i;const s=this.geometry,r=this.material,a=s.index,o=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,A=s.attributes.normal,h=s.groups,u=s.drawRange;if(null!==a)if(Array.isArray(r))for(let s=0,o=h.length;s<o;s++){const o=h[s],d=r[o.materialIndex];for(let s=Math.max(o.start,u.start),r=Math.min(a.count,Math.min(o.start+o.count,u.start+u.count));s<r;s+=3)i=na(this,d,t,n,l,c,A,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=o.materialIndex,e.push(i))}else for(let s=Math.max(0,u.start),o=Math.min(a.count,u.start+u.count);s<o;s+=3)i=na(this,r,t,n,l,c,A,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),e.push(i));else if(void 0!==o)if(Array.isArray(r))for(let s=0,a=h.length;s<a;s++){const a=h[s],d=r[a.materialIndex];for(let s=Math.max(a.start,u.start),r=Math.min(o.count,Math.min(a.start+a.count,u.start+u.count));s<r;s+=3)i=na(this,d,t,n,l,c,A,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=a.materialIndex,e.push(i))}else for(let s=Math.max(0,u.start),a=Math.min(o.count,u.start+u.count);s<a;s+=3)i=na(this,r,t,n,l,c,A,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),e.push(i))}}function na(t,e,n,i,s,r,a,o,l,c){t.getVertexPosition(o,Jr),t.getVertexPosition(l,jr),t.getVertexPosition(c,Xr);const A=function(t,e,n,i,s,r,a,o){let l;if(l=e.side===b?i.intersectTriangle(a,r,s,!0,o):i.intersectTriangle(s,r,a,e.side===S,o),null===l)return null;ta.copy(o),ta.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(ta);return c<n.near||c>n.far?null:{distance:c,point:ta.clone(),object:t}}(t,e,n,i,Jr,jr,Xr,$r);if(A){const t=new gi;lr.getBarycoord($r,Jr,jr,Xr,t),s&&(A.uv=lr.getInterpolatedAttribute(s,o,l,c,t,new di)),r&&(A.uv1=lr.getInterpolatedAttribute(r,o,l,c,t,new di)),a&&(A.normal=lr.getInterpolatedAttribute(a,o,l,c,t,new gi),A.normal.dot(i.direction)>0&&A.normal.multiplyScalar(-1));const e={a:o,b:l,c,normal:new gi,materialIndex:0};lr.getNormal(Jr,jr,Xr,e.normal),A.face=e,A.barycoord=t}return A}class ia extends Hr{constructor(t=1,e=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const o=[],l=[],c=[],A=[];let h=0,u=0;function d(t,e,n,i,s,r,d,p,g,f,m){const y=r/g,I=d/f,C=r/2,E=d/2,v=p/2,x=g+1,w=f+1;let _=0,B=0;const S=new gi;for(let r=0;r<w;r++){const a=r*I-E;for(let o=0;o<x;o++){const h=o*y-C;S[t]=h*i,S[e]=a*s,S[n]=v,l.push(S.x,S.y,S.z),S[t]=0,S[e]=0,S[n]=p>0?1:-1,c.push(S.x,S.y,S.z),A.push(o/g),A.push(1-r/f),_+=1}}for(let t=0;t<f;t++)for(let e=0;e<g;e++){const n=h+e+x*t,i=h+e+x*(t+1),s=h+(e+1)+x*(t+1),r=h+(e+1)+x*t;o.push(n,i,r),o.push(i,s,r),B+=6}a.addGroup(u,B,m),u+=B,h+=_}d("z","y","x",-1,-1,n,e,t,r,s,0),d("z","y","x",1,-1,n,e,-t,r,s,1),d("x","z","y",1,1,t,n,e,i,r,2),d("x","z","y",1,-1,t,n,-e,i,r,3),d("x","y","z",1,-1,t,e,n,i,s,4),d("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(o),this.setAttribute("position",new Pr(l,3)),this.setAttribute("normal",new Pr(c,3)),this.setAttribute("uv",new Pr(A,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ia(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function sa(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function ra(t){const e={};for(let n=0;n<t.length;n++){const i=sa(t[n]);for(const t in i)e[t]=i[t]}return e}function aa(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:Ti.workingColorSpace}const oa={clone:sa,merge:ra};class la extends fr{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=sa(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class ca extends Js{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Es,this.projectionMatrix=new Es,this.projectionMatrixInverse=new Es,this.coordinateSystem=Xn,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const Aa=new gi,ha=new di,ua=new di;class da extends ca{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ri*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*si*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ri*Math.atan(Math.tan(.5*si*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){Aa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Aa.x,Aa.y).multiplyScalar(-t/Aa.z),Aa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Aa.x,Aa.y).multiplyScalar(-t/Aa.z)}getViewSize(t,e){return this.getViewBounds(t,ha,ua),e.subVectors(ua,ha)}setViewOffset(t,e,n,i,s,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*si*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,a=r.fullHeight;s+=r.offsetX*i/t,e-=r.offsetY*n/a,i*=r.width/t,n*=r.height/a}const a=this.filmOffset;0!==a&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const pa=-90;class ga extends Js{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new da(pa,1,t,e);i.layers=this.layers,this.add(i);const s=new da(pa,1,t,e);s.layers=this.layers,this.add(s);const r=new da(pa,1,t,e);r.layers=this.layers,this.add(r);const a=new da(pa,1,t,e);a.layers=this.layers,this.add(a);const o=new da(pa,1,t,e);o.layers=this.layers,this.add(o);const l=new da(pa,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,r,a,o]=e;for(const t of e)this.remove(t);if(t===Xn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==Kn)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,o,l,c]=this.children,A=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.xr.enabled;t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,s),t.setRenderTarget(n,1,i),t.render(e,r),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,o),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=p,t.setRenderTarget(n,5,i),t.render(e,c),t.setRenderTarget(A,h,u),t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class fa extends Oi{constructor(t=[],e=wt,n,i,s,r,a,o,l,c){super(t,e,n,i,s,r,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ma extends Hi{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new fa(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new ia(5,5,5),a=new la({name:"CubemapFromEquirect",uniforms:sa(n),vertexShader:i,fragmentShader:s,side:b,blending:T});a.uniforms.tEquirect.value=e;const o=new ea(r,a),l=e.minFilter;return e.minFilter===Ot&&(e.minFilter=Ft),new ga(1,10,this).update(t,o),e.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const s=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,i);t.setRenderTarget(s)}}class ya extends Js{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ia={type:"move"};class Ca{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ya,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ya,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new gi,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new gi),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ya,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new gi,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new gi),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,r=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n),s=this._getHandJoint(l,i);null!==t&&(s.matrix.fromArray(t.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,s.jointRadius=t.radius),s.visible=null!==t}const i=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],a=i.position.distanceTo(s.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),null!==s&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==s&&(i=s),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Ia)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==s),null!==l&&(l.visible=null!==r),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new ya;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Ea{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new dr(t),this.density=e}clone(){return new Ea(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class va{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new dr(t),this.near=e,this.far=n}clone(){return new va(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class xa extends Js{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Qs,this.environmentIntensity=1,this.environmentRotation=new Qs,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class wa{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=kn,this.updateRanges=[],this.version=0,this.uuid=ai()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ai()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ai()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _a=new gi;class Ba{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)_a.fromBufferAttribute(this,e),_a.applyMatrix4(t),this.setXYZ(e,_a.x,_a.y,_a.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)_a.fromBufferAttribute(this,e),_a.applyNormalMatrix(t),this.setXYZ(e,_a.x,_a.y,_a.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)_a.fromBufferAttribute(this,e),_a.transformDirection(t),this.setXYZ(e,_a.x,_a.y,_a.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Ai(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=hi(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=hi(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=hi(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=hi(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=hi(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Ai(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Ai(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Ai(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Ai(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=hi(e,this.array),n=hi(n,this.array),i=hi(i,this.array),s=hi(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Br(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ba(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Sa extends fr{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new dr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let ba;const Ma=new gi,Ta=new gi,Qa=new gi,Da=new di,Ra=new di,Ua=new Es,Pa=new gi,La=new gi,Fa=new gi,Na=new di,ka=new di,Oa=new di;class za extends Js{constructor(t=new Sa){if(super(),this.isSprite=!0,this.type="Sprite",void 0===ba){ba=new Hr;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new wa(t,5);ba.setIndex([0,1,2,0,2,3]),ba.setAttribute("position",new Ba(e,3,0,!1)),ba.setAttribute("uv",new Ba(e,2,3,!1))}this.geometry=ba,this.material=t,this.center=new di(.5,.5),this.count=1}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ta.setFromMatrixScale(this.matrixWorld),Ua.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Qa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ta.multiplyScalar(-Qa.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const r=this.center;Ga(Pa.set(-.5,-.5,0),Qa,r,Ta,i,s),Ga(La.set(.5,-.5,0),Qa,r,Ta,i,s),Ga(Fa.set(.5,.5,0),Qa,r,Ta,i,s),Na.set(0,0),ka.set(1,0),Oa.set(1,1);let a=t.ray.intersectTriangle(Pa,La,Fa,!1,Ma);if(null===a&&(Ga(La.set(-.5,.5,0),Qa,r,Ta,i,s),ka.set(0,1),a=t.ray.intersectTriangle(Pa,Fa,La,!1,Ma),null===a))return;const o=t.ray.origin.distanceTo(Ma);o<t.near||o>t.far||e.push({distance:o,point:Ma.clone(),uv:lr.getInterpolation(Ma,Pa,La,Fa,Na,ka,Oa,new di),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Ga(t,e,n,i,s,r){Da.subVectors(t,n).addScalar(.5).multiply(i),void 0!==s?(Ra.x=r*Da.x-s*Da.y,Ra.y=s*Da.x+r*Da.y):Ra.copy(Da),t.copy(e),t.x+=Ra.x,t.y+=Ra.y,t.applyMatrix4(Ua)}const Ha=new gi,Va=new gi;class Ya extends Js{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance,n.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let s;for(s=0;s<i.length&&!(e<i[s].distance);s++);return i.splice(s,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const t=e.splice(n,1);return this.remove(t[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let i=e[n].distance;if(e[n].object.visible&&(i-=i*e[n].hysteresis),t<i)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Ha.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Ha);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Ha.setFromMatrixPosition(t.matrixWorld),Va.setFromMatrixPosition(this.matrixWorld);const n=Ha.distanceTo(Va)/t.zoom;let i,s;for(e[0].object.visible=!0,i=1,s=e.length;i<s;i++){let t=e[i].distance;if(e[i].object.visible&&(t-=t*e[i].hysteresis),!(n>=t))break;e[i-1].object.visible=!1,e[i].object.visible=!0}for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.object.levels.push({object:i.object.uuid,distance:i.distance,hysteresis:i.hysteresis})}return e}}const qa=new gi,Wa=new zi,Ja=new zi,ja=new gi,Xa=new Es,Ka=new gi,Za=new us,$a=new Es,to=new Cs;class eo extends ea{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Et,this.bindMatrix=new Es,this.bindMatrixInverse=new Es,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;null===this.boundingBox&&(this.boundingBox=new Ji),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ka),this.boundingBox.expandByPoint(Ka)}computeBoundingSphere(){const t=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new us),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let t=0;t<e.count;t++)this.getVertexPosition(t,Ka),this.boundingSphere.expandByPoint(Ka)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),Za.copy(this.boundingSphere),Za.applyMatrix4(i),!1!==t.ray.intersectsSphere(Za)&&($a.copy(i).invert(),to.copy(t.ray).applyMatrix4($a),null!==this.boundingBox&&!1===to.intersectsBox(this.boundingBox)||this._computeIntersections(t,e,to)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new zi,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Et?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===vt?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Wa.fromBufferAttribute(i.attributes.skinIndex,t),Ja.fromBufferAttribute(i.attributes.skinWeight,t),qa.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=Ja.getComponent(t);if(0!==i){const s=Wa.getComponent(t);Xa.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),e.addScaledVector(ja.copy(qa).applyMatrix4(Xa),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}class no extends Js{constructor(){super(),this.isBone=!0,this.type="Bone"}}class io extends Oi{constructor(t=null,e=1,n=1,i,s,r,a,o,l=Dt,c=Dt,A,h){super(null,r,a,o,l,c,i,s,A,h),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const so=new Es,ro=new Es;class ao{constructor(t=[],e=[]){this.uuid=ai(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Es)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Es;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,s=t.length;i<s;i++){const s=t[i]?t[i].matrixWorld:ro;so.multiplyMatrices(s,e[i]),so.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new ao(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new io(e,t,t,ne,Jt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const i=t.bones[n];let s=e[i];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),s=new no),this.bones.push(s),this.boneInverses.push((new Es).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const s=e[i];t.bones.push(s.uuid);const r=n[i];t.boneInverses.push(r.toArray())}return t}}class oo extends Br{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const lo=new Es,co=new Es,Ao=[],ho=new Ji,uo=new Es,po=new ea,go=new us;class fo extends ea{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new oo(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let t=0;t<n;t++)this.setMatrixAt(t,uo)}computeBoundingBox(){const t=this.geometry,e=this.count;null===this.boundingBox&&(this.boundingBox=new Ji),null===t.boundingBox&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,lo),ho.copy(t.boundingBox).applyMatrix4(lo),this.boundingBox.union(ho)}computeBoundingSphere(){const t=this.geometry,e=this.count;null===this.boundingSphere&&(this.boundingSphere=new us),null===t.boundingSphere&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,lo),go.copy(t.boundingSphere).applyMatrix4(lo),this.boundingSphere.union(go)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.morphTexture&&(this.morphTexture=t.morphTexture.clone()),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,s=t*(n.length+1)+1;for(let t=0;t<n.length;t++)n[t]=i[s+t]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(po.geometry=this.geometry,po.material=this.material,void 0!==po.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),go.copy(this.boundingSphere),go.applyMatrix4(n),!1!==t.ray.intersectsSphere(go)))for(let s=0;s<i;s++){this.getMatrixAt(s,lo),co.multiplyMatrices(n,lo),po.matrixWorld=co,po.raycast(t,Ao);for(let t=0,n=Ao.length;t<n;t++){const n=Ao[t];n.instanceId=s,n.object=this,e.push(n)}Ao.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new oo(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new io(new Float32Array(i*this.count),i,this.count,re,Jt));const s=this.morphTexture.source.data.data;let r=0;for(let t=0;t<n.length;t++)r+=n[t];const a=this.geometry.morphTargetsRelative?1:1-r,o=i*t;s[o]=a,s.set(n,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const mo=new gi,yo=new gi,Io=new yi;class Co{constructor(t=new gi(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=mo.subVectors(n,e).cross(yo.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(mo),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Io.getNormalMatrix(t),i=this.coplanarPoint(mo).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Eo=new us,vo=new di(.5,.5),xo=new gi;class wo{constructor(t=new Co,e=new Co,n=new Co,i=new Co,s=new Co,r=new Co){this.planes=[t,e,n,i,s,r]}set(t,e,n,i,s,r){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Xn,n=!1){const i=this.planes,s=t.elements,r=s[0],a=s[1],o=s[2],l=s[3],c=s[4],A=s[5],h=s[6],u=s[7],d=s[8],p=s[9],g=s[10],f=s[11],m=s[12],y=s[13],I=s[14],C=s[15];if(i[0].setComponents(l-r,u-c,f-d,C-m).normalize(),i[1].setComponents(l+r,u+c,f+d,C+m).normalize(),i[2].setComponents(l+a,u+A,f+p,C+y).normalize(),i[3].setComponents(l-a,u-A,f-p,C-y).normalize(),n)i[4].setComponents(o,h,g,I).normalize(),i[5].setComponents(l-o,u-h,f-g,C-I).normalize();else if(i[4].setComponents(l-o,u-h,f-g,C-I).normalize(),e===Xn)i[5].setComponents(l+o,u+h,f+g,C+I).normalize();else{if(e!==Kn)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);i[5].setComponents(o,h,g,I).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),Eo.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),Eo.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Eo)}intersectsSprite(t){Eo.center.set(0,0,0);const e=vo.distanceTo(t.center);return Eo.radius=.7071067811865476+e,Eo.applyMatrix4(t.matrixWorld),this.intersectsSphere(Eo)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(xo.x=i.normal.x>0?t.max.x:t.min.x,xo.y=i.normal.y>0?t.max.y:t.min.y,xo.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(xo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const _o=new Es,Bo=new wo;class So{constructor(){this.coordinateSystem=Xn}intersectsObject(t,e){if(!e.isArrayCamera||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(_o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Bo.setFromProjectionMatrix(_o,i.coordinateSystem,i.reversedDepth),Bo.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(_o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Bo.setFromProjectionMatrix(_o,i.coordinateSystem,i.reversedDepth),Bo.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(_o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Bo.setFromProjectionMatrix(_o,i.coordinateSystem,i.reversedDepth),Bo.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(_o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Bo.setFromProjectionMatrix(_o,i.coordinateSystem,i.reversedDepth),Bo.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(_o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Bo.setFromProjectionMatrix(_o,i.coordinateSystem,i.reversedDepth),Bo.containsPoint(t))return!0}return!1}clone(){return new So}}function bo(t,e){return t-e}function Mo(t,e){return t.z-e.z}function To(t,e){return e.z-t.z}class Qo{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const s=this.pool,r=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];r.push(a),this.index++,a.start=t,a.count=e,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const Do=new Es,Ro=new dr(1,1,1),Uo=new wo,Po=new So,Lo=new Ji,Fo=new us,No=new gi,ko=new gi,Oo=new gi,zo=new Qo,Go=new ea,Ho=[];function Vo(t,e,n=0){const i=e.itemSize;if(t.isInterleavedBufferAttribute||t.array.constructor!==e.array.constructor){const s=t.count;for(let r=0;r<s;r++)for(let s=0;s<i;s++)e.setComponent(r+n,s,t.getComponent(r,s))}else e.array.set(t.array,n*i);e.needsUpdate=!0}function Yo(t,e){if(t.constructor!==e.constructor){const n=Math.min(t.length,e.length);for(let i=0;i<n;i++)e[i]=t[i]}else{const n=Math.min(t.length,e.length);e.set(new t.constructor(t.buffer,0,n))}}class qo extends ea{constructor(t,e,n=2*e,i){super(new Hr,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(4*this._maxInstanceCount);t=4*Math.ceil(t/4),t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new io(e,t,t,ne,Jt);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new io(e,t,t,ae,Wt);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new io(e,t,t,ne,Jt);n.colorSpace=Ti.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(!1===this._geometryInitialized){for(const i in t.attributes){const s=t.getAttribute(i),{array:r,itemSize:a,normalized:o}=s,l=new r.constructor(n*a),c=new Br(l,a,o);e.setAttribute(i,c)}if(null!==t.getIndex()){const t=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Br(t,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(Boolean(t.getIndex())!==Boolean(e.getIndex()))throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),s=e.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||!1===e[t].active)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ji);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,Do),this.getBoundingBoxAt(i,Lo).applyMatrix4(Do),t.union(Lo)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new us);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(!1===e[n].active)continue;const i=e[n].geometryIndex;this.getMatrixAt(n,Do),this.getBoundingSphereAt(i,Fo).applyMatrix4(Do),t.union(Fo)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const e={visible:!0,active:!0,geometryIndex:t};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(bo),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=e):(n=this._instanceInfo.length,this._instanceInfo.push(e));const i=this._matricesTexture;Do.identity().toArray(i.image.data,16*n),i.needsUpdate=!0;const s=this._colorsTexture;return s&&(Ro.toArray(s.image.data,4*n),s.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=-1===e?t.getAttribute("position").count:e;const r=t.getIndex();if(null!==r&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=-1===n?r.count:n),-1!==i.indexStart&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let a;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(bo),a=this._availableGeometryIds.shift(),s[a]=i):(a=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(a,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,a}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=null!==n.getIndex(),s=n.getIndex(),r=e.getIndex(),a=this._geometryInfo[t];if(i&&r.count>a.reservedIndexCount||e.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const o=a.vertexStart,l=a.reservedVertexCount;a.vertexCount=e.getAttribute("position").count;for(const t in n.attributes){const i=e.getAttribute(t),s=n.getAttribute(t);Vo(i,s,o);const r=i.itemSize;for(let t=i.count,e=l;t<e;t++){const e=o+t;for(let t=0;t<r;t++)s.setComponent(e,t,0)}s.needsUpdate=!0,s.addUpdateRange(o*r,l*r)}if(i){const t=a.indexStart,n=a.reservedIndexCount;a.indexCount=e.getIndex().count;for(let e=0;e<r.count;e++)s.setX(t+e,o+r.getX(e));for(let e=r.count,i=n;e<i;e++)s.setX(t+e,o);s.needsUpdate=!0,s.addUpdateRange(t,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,null!==e.boundingBox&&(a.boundingBox=e.boundingBox.clone()),a.boundingSphere=null,null!==e.boundingSphere&&(a.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||!1===e[t].active)return this;const n=this._instanceInfo;for(let e=0,i=n.length;e<i;e++)n[e].active&&n[e].geometryIndex===t&&this.deleteInstance(e);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((t,e)=>e).sort((t,e)=>n[t].vertexStart-n[e].vertexStart),s=this.geometry;for(let r=0,a=n.length;r<a;r++){const a=i[r],o=n[a];if(!1!==o.active){if(null!==s.index){if(o.indexStart!==e){const{indexStart:n,vertexStart:i,reservedIndexCount:r}=o,a=s.index,l=a.array,c=t-i;for(let t=n;t<n+r;t++)l[t]=l[t]+c;a.array.copyWithin(e,n,n+r),a.addUpdateRange(e,r),o.indexStart=e}e+=o.reservedIndexCount}if(o.vertexStart!==t){const{vertexStart:e,reservedVertexCount:n}=o,i=s.attributes;for(const s in i){const r=i[s],{array:a,itemSize:o}=r;a.copyWithin(t*o,e*o,(e+n)*o),r.addUpdateRange(t*o,n*o)}o.vertexStart=t}t+=o.reservedVertexCount,o.start=s.index?o.indexStart:o.vertexStart,this._nextIndexStart=s.index?o.indexStart+o.reservedIndexCount:0,this._nextVertexStart=o.vertexStart+o.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(null===i.boundingBox){const t=new Ji,e=n.index,s=n.attributes.position;for(let n=i.start,r=i.start+i.count;n<r;n++){let i=n;e&&(i=e.getX(i)),t.expandByPoint(No.fromBufferAttribute(s,i))}i.boundingBox=t}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(null===i.boundingSphere){const e=new us;this.getBoundingBoxAt(t,Lo),Lo.getCenter(e.center);const s=n.index,r=n.attributes.position;let a=0;for(let t=i.start,n=i.start+i.count;t<n;t++){let n=t;s&&(n=s.getX(n)),No.fromBufferAttribute(r,n),a=Math.max(a,e.center.distanceToSquared(No))}e.radius=Math.sqrt(a),i.boundingSphere=e}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,16*t),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,16*t)}setColorAt(t,e){return this.validateInstanceId(t),null===this._colorsTexture&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,4*t),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,4*t)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e||(this._instanceInfo[t].visible=e,this._visibilityChanged=!0),this}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(bo);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),s=new Int32Array(t);Yo(this._multiDrawCounts,i),Yo(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=t;const r=this._indirectTexture,a=this._matricesTexture,o=this._colorsTexture;r.dispose(),this._initIndirectTexture(),Yo(r.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Yo(a.image.data,this._matricesTexture.image.data),o&&(o.dispose(),this._initColorsTexture(),Yo(o.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(t=>t.active);if(Math.max(...n.map(t=>t.vertexStart+t.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(t=>t.indexStart+t.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const i=this.geometry;i.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Hr,this._initializeGeometry(i));const s=this.geometry;i.index&&Yo(i.index.array,s.index.array);for(const t in i.attributes)Yo(i.attributes[t].array,s.attributes[t].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,r=this.geometry;Go.material=this.material,Go.geometry.index=r.index,Go.geometry.attributes=r.attributes,null===Go.geometry.boundingBox&&(Go.geometry.boundingBox=new Ji),null===Go.geometry.boundingSphere&&(Go.geometry.boundingSphere=new us);for(let r=0,a=n.length;r<a;r++){if(!n[r].visible||!n[r].active)continue;const a=n[r].geometryIndex,o=i[a];Go.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(r,Go.matrixWorld).premultiply(s),this.getBoundingBoxAt(a,Go.geometry.boundingBox),this.getBoundingSphereAt(a,Go.geometry.boundingSphere),Go.raycast(t,Ho);for(let t=0,n=Ho.length;t<n;t++){const n=Ho[t];n.object=this,n.batchId=r,e.push(n)}Ho.length=0}Go.material=null,Go.geometry.index=null,Go.geometry.attributes={},Go.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=null!==t.boundingBox?t.boundingBox.clone():null,this.boundingSphere=null!==t.boundingSphere?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(t=>({...t,boundingBox:null!==t.boundingBox?t.boundingBox.clone():null,boundingSphere:null!==t.boundingSphere?t.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(t=>({...t})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const r=i.getIndex(),a=null===r?1:r.array.BYTES_PER_ELEMENT,o=this._instanceInfo,l=this._multiDrawStarts,c=this._multiDrawCounts,A=this._geometryInfo,h=this.perObjectFrustumCulled,u=this._indirectTexture,d=u.image.data,p=n.isArrayCamera?Po:Uo;h&&!n.isArrayCamera&&(Do.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Uo.setFromProjectionMatrix(Do,n.coordinateSystem,n.reversedDepth));let g=0;if(this.sortObjects){Do.copy(this.matrixWorld).invert(),No.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Do),ko.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Do);for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;this.getMatrixAt(t,Do),this.getBoundingSphereAt(e,Fo).applyMatrix4(Do);let i=!1;if(h&&(i=!p.intersectsSphere(Fo,n)),!i){const n=A[e],i=Oo.subVectors(Fo.center,No).dot(ko);zo.push(n.start,n.count,i,t)}}const t=zo.list,e=this.customSort;null===e?t.sort(s.transparent?To:Mo):e.call(this,t,n);for(let e=0,n=t.length;e<n;e++){const n=t[e];l[g]=n.start*a,c[g]=n.count,d[g]=n.index,g++}zo.reset()}else for(let t=0,e=o.length;t<e;t++)if(o[t].visible&&o[t].active){const e=o[t].geometryIndex;let i=!1;if(h&&(this.getMatrixAt(t,Do),this.getBoundingSphereAt(e,Fo).applyMatrix4(Do),i=!p.intersectsSphere(Fo,n)),!i){const n=A[e];l[g]=n.start*a,c[g]=n.count,d[g]=t,g++}}u.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,s,r){this.onBeforeRender(t,null,i,s,r)}}class Wo extends fr{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new dr(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Jo=new gi,jo=new gi,Xo=new Es,Ko=new Cs,Zo=new us,$o=new gi,tl=new gi;class el extends Js{constructor(t=new Hr,e=new Wo){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Jo.fromBufferAttribute(e,t-1),jo.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Jo.distanceTo(jo);t.setAttribute("lineDistance",new Pr(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Zo.copy(n.boundingSphere),Zo.applyMatrix4(i),Zo.radius+=s,!1===t.ray.intersectsSphere(Zo))return;Xo.copy(i).invert(),Ko.copy(t.ray).applyMatrix4(Xo);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,c=n.index,A=n.attributes.position;if(null!==c){const n=Math.max(0,r.start),i=Math.min(c.count,r.start+r.count);for(let s=n,r=i-1;s<r;s+=l){const n=c.getX(s),i=c.getX(s+1),r=nl(this,t,Ko,o,n,i,s);r&&e.push(r)}if(this.isLineLoop){const s=c.getX(i-1),r=c.getX(n),a=nl(this,t,Ko,o,s,r,i-1);a&&e.push(a)}}else{const n=Math.max(0,r.start),i=Math.min(A.count,r.start+r.count);for(let s=n,r=i-1;s<r;s+=l){const n=nl(this,t,Ko,o,s,s+1,s);n&&e.push(n)}if(this.isLineLoop){const s=nl(this,t,Ko,o,i-1,n,i-1);s&&e.push(s)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function nl(t,e,n,i,s,r,a){const o=t.geometry.attributes.position;if(Jo.fromBufferAttribute(o,s),jo.fromBufferAttribute(o,r),n.distanceSqToSegment(Jo,jo,$o,tl)>i)return;$o.applyMatrix4(t.matrixWorld);const l=e.ray.origin.distanceTo($o);return l<e.near||l>e.far?void 0:{distance:l,point:tl.clone().applyMatrix4(t.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:t}}const il=new gi,sl=new gi;class rl extends el{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)il.fromBufferAttribute(e,t),sl.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+il.distanceTo(sl);t.setAttribute("lineDistance",new Pr(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class al extends el{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class ol extends fr{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new dr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const ll=new Es,cl=new Cs,Al=new us,hl=new gi;class ul extends Js{constructor(t=new Hr,e=new ol){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Al.copy(n.boundingSphere),Al.applyMatrix4(i),Al.radius+=s,!1===t.ray.intersectsSphere(Al))return;ll.copy(i).invert(),cl.copy(t.ray).applyMatrix4(ll);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l)for(let n=Math.max(0,r.start),s=Math.min(l.count,r.start+r.count);n<s;n++){const s=l.getX(n);hl.fromBufferAttribute(c,s),dl(hl,s,o,i,t,e,this)}else for(let n=Math.max(0,r.start),s=Math.min(c.count,r.start+r.count);n<s;n++)hl.fromBufferAttribute(c,n),dl(hl,n,o,i,t,e,this)}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function dl(t,e,n,i,s,r,a){const o=cl.distanceSqToPoint(t);if(o<n){const n=new gi;cl.closestPointToPoint(t,n),n.applyMatrix4(i);const l=s.ray.origin.distanceTo(n);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class pl extends Oi{constructor(t,e,n,i,s=Ft,r=Ft,a,o,l){super(t,e,n,i,s,r,a,o,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const c=this;"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,c._requestVideoFrameCallbackId=t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){0!==this._requestVideoFrameCallbackId&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class gl extends pl{constructor(t,e,n,i,s,r,a,o){super({},t,e,n,i,s,r,a,o),this.isVideoFrameTexture=!0}update(){}clone(){return(new this.constructor).copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class fl extends Oi{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Dt,this.minFilter=Dt,this.generateMipmaps=!1,this.needsUpdate=!0}}class ml extends Oi{constructor(t,e,n,i,s,r,a,o,l,c,A,h){super(null,r,a,o,l,c,i,s,A,h),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class yl extends ml{constructor(t,e,n,i,s,r){super(t,e,n,s,r),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Tt,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Il extends ml{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,wt),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class Cl extends Oi{constructor(t,e,n,i,s,r,a,o,l){super(t,e,n,i,s,r,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class El extends Oi{constructor(t,e,n=Wt,i,s,r,a=Dt,o=Dt,l,c=ie,A=1){if(c!==ie&&c!==se)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:t,height:e,depth:A},i,s,r,a,o,c,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Li(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class vl extends Hr{constructor(t=1,e=1,n=4,i=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:s},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),s=Math.max(1,Math.floor(s));const r=[],a=[],o=[],l=[],c=e/2,A=Math.PI/2*t,h=e,u=2*A+h,d=2*n+s,p=i+1,g=new gi,f=new gi;for(let m=0;m<=d;m++){let y=0,I=0,C=0,E=0;if(m<=n){const e=m/n,i=e*Math.PI/2;I=-c-t*Math.cos(i),C=t*Math.sin(i),E=-t*Math.cos(i),y=e*A}else if(m<=n+s){const i=(m-n)/s;I=i*e-c,C=t,E=0,y=A+i*h}else{const e=(m-n-s)/n,i=e*Math.PI/2;I=c+t*Math.sin(i),C=t*Math.cos(i),E=t*Math.sin(i),y=A+h+e*A}const v=Math.max(0,Math.min(1,y/u));let x=0;0===m?x=.5/i:m===d&&(x=-.5/i);for(let t=0;t<=i;t++){const e=t/i,n=e*Math.PI*2,s=Math.sin(n),r=Math.cos(n);f.x=-C*r,f.y=I,f.z=C*s,a.push(f.x,f.y,f.z),g.set(-C*r,E,C*s),g.normalize(),o.push(g.x,g.y,g.z),l.push(e+x,v)}if(m>0){const t=(m-1)*p;for(let e=0;e<i;e++){const n=t+e,i=t+e+1,s=m*p+e,a=m*p+e+1;r.push(n,i,s),r.push(i,a,s)}}}this.setIndex(r),this.setAttribute("position",new Pr(a,3)),this.setAttribute("normal",new Pr(o,3)),this.setAttribute("uv",new Pr(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vl(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class xl extends Hr{constructor(t=1,e=32,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],r=[],a=[],o=[],l=new gi,c=new di;r.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let s=0,A=3;s<=e;s++,A+=3){const h=n+s/e*i;l.x=t*Math.cos(h),l.y=t*Math.sin(h),r.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(r[A]/t+1)/2,c.y=(r[A+1]/t+1)/2,o.push(c.x,c.y)}for(let t=1;t<=e;t++)s.push(t,t+1,0);this.setIndex(s),this.setAttribute("position",new Pr(r,3)),this.setAttribute("normal",new Pr(a,3)),this.setAttribute("uv",new Pr(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xl(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class wl extends Hr{constructor(t=1,e=1,n=1,i=32,s=1,r=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),s=Math.floor(s);const c=[],A=[],h=[],u=[];let d=0;const p=[],g=n/2;let f=0;function m(n){const s=d,r=new di,p=new gi;let m=0;const y=!0===n?t:e,I=!0===n?1:-1;for(let t=1;t<=i;t++)A.push(0,g*I,0),h.push(0,I,0),u.push(.5,.5),d++;const C=d;for(let t=0;t<=i;t++){const e=t/i*o+a,n=Math.cos(e),s=Math.sin(e);p.x=y*s,p.y=g*I,p.z=y*n,A.push(p.x,p.y,p.z),h.push(0,I,0),r.x=.5*n+.5,r.y=.5*s*I+.5,u.push(r.x,r.y),d++}for(let t=0;t<i;t++){const e=s+t,i=C+t;!0===n?c.push(i,i+1,e):c.push(i+1,i,e),m+=3}l.addGroup(f,m,!0===n?1:2),f+=m}!function(){const r=new gi,m=new gi;let y=0;const I=(e-t)/n;for(let l=0;l<=s;l++){const c=[],f=l/s,y=f*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,s=e*o+a,l=Math.sin(s),p=Math.cos(s);m.x=y*l,m.y=-f*n+g,m.z=y*p,A.push(m.x,m.y,m.z),r.set(l,I,p).normalize(),h.push(r.x,r.y,r.z),u.push(e,1-f),c.push(d++)}p.push(c)}for(let n=0;n<i;n++)for(let i=0;i<s;i++){const r=p[i][n],a=p[i+1][n],o=p[i+1][n+1],l=p[i][n+1];(t>0||0!==i)&&(c.push(r,a,l),y+=3),(e>0||i!==s-1)&&(c.push(a,o,l),y+=3)}l.addGroup(f,y,0),f+=y}(),!1===r&&(t>0&&m(!0),e>0&&m(!1)),this.setIndex(c),this.setAttribute("position",new Pr(A,3)),this.setAttribute("normal",new Pr(h,3)),this.setAttribute("uv",new Pr(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wl(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class _l extends wl{constructor(t=1,e=1,n=32,i=1,s=!1,r=0,a=2*Math.PI){super(0,t,e,n,i,s,r,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(t){return new _l(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Bl extends Hr{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],r=[];function a(t,e,n,i){const s=i+1,r=[];for(let i=0;i<=s;i++){r[i]=[];const a=t.clone().lerp(n,i/s),o=e.clone().lerp(n,i/s),l=s-i;for(let t=0;t<=l;t++)r[i][t]=0===t&&i===s?a:a.clone().lerp(o,t/l)}for(let t=0;t<s;t++)for(let e=0;e<2*(s-t)-1;e++){const n=Math.floor(e/2);e%2==0?(o(r[t][n+1]),o(r[t+1][n]),o(r[t][n])):(o(r[t][n+1]),o(r[t+1][n+1]),o(r[t+1][n]))}}function o(t){s.push(t.x,t.y,t.z)}function l(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function c(t,e,n,i){i<0&&1===t.x&&(r[e]=t.x-1),0===n.x&&0===n.z&&(r[e]=i/2/Math.PI+.5)}function A(t){return Math.atan2(t.z,-t.x)}function h(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}!function(t){const n=new gi,i=new gi,s=new gi;for(let r=0;r<e.length;r+=3)l(e[r+0],n),l(e[r+1],i),l(e[r+2],s),a(n,i,s,t)}(i),function(t){const e=new gi;for(let n=0;n<s.length;n+=3)e.x=s[n+0],e.y=s[n+1],e.z=s[n+2],e.normalize().multiplyScalar(t),s[n+0]=e.x,s[n+1]=e.y,s[n+2]=e.z}(n),function(){const t=new gi;for(let e=0;e<s.length;e+=3){t.x=s[e+0],t.y=s[e+1],t.z=s[e+2];const n=A(t)/2/Math.PI+.5,i=h(t)/Math.PI+.5;r.push(n,1-i)}(function(){const t=new gi,e=new gi,n=new gi,i=new gi,a=new di,o=new di,l=new di;for(let h=0,u=0;h<s.length;h+=9,u+=6){t.set(s[h+0],s[h+1],s[h+2]),e.set(s[h+3],s[h+4],s[h+5]),n.set(s[h+6],s[h+7],s[h+8]),a.set(r[u+0],r[u+1]),o.set(r[u+2],r[u+3]),l.set(r[u+4],r[u+5]),i.copy(t).add(e).add(n).divideScalar(3);const d=A(i);c(a,u+0,t,d),c(o,u+2,e,d),c(l,u+4,n,d)}})(),function(){for(let t=0;t<r.length;t+=6){const e=r[t+0],n=r[t+2],i=r[t+4],s=Math.max(e,n,i),a=Math.min(e,n,i);s>.9&&a<.1&&(e<.2&&(r[t+0]+=1),n<.2&&(r[t+2]+=1),i<.2&&(r[t+4]+=1))}}()}(),this.setAttribute("position",new Pr(s,3)),this.setAttribute("normal",new Pr(s.slice(),3)),this.setAttribute("uv",new Pr(r,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Bl(t.vertices,t.indices,t.radius,t.details)}}class Sl extends Bl{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Sl(t.radius,t.detail)}}const bl=new gi,Ml=new gi,Tl=new gi,Ql=new lr;class Dl extends Hr{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,i=Math.pow(10,n),s=Math.cos(si*e),r=t.getIndex(),a=t.getAttribute("position"),o=r?r.count:a.count,l=[0,0,0],c=["a","b","c"],A=new Array(3),h={},u=[];for(let t=0;t<o;t+=3){r?(l[0]=r.getX(t),l[1]=r.getX(t+1),l[2]=r.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=Ql;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Ql.getNormal(Tl),A[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,A[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,A[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,A[0]!==A[1]&&A[1]!==A[2]&&A[2]!==A[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=A[t],i=A[e],r=Ql[c[t]],a=Ql[c[e]],o=`${n}_${i}`,d=`${i}_${n}`;d in h&&h[d]?(Tl.dot(h[d].normal)<=s&&(u.push(r.x,r.y,r.z),u.push(a.x,a.y,a.z)),h[d]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:Tl.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];bl.fromBufferAttribute(a,e),Ml.fromBufferAttribute(a,n),u.push(bl.x,bl.y,bl.z),u.push(Ml.x,Ml.y,Ml.z)}this.setAttribute("position",new Pr(u,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Rl{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const s=n.length;let r;r=e||t*n[s-1];let a,o=0,l=s-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-r,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===r)return i/(s-1);const c=n[i];return(i+(r-c)/(n[i+1]-c))/(s-1)}getTangent(t,e){const n=1e-4;let i=t-n,s=t+n;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),o=e||(r.isVector2?new di:new gi);return o.copy(a).sub(r).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new gi,i=[],s=[],r=[],a=new gi,o=new Es;for(let e=0;e<=t;e++){const n=e/t;i[e]=this.getTangentAt(n,new gi)}s[0]=new gi,r[0]=new gi;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),A=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),A<=l&&(l=A,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let e=1;e<=t;e++){if(s[e]=s[e-1].clone(),r[e]=r[e-1].clone(),a.crossVectors(i[e-1],i[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(oi(i[e-1].dot(i[e]),-1,1));s[e].applyMatrix4(o.makeRotationAxis(a,t))}r[e].crossVectors(i[e],s[e])}if(!0===e){let e=Math.acos(oi(s[0].dot(s[t]),-1,1));e/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(e=-e);for(let n=1;n<=t;n++)s[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),r[n].crossVectors(i[n],s[n])}return{tangents:i,normals:s,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Ul extends Rl{constructor(t=0,e=0,n=1,i=1,s=0,r=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new di){const n=e,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=r?0:i),!0!==this.aClockwise||r||(s===i?s=-i:s-=i);const a=this.aStartAngle+t*s;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Pl extends Ul{constructor(t,e,n,i,s,r){super(t,e,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Ll(){let t=0,e=0,n=0,i=0;function s(s,r,a,o){t=s,e=a,n=-3*s+3*r-2*a-o,i=2*s-2*r+a+o}return{initCatmullRom:function(t,e,n,i,r){s(e,n,r*(n-t),r*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,r,a,o){let l=(e-t)/r-(n-t)/(r+a)+(n-e)/a,c=(n-e)/a-(i-e)/(a+o)+(i-n)/o;l*=a,c*=a,s(e,n,l,c)},calc:function(s){const r=s*s;return t+e*s+n*r+i*(r*s)}}}const Fl=new gi,Nl=new Ll,kl=new Ll,Ol=new Ll;class zl extends Rl{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new gi){const n=e,i=this.points,s=i.length,r=(s-(this.closed?0:1))*t;let a,o,l=Math.floor(r),c=r-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:0===c&&l===s-1&&(l=s-2,c=1),this.closed||l>0?a=i[(l-1)%s]:(Fl.subVectors(i[0],i[1]).add(i[0]),a=Fl);const A=i[l%s],h=i[(l+1)%s];if(this.closed||l+2<s?o=i[(l+2)%s]:(Fl.subVectors(i[s-1],i[s-2]).add(i[s-1]),o=Fl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(A),t),n=Math.pow(A.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Nl.initNonuniformCatmullRom(a.x,A.x,h.x,o.x,e,n,i),kl.initNonuniformCatmullRom(a.y,A.y,h.y,o.y,e,n,i),Ol.initNonuniformCatmullRom(a.z,A.z,h.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Nl.initCatmullRom(a.x,A.x,h.x,o.x,this.tension),kl.initCatmullRom(a.y,A.y,h.y,o.y,this.tension),Ol.initCatmullRom(a.z,A.z,h.z,o.z,this.tension));return n.set(Nl.calc(c),kl.calc(c),Ol.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new gi).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Gl(t,e,n,i,s){const r=.5*(i-e),a=.5*(s-n),o=t*t;return(2*n-2*i+r+a)*(t*o)+(-3*n+3*i-2*r-a)*o+r*t+n}function Hl(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Vl(t,e,n,i,s){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,s)}class Yl extends Rl{constructor(t=new di,e=new di,n=new di,i=new di){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new di){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Vl(t,i.x,s.x,r.x,a.x),Vl(t,i.y,s.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ql extends Rl{constructor(t=new gi,e=new gi,n=new gi,i=new gi){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new gi){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Vl(t,i.x,s.x,r.x,a.x),Vl(t,i.y,s.y,r.y,a.y),Vl(t,i.z,s.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Wl extends Rl{constructor(t=new di,e=new di){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new di){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new di){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Jl extends Rl{constructor(t=new gi,e=new gi){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new gi){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new gi){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class jl extends Rl{constructor(t=new di,e=new di,n=new di){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new di){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(Hl(t,i.x,s.x,r.x),Hl(t,i.y,s.y,r.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Xl extends Rl{constructor(t=new gi,e=new gi,n=new gi){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new gi){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(Hl(t,i.x,s.x,r.x),Hl(t,i.y,s.y,r.y),Hl(t,i.z,s.z,r.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Kl extends Rl{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new di){const n=e,i=this.points,s=(i.length-1)*t,r=Math.floor(s),a=s-r,o=i[0===r?r:r-1],l=i[r],c=i[r>i.length-2?i.length-1:r+1],A=i[r>i.length-3?i.length-1:r+2];return n.set(Gl(a,o.x,l.x,c.x,A.x),Gl(a,o.y,l.y,c.y,A.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new di).fromArray(n))}return this}}var Zl=Object.freeze({__proto__:null,ArcCurve:Pl,CatmullRomCurve3:zl,CubicBezierCurve:Yl,CubicBezierCurve3:ql,EllipseCurve:Ul,LineCurve:Wl,LineCurve3:Jl,QuadraticBezierCurve:jl,QuadraticBezierCurve3:Xl,SplineCurve:Kl});class $l extends Rl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new Zl[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const t=i[s]-n,r=this.curves[s],a=r.getLength(),o=0===a?0:1-t/a;return r.getPointAt(o,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r.isEllipseCurve?2*t:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?t*r.points.length:t,o=r.getPoints(a);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Zl[n.type]).fromJSON(n))}return this}}class tc extends $l{constructor(t){super(),this.type="Path",this.currentPoint=new di,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Wl(this.currentPoint.clone(),new di(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new jl(this.currentPoint.clone(),new di(t,e),new di(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,r){const a=new Yl(this.currentPoint.clone(),new di(t,e),new di(n,i),new di(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Kl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,r){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,s,r),this}absarc(t,e,n,i,s,r){return this.absellipse(t,e,n,n,i,s,r),this}ellipse(t,e,n,i,s,r,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,s,r,a,o),this}absellipse(t,e,n,i,s,r,a,o){const l=new Ul(t,e,n,i,s,r,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ec extends tc{constructor(t){super(t),this.uuid=ai(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new tc).fromJSON(n))}return this}}function nc(t,e,n,i,s){let r;if(s===function(t,e,n,i){let s=0;for(let r=e,a=n-i;r<n;r+=i)s+=(t[a]-t[r])*(t[r+1]+t[a+1]),a=r;return s}(t,e,n,i)>0)for(let s=e;s<n;s+=i)r=wc(s/i|0,t[s],t[s+1],r);else for(let s=n-i;s>=e;s-=i)r=wc(s/i|0,t[s],t[s+1],r);return r&&yc(r,r.next)&&(_c(r),r=r.next),r}function ic(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!yc(i,i.next)&&0!==mc(i.prev,i,i.next))i=i.next;else{if(_c(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function sc(t,e,n,i,s,r,a){if(!t)return;!a&&r&&function(t,e,n,i){let s=t;do{0===s.z&&(s.z=uc(s.x,s.y,e,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function(t){let e,n=1;do{let i,s=t;t=null;let r=null;for(e=0;s;){e++;let a=s,o=0;for(let t=0;t<n&&(o++,a=a.nextZ,a);t++);let l=n;for(;o>0||l>0&&a;)0!==o&&(0===l||!a||s.z<=a.z)?(i=s,s=s.nextZ,o--):(i=a,a=a.nextZ,l--),r?r.nextZ=i:t=i,i.prevZ=r,r=i;s=a}r.nextZ=null,n*=2}while(e>1)}(s)}(t,i,s,r);let o=t;for(;t.prev!==t.next;){const l=t.prev,c=t.next;if(r?ac(t,i,s,r):rc(t))e.push(l.i,t.i,c.i),_c(t),t=c.next,o=c.next;else if((t=c)===o){a?1===a?sc(t=oc(ic(t),e),e,n,i,s,r,2):2===a&&lc(t,e,n,i,s,r):sc(ic(t),e,n,i,s,r,1);break}}}function rc(t){const e=t.prev,n=t,i=t.next;if(mc(e,n,i)>=0)return!1;const s=e.x,r=n.x,a=i.x,o=e.y,l=n.y,c=i.y,A=Math.min(s,r,a),h=Math.min(o,l,c),u=Math.max(s,r,a),d=Math.max(o,l,c);let p=i.next;for(;p!==e;){if(p.x>=A&&p.x<=u&&p.y>=h&&p.y<=d&&gc(s,o,r,l,a,c,p.x,p.y)&&mc(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function ac(t,e,n,i){const s=t.prev,r=t,a=t.next;if(mc(s,r,a)>=0)return!1;const o=s.x,l=r.x,c=a.x,A=s.y,h=r.y,u=a.y,d=Math.min(o,l,c),p=Math.min(A,h,u),g=Math.max(o,l,c),f=Math.max(A,h,u),m=uc(d,p,e,n,i),y=uc(g,f,e,n,i);let I=t.prevZ,C=t.nextZ;for(;I&&I.z>=m&&C&&C.z<=y;){if(I.x>=d&&I.x<=g&&I.y>=p&&I.y<=f&&I!==s&&I!==a&&gc(o,A,l,h,c,u,I.x,I.y)&&mc(I.prev,I,I.next)>=0)return!1;if(I=I.prevZ,C.x>=d&&C.x<=g&&C.y>=p&&C.y<=f&&C!==s&&C!==a&&gc(o,A,l,h,c,u,C.x,C.y)&&mc(C.prev,C,C.next)>=0)return!1;C=C.nextZ}for(;I&&I.z>=m;){if(I.x>=d&&I.x<=g&&I.y>=p&&I.y<=f&&I!==s&&I!==a&&gc(o,A,l,h,c,u,I.x,I.y)&&mc(I.prev,I,I.next)>=0)return!1;I=I.prevZ}for(;C&&C.z<=y;){if(C.x>=d&&C.x<=g&&C.y>=p&&C.y<=f&&C!==s&&C!==a&&gc(o,A,l,h,c,u,C.x,C.y)&&mc(C.prev,C,C.next)>=0)return!1;C=C.nextZ}return!0}function oc(t,e){let n=t;do{const i=n.prev,s=n.next.next;!yc(i,s)&&Ic(i,n,n.next,s)&&vc(i,s)&&vc(s,i)&&(e.push(i.i,n.i,s.i),_c(n),_c(n.next),n=t=s),n=n.next}while(n!==t);return ic(n)}function lc(t,e,n,i,s,r){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&fc(a,t)){let o=xc(a,t);return a=ic(a,a.next),o=ic(o,o.next),sc(a,e,n,i,s,r,0),void sc(o,e,n,i,s,r,0)}t=t.next}a=a.next}while(a!==t)}function cc(t,e){let n=t.x-e.x;return 0===n&&(n=t.y-e.y,0===n)&&(n=(t.next.y-t.y)/(t.next.x-t.x)-(e.next.y-e.y)/(e.next.x-e.x)),n}function Ac(t,e){const n=function(t,e){let n=e;const i=t.x,s=t.y;let r,a=-1/0;if(yc(t,n))return n;do{if(yc(t,n.next))return n.next;if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const t=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=i&&t>a&&(a=t,r=n.x<n.next.x?n:n.next,t===i))return r}n=n.next}while(n!==e);if(!r)return null;const o=r,l=r.x,c=r.y;let A=1/0;n=r;do{if(i>=n.x&&n.x>=l&&i!==n.x&&pc(s<c?i:a,s,l,c,s<c?a:i,s,n.x,n.y)){const e=Math.abs(s-n.y)/(i-n.x);vc(n,t)&&(e<A||e===A&&(n.x>r.x||n.x===r.x&&hc(r,n)))&&(r=n,A=e)}n=n.next}while(n!==o);return r}(t,e);if(!n)return e;const i=xc(n,t);return ic(i,i.next),ic(n,n.next)}function hc(t,e){return mc(t.prev,t,e.prev)<0&&mc(e.next,t,t.next)<0}function uc(t,e,n,i,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*s|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*s|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function dc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function pc(t,e,n,i,s,r,a,o){return(s-a)*(e-o)>=(t-a)*(r-o)&&(t-a)*(i-o)>=(n-a)*(e-o)&&(n-a)*(r-o)>=(s-a)*(i-o)}function gc(t,e,n,i,s,r,a,o){return!(t===a&&e===o)&&pc(t,e,n,i,s,r,a,o)}function fc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ic(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(vc(t,e)&&vc(e,t)&&function(t,e){let n=t,i=!1;const s=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(mc(t.prev,t,e.prev)||mc(t,e.prev,e))||yc(t,e)&&mc(t.prev,t,t.next)>0&&mc(e.prev,e,e.next)>0)}function mc(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function yc(t,e){return t.x===e.x&&t.y===e.y}function Ic(t,e,n,i){const s=Ec(mc(t,e,n)),r=Ec(mc(t,e,i)),a=Ec(mc(n,i,t)),o=Ec(mc(n,i,e));return s!==r&&a!==o||!(0!==s||!Cc(t,n,e))||!(0!==r||!Cc(t,i,e))||!(0!==a||!Cc(n,t,i))||!(0!==o||!Cc(n,e,i))}function Cc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ec(t){return t>0?1:t<0?-1:0}function vc(t,e){return mc(t.prev,t,t.next)<0?mc(t,e,t.next)>=0&&mc(t,t.prev,e)>=0:mc(t,e,t.prev)<0||mc(t,t.next,e)<0}function xc(t,e){const n=Bc(t.i,t.x,t.y),i=Bc(e.i,e.x,e.y),s=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function wc(t,e,n,i){const s=Bc(t,e,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function _c(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Bc(t,e,n){return{i:t,x:e,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class Sc{static triangulate(t,e,n=2){return function(t,e,n=2){const i=e&&e.length,s=i?e[0]*n:t.length;let r=nc(t,0,s,n,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c;if(i&&(r=function(t,e,n,i){const s=[];for(let n=0,r=e.length;n<r;n++){const a=nc(t,e[n]*i,n<r-1?e[n+1]*i:t.length,i,!1);a===a.next&&(a.steiner=!0),s.push(dc(a))}s.sort(cc);for(let t=0;t<s.length;t++)n=Ac(s[t],n);return n}(t,e,r,n)),t.length>80*n){o=1/0,l=1/0;let e=-1/0,i=-1/0;for(let r=n;r<s;r+=n){const n=t[r],s=t[r+1];n<o&&(o=n),s<l&&(l=s),n>e&&(e=n),s>i&&(i=s)}c=Math.max(e-o,i-l),c=0!==c?32767/c:0}return sc(r,a,n,o,l,c,0),a}(t,e,n)}}class bc{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return.5*n}static isClockWise(t){return bc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];Mc(t),Tc(n,t);let r=t.length;e.forEach(Mc);for(let t=0;t<e.length;t++)i.push(r),r+=e[t].length,Tc(n,e[t]);const a=Sc.triangulate(n,i);for(let t=0;t<a.length;t+=3)s.push(a.slice(t,t+3));return s}}function Mc(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Tc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Qc extends Hr{constructor(t=new ec([new di(.5,.5),new di(-.5,.5),new di(-.5,-.5),new di(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let e=0,n=t.length;e<n;e++)r(t[e]);function r(t){const r=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,A=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:A-.1,u=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const p=e.extrudePath,g=void 0!==e.UVGenerator?e.UVGenerator:Dc;let f,m,y,I,C,E=!1;p&&(f=p.getSpacedPoints(o),E=!0,c=!1,m=p.computeFrenetFrames(o,!1),y=new gi,I=new gi,C=new gi),c||(d=0,A=0,h=0,u=0);const v=t.extractPoints(a);let x=v.shape;const w=v.holes;if(!bc.isClockWise(x)){x=x.reverse();for(let t=0,e=w.length;t<e;t++){const e=w[t];bc.isClockWise(e)&&(w[t]=e.reverse())}}function _(t){const e=1e-10*1e-10;let n=t[0];for(let i=1;i<=t.length;i++){const s=i%t.length,r=t[s],a=r.x-n.x,o=r.y-n.y,l=a*a+o*o,c=Math.max(Math.abs(r.x),Math.abs(r.y),Math.abs(n.x),Math.abs(n.y));l<=e*c*c?(t.splice(s,1),i--):n=r}}_(x),w.forEach(_);const B=w.length,S=x;for(let t=0;t<B;t++){const e=w[t];x=x.concat(e)}function b(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,n)}const M=x.length;function T(t,e,n){let i,s,r;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,A=a*a+o*o,h=a*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(A),u=Math.sqrt(l*l+c*c),d=e.x-o/h,p=e.y+a/h,g=((n.x-c/u-d)*c-(n.y+l/u-p)*l)/(a*c-o*l);i=d+a*g-t.x,s=p+o*g-t.y;const f=i*i+s*s;if(f<=2)return new di(i,s);r=Math.sqrt(f/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,s=a,r=Math.sqrt(A)):(i=a,s=o,r=Math.sqrt(A/2))}return new di(i/r,s/r)}const Q=[];for(let t=0,e=S.length,n=e-1,i=t+1;t<e;t++,n++,i++)n===e&&(n=0),i===e&&(i=0),Q[t]=T(S[t],S[n],S[i]);const D=[];let R,U,P=Q.concat();for(let t=0,e=B;t<e;t++){const e=w[t];R=[];for(let t=0,n=e.length,i=n-1,s=t+1;t<n;t++,i++,s++)i===n&&(i=0),s===n&&(s=0),R[t]=T(e[t],e[i],e[s]);D.push(R),P=P.concat(R)}if(0===d)U=bc.triangulateShape(S,w);else{const t=[],e=[];for(let n=0;n<d;n++){const i=n/d,s=A*Math.cos(i*Math.PI/2),r=h*Math.sin(i*Math.PI/2)+u;for(let e=0,n=S.length;e<n;e++){const n=b(S[e],Q[e],r);k(n.x,n.y,-s),0===i&&t.push(n)}for(let t=0,n=B;t<n;t++){const n=w[t];R=D[t];const a=[];for(let t=0,e=n.length;t<e;t++){const e=b(n[t],R[t],r);k(e.x,e.y,-s),0===i&&a.push(e)}0===i&&e.push(a)}}U=bc.triangulateShape(t,e)}const L=U.length,F=h+u;for(let t=0;t<M;t++){const e=c?b(x[t],P[t],F):x[t];E?(I.copy(m.normals[0]).multiplyScalar(e.x),y.copy(m.binormals[0]).multiplyScalar(e.y),C.copy(f[0]).add(I).add(y),k(C.x,C.y,C.z)):k(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<M;e++){const n=c?b(x[e],P[e],F):x[e];E?(I.copy(m.normals[t]).multiplyScalar(n.x),y.copy(m.binormals[t]).multiplyScalar(n.y),C.copy(f[t]).add(I).add(y),k(C.x,C.y,C.z)):k(n.x,n.y,l/o*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=A*Math.cos(e*Math.PI/2),i=h*Math.sin(e*Math.PI/2)+u;for(let t=0,e=S.length;t<e;t++){const e=b(S[t],Q[t],i);k(e.x,e.y,l+n)}for(let t=0,e=w.length;t<e;t++){const e=w[t];R=D[t];for(let t=0,s=e.length;t<s;t++){const s=b(e[t],R[t],i);E?k(s.x,s.y+f[o-1].y,f[o-1].x+n):k(s.x,s.y,l+n)}}}function N(t,e){let n=t.length;for(;--n>=0;){const i=n;let s=n-1;s<0&&(s=t.length-1);for(let t=0,n=o+2*d;t<n;t++){const n=M*t,r=M*(t+1);z(e+i+n,e+s+n,e+s+r,e+i+r)}}}function k(t,e,n){r.push(t),r.push(e),r.push(n)}function O(t,e,s){G(t),G(e),G(s);const r=i.length/3,a=g.generateTopUV(n,i,r-3,r-2,r-1);H(a[0]),H(a[1]),H(a[2])}function z(t,e,s,r){G(t),G(e),G(r),G(e),G(s),G(r);const a=i.length/3,o=g.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function G(t){i.push(r[3*t+0]),i.push(r[3*t+1]),i.push(r[3*t+2])}function H(t){s.push(t.x),s.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=M*t;for(let t=0;t<L;t++){const n=U[t];O(n[2]+e,n[1]+e,n[0]+e)}t=o+2*d,e=M*t;for(let t=0;t<L;t++){const n=U[t];O(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<L;t++){const e=U[t];O(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=U[t];O(e[0]+M*o,e[1]+M*o,e[2]+M*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;N(S,e),e+=S.length;for(let t=0,n=w.length;t<n;t++){const n=w[t];N(n,e),e+=n.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Pr(i,3)),this.setAttribute("uv",new Pr(s,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){const i=t[e];n.shapes.push(i.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const s=e[t.shapes[i]];n.push(s)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new Zl[i.type]).fromJSON(i)),new Qc(n,t.options)}}const Dc={generateTopUV:function(t,e,n,i,s){const r=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*s],A=e[3*s+1];return[new di(r,a),new di(o,l),new di(c,A)]},generateSideWallUV:function(t,e,n,i,s,r){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],A=e[3*i+1],h=e[3*i+2],u=e[3*s],d=e[3*s+1],p=e[3*s+2],g=e[3*r],f=e[3*r+1],m=e[3*r+2];return Math.abs(o-A)<Math.abs(a-c)?[new di(a,1-l),new di(c,1-h),new di(u,1-p),new di(g,1-m)]:[new di(o,1-l),new di(A,1-h),new di(d,1-p),new di(f,1-m)]}};class Rc extends Bl{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Rc(t.radius,t.detail)}}class Uc extends Hr{constructor(t=[new di(0,-.5),new di(.5,0),new di(0,.5)],e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=oi(i,0,2*Math.PI);const s=[],r=[],a=[],o=[],l=[],c=1/e,A=new gi,h=new di,u=new gi,d=new gi,p=new gi;let g=0,f=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:g=t[e+1].x-t[e].x,f=t[e+1].y-t[e].y,u.x=1*f,u.y=-g,u.z=0*f,p.copy(u),u.normalize(),o.push(u.x,u.y,u.z);break;case t.length-1:o.push(p.x,p.y,p.z);break;default:g=t[e+1].x-t[e].x,f=t[e+1].y-t[e].y,u.x=1*f,u.y=-g,u.z=0*f,d.copy(u),u.x+=p.x,u.y+=p.y,u.z+=p.z,u.normalize(),o.push(u.x,u.y,u.z),p.copy(d)}for(let s=0;s<=e;s++){const u=n+s*c*i,d=Math.sin(u),p=Math.cos(u);for(let n=0;n<=t.length-1;n++){A.x=t[n].x*d,A.y=t[n].y,A.z=t[n].x*p,r.push(A.x,A.y,A.z),h.x=s/e,h.y=n/(t.length-1),a.push(h.x,h.y);const i=o[3*n+0]*d,c=o[3*n+1],u=o[3*n+0]*p;l.push(i,c,u)}}for(let n=0;n<e;n++)for(let e=0;e<t.length-1;e++){const i=e+n*t.length,r=i,a=i+t.length,o=i+t.length+1,l=i+1;s.push(r,a,l),s.push(o,l,a)}this.setIndex(s),this.setAttribute("position",new Pr(r,3)),this.setAttribute("uv",new Pr(a,2)),this.setAttribute("normal",new Pr(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Uc(t.points,t.segments,t.phiStart,t.phiLength)}}class Pc extends Bl{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Pc(t.radius,t.detail)}}class Lc extends Hr{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,r=e/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,A=t/a,h=e/o,u=[],d=[],p=[],g=[];for(let t=0;t<c;t++){const e=t*h-r;for(let n=0;n<l;n++){const i=n*A-s;d.push(i,-e,0),p.push(0,0,1),g.push(n/a),g.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const n=e+l*t,i=e+l*(t+1),s=e+1+l*(t+1),r=e+1+l*t;u.push(n,i,r),u.push(i,s,r)}this.setIndex(u),this.setAttribute("position",new Pr(d,3)),this.setAttribute("normal",new Pr(p,3)),this.setAttribute("uv",new Pr(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Lc(t.width,t.height,t.widthSegments,t.heightSegments)}}class Fc extends Hr{constructor(t=.5,e=1,n=32,i=1,s=0,r=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:r},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let A=t;const h=(e-t)/(i=Math.max(1,i)),u=new gi,d=new di;for(let t=0;t<=i;t++){for(let t=0;t<=n;t++){const i=s+t/n*r;u.x=A*Math.cos(i),u.y=A*Math.sin(i),o.push(u.x,u.y,u.z),l.push(0,0,1),d.x=(u.x/e+1)/2,d.y=(u.y/e+1)/2,c.push(d.x,d.y)}A+=h}for(let t=0;t<i;t++){const e=t*(n+1);for(let t=0;t<n;t++){const i=t+e,s=i,r=i+n+1,o=i+n+2,l=i+1;a.push(s,r,l),a.push(r,o,l)}}this.setIndex(a),this.setAttribute("position",new Pr(o,3)),this.setAttribute("normal",new Pr(l,3)),this.setAttribute("uv",new Pr(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Fc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Nc extends Hr{constructor(t=new ec([new di(0,.5),new di(-.5,-.5),new di(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],r=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=i.length/3,l=t.extractPoints(e);let c=l.shape;const A=l.holes;!1===bc.isClockWise(c)&&(c=c.reverse());for(let t=0,e=A.length;t<e;t++){const e=A[t];!0===bc.isClockWise(e)&&(A[t]=e.reverse())}const h=bc.triangulateShape(c,A);for(let t=0,e=A.length;t<e;t++){const e=A[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];i.push(e.x,e.y,0),s.push(0,0,1),r.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],i=e[0]+a,s=e[1]+a,r=e[2]+a;n.push(i,s,r),o+=3}}this.setIndex(n),this.setAttribute("position",new Pr(i,3)),this.setAttribute("normal",new Pr(s,3)),this.setAttribute("uv",new Pr(r,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const s=e[t.shapes[i]];n.push(s)}return new Nc(n,t.curveSegments)}}class kc extends Hr{constructor(t=1,e=32,n=16,i=0,s=2*Math.PI,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(r+a,Math.PI);let l=0;const c=[],A=new gi,h=new gi,u=[],d=[],p=[],g=[];for(let u=0;u<=n;u++){const f=[],m=u/n;let y=0;0===u&&0===r?y=.5/e:u===n&&o===Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;A.x=-t*Math.cos(i+o*s)*Math.sin(r+m*a),A.y=t*Math.cos(r+m*a),A.z=t*Math.sin(i+o*s)*Math.sin(r+m*a),d.push(A.x,A.y,A.z),h.copy(A).normalize(),p.push(h.x,h.y,h.z),g.push(o+y,1-m),f.push(l++)}c.push(f)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=c[t][i+1],s=c[t][i],a=c[t+1][i],l=c[t+1][i+1];(0!==t||r>0)&&u.push(e,s,l),(t!==n-1||o<Math.PI)&&u.push(s,a,l)}this.setIndex(u),this.setAttribute("position",new Pr(d,3)),this.setAttribute("normal",new Pr(p,3)),this.setAttribute("uv",new Pr(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new kc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Oc extends Bl{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Oc(t.radius,t.detail)}}class zc extends Hr{constructor(t=1,e=.4,n=12,i=48,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const r=[],a=[],o=[],l=[],c=new gi,A=new gi,h=new gi;for(let r=0;r<=n;r++)for(let u=0;u<=i;u++){const d=u/i*s,p=r/n*Math.PI*2;A.x=(t+e*Math.cos(p))*Math.cos(d),A.y=(t+e*Math.cos(p))*Math.sin(d),A.z=e*Math.sin(p),a.push(A.x,A.y,A.z),c.x=t*Math.cos(d),c.y=t*Math.sin(d),h.subVectors(A,c).normalize(),o.push(h.x,h.y,h.z),l.push(u/i),l.push(r/n)}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*t+e-1,s=(i+1)*(t-1)+e-1,a=(i+1)*(t-1)+e,o=(i+1)*t+e;r.push(n,s,o),r.push(s,a,o)}this.setIndex(r),this.setAttribute("position",new Pr(a,3)),this.setAttribute("normal",new Pr(o,3)),this.setAttribute("uv",new Pr(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zc(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Gc extends Hr{constructor(t=1,e=.4,n=64,i=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],A=new gi,h=new gi,u=new gi,d=new gi,p=new gi,g=new gi,f=new gi;for(let a=0;a<=n;++a){const y=a/n*s*Math.PI*2;m(y,s,r,t,u),m(y+.01,s,r,t,d),g.subVectors(d,u),f.addVectors(d,u),p.crossVectors(g,f),f.crossVectors(p,g),p.normalize(),f.normalize();for(let t=0;t<=i;++t){const s=t/i*Math.PI*2,r=-e*Math.cos(s),d=e*Math.sin(s);A.x=u.x+(r*f.x+d*p.x),A.y=u.y+(r*f.y+d*p.y),A.z=u.z+(r*f.z+d*p.z),o.push(A.x,A.y,A.z),h.subVectors(A,u).normalize(),l.push(h.x,h.y,h.z),c.push(a/n),c.push(t/i)}}for(let t=1;t<=n;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),r=(i+1)*t+e,o=(i+1)*(t-1)+e;a.push(n,s,o),a.push(s,r,o)}function m(t,e,n,i,s){const r=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);s.x=i*(2+l)*.5*r,s.y=i*(2+l)*a*.5,s.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Pr(o,3)),this.setAttribute("normal",new Pr(l,3)),this.setAttribute("uv",new Pr(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Gc(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Hc extends Hr{constructor(t=new Xl(new gi(-1,-1,0),new gi(-1,1,0),new gi(1,1,0)),e=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s};const r=t.computeFrenetFrames(e,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new gi,o=new gi,l=new di;let c=new gi;const A=[],h=[],u=[],d=[];function p(s){c=t.getPointAt(s/e,c);const l=r.normals[s],u=r.binormals[s];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,s=Math.sin(e),r=-Math.cos(e);o.x=r*l.x+s*u.x,o.y=r*l.y+s*u.y,o.z=r*l.z+s*u.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,A.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)p(t);p(!1===s?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,u.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),s=(i+1)*t+(e-1),r=(i+1)*t+e,a=(i+1)*(t-1)+e;d.push(n,s,a),d.push(s,r,a)}}()}(),this.setIndex(d),this.setAttribute("position",new Pr(A,3)),this.setAttribute("normal",new Pr(h,3)),this.setAttribute("uv",new Pr(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Hc((new Zl[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Vc extends Hr{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,i=new gi,s=new gi;if(null!==t.index){const r=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),c=a.getX(t+(o+1)%3);i.fromBufferAttribute(r,l),s.fromBufferAttribute(r,c),!0===Yc(i,s,n)&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}}else{const r=t.attributes.position;for(let t=0,a=r.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;i.fromBufferAttribute(r,o),s.fromBufferAttribute(r,l),!0===Yc(i,s,n)&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new Pr(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function Yc(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,s=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(i)&&!0!==n.has(s)&&(n.add(i),n.add(s),!0)}var qc=Object.freeze({__proto__:null,BoxGeometry:ia,CapsuleGeometry:vl,CircleGeometry:xl,ConeGeometry:_l,CylinderGeometry:wl,DodecahedronGeometry:Sl,EdgesGeometry:Dl,ExtrudeGeometry:Qc,IcosahedronGeometry:Rc,LatheGeometry:Uc,OctahedronGeometry:Pc,PlaneGeometry:Lc,PolyhedronGeometry:Bl,RingGeometry:Fc,ShapeGeometry:Nc,SphereGeometry:kc,TetrahedronGeometry:Oc,TorusGeometry:zc,TorusKnotGeometry:Gc,TubeGeometry:Hc,WireframeGeometry:Vc});class Wc extends fr{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new dr(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Jc extends la{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class jc extends fr{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new dr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qs,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Xc extends jc{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new di(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return oi(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new dr(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new dr(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new dr(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Kc extends fr{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new dr(16777215),this.specular=new dr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qs,this.combine=At,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Zc extends fr{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new dr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class $c extends fr{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class tA extends fr{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new dr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qs,this.combine=At,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class eA extends fr{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=sn,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class nA extends fr{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class iA extends fr{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new dr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ln,this.normalScale=new di(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class sA extends Wo{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function rA(t,e){return t&&t.constructor!==e?"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t):t}function aA(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function oA(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort(function(e,n){return t[e]-t[n]}),n}function lA(t,e,n){const i=t.length,s=new t.constructor(i);for(let r=0,a=0;a!==i;++r){const i=n[r]*e;for(let n=0;n!==e;++n)s[a++]=t[i+n]}return s}function cA(t,e,n,i){let s=1,r=t[0];for(;void 0!==r&&void 0===r[i];)r=t[s++];if(void 0===r)return;let a=r[i];if(void 0!==a)if(Array.isArray(a))do{a=r[i],void 0!==a&&(e.push(r.time),n.push(...a)),r=t[s++]}while(void 0!==r);else if(void 0!==a.toArray)do{a=r[i],void 0!==a&&(e.push(r.time),a.toArray(n,n.length)),r=t[s++]}while(void 0!==r);else do{a=r[i],void 0!==a&&(e.push(r.time),n.push(a)),r=t[s++]}while(void 0!==r)}class AA{static convertArray(t,e){return rA(t,e)}static isTypedArray(t){return aA(t)}static getKeyframeOrder(t){return oA(t)}static sortedArray(t,e,n){return lA(t,e,n)}static flattenJSON(t,e,n,i){cA(t,e,n,i)}static subclip(t,e,n,i,s=30){return function(t,e,n,i,s=30){const r=t.clone();r.name=e;const a=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*s;if(!(r<n||r>=i)){l.push(e.times[t]);for(let n=0;n<o;++n)c.push(e.values[t*o+n])}}0!==l.length&&(e.times=rA(l,e.times.constructor),e.values=rA(c,e.values.constructor),a.push(e))}r.tracks=a;let o=1/0;for(let t=0;t<r.tracks.length;++t)o>r.tracks[t].times[0]&&(o=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*o);return r.resetDuration(),r}(t,e,n,i,s)}static makeClipAdditive(t,e=0,n=t,i=30){return function(t,e=0,n=t,i=30){i<=0&&(i=30);const s=n.tracks.length,r=e/i;for(let e=0;e<s;++e){const i=n.tracks[e],s=i.ValueTypeName;if("bool"===s||"string"===s)continue;const a=t.tracks.find(function(t){return t.name===i.name&&t.ValueTypeName===s});if(void 0===a)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const A=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=A/3);const h=i.times.length-1;let u;if(r<=i.times[0]){const t=o,e=l-o;u=i.values.slice(t,e)}else if(r>=i.times[h]){const t=h*l+o,e=t+l-o;u=i.values.slice(t,e)}else{const t=i.createInterpolant(),e=o,n=l-o;t.evaluate(r),u=t.resultBuffer.slice(e,n)}"quaternion"===s&&(new pi).fromArray(u).normalize().conjugate().toArray(u);const d=a.times.length;for(let t=0;t<d;++t){const e=t*A+c;if("quaternion"===s)pi.multiplyQuaternionsFlat(a.values,e,u,0,a.values,e);else{const t=A-2*c;for(let n=0;n<t;++n)a.values[e+n]-=u[n]}}}return t.blendMode=$e,t}(t,e,n,i)}}class hA{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let r;n:{i:if(!(t<i)){for(let r=n+2;;){if(void 0===i){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===r)break;if(s=i,i=e[++n],t<i)break e}r=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let r=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===r)break;if(i=s,s=e[--n-1],t>=s)break e}r=n,n=0;break n}break t}for(;n<r;){const i=n+r>>>1;t<e[i]?r=i:n=i+1}if(i=e[n],s=e[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let t=0;t!==i;++t)e[t]=n[s+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class uA extends hA{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:je,endingEnd:je}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,r=t+1,a=i[s],o=i[r];if(void 0===a)switch(this.getSettings_().endingStart){case Xe:s=t,a=2*e-n;break;case Ke:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Xe:r=t,o=2*n-e;break;case Ke:r=1,o=n+i[1]-i[0];break;default:r=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=s*c,this._offsetNext=r*c}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,A=this._offsetNext,h=this._weightPrev,u=this._weightNext,d=(n-e)/(i-e),p=d*d,g=p*d,f=-h*g+2*h*p-h*d,m=(1+h)*g+(-1.5-2*h)*p+(-.5+h)*d+1,y=(-1-u)*g+(1.5+u)*p+.5*d,I=u*g-u*p;for(let t=0;t!==a;++t)s[t]=f*r[c+t]+m*r[l+t]+y*r[o+t]+I*r[A+t];return s}}class dA extends hA{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),A=1-c;for(let t=0;t!==a;++t)s[t]=r[l+t]*A+r[o+t]*c;return s}}class pA extends hA{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class gA{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=rA(e,this.TimeBufferType),this.values=rA(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:rA(t.times,Array),values:rA(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new pA(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new dA(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new uA(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case qe:e=this.InterpolantFactoryMethodDiscrete;break;case We:e=this.InterpolantFactoryMethodLinear;break;case Je:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return qe;case this.InterpolantFactoryMethodLinear:return We;case this.InterpolantFactoryMethodSmooth:return Je}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<t;)++s;for(;-1!==r&&n[r]>e;)--r;if(++r,0!==s||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const t=this.getValueSize();this.times=n.slice(s,r),this.values=this.values.slice(s*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==s;e++){const i=n[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&aA(i))for(let e=0,n=i.length;e!==n;++e){const n=i[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Je,s=t.length-1;let r=1;for(let a=1;a<s;++a){let s=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(i)s=!0;else{const t=a*n,i=t-n,r=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[i+a]||n!==e[r+a]){s=!0;break}}}if(s){if(a!==r){t[r]=t[a];const i=a*n,s=r*n;for(let t=0;t!==n;++t)e[s+t]=e[i+t]}++r}}if(s>0){t[r]=t[s];for(let t=s*n,i=r*n,a=0;a!==n;++a)e[i+a]=e[t+a];++r}return r!==t.length?(this.times=t.slice(0,r),this.values=e.slice(0,r*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}gA.prototype.ValueTypeName="",gA.prototype.TimeBufferType=Float32Array,gA.prototype.ValueBufferType=Float32Array,gA.prototype.DefaultInterpolation=We;class fA extends gA{constructor(t,e,n){super(t,e,n)}}fA.prototype.ValueTypeName="bool",fA.prototype.ValueBufferType=Array,fA.prototype.DefaultInterpolation=qe,fA.prototype.InterpolantFactoryMethodLinear=void 0,fA.prototype.InterpolantFactoryMethodSmooth=void 0;class mA extends gA{constructor(t,e,n,i){super(t,e,n,i)}}mA.prototype.ValueTypeName="color";class yA extends gA{constructor(t,e,n,i){super(t,e,n,i)}}yA.prototype.ValueTypeName="number";class IA extends hA{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let t=l+a;l!==t;l+=4)pi.slerpFlat(s,0,r,l-a,r,l,o);return s}}class CA extends gA{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new IA(this.times,this.values,this.getValueSize(),t)}}CA.prototype.ValueTypeName="quaternion",CA.prototype.InterpolantFactoryMethodSmooth=void 0;class EA extends gA{constructor(t,e,n){super(t,e,n)}}EA.prototype.ValueTypeName="string",EA.prototype.ValueBufferType=Array,EA.prototype.DefaultInterpolation=qe,EA.prototype.InterpolantFactoryMethodLinear=void 0,EA.prototype.InterpolantFactoryMethodSmooth=void 0;class vA extends gA{constructor(t,e,n,i){super(t,e,n,i)}}vA.prototype.ValueTypeName="vector";class xA{constructor(t="",e=-1,n=[],i=Ze){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ai(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let t=0,s=n.length;t!==s;++t)e.push(wA(n[t]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=n.length;t!==i;++t)e.push(gA.toJSON(n[t]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,r=[];for(let t=0;t<s;t++){let a=[],o=[];a.push((t+s-1)%s,t,(t+1)%s),o.push(0,1,0);const l=oA(a);a=lA(a,1,l),o=lA(o,1,l),i||0!==a[0]||(a.push(s),o.push(o[0])),r.push(new yA(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/n))}return new this(t,-1,r)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],r=n.name.match(s);if(r&&r.length>1){const t=r[1];let e=i[t];e||(i[t]=e=[]),e.push(n)}}const r=[];for(const t in i)r.push(this.CreateFromMorphTargetSequence(t,i[t],e,n));return r}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,i,s){if(0!==n.length){const r=[],a=[];cA(n,r,a,i),0!==r.length&&s.push(new t(e,r,a))}},i=[],s=t.name||"default",r=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const s=l[t].keys;if(s&&0!==s.length)if(s[0].morphTargets){const t={};let e;for(e=0;e<s.length;e++)if(s[e].morphTargets)for(let n=0;n<s[e].morphTargets.length;n++)t[s[e].morphTargets[n]]=-1;for(const n in t){const t=[],r=[];for(let i=0;i!==s[e].morphTargets.length;++i){const i=s[e];t.push(i.time),r.push(i.morphTarget===n?1:0)}i.push(new yA(".morphTargetInfluence["+n+"]",t,r))}o=t.length*r}else{const r=".bones["+e[t].name+"]";n(vA,r+".position",s,"pos",i),n(CA,r+".quaternion",s,"rot",i),n(vA,r+".scale",s,"scl",i)}}return 0===i.length?null:new this(s,o,i,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function wA(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return yA;case"vector":case"vector2":case"vector3":case"vector4":return vA;case"color":return mA;case"quaternion":return CA;case"bool":case"boolean":return fA;case"string":return EA}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];cA(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const _A={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class BA{constructor(t,e,n){const i=this;let s,r=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(t){o++,!1===r&&void 0!==i.onStart&&i.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const SA=new BA;class bA{constructor(t){this.manager=void 0!==t?t:SA,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}bA.DEFAULT_MATERIAL_NAME="__DEFAULT";const MA={};class TA extends Error{constructor(t,e){super(t),this.response=e}}class QA extends bA{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=_A.get(`file:${t}`);if(void 0!==s)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(void 0!==MA[t])return void MA[t].push({onLoad:e,onProgress:n,onError:i});MA[t]=[],MA[t].push({onLoad:e,onProgress:n,onError:i});const r=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:"function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,o=this.responseType;fetch(r).then(e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=MA[t],i=e.body.getReader(),s=e.headers.get("X-File-Size")||e.headers.get("Content-Length"),r=s?parseInt(s):0,a=0!==r;let o=0;const l=new ReadableStream({start(t){!function e(){i.read().then(({done:i,value:s})=>{if(i)t.close();else{o+=s.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:r});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(s),e()}},e=>{t.error(e)})}()}});return new Response(l)}throw new TA(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)}).then(t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then(t=>(new DOMParser).parseFromString(t,a));case"json":return t.json();default:if(""===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,i=new TextDecoder(n);return t.arrayBuffer().then(t=>i.decode(t))}}}).then(e=>{_A.add(`file:${t}`,e);const n=MA[t];delete MA[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}}).catch(e=>{const n=MA[t];if(void 0===n)throw this.manager.itemError(t),e;delete MA[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class DA extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new QA(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=xA.parse(t[n]);e.push(i)}return e}}class RA extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=[],a=new ml,o=new QA(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials);let l=0;function c(c){o.load(t[c],function(t){const n=s.parse(t,!0);r[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=Ft),a.image=r,a.format=n.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else o.load(t,function(t){const n=s.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){r[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)r[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),r[e].format=n.format,r[e].width=n.width,r[e].height=n.height}a.image=r}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=Ft),a.format=n.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}}const UA=new WeakMap;class PA extends bA{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=_A.get(`image:${t}`);if(void 0!==r){if(!0===r.complete)s.manager.itemStart(t),setTimeout(function(){e&&e(r),s.manager.itemEnd(t)},0);else{let t=UA.get(r);void 0===t&&(t=[],UA.set(r,t)),t.push({onLoad:e,onError:i})}return r}const a=xi("img");function o(){c(),e&&e(this);const n=UA.get(this)||[];for(let t=0;t<n.length;t++){const e=n[t];e.onLoad&&e.onLoad(this)}UA.delete(this),s.manager.itemEnd(t)}function l(e){c(),i&&i(e),_A.remove(`image:${t}`);const n=UA.get(this)||[];for(let t=0;t<n.length;t++){const i=n[t];i.onError&&i.onError(e)}UA.delete(this),s.manager.itemError(t),s.manager.itemEnd(t)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),_A.add(`image:${t}`,a),s.manager.itemStart(t),a.src=t,a}}class LA extends bA{constructor(t){super(t)}load(t,e,n,i){const s=new fa;s.colorSpace=hn;const r=new PA(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function o(n){r.load(t[n],function(t){s.images[n]=t,a++,6===a&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let e=0;e<t.length;++e)o(e);return s}}class FA extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new io,a=new QA(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(t){let n;try{n=s.parse(t)}catch(t){if(void 0===i)return void console.error(t);i(t)}void 0!==n.image?r.image=n.image:void 0!==n.data&&(r.image.width=n.width,r.image.height=n.height,r.image.data=n.data),r.wrapS=void 0!==n.wrapS?n.wrapS:Tt,r.wrapT=void 0!==n.wrapT?n.wrapT:Tt,r.magFilter=void 0!==n.magFilter?n.magFilter:Ft,r.minFilter=void 0!==n.minFilter?n.minFilter:Ft,r.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(r.colorSpace=n.colorSpace),void 0!==n.flipY&&(r.flipY=n.flipY),void 0!==n.format&&(r.format=n.format),void 0!==n.type&&(r.type=n.type),void 0!==n.mipmaps&&(r.mipmaps=n.mipmaps,r.minFilter=Ot),1===n.mipmapCount&&(r.minFilter=Ft),void 0!==n.generateMipmaps&&(r.generateMipmaps=n.generateMipmaps),r.needsUpdate=!0,e&&e(r,n)},n,i),r}}class NA extends bA{constructor(t){super(t)}load(t,e,n,i){const s=new Oi,r=new PA(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,function(t){s.image=t,s.needsUpdate=!0,void 0!==e&&e(s)},n,i),s}}class kA extends Js{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new dr(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}class OA extends kA{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Js.DEFAULT_UP),this.updateMatrix(),this.groundColor=new dr(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const zA=new Es,GA=new gi,HA=new gi;class VA{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new di(512,512),this.mapType=Gt,this.map=null,this.mapPass=null,this.matrix=new Es,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wo,this._frameExtents=new di(1,1),this._viewportCount=1,this._viewports=[new zi(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;GA.setFromMatrixPosition(t.matrixWorld),e.position.copy(GA),HA.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(HA),e.updateMatrixWorld(),zA.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zA,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(zA)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class YA extends VA{constructor(){super(new da(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=2*ri*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,s=t.distance||e.far;n===e.fov&&i===e.aspect&&s===e.far||(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class qA extends kA{constructor(t,e,n=0,i=Math.PI/3,s=0,r=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Js.DEFAULT_UP),this.updateMatrix(),this.target=new Js,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new YA}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const WA=new Es,JA=new gi,jA=new gi;class XA extends VA{constructor(){super(new da(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new di(4,2),this._viewportCount=6,this._viewports=[new zi(2,1,1,1),new zi(0,1,1,1),new zi(3,1,1,1),new zi(1,1,1,1),new zi(3,0,1,1),new zi(1,0,1,1)],this._cubeDirections=[new gi(1,0,0),new gi(-1,0,0),new gi(0,0,1),new gi(0,0,-1),new gi(0,1,0),new gi(0,-1,0)],this._cubeUps=[new gi(0,1,0),new gi(0,1,0),new gi(0,1,0),new gi(0,1,0),new gi(0,0,1),new gi(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),JA.setFromMatrixPosition(t.matrixWorld),n.position.copy(JA),jA.copy(n.position),jA.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(jA),n.updateMatrixWorld(),i.makeTranslation(-JA.x,-JA.y,-JA.z),WA.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(WA,n.coordinateSystem,n.reversedDepth)}}class KA extends kA{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new XA}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ZA extends ca{constructor(t=-1,e=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,r=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=t*this.view.offsetX,r=s+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,o,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}class $A extends VA{constructor(){super(new ZA(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class th extends kA{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Js.DEFAULT_UP),this.updateMatrix(),this.target=new Js,this.shadow=new $A}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class eh extends kA{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class nh extends kA{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class ih{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new gi)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.282095),e.addScaledVector(r[1],.488603*i),e.addScaledVector(r[2],.488603*s),e.addScaledVector(r[3],.488603*n),e.addScaledVector(r[4],n*i*1.092548),e.addScaledVector(r[5],i*s*1.092548),e.addScaledVector(r[6],.315392*(3*s*s-1)),e.addScaledVector(r[7],n*s*1.092548),e.addScaledVector(r[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,r=this.coefficients;return e.copy(r[0]).multiplyScalar(.886227),e.addScaledVector(r[1],1.023328*i),e.addScaledVector(r[2],1.023328*s),e.addScaledVector(r[3],1.023328*n),e.addScaledVector(r[4],.858086*n*i),e.addScaledVector(r[5],.858086*i*s),e.addScaledVector(r[6],.743125*s*s-.247708),e.addScaledVector(r[7],.858086*n*s),e.addScaledVector(r[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}class sh extends kA{constructor(t=new ih,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class rh extends bA{constructor(t){super(t),this.textures={}}load(t,e,n,i){const s=this,r=new QA(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const i=this.createMaterialFromType(t.type);if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new dr).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.dispersion&&(i.dispersion=t.dispersion),void 0!==t.iridescence&&(i.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(i.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.anisotropy&&(i.anisotropy=t.anisotropy),void 0!==t.anisotropyRotation&&(i.anisotropyRotation=t.anisotropyRotation),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.alphaHash&&(i.alphaHash=t.alphaHash),void 0!==t.depthFunc&&(i.depthFunc=t.depthFunc),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.blendSrc&&(i.blendSrc=t.blendSrc),void 0!==t.blendDst&&(i.blendDst=t.blendDst),void 0!==t.blendEquation&&(i.blendEquation=t.blendEquation),void 0!==t.blendSrcAlpha&&(i.blendSrcAlpha=t.blendSrcAlpha),void 0!==t.blendDstAlpha&&(i.blendDstAlpha=t.blendDstAlpha),void 0!==t.blendEquationAlpha&&(i.blendEquationAlpha=t.blendEquationAlpha),void 0!==t.blendColor&&void 0!==i.blendColor&&i.blendColor.setHex(t.blendColor),void 0!==t.blendAlpha&&(i.blendAlpha=t.blendAlpha),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),void 0!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.forceSinglePass&&(i.forceSinglePass=t.forceSinglePass),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const s=t.uniforms[e];switch(i.uniforms[e]={},s.type){case"t":i.uniforms[e].value=n(s.value);break;case"c":i.uniforms[e].value=(new dr).setHex(s.value);break;case"v2":i.uniforms[e].value=(new di).fromArray(s.value);break;case"v3":i.uniforms[e].value=(new gi).fromArray(s.value);break;case"v4":i.uniforms[e].value=(new zi).fromArray(s.value);break;case"m3":i.uniforms[e].value=(new yi).fromArray(s.value);break;case"m4":i.uniforms[e].value=(new Es).fromArray(s.value);break;default:i.uniforms[e].value=s.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(i.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)i.extensions[e]=t.extensions[e];if(void 0!==t.lights&&(i.lights=t.lights),void 0!==t.clipping&&(i.clipping=t.clipping),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new di).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapRotation&&i.envMapRotation.fromArray(t.envMapRotation),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new di).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(i.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=n(t.thicknessMap)),void 0!==t.anisotropyMap&&(i.anisotropyMap=n(t.anisotropyMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return rh.createMaterialFromType(t)}static createMaterialFromType(t){return new{ShadowMaterial:Wc,SpriteMaterial:Sa,RawShaderMaterial:Jc,ShaderMaterial:la,PointsMaterial:ol,MeshPhysicalMaterial:Xc,MeshStandardMaterial:jc,MeshPhongMaterial:Kc,MeshToonMaterial:Zc,MeshNormalMaterial:$c,MeshLambertMaterial:tA,MeshDepthMaterial:eA,MeshDistanceMaterial:nA,MeshBasicMaterial:mr,MeshMatcapMaterial:iA,LineDashedMaterial:sA,LineBasicMaterial:Wo,Material:fr}[t]}}class ah{static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class oh extends Hr{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class lh extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new QA(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(n){try{e(s.parse(JSON.parse(n)))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const s=t.interleavedBuffers[i],r=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers[e],s=new Uint32Array(i).buffer;return n[e]=s,s}(t,s.buffer),a=vi(s.type,r),o=new wa(a,s.stride);return o.uuid=s.uuid,e[i]=o,o}const s=t.isInstancedBufferGeometry?new oh:new Hr,r=t.data.index;if(void 0!==r){const t=vi(r.type,r.array);s.setIndex(new Br(t,1))}const a=t.data.attributes;for(const e in a){const n=a[e];let r;if(n.isInterleavedBufferAttribute){const e=i(t.data,n.data);r=new Ba(e,n.itemSize,n.offset,n.normalized)}else{const t=vi(n.type,n.array);r=new(n.isInstancedBufferAttribute?oo:Br)(t,n.itemSize,n.normalized)}void 0!==n.name&&(r.name=n.name),void 0!==n.usage&&r.setUsage(n.usage),s.setAttribute(e,r)}const o=t.data.morphAttributes;if(o)for(const e in o){const n=o[e],r=[];for(let e=0,s=n.length;e<s;e++){const s=n[e];let a;if(s.isInterleavedBufferAttribute){const e=i(t.data,s.data);a=new Ba(e,s.itemSize,s.offset,s.normalized)}else{const t=vi(s.type,s.array);a=new Br(t,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),r.push(a)}s.morphAttributes[e]=r}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];s.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;return void 0!==c&&(s.boundingSphere=(new us).fromJSON(c)),t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}}class ch extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=""===this.path?ah.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||r;const a=new QA(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(n){let r=null;try{r=JSON.parse(n)}catch(e){return void 0!==i&&i(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=r.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+t)),void console.error("THREE.ObjectLoader: Can't load "+t);s.parse(r,e)},n,i)}async loadAsync(t,e){const n=""===this.path?ah.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const i=new QA(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const s=await i.loadAsync(t,e),r=JSON.parse(s),a=r.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(r)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,i),r=this.parseImages(t.images,function(){void 0!==e&&e(l)}),a=this.parseTextures(t.textures,r),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,s,o,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),this.bindLightTargets(l),void 0!==e){let t=!1;for(const e in r)if(r[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),s=await this.parseImagesAsync(t.images),r=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,r),o=this.parseObject(t.object,i,a,r,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),this.bindLightTargets(o),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new ec).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(t){t.isBone&&(i[t.uuid]=t)}),void 0!==t)for(let e=0,s=t.length;e<s;e++){const s=(new ao).fromJSON(t[e],i);n[s.uuid]=s}return n}parseGeometries(t,e){const n={};if(void 0!==t){const i=new lh;for(let s=0,r=t.length;s<r;s++){let r;const a=t[s];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":r=i.parse(a);break;default:a.type in qc?r=qc[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}r.uuid=a.uuid,void 0!==a.name&&(r.name=a.name),void 0!==a.userData&&(r.userData=a.userData),n[a.uuid]=r}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const s=new rh;s.setTextures(e);for(let e=0,r=t.length;e<r;e++){const r=t[e];void 0===n[r.uuid]&&(n[r.uuid]=s.parse(r)),i[r.uuid]=n[r.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],s=xA.parse(i);e[s.uuid]=s}return e}parseImages(t,e){const n=this,i={};let s;function r(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),s.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t),n.manager.itemEnd(t)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:vi(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new BA(e);s=new PA(n),s.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=r(s[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new io(n.data,n.width,n.height)))}i[n.uuid]=new Li(t)}else{const t=r(n.url);i[n.uuid]=new Li(t)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function s(t){if("string"==typeof t){const n=t,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await i.loadAsync(s)}return t.data?{data:vi(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){i=new PA(this.manager),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.url;if(Array.isArray(r)){const t=[];for(let e=0,n=r.length;e<n;e++){const n=r[e],i=await s(n);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new io(i.data,i.width,i.height)))}n[i.uuid]=new Li(t)}else{const t=await s(i.url);n[i.uuid]=new Li(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const i={};if(void 0!==t)for(let s=0,r=t.length;s<r;s++){const r=t[s];void 0===r.image&&console.warn('THREE.ObjectLoader: No "image" specified for',r.uuid),void 0===e[r.image]&&console.warn("THREE.ObjectLoader: Undefined image",r.image);const a=e[r.image],o=a.data;let l;Array.isArray(o)?(l=new fa,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new io:new Oi,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=r.uuid,void 0!==r.name&&(l.name=r.name),void 0!==r.mapping&&(l.mapping=n(r.mapping,Ah)),void 0!==r.channel&&(l.channel=r.channel),void 0!==r.offset&&l.offset.fromArray(r.offset),void 0!==r.repeat&&l.repeat.fromArray(r.repeat),void 0!==r.center&&l.center.fromArray(r.center),void 0!==r.rotation&&(l.rotation=r.rotation),void 0!==r.wrap&&(l.wrapS=n(r.wrap[0],hh),l.wrapT=n(r.wrap[1],hh)),void 0!==r.format&&(l.format=r.format),void 0!==r.internalFormat&&(l.internalFormat=r.internalFormat),void 0!==r.type&&(l.type=r.type),void 0!==r.colorSpace&&(l.colorSpace=r.colorSpace),void 0!==r.minFilter&&(l.minFilter=n(r.minFilter,uh)),void 0!==r.magFilter&&(l.magFilter=n(r.magFilter,uh)),void 0!==r.anisotropy&&(l.anisotropy=r.anisotropy),void 0!==r.flipY&&(l.flipY=r.flipY),void 0!==r.generateMipmaps&&(l.generateMipmaps=r.generateMipmaps),void 0!==r.premultiplyAlpha&&(l.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(l.unpackAlignment=r.unpackAlignment),void 0!==r.compareFunction&&(l.compareFunction=r.compareFunction),void 0!==r.userData&&(l.userData=r.userData),i[r.uuid]=l}return i}parseObject(t,e,n,i,s){let r,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];void 0===n[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),e.push(n[s])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function A(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),i[t]}switch(t.type){case"Scene":r=new xa,void 0!==t.background&&(Number.isInteger(t.background)?r.background=new dr(t.background):r.background=A(t.background)),void 0!==t.environment&&(r.environment=A(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new va(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new Ea(t.fog.color,t.fog.density)),""!==t.fog.name&&(r.fog.name=t.fog.name)),void 0!==t.backgroundBlurriness&&(r.backgroundBlurriness=t.backgroundBlurriness),void 0!==t.backgroundIntensity&&(r.backgroundIntensity=t.backgroundIntensity),void 0!==t.backgroundRotation&&r.backgroundRotation.fromArray(t.backgroundRotation),void 0!==t.environmentIntensity&&(r.environmentIntensity=t.environmentIntensity),void 0!==t.environmentRotation&&r.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":r=new da(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new ZA(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new eh(t.color,t.intensity);break;case"DirectionalLight":r=new th(t.color,t.intensity),r.target=t.target||"";break;case"PointLight":r=new KA(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new nh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new qA(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),r.target=t.target||"";break;case"HemisphereLight":r=new OA(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=(new sh).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=c(t.material),r=new eo(a,o),void 0!==t.bindMode&&(r.bindMode=t.bindMode),void 0!==t.bindMatrix&&r.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(r.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=c(t.material),r=new ea(a,o);break;case"InstancedMesh":a=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;r=new fo(a,o,e),r.instanceMatrix=new oo(new Float32Array(n.array),16),void 0!==i&&(r.instanceColor=new oo(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":a=l(t.geometry),o=c(t.material),r=new qo(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,o),r.geometry=a,r.perObjectFrustumCulled=t.perObjectFrustumCulled,r.sortObjects=t.sortObjects,r._drawRanges=t.drawRanges,r._reservedRanges=t.reservedRanges,r._geometryInfo=t.geometryInfo.map(t=>{let e=null,n=null;return void 0!==t.boundingBox&&(e=(new Ji).fromJSON(t.boundingBox)),void 0!==t.boundingSphere&&(n=(new us).fromJSON(t.boundingSphere)),{...t,boundingBox:e,boundingSphere:n}}),r._instanceInfo=t.instanceInfo,r._availableInstanceIds=t._availableInstanceIds,r._availableGeometryIds=t._availableGeometryIds,r._nextIndexStart=t.nextIndexStart,r._nextVertexStart=t.nextVertexStart,r._geometryCount=t.geometryCount,r._maxInstanceCount=t.maxInstanceCount,r._maxVertexCount=t.maxVertexCount,r._maxIndexCount=t.maxIndexCount,r._geometryInitialized=t.geometryInitialized,r._matricesTexture=A(t.matricesTexture.uuid),r._indirectTexture=A(t.indirectTexture.uuid),void 0!==t.colorsTexture&&(r._colorsTexture=A(t.colorsTexture.uuid)),void 0!==t.boundingSphere&&(r.boundingSphere=(new us).fromJSON(t.boundingSphere)),void 0!==t.boundingBox&&(r.boundingBox=(new Ji).fromJSON(t.boundingBox));break;case"LOD":r=new Ya;break;case"Line":r=new el(l(t.geometry),c(t.material));break;case"LineLoop":r=new al(l(t.geometry),c(t.material));break;case"LineSegments":r=new rl(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":r=new ul(l(t.geometry),c(t.material));break;case"Sprite":r=new za(c(t.material));break;case"Group":r=new ya;break;case"Bone":r=new no;break;default:r=new Js}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.up&&r.up.fromArray(t.up),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.intensity&&(r.shadow.intensity=t.shadow.intensity),void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(r.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)r.add(this.parseObject(a[t],e,n,i,s))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];r.animations.push(s[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=r.getObjectByProperty("uuid",n.object);void 0!==i&&r.addLevel(i,n.distance,n.hysteresis)}}return r}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse(function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);e.target=void 0!==i?i:new Js}})}}const Ah={UVMapping:xt,CubeReflectionMapping:wt,CubeRefractionMapping:_t,EquirectangularReflectionMapping:Bt,EquirectangularRefractionMapping:St,CubeUVReflectionMapping:bt},hh={RepeatWrapping:Mt,ClampToEdgeWrapping:Tt,MirroredRepeatWrapping:Qt},uh={NearestFilter:Dt,NearestMipmapNearestFilter:Rt,NearestMipmapLinearFilter:Pt,LinearFilter:Ft,LinearMipmapNearestFilter:Nt,LinearMipmapLinearFilter:Ot},dh=new WeakMap;class ph extends bA{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=_A.get(`image-bitmap:${t}`);if(void 0!==r)return s.manager.itemStart(t),r.then?void r.then(n=>{if(!0!==dh.has(r))return e&&e(n),s.manager.itemEnd(t),n;i&&i(dh.get(r)),s.manager.itemError(t),s.manager.itemEnd(t)}):(setTimeout(function(){e&&e(r),s.manager.itemEnd(t)},0),r);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,a.signal="function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const o=fetch(t,a).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(n){return _A.add(`image-bitmap:${t}`,n),e&&e(n),s.manager.itemEnd(t),n}).catch(function(e){i&&i(e),dh.set(o,e),_A.remove(`image-bitmap:${t}`),s.manager.itemError(t),s.manager.itemEnd(t)});_A.add(`image-bitmap:${t}`,o),s.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let gh;class fh{static getContext(){return void 0===gh&&(gh=new(window.AudioContext||window.webkitAudioContext)),gh}static setContext(t){gh=t}}class mh extends bA{constructor(t){super(t)}load(t,e,n,i){const s=this,r=new QA(this.manager);function a(e){i?i(e):console.error(e),s.manager.itemError(t)}r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,function(t){try{const n=t.slice(0);fh.getContext().decodeAudioData(n,function(t){e(t)}).catch(a)}catch(t){a(t)}},n,i)}}const yh=new Es,Ih=new Es,Ch=new Es;class Eh{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new da,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new da,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Ch.copy(t.projectionMatrix);const n=e.eyeSep/2,i=n*e.near/e.focus,s=e.near*Math.tan(si*e.fov*.5)/e.zoom;let r,a;Ih.elements[12]=-n,yh.elements[12]=n,r=-s*e.aspect+i,a=s*e.aspect+i,Ch.elements[0]=2*e.near/(a-r),Ch.elements[8]=(a+r)/(a-r),this.cameraL.projectionMatrix.copy(Ch),r=-s*e.aspect-i,a=s*e.aspect-i,Ch.elements[0]=2*e.near/(a-r),Ch.elements[8]=(a+r)/(a-r),this.cameraR.projectionMatrix.copy(Ch)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Ih),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(yh)}}class vh extends da{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class xh{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const wh=new gi,_h=new pi,Bh=new gi,Sh=new gi,bh=new gi;class Mh extends Js{constructor(){super(),this.type="AudioListener",this.context=fh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new xh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(wh,_h,Bh),Sh.set(0,0,-1).applyQuaternion(_h),bh.set(0,1,0).applyQuaternion(_h),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(wh.x,t),e.positionY.linearRampToValueAtTime(wh.y,t),e.positionZ.linearRampToValueAtTime(wh.z,t),e.forwardX.linearRampToValueAtTime(Sh.x,t),e.forwardY.linearRampToValueAtTime(Sh.y,t),e.forwardZ.linearRampToValueAtTime(Sh.z,t),e.upX.linearRampToValueAtTime(bh.x,t),e.upY.linearRampToValueAtTime(bh.y,t),e.upZ.linearRampToValueAtTime(bh.z,t)}else e.setPosition(wh.x,wh.y,wh.z),e.setOrientation(Sh.x,Sh.y,Sh.z,bh.x,bh.y,bh.z)}}class Th extends Js{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(t=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),"buffer"!==t.sourceType?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Qh=new gi,Dh=new pi,Rh=new gi,Uh=new gi;class Ph extends Th{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Qh,Dh,Rh),Uh.set(0,0,1).applyQuaternion(Dh);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Qh.x,t),e.positionY.linearRampToValueAtTime(Qh.y,t),e.positionZ.linearRampToValueAtTime(Qh.z,t),e.orientationX.linearRampToValueAtTime(Uh.x,t),e.orientationY.linearRampToValueAtTime(Uh.y,t),e.orientationZ.linearRampToValueAtTime(Uh.z,t)}else e.setPosition(Qh.x,Qh.y,Qh.z),e.setOrientation(Uh.x,Uh.y,Uh.z)}}class Lh{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class Fh{constructor(t,e,n){let i,s,r;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==i;++t)n[s+t]=n[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(n,s,0,t,i)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-s,e)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let t=e,s=e+e;t!==s;++t)if(n[t]!==n[t+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let t=n,s=i;t!==s;++t)e[t]=e[i+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let i=0;i!==s;++i)t[e+i]=t[n+i]}_slerp(t,e,n,i){pi.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const r=this._workIndex*s;pi.multiplyQuaternionsFlat(t,r,t,e,t,n),pi.slerpFlat(t,e,t,e,t,r,i)}_lerp(t,e,n,i,s){const r=1-i;for(let a=0;a!==s;++a){const s=e+a;t[s]=t[s]*r+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let r=0;r!==s;++r){const s=e+r;t[s]=t[s]+t[n+r]*i}}}const Nh="\\[\\]\\.:\\/",kh=new RegExp("["+Nh+"]","g"),Oh="[^"+Nh+"]",zh="[^"+Nh.replace("\\.","")+"]",Gh=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Oh)+/(WCOD+)?/.source.replace("WCOD",zh)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Oh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Oh)+"$"),Hh=["material","materials","bones","map"];class Vh{constructor(t,e,n){this.path=e,this.parsedPath=n||Vh.parseTrackName(e),this.node=Vh.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Vh.Composite(t,e,n):new Vh(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(kh,"")}static parseTrackName(t){const e=Gh.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Hh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const s=t[i];if(s.name===e||s.uuid===e)return s;const r=n(s.children);if(r)return r}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=Vh.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,!0===t.isMaterial?a=this.Versioning.NeedsUpdate:!0===t.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[s]&&(s=t.morphTargetDictionary[s])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Vh.Composite=class{constructor(t,e,n){const i=n||Vh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Vh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Vh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Vh.prototype.GetterByBindingType=[Vh.prototype._getValue_direct,Vh.prototype._getValue_array,Vh.prototype._getValue_arrayElement,Vh.prototype._getValue_toArray],Vh.prototype.SetterByBindingTypeAndVersioning=[[Vh.prototype._setValue_direct,Vh.prototype._setValue_direct_setNeedsUpdate,Vh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Vh.prototype._setValue_array,Vh.prototype._setValue_array_setNeedsUpdate,Vh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Vh.prototype._setValue_arrayElement,Vh.prototype._setValue_arrayElement_setNeedsUpdate,Vh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Vh.prototype._setValue_fromArray,Vh.prototype._setValue_fromArray_setNeedsUpdate,Vh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Yh{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ai(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,r=s.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,A=arguments.length;c!==A;++c){const A=arguments[c],h=A.uuid;let u=e[h];if(void 0===u){u=o++,e[h]=u,t.push(A);for(let t=0,e=r;t!==e;++t)s[t].push(new Vh(A,n[t],i[t]))}else if(u<l){a=t[u];const o=--l,c=t[o];e[c.uuid]=u,t[u]=c,e[h]=o,t[o]=A;for(let t=0,e=r;t!==e;++t){const e=s[t],r=e[o];let a=e[u];e[u]=r,void 0===a&&(a=new Vh(A,n[t],i[t])),e[o]=a}}else t[u]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const a=arguments[r],o=a.uuid,l=e[o];if(void 0!==l&&l>=s){const r=s++,c=t[r];e[c.uuid]=l,t[l]=c,e[o]=r,t[r]=a;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[r],s=e[l];e[l]=i,e[r]=s}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,r=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<s){const a=--s,o=t[a],c=--r,A=t[c];e[o.uuid]=l,t[l]=o,e[A.uuid]=a,t[a]=A,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[a],s=e[c];e[l]=i,e[a]=s,e.pop()}}else{const s=--r,a=t[s];s>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[l]=e[s],e.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(void 0!==i)return s[i];const r=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,A=new Array(l);i=s.length,n[t]=i,r.push(t),a.push(e),s.push(A);for(let n=c,i=o.length;n!==i;++n){const i=o[n];A[n]=new Vh(i,t,e)}return A}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,o=r[a];e[t[a]]=n,r[n]=o,r.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class qh{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,r=s.length,a=new Array(r),o={endingStart:je,endingEnd:je};for(let t=0;t!==r;++t){const e=s[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ve,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),!0===n){const n=this._clip.duration,i=t._clip.duration,s=i/n,r=n/i;t.warp(1,s,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,r=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,o[1]=s+n,l[0]=t/r,l[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const s=this._startTime;if(null!==s){const i=(t-s)*n;i<0||0===n?e=0:(this._startTime=null,e=n*i)}e*=this._updateTimeScale(t);const r=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===$e)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(r),e[n].accumulateAdditive(a);else for(let n=0,s=t.length;n!==s;++n)t[n].evaluate(r),e[n].accumulate(i,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const r=n===Ye;if(0===t)return-1===s||!r||1&~s?i:e-i;if(n===He){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===s&&(t>=0?(s=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,s+=Math.abs(n);const a=this.repetitions-s;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(r&&!(1&~s))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Xe,i.endingEnd=Xe):(i.endingStart=t?this.zeroSlopeAtStart?Xe:je:Ke,i.endingEnd=e?this.zeroSlopeAtEnd?Xe:je:Ke)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,o=r.sampleValues;return a[0]=s,o[0]=e,a[1]=s+t,o[1]=n,this}}const Wh=new Float32Array(1);class Jh extends ei{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,r=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==s;++t){const s=i[t],l=s.name;let A=c[l];if(void 0!==A)++A.referenceCount,r[t]=A;else{if(A=r[t],void 0!==A){null===A._cacheIndex&&(++A.referenceCount,this._addInactiveBinding(A,o,l));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;A=new Fh(Vh.create(n,l,i),s.ValueTypeName,s.getValueSize()),++A.referenceCount,this._addInactiveBinding(A,o,l),r[t]=A}a[t].resultBuffer=A.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let r=s[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,r=this._actionsByClip,a=r[s],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete r[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let r=i[e];void 0===r&&(r={},i[e]=r),r[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,r=this._bindingsByRootAndName,a=r[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[s],0===Object.keys(a).length&&delete r[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new dA(new Float32Array(2),new Float32Array(2),1,Wh),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let r="string"==typeof t?xA.findByName(i,t):t;const a=null!==r?r.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==r?r.blendMode:Ze),void 0!==o){const t=o.actionByRoot[s];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===r&&(r=l._clip)}if(null===r)return null;const c=new qh(this,r,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,s),c}existingAction(t,e){const n=e||this._root,i=n.uuid,s="string"==typeof t?xA.findByName(n,t):t,r=s?s.uuid:t,a=this._actionsByClip[r];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),r=this._accuIndex^=1;for(let a=0;a!==n;++a)e[a]._update(i,t,s,r);const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(void 0!==s){const t=s.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const s=i._cacheIndex,r=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=s,e[s]=r,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const i=n[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class jh extends Gi{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new qi(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Xh{constructor(t){this.value=t}clone(){return new Xh(void 0===this.value.clone?this.value:this.value.clone())}}let Kh=0;class Zh extends ei{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Kh++}),this.name="",this.usage=kn,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,n=e.length;t<n;t++){const n=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0;t<n.length;t++)this.uniforms.push(n[t].clone())}return this}clone(){return(new this.constructor).copy(this)}}class $h extends wa{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class tu{constructor(t,e,n,i,s,r=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.normalized=r,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const eu=new Es;class nu{constructor(t,e,n=0,i=1/0){this.ray=new Cs(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Ds,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return eu.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(eu),this}intersectObject(t,e=!0,n=[]){return su(t,this,n,e),n.sort(iu),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)su(t[i],this,n,e);return n.sort(iu),n}}function iu(t,e){return t.distance-e.distance}function su(t,e,n,i){let s=!0;if(t.layers.test(e.layers)&&!1===t.raycast(e,n)&&(s=!1),!0===s&&!0===i){const i=t.children;for(let t=0,s=i.length;t<s;t++)su(i[t],e,n,!0)}}class ru{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,void 0!==t.hidden&&(this._pageVisibilityHandler=au.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){null!==this._pageVisibilityHandler&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return null!==this._pageVisibilityHandler&&!0===this._document.hidden?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(void 0!==t?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function au(){!1===this._document.hidden&&this.reset()}class ou{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=oi(this.phi,t,Math.PI-t),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(oi(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class lu{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}class cu{constructor(t,e,n,i){cu.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==t&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const s=this.elements;return s[0]=t,s[2]=e,s[1]=n,s[3]=i,this}}const Au=new di;class hu{constructor(t=new di(1/0,1/0),e=new di(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Au.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Au).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const uu=new gi,du=new gi,pu=new gi,gu=new gi,fu=new gi,mu=new gi,yu=new gi;class Iu{constructor(t=new gi,e=new gi){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){uu.subVectors(t,this.start),du.subVectors(this.end,this.start);const n=du.dot(du);let i=du.dot(uu)/n;return e&&(i=oi(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=mu,n=yu){const i=1e-8*1e-8;let s,r;const a=this.start,o=t.start,l=this.end,c=t.end;pu.subVectors(l,a),gu.subVectors(c,o),fu.subVectors(a,o);const A=pu.dot(pu),h=gu.dot(gu),u=gu.dot(fu);if(A<=i&&h<=i)return e.copy(a),n.copy(o),e.sub(n),e.dot(e);if(A<=i)s=0,r=u/h,r=oi(r,0,1);else{const t=pu.dot(fu);if(h<=i)r=0,s=oi(-t/A,0,1);else{const e=pu.dot(gu),n=A*h-e*e;s=0!==n?oi((e*u-t*h)/n,0,1):0,r=(e*s+u)/h,r<0?(r=0,s=oi(-t/A,0,1)):r>1&&(r=1,s=oi((e-t)/A,0,1))}}return e.copy(a).add(pu.multiplyScalar(s)),n.copy(o).add(gu.multiplyScalar(r)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Cu=new gi;class Eu extends Js{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Hr,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,n=32;t<n;t++,e++){const s=t/n*Math.PI*2,r=e/n*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(r),Math.sin(r),1)}n.setAttribute("position",new Pr(i,3));const s=new Wo({fog:!1,toneMapped:!1});this.cone=new rl(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Cu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Cu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const vu=new gi,xu=new Es,wu=new Es;class _u extends rl{constructor(t){const e=Bu(t),n=new Hr,i=[],s=[];for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(0,0,0),s.push(0,0,0))}n.setAttribute("position",new Pr(i,3)),n.setAttribute("color",new Pr(s,3)),super(n,new Wo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const r=new dr(255),a=new dr(65280);this.setColors(r,a)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");wu.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const s=e[t];s.parent&&s.parent.isBone&&(xu.multiplyMatrices(wu,s.matrixWorld),vu.setFromMatrixPosition(xu),i.setXYZ(n,vu.x,vu.y,vu.z),xu.multiplyMatrices(wu,s.parent.matrixWorld),vu.setFromMatrixPosition(xu),i.setXYZ(n+1,vu.x,vu.y,vu.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const n=this.geometry.getAttribute("color");for(let i=0;i<n.count;i+=2)n.setXYZ(i,t.r,t.g,t.b),n.setXYZ(i+1,e.r,e.g,e.b);return n.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Bu(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push(...Bu(t.children[n]));return e}class Su extends ea{constructor(t,e,n){super(new kc(e,4,2),new mr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const bu=new gi,Mu=new dr,Tu=new dr;class Qu extends Js{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Pc(e);i.rotateY(.5*Math.PI),this.material=new mr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),r=new Float32Array(3*s.count);i.setAttribute("color",new Br(r,3)),this.add(new ea(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Mu.copy(this.light.color),Tu.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?Mu:Tu;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(bu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Du extends rl{constructor(t=10,e=10,n=4473924,i=8947848){n=new dr(n),i=new dr(i);const s=e/2,r=t/e,a=t/2,o=[],l=[];for(let t=0,c=0,A=-a;t<=e;t++,A+=r){o.push(-a,0,A,a,0,A),o.push(A,0,-a,A,0,a);const e=t===s?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Hr;c.setAttribute("position",new Pr(o,3)),c.setAttribute("color",new Pr(l,3)),super(c,new Wo({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ru extends rl{constructor(t=10,e=16,n=8,i=64,s=4473924,r=8947848){s=new dr(s),r=new dr(r);const a=[],o=[];if(e>1)for(let n=0;n<e;n++){const i=n/e*(2*Math.PI),l=Math.sin(i)*t,c=Math.cos(i)*t;a.push(0,0,0),a.push(l,0,c);const A=1&n?s:r;o.push(A.r,A.g,A.b),o.push(A.r,A.g,A.b)}for(let e=0;e<n;e++){const l=1&e?s:r,c=t-t/n*e;for(let t=0;t<i;t++){let e=t/i*(2*Math.PI),n=Math.sin(e)*c,s=Math.cos(e)*c;a.push(n,0,s),o.push(l.r,l.g,l.b),e=(t+1)/i*(2*Math.PI),n=Math.sin(e)*c,s=Math.cos(e)*c,a.push(n,0,s),o.push(l.r,l.g,l.b)}}const l=new Hr;l.setAttribute("position",new Pr(a,3)),l.setAttribute("color",new Pr(o,3)),super(l,new Wo({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Uu=new gi,Pu=new gi,Lu=new gi;class Fu extends Js{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===e&&(e=1);let i=new Hr;i.setAttribute("position",new Pr([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Wo({fog:!1,toneMapped:!1});this.lightPlane=new el(i,s),this.add(this.lightPlane),i=new Hr,i.setAttribute("position",new Pr([0,0,0,0,0,1],3)),this.targetLine=new el(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Uu.setFromMatrixPosition(this.light.matrixWorld),Pu.setFromMatrixPosition(this.light.target.matrixWorld),Lu.subVectors(Pu,Uu),this.lightPlane.lookAt(Pu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Pu),this.targetLine.scale.z=Lu.length()}}const Nu=new gi,ku=new ca;class Ou extends rl{constructor(t){const e=new Hr,n=new Wo({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],r={};function a(t,e){o(t),o(e)}function o(t){i.push(0,0,0),s.push(0,0,0),void 0===r[t]&&(r[t]=[]),r[t].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Pr(i,3)),e.setAttribute("color",new Pr(s,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const l=new dr(16755200),c=new dr(16711680),A=new dr(43775),h=new dr(16777215),u=new dr(3355443);this.setColors(l,c,A,h,u)}setColors(t,e,n,i,s){const r=this.geometry.getAttribute("color");return r.setXYZ(0,t.r,t.g,t.b),r.setXYZ(1,t.r,t.g,t.b),r.setXYZ(2,t.r,t.g,t.b),r.setXYZ(3,t.r,t.g,t.b),r.setXYZ(4,t.r,t.g,t.b),r.setXYZ(5,t.r,t.g,t.b),r.setXYZ(6,t.r,t.g,t.b),r.setXYZ(7,t.r,t.g,t.b),r.setXYZ(8,t.r,t.g,t.b),r.setXYZ(9,t.r,t.g,t.b),r.setXYZ(10,t.r,t.g,t.b),r.setXYZ(11,t.r,t.g,t.b),r.setXYZ(12,t.r,t.g,t.b),r.setXYZ(13,t.r,t.g,t.b),r.setXYZ(14,t.r,t.g,t.b),r.setXYZ(15,t.r,t.g,t.b),r.setXYZ(16,t.r,t.g,t.b),r.setXYZ(17,t.r,t.g,t.b),r.setXYZ(18,t.r,t.g,t.b),r.setXYZ(19,t.r,t.g,t.b),r.setXYZ(20,t.r,t.g,t.b),r.setXYZ(21,t.r,t.g,t.b),r.setXYZ(22,t.r,t.g,t.b),r.setXYZ(23,t.r,t.g,t.b),r.setXYZ(24,e.r,e.g,e.b),r.setXYZ(25,e.r,e.g,e.b),r.setXYZ(26,e.r,e.g,e.b),r.setXYZ(27,e.r,e.g,e.b),r.setXYZ(28,e.r,e.g,e.b),r.setXYZ(29,e.r,e.g,e.b),r.setXYZ(30,e.r,e.g,e.b),r.setXYZ(31,e.r,e.g,e.b),r.setXYZ(32,n.r,n.g,n.b),r.setXYZ(33,n.r,n.g,n.b),r.setXYZ(34,n.r,n.g,n.b),r.setXYZ(35,n.r,n.g,n.b),r.setXYZ(36,n.r,n.g,n.b),r.setXYZ(37,n.r,n.g,n.b),r.setXYZ(38,i.r,i.g,i.b),r.setXYZ(39,i.r,i.g,i.b),r.setXYZ(40,s.r,s.g,s.b),r.setXYZ(41,s.r,s.g,s.b),r.setXYZ(42,s.r,s.g,s.b),r.setXYZ(43,s.r,s.g,s.b),r.setXYZ(44,s.r,s.g,s.b),r.setXYZ(45,s.r,s.g,s.b),r.setXYZ(46,s.r,s.g,s.b),r.setXYZ(47,s.r,s.g,s.b),r.setXYZ(48,s.r,s.g,s.b),r.setXYZ(49,s.r,s.g,s.b),r.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap;let n,i;if(ku.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),!0===this.camera.reversedDepth)n=1,i=0;else if(this.camera.coordinateSystem===Xn)n=-1,i=1;else{if(this.camera.coordinateSystem!==Kn)throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);n=0,i=1}zu("c",e,t,ku,0,0,n),zu("t",e,t,ku,0,0,i),zu("n1",e,t,ku,-1,-1,n),zu("n2",e,t,ku,1,-1,n),zu("n3",e,t,ku,-1,1,n),zu("n4",e,t,ku,1,1,n),zu("f1",e,t,ku,-1,-1,i),zu("f2",e,t,ku,1,-1,i),zu("f3",e,t,ku,-1,1,i),zu("f4",e,t,ku,1,1,i),zu("u1",e,t,ku,.7,1.1,n),zu("u2",e,t,ku,-.7,1.1,n),zu("u3",e,t,ku,0,2,n),zu("cf1",e,t,ku,-1,0,i),zu("cf2",e,t,ku,1,0,i),zu("cf3",e,t,ku,0,-1,i),zu("cf4",e,t,ku,0,1,i),zu("cn1",e,t,ku,-1,0,n),zu("cn2",e,t,ku,1,0,n),zu("cn3",e,t,ku,0,-1,n),zu("cn4",e,t,ku,0,1,n),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function zu(t,e,n,i,s,r,a){Nu.set(s,r,a).unproject(i);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],Nu.x,Nu.y,Nu.z)}}const Gu=new Ji;class Hu extends rl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new Hr;s.setIndex(new Br(n,1)),s.setAttribute("position",new Br(i,3)),super(s,new Wo({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(void 0!==this.object&&Gu.setFromObject(this.object),Gu.isEmpty())return;const t=Gu.min,e=Gu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Vu extends rl{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Hr;i.setIndex(new Br(n,1)),i.setAttribute("position",new Pr([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new Wo({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Yu extends el{constructor(t,e=1,n=16776960){const i=n,s=new Hr;s.setAttribute("position",new Pr([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),s.computeBoundingSphere(),super(s,new Wo({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const r=new Hr;r.setAttribute("position",new Pr([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new ea(r,new mr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const qu=new gi;let Wu,Ju;class ju extends Js{constructor(t=new gi(0,0,1),e=new gi(0,0,0),n=1,i=16776960,s=.2*n,r=.2*s){super(),this.type="ArrowHelper",void 0===Wu&&(Wu=new Hr,Wu.setAttribute("position",new Pr([0,0,0,0,1,0],3)),Ju=new _l(.5,1,5,1),Ju.translate(0,-.5,0)),this.position.copy(e),this.line=new el(Wu,new Wo({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ea(Ju,new mr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,r)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{qu.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(qu,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Xu extends rl{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Hr;n.setAttribute("position",new Pr(e,3)),n.setAttribute("color",new Pr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new Wo({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const i=new dr,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ku{constructor(){this.type="ShapePath",this.color=new dr,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new tc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,r){return this.currentPath.bezierCurveTo(t,e,n,i,s,r),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let i=!1;for(let s=n-1,r=0;r<n;s=r++){let n=e[s],a=e[r],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[r],o=-o,a=e[s],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return i}const n=bc.isClockWise,i=this.subPaths;if(0===i.length)return[];let s,r,a;const o=[];if(1===i.length)return r=i[0],a=new ec,a.curves=r.curves,o.push(a),o;let l=!n(i[0].getPoints());l=t?!l:l;const c=[],A=[];let h,u,d=[],p=0;A[p]=void 0,d[p]=[];for(let e=0,a=i.length;e<a;e++)r=i[e],h=r.getPoints(),s=n(h),s=t?!s:s,s?(!l&&A[p]&&p++,A[p]={s:new ec,p:h},A[p].s.curves=r.curves,l&&p++,d[p]=[]):d[p].push({h:r,p:h[0]});if(!A[0])return function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],s=new ec;s.curves=i.curves,e.push(s)}return e}(i);if(A.length>1){let t=!1,n=0;for(let t=0,e=A.length;t<e;t++)c[t]=[];for(let i=0,s=A.length;i<s;i++){const s=d[i];for(let r=0;r<s.length;r++){const a=s[r];let o=!0;for(let s=0;s<A.length;s++)e(a.p,A[s].p)&&(i!==s&&n++,o?(o=!1,c[s].push(a)):t=!0);o&&c[i].push(a)}}n>0&&!1===t&&(d=c)}for(let t=0,e=A.length;t<e;t++){a=A[t].s,o.push(a),u=d[t];for(let t=0,e=u.length;t<e;t++)a.holes.push(u[t].h)}return o}}class Zu extends ei{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){void 0!==t?(null!==this.domElement&&this.disconnect(),this.domElement=t):console.warn("THREE.Controls: connect() now requires an element.")}disconnect(){}dispose(){}update(){}}function $u(t,e,n,i){const s=function(t){switch(t){case Gt:case Ht:return{byteLength:1,components:1};case Yt:case Vt:case jt:return{byteLength:2,components:1};case Xt:case Kt:return{byteLength:2,components:4};case Wt:case qt:case Jt:return{byteLength:4,components:1};case $t:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(i);switch(n){case te:return t*e;case re:case ae:return t*e/s.components*s.byteLength;case oe:case le:return t*e*2/s.components*s.byteLength;case ee:return t*e*3/s.components*s.byteLength;case ne:case Ae:return t*e*4/s.components*s.byteLength;case he:case ue:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case de:case pe:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case fe:case ye:return Math.max(t,16)*Math.max(e,8)/4;case ge:case me:return Math.max(t,8)*Math.max(e,8)/2;case Ie:case Ce:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case Ee:case ve:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case xe:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case we:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case _e:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case Be:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case Se:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case be:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case Me:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case Te:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case Qe:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case De:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case Re:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case Ue:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Pe:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Le:case Fe:case Ne:return Math.ceil(t/4)*Math.ceil(e/4)*16;case ke:case Oe:return Math.ceil(t/4)*Math.ceil(e/4)*8;case ze:case Ge:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}class td{static contain(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2):(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0),t}(t,e)}static cover(t,e){return function(t,e){const n=t.image&&t.image.width?t.image.width/t.image.height:1;return n>e?(t.repeat.x=e/n,t.repeat.y=1,t.offset.x=(1-t.repeat.x)/2,t.offset.y=0):(t.repeat.x=1,t.repeat.y=n/e,t.offset.x=0,t.offset.y=(1-t.repeat.y)/2),t}(t,e)}static fill(t){return function(t){return t.repeat.x=1,t.repeat.y=1,t.offset.x=0,t.offset.y=0,t}(t)}static getByteLength(t,e,n,i){return $u(t,e,n,i)}}function ed(){let t=null,e=!1,n=null,i=null;function s(e,r){n(e,r),i=t.requestAnimationFrame(s)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function nd(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=e.get(n);i&&(t.deleteBuffer(i.buffer),e.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const s=e.get(n);if(void 0===s)e.set(n,function(e,n){const i=e.array,s=e.usage,r=i.byteLength,a=t.createBuffer();let o;if(t.bindBuffer(n,a),t.bufferData(n,i,s),e.onUploadCallback(),i instanceof Float32Array)o=t.FLOAT;else if("undefined"!=typeof Float16Array&&i instanceof Float16Array)o=t.HALF_FLOAT;else if(i instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=t.SHORT;else if(i instanceof Uint32Array)o=t.UNSIGNED_INT;else if(i instanceof Int32Array)o=t.INT;else if(i instanceof Int8Array)o=t.BYTE;else if(i instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,size:r}}(n,i));else if(s.version<n.version){if(s.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,i){const s=n.array,r=n.updateRanges;if(t.bindBuffer(i,e),0===r.length)t.bufferSubData(i,0,s);else{r.sort((t,e)=>t.start-e.start);let e=0;for(let t=1;t<r.length;t++){const n=r[e],i=r[t];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):(++e,r[e]=i)}r.length=e+1;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.bufferSubData(i,n.start*s.BYTES_PER_ELEMENT,s,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(s.buffer,n,i),s.version=n.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:f}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=f);const id={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\tfloat depth = unpackRGBAToDepth( texture2D( depths, uv ) );\n\t\t#ifdef USE_REVERSEDEPTHBUF\n\t\t\treturn step( depth, compare );\n\t\t#else\n\t\t\treturn step( compare, depth );\n\t\t#endif\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\t#ifdef USE_REVERSEDEPTHBUF\n\t\t\tfloat hard_shadow = step( distribution.x, compare );\n\t\t#else\n\t\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\t#endif\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_REVERSEDEPTHBUF\n\t\tfloat fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\n\t#else\n\t\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\n\t#endif\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},sd={common:{diffuse:{value:new dr(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new yi},alphaMap:{value:null},alphaMapTransform:{value:new yi},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new yi}},envmap:{envMap:{value:null},envMapRotation:{value:new yi},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new yi}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new yi}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new yi},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new yi},normalScale:{value:new di(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new yi},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new yi}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new yi}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new yi}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new dr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new dr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new yi},alphaTest:{value:0},uvTransform:{value:new yi}},sprite:{diffuse:{value:new dr(16777215)},opacity:{value:1},center:{value:new di(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new yi},alphaMap:{value:null},alphaMapTransform:{value:new yi},alphaTest:{value:0}}},rd={basic:{uniforms:ra([sd.common,sd.specularmap,sd.envmap,sd.aomap,sd.lightmap,sd.fog]),vertexShader:id.meshbasic_vert,fragmentShader:id.meshbasic_frag},lambert:{uniforms:ra([sd.common,sd.specularmap,sd.envmap,sd.aomap,sd.lightmap,sd.emissivemap,sd.bumpmap,sd.normalmap,sd.displacementmap,sd.fog,sd.lights,{emissive:{value:new dr(0)}}]),vertexShader:id.meshlambert_vert,fragmentShader:id.meshlambert_frag},phong:{uniforms:ra([sd.common,sd.specularmap,sd.envmap,sd.aomap,sd.lightmap,sd.emissivemap,sd.bumpmap,sd.normalmap,sd.displacementmap,sd.fog,sd.lights,{emissive:{value:new dr(0)},specular:{value:new dr(1118481)},shininess:{value:30}}]),vertexShader:id.meshphong_vert,fragmentShader:id.meshphong_frag},standard:{uniforms:ra([sd.common,sd.envmap,sd.aomap,sd.lightmap,sd.emissivemap,sd.bumpmap,sd.normalmap,sd.displacementmap,sd.roughnessmap,sd.metalnessmap,sd.fog,sd.lights,{emissive:{value:new dr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:id.meshphysical_vert,fragmentShader:id.meshphysical_frag},toon:{uniforms:ra([sd.common,sd.aomap,sd.lightmap,sd.emissivemap,sd.bumpmap,sd.normalmap,sd.displacementmap,sd.gradientmap,sd.fog,sd.lights,{emissive:{value:new dr(0)}}]),vertexShader:id.meshtoon_vert,fragmentShader:id.meshtoon_frag},matcap:{uniforms:ra([sd.common,sd.bumpmap,sd.normalmap,sd.displacementmap,sd.fog,{matcap:{value:null}}]),vertexShader:id.meshmatcap_vert,fragmentShader:id.meshmatcap_frag},points:{uniforms:ra([sd.points,sd.fog]),vertexShader:id.points_vert,fragmentShader:id.points_frag},dashed:{uniforms:ra([sd.common,sd.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:id.linedashed_vert,fragmentShader:id.linedashed_frag},depth:{uniforms:ra([sd.common,sd.displacementmap]),vertexShader:id.depth_vert,fragmentShader:id.depth_frag},normal:{uniforms:ra([sd.common,sd.bumpmap,sd.normalmap,sd.displacementmap,{opacity:{value:1}}]),vertexShader:id.meshnormal_vert,fragmentShader:id.meshnormal_frag},sprite:{uniforms:ra([sd.sprite,sd.fog]),vertexShader:id.sprite_vert,fragmentShader:id.sprite_frag},background:{uniforms:{uvTransform:{value:new yi},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:id.background_vert,fragmentShader:id.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new yi}},vertexShader:id.backgroundCube_vert,fragmentShader:id.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:id.cube_vert,fragmentShader:id.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:id.equirect_vert,fragmentShader:id.equirect_frag},distanceRGBA:{uniforms:ra([sd.common,sd.displacementmap,{referencePosition:{value:new gi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:id.distanceRGBA_vert,fragmentShader:id.distanceRGBA_frag},shadow:{uniforms:ra([sd.lights,sd.fog,{color:{value:new dr(0)},opacity:{value:1}}]),vertexShader:id.shadow_vert,fragmentShader:id.shadow_frag}};rd.physical={uniforms:ra([rd.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new yi},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new yi},clearcoatNormalScale:{value:new di(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new yi},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new yi},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new yi},sheen:{value:0},sheenColor:{value:new dr(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new yi},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new yi},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new yi},transmissionSamplerSize:{value:new di},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new yi},attenuationDistance:{value:0},attenuationColor:{value:new dr(0)},specularColor:{value:new dr(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new yi},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new yi},anisotropyVector:{value:new di},anisotropyMap:{value:null},anisotropyMapTransform:{value:new yi}}]),vertexShader:id.meshphysical_vert,fragmentShader:id.meshphysical_frag};const ad={r:0,b:0,g:0},od=new Qs,ld=new Es;function cd(t,e,n,i,s,r,a){const o=new dr(0);let l,c,A=!0===r?0:1,h=null,u=0,d=null;function p(t){let i=!0===t.isScene?t.background:null;return i&&i.isTexture&&(i=(t.backgroundBlurriness>0?n:e).get(i)),i}function g(e,n){e.getRGB(ad,aa(t)),i.buffers.color.setClear(ad.r,ad.g,ad.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),A=e,g(o,A)},getClearAlpha:function(){return A},setClearAlpha:function(t){A=t,g(o,A)},render:function(e){let n=!1;const s=p(e);null===s?g(o,A):s&&s.isColor&&(g(s,1),n=!0);const r=t.xr.getEnvironmentBlendMode();"additive"===r?i.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===r&&i.buffers.color.setClear(0,0,0,0,a),(t.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const i=p(n);i&&(i.isCubeTexture||i.mapping===bt)?(void 0===c&&(c=new ea(new ia(1,1,1),new la({name:"BackgroundCubeMaterial",uniforms:sa(rd.backgroundCube.uniforms),vertexShader:rd.backgroundCube.vertexShader,fragmentShader:rd.backgroundCube.fragmentShader,side:b,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),od.copy(n.backgroundRotation),od.x*=-1,od.y*=-1,od.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(od.y*=-1,od.z*=-1),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(ld.makeRotationFromEuler(od)),c.material.toneMapped=Ti.getTransfer(i.colorSpace)!==pn,h===i&&u===i.version&&d===t.toneMapping||(c.material.needsUpdate=!0,h=i,u=i.version,d=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new ea(new Lc(2,2),new la({name:"BackgroundMaterial",uniforms:sa(rd.background.uniforms),vertexShader:rd.background.vertexShader,fragmentShader:rd.background.fragmentShader,side:S,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=Ti.getTransfer(i.colorSpace)!==pn,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),h===i&&u===i.version&&d===t.toneMapping||(l.material.needsUpdate=!0,h=i,u=i.version,d=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==c&&(c.geometry.dispose(),c.material.dispose(),c=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function Ad(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},s=c(null);let r=s,a=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function c(t){const e=[],i=[],s=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,s[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:s,object:t,attributes:{},index:null}}function A(){const t=r.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function h(t){u(t,0)}function u(e,n){const i=r.newAttributes,s=r.enabledAttributes,a=r.attributeDivisors;i[e]=1,0===s[e]&&(t.enableVertexAttribArray(e),s[e]=1),a[e]!==n&&(t.vertexAttribDivisor(e,n),a[e]=n)}function d(){const e=r.newAttributes,n=r.enabledAttributes;for(let i=0,s=n.length;i<s;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function p(e,n,i,s,r,a,o){!0===o?t.vertexAttribIPointer(e,n,i,r,a):t.vertexAttribPointer(e,n,i,s,r,a)}function g(){f(),a=!0,r!==s&&(r=s,o(r.object))}function f(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(n,s,l,g,f){let m=!1;const y=function(e,n,s){const r=!0===s.wireframe;let a=i[e.id];void 0===a&&(a={},i[e.id]=a);let o=a[n.id];void 0===o&&(o={},a[n.id]=o);let l=o[r];return void 0===l&&(l=c(t.createVertexArray()),o[r]=l),l}(g,l,s);r!==y&&(r=y,o(r.object)),m=function(t,e,n,i){const s=r.attributes,a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){const n=s[e];let i=a[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;o++}return r.attributesNum!==o||r.index!==i}(n,g,l,f),m&&function(t,e,n,i){const s={},a=e.attributes;let o=0;const l=n.getAttributes();for(const e in l)if(l[e].location>=0){let n=a[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),s[e]=i,o++}r.attributes=s,r.attributesNum=o,r.index=i}(n,g,l,f),null!==f&&e.update(f,t.ELEMENT_ARRAY_BUFFER),(m||a)&&(a=!1,function(n,i,s,r){A();const a=r.attributes,o=s.getAttributes(),l=i.defaultAttributeValues;for(const i in o){const s=o[i];if(s.location>=0){let o=a[i];if(void 0===o&&("instanceMatrix"===i&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){const i=o.normalized,a=o.itemSize,l=e.get(o);if(void 0===l)continue;const c=l.buffer,A=l.type,d=l.bytesPerElement,g=A===t.INT||A===t.UNSIGNED_INT||o.gpuType===qt;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,f=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<s.locationSize;t++)u(s.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<s.locationSize;t++)h(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<s.locationSize;t++)p(s.location+t,a/s.locationSize,A,i,l*d,(f+a/s.locationSize*t)*d,g)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<s.locationSize;t++)u(s.location+t,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<s.locationSize;t++)h(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<s.locationSize;t++)p(s.location+t,a/s.locationSize,A,i,a*d,a/s.locationSize*t*d,g)}}else if(void 0!==l){const e=l[i];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(s.location,e);break;case 3:t.vertexAttrib3fv(s.location,e);break;case 4:t.vertexAttrib4fv(s.location,e);break;default:t.vertexAttrib1fv(s.location,e)}}}}d()}(n,s,l,g),null!==f&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(f).buffer))},reset:g,resetDefaultState:f,dispose:function(){g();for(const t in i){const e=i[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t]}},releaseStatesOfGeometry:function(t){if(void 0===i[t.id])return;const e=i[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t.id]},releaseStatesOfProgram:function(t){for(const e in i){const n=i[e];if(void 0===n[t.id])continue;const s=n[t.id];for(const t in s)l(s[t].object),delete s[t];delete n[t.id]}},initAttributes:A,enableAttribute:h,disableUnusedAttributes:d}}function hd(t,e,n){let i;function s(e,s,r){0!==r&&(t.drawArraysInstanced(i,e,s,r),n.update(s,i,r))}this.setMode=function(t){i=t},this.render=function(e,s){t.drawArrays(i,e,s),n.update(s,i,1)},this.renderInstances=s,this.renderMultiDraw=function(t,s,r){if(0===r)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,t,0,s,0,r);let a=0;for(let t=0;t<r;t++)a+=s[t];n.update(a,i,1)},this.renderMultiDrawInstances=function(t,r,a,o){if(0===a)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)s(t[e],r[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(i,t,0,r,0,o,0,a);let e=0;for(let t=0;t<a;t++)e+=r[t]*o[t];n.update(e,i,1)}}}function ud(t,e,n,i){let s;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==n.precision?n.precision:"highp";const o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===n.logarithmicDepthBuffer,c=!0===n.reversedDepthBuffer&&e.has("EXT_clip_control"),A=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==s)return s;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");s=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s},getMaxPrecision:r,textureFormatReadable:function(e){return e===ne||i.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const s=n===jt&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==Gt&&i.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==Jt&&!s)},precision:a,logarithmicDepthBuffer:l,reversedDepthBuffer:c,maxTextures:A,maxVertexTextures:h,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function dd(t){const e=this;let n=null,i=0,s=!1,r=!1;const a=new Co,o=new yi,l={value:null,needsUpdate:!1};function c(t,n,i,s){const r=null!==t?t.length:0;let c=null;if(0!==r){if(c=l.value,!0!==s||null===c){const e=i+4*r,s=n.matrixWorldInverse;o.getNormalMatrix(s),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==r;++e,n+=4)a.copy(t[e]).applyMatrix4(s,o),a.normal.toArray(c,n),c[n+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||s;return s=e,i=t.length,n},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(a,o,A){const h=a.clippingPlanes,u=a.clipIntersection,d=a.clipShadows,p=t.get(a);if(!s||null===h||0===h.length||r&&!d)r?c(null):(l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0);else{const t=r?0:i,e=4*t;let s=p.clippingState||null;l.value=s,s=c(h,o,e,A);for(let t=0;t!==e;++t)s[t]=n[t];p.clippingState=s,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function pd(t){let e=new WeakMap;function n(t,e){return e===Bt?t.mapping=wt:e===St&&(t.mapping=_t),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const s=e.get(n);void 0!==s&&(e.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const r=s.mapping;if(r===Bt||r===St){if(e.has(s))return n(e.get(s).texture,s.mapping);{const r=s.image;if(r&&r.height>0){const a=new ma(r.height);return a.fromEquirectangularTexture(t,s),e.set(s,a),s.addEventListener("dispose",i),n(a.texture,s.mapping)}return null}}}return s},dispose:function(){e=new WeakMap}}}const gd=[.125,.215,.35,.446,.526,.582],fd=new ZA,md=new dr;let yd=null,Id=0,Cd=0,Ed=!1;const vd=(1+Math.sqrt(5))/2,xd=1/vd,wd=[new gi(-vd,xd,0),new gi(vd,xd,0),new gi(-xd,0,vd),new gi(xd,0,vd),new gi(0,vd,-xd),new gi(0,vd,xd),new gi(-1,1,-1),new gi(1,1,-1),new gi(-1,1,1),new gi(1,1,1)],_d=new gi;class Bd{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,s={}){const{size:r=256,position:a=_d}=s;yd=this._renderer.getRenderTarget(),Id=this._renderer.getActiveCubeFace(),Cd=this._renderer.getActiveMipmapLevel(),Ed=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(r);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,n,i,o,a),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Td(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Md(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(yd,Id,Cd),this._renderer.xr.enabled=Ed,t.scissorTest=!1,bd(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===wt||t.mapping===_t?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),yd=this._renderer.getRenderTarget(),Id=this._renderer.getActiveCubeFace(),Cd=this._renderer.getActiveMipmapLevel(),Ed=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Ft,minFilter:Ft,generateMipmaps:!1,type:jt,format:ne,colorSpace:un,depthBuffer:!1},i=Sd(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Sd(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let s=t;const r=t-4+1+gd.length;for(let a=0;a<r;a++){const r=Math.pow(2,s);n.push(r);let o=1/r;a>t-4?o=gd[a-t+4-1]:0===a&&(o=0),i.push(o);const l=1/(r-2),c=-l,A=1+l,h=[c,c,A,c,A,A,c,c,A,A,c,A],u=6,d=6,p=3,g=2,f=1,m=new Float32Array(p*d*u),y=new Float32Array(g*d*u),I=new Float32Array(f*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];m.set(i,p*d*t),y.set(h,g*d*t);const s=[t,t,t,t,t,t];I.set(s,f*d*t)}const C=new Hr;C.setAttribute("position",new Br(m,p)),C.setAttribute("uv",new Br(y,g)),C.setAttribute("faceIndex",new Br(I,f)),e.push(C),s>4&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(20),s=new gi(0,1,0);return new la({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:T,depthTest:!1,depthWrite:!1})}(i,t,e)}return i}_compileMaterial(t){const e=new ea(this._lodPlanes[0],t);this._renderer.compile(e,fd)}_sceneToCubeUV(t,e,n,i,s){const r=new da(90,1,e,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,A=l.toneMapping;l.getClearColor(md),l.toneMapping=dt,l.autoClear=!1,l.state.buffers.depth.getReversed()&&(l.setRenderTarget(i),l.clearDepth(),l.setRenderTarget(null));const h=new mr({name:"PMREM.Background",side:b,depthWrite:!1,depthTest:!1}),u=new ea(new ia,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(md),d=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(r.up.set(0,a[e],0),r.position.set(s.x,s.y,s.z),r.lookAt(s.x+o[e],s.y,s.z)):1===n?(r.up.set(0,0,a[e]),r.position.set(s.x,s.y,s.z),r.lookAt(s.x,s.y+o[e],s.z)):(r.up.set(0,a[e],0),r.position.set(s.x,s.y,s.z),r.lookAt(s.x,s.y,s.z+o[e]));const c=this._cubeSize;bd(i,n*c,e>2?c:0,c,c),l.setRenderTarget(i),d&&l.render(u,r),l.render(t,r)}u.geometry.dispose(),u.material.dispose(),l.toneMapping=A,l.autoClear=c,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===wt||t.mapping===_t;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Td()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Md());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new ea(this._lodPlanes[0],s);s.uniforms.envMap.value=t;const a=this._cubeSize;bd(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(r,fd)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),s=wd[(i-e-1)%wd.length];this._blur(t,e-1,e,n,s)}e.autoClear=n}_blur(t,e,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,n,i,"latitudinal",s),this._halfBlur(r,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,r,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new ea(this._lodPlanes[i],l),A=l.uniforms,h=this._sizeLods[n]-1,u=isFinite(s)?Math.PI/(2*h):2*Math.PI/39,d=s/u,p=isFinite(s)?1+Math.floor(3*d):20;p>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const g=[];let f=0;for(let t=0;t<20;++t){const e=t/d,n=Math.exp(-e*e/2);g.push(n),0===t?f+=n:t<p&&(f+=2*n)}for(let t=0;t<g.length;t++)g[t]=g[t]/f;A.envMap.value=t.texture,A.samples.value=p,A.weights.value=g,A.latitudinal.value="latitudinal"===r,a&&(A.poleAxis.value=a);const{_lodMax:m}=this;A.dTheta.value=u,A.mipInt.value=m-n;const y=this._sizeLods[i];bd(e,3*y*(i>m-4?i-m+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(e),o.render(c,fd)}}function Sd(t,e,n){const i=new Hi(t,e,n);return i.texture.mapping=bt,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function bd(t,e,n,i,s){t.viewport.set(e,n,i,s),t.scissor.set(e,n,i,s)}function Md(){return new la({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:T,depthTest:!1,depthWrite:!1})}function Td(){return new la({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:T,depthTest:!1,depthWrite:!1})}function Qd(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const s=e.get(n);void 0!==s&&(e.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const r=s.mapping,a=r===Bt||r===St,o=r===wt||r===_t;if(a||o){let r=e.get(s);const l=void 0!==r?r.texture.pmremVersion:0;if(s.isRenderTargetTexture&&s.pmremVersion!==l)return null===n&&(n=new Bd(t)),r=a?n.fromEquirectangular(s,r):n.fromCubemap(s,r),r.texture.pmremVersion=s.pmremVersion,e.set(s,r),r.texture;if(void 0!==r)return r.texture;{const l=s.image;return a&&l&&l.height>0||o&&l&&function(t){let e=0;for(let n=0;n<6;n++)void 0!==t[n]&&e++;return 6===e}(l)?(null===n&&(n=new Bd(t)),r=a?n.fromEquirectangular(s):n.fromCubemap(s),r.texture.pmremVersion=s.pmremVersion,e.set(s,r),s.addEventListener("dispose",i),r.texture):null}}}return s},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Dd(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&Bi("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Rd(t,e,n,i){const s={},r=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",a),delete s[o.id];const l=r.get(o);l&&(e.remove(l),r.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,s=t.attributes.position;let a=0;if(null!==i){const t=i.array;a=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],s=t[e+1],r=t[e+2];n.push(i,s,s,r,r,i)}}else{if(void 0===s)return;{const t=s.array;a=s.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,s=e+2;n.push(t,i,i,s,s,t)}}}const o=new(Ci(n)?Rr:Qr)(n,1);o.version=a;const l=r.get(t);l&&e.remove(l),r.set(t,o)}return{get:function(t,e){return!0===s[e.id]||(e.addEventListener("dispose",a),s[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER)},getWireframeAttribute:function(t){const e=r.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return r.get(t)}}}function Ud(t,e,n){let i,s,r;function a(e,a,o){0!==o&&(t.drawElementsInstanced(i,a,s,e*r,o),n.update(a,i,o))}this.setMode=function(t){i=t},this.setIndex=function(t){s=t.type,r=t.bytesPerElement},this.render=function(e,a){t.drawElements(i,a,s,e*r),n.update(a,i,1)},this.renderInstances=a,this.renderMultiDraw=function(t,r,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,r,0,s,t,0,a);let o=0;for(let t=0;t<a;t++)o+=r[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(t,o,l,c){if(0===l)return;const A=e.get("WEBGL_multi_draw");if(null===A)for(let e=0;e<t.length;e++)a(t[e]/r,o[e],c[e]);else{A.multiDrawElementsInstancedWEBGL(i,o,0,s,t,0,c,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t]*c[t];n.update(e,i,1)}}}function Pd(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,s){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=s*(n/3);break;case t.LINES:e.lines+=s*(n/2);break;case t.LINE_STRIP:e.lines+=s*(n-1);break;case t.LINE_LOOP:e.lines+=s*n;break;case t.POINTS:e.points+=s*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Ld(t,e,n){const i=new WeakMap,s=new zi;return{update:function(r,a,o){const l=r.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,A=void 0!==c?c.length:0;let h=i.get(a);if(void 0===h||h.count!==A){void 0!==h&&h.texture.dispose();const u=void 0!==a.morphAttributes.position,d=void 0!==a.morphAttributes.normal,p=void 0!==a.morphAttributes.color,g=a.morphAttributes.position||[],f=a.morphAttributes.normal||[],m=a.morphAttributes.color||[];let y=0;!0===u&&(y=1),!0===d&&(y=2),!0===p&&(y=3);let I=a.attributes.position.count*y,C=1;I>e.maxTextureSize&&(C=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const E=new Float32Array(I*C*4*A),v=new Vi(E,I,C,A);v.type=Jt,v.needsUpdate=!0;const x=4*y;for(let _=0;_<A;_++){const B=g[_],S=f[_],b=m[_],M=I*C*4*_;for(let T=0;T<B.count;T++){const Q=T*x;!0===u&&(s.fromBufferAttribute(B,T),E[M+Q+0]=s.x,E[M+Q+1]=s.y,E[M+Q+2]=s.z,E[M+Q+3]=0),!0===d&&(s.fromBufferAttribute(S,T),E[M+Q+4]=s.x,E[M+Q+5]=s.y,E[M+Q+6]=s.z,E[M+Q+7]=0),!0===p&&(s.fromBufferAttribute(b,T),E[M+Q+8]=s.x,E[M+Q+9]=s.y,E[M+Q+10]=s.z,E[M+Q+11]=4===b.itemSize?s.w:1)}}function w(){v.dispose(),i.delete(a),a.removeEventListener("dispose",w)}h={count:A,texture:v,size:new di(I,C)},i.set(a,h),a.addEventListener("dispose",w)}if(!0===r.isInstancedMesh&&null!==r.morphTexture)o.getUniforms().setValue(t,"morphTexture",r.morphTexture,n);else{let D=0;for(let U=0;U<l.length;U++)D+=l[U];const R=a.morphTargetsRelative?1:1-D;o.getUniforms().setValue(t,"morphTargetBaseInfluence",R),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",h.texture,n),o.getUniforms().setValue(t,"morphTargetsTextureSize",h.size)}}}function Fd(t,e,n,i){let s=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=e.get(a,l);if(s.get(c)!==o&&(e.update(c),s.set(c,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",r)&&a.addEventListener("dispose",r),s.get(a)!==o&&(n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER),s.set(a,o))),a.isSkinnedMesh){const t=a.skeleton;s.get(t)!==o&&(t.update(),s.set(t,o))}return c},dispose:function(){s=new WeakMap}}}const Nd=new Oi,kd=new El(1,1),Od=new Vi,zd=new qi,Gd=new fa,Hd=[],Vd=[],Yd=new Float32Array(16),qd=new Float32Array(9),Wd=new Float32Array(4);function Jd(t,e,n){const i=t[0];if(i<=0||i>0)return t;const s=e*n;let r=Hd[s];if(void 0===r&&(r=new Float32Array(s),Hd[s]=r),0!==e){i.toArray(r,0);for(let i=1,s=0;i!==e;++i)s+=n,t[i].toArray(r,s)}return r}function jd(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Xd(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Kd(t,e){let n=Vd[e];void 0===n&&(n=new Int32Array(e),Vd[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Zd(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function $d(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(jd(n,e))return;t.uniform2fv(this.addr,e),Xd(n,e)}}function tp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(jd(n,e))return;t.uniform3fv(this.addr,e),Xd(n,e)}}function ep(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(jd(n,e))return;t.uniform4fv(this.addr,e),Xd(n,e)}}function np(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(jd(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Xd(n,e)}else{if(jd(n,i))return;Wd.set(i),t.uniformMatrix2fv(this.addr,!1,Wd),Xd(n,i)}}function ip(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(jd(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Xd(n,e)}else{if(jd(n,i))return;qd.set(i),t.uniformMatrix3fv(this.addr,!1,qd),Xd(n,i)}}function sp(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(jd(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Xd(n,e)}else{if(jd(n,i))return;Yd.set(i),t.uniformMatrix4fv(this.addr,!1,Yd),Xd(n,i)}}function rp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function ap(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(jd(n,e))return;t.uniform2iv(this.addr,e),Xd(n,e)}}function op(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(jd(n,e))return;t.uniform3iv(this.addr,e),Xd(n,e)}}function lp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(jd(n,e))return;t.uniform4iv(this.addr,e),Xd(n,e)}}function cp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Ap(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(jd(n,e))return;t.uniform2uiv(this.addr,e),Xd(n,e)}}function hp(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(jd(n,e))return;t.uniform3uiv(this.addr,e),Xd(n,e)}}function up(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(jd(n,e))return;t.uniform4uiv(this.addr,e),Xd(n,e)}}function dp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();let r;i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),this.type===t.SAMPLER_2D_SHADOW?(kd.compareFunction=Un,r=kd):r=Nd,n.setTexture2D(e||r,s)}function pp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||zd,s)}function gp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||Gd,s)}function fp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||Od,s)}function mp(t,e){t.uniform1fv(this.addr,e)}function yp(t,e){const n=Jd(e,this.size,2);t.uniform2fv(this.addr,n)}function Ip(t,e){const n=Jd(e,this.size,3);t.uniform3fv(this.addr,n)}function Cp(t,e){const n=Jd(e,this.size,4);t.uniform4fv(this.addr,n)}function Ep(t,e){const n=Jd(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function vp(t,e){const n=Jd(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function xp(t,e){const n=Jd(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function wp(t,e){t.uniform1iv(this.addr,e)}function _p(t,e){t.uniform2iv(this.addr,e)}function Bp(t,e){t.uniform3iv(this.addr,e)}function Sp(t,e){t.uniform4iv(this.addr,e)}function bp(t,e){t.uniform1uiv(this.addr,e)}function Mp(t,e){t.uniform2uiv(this.addr,e)}function Tp(t,e){t.uniform3uiv(this.addr,e)}function Qp(t,e){t.uniform4uiv(this.addr,e)}function Dp(t,e,n){const i=this.cache,s=e.length,r=Kd(n,s);jd(i,r)||(t.uniform1iv(this.addr,r),Xd(i,r));for(let t=0;t!==s;++t)n.setTexture2D(e[t]||Nd,r[t])}function Rp(t,e,n){const i=this.cache,s=e.length,r=Kd(n,s);jd(i,r)||(t.uniform1iv(this.addr,r),Xd(i,r));for(let t=0;t!==s;++t)n.setTexture3D(e[t]||zd,r[t])}function Up(t,e,n){const i=this.cache,s=e.length,r=Kd(n,s);jd(i,r)||(t.uniform1iv(this.addr,r),Xd(i,r));for(let t=0;t!==s;++t)n.setTextureCube(e[t]||Gd,r[t])}function Pp(t,e,n){const i=this.cache,s=e.length,r=Kd(n,s);jd(i,r)||(t.uniform1iv(this.addr,r),Xd(i,r));for(let t=0;t!==s;++t)n.setTexture2DArray(e[t]||Od,r[t])}class Lp{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return Zd;case 35664:return $d;case 35665:return tp;case 35666:return ep;case 35674:return np;case 35675:return ip;case 35676:return sp;case 5124:case 35670:return rp;case 35667:case 35671:return ap;case 35668:case 35672:return op;case 35669:case 35673:return lp;case 5125:return cp;case 36294:return Ap;case 36295:return hp;case 36296:return up;case 35678:case 36198:case 36298:case 36306:case 35682:return dp;case 35679:case 36299:case 36307:return pp;case 35680:case 36300:case 36308:case 36293:return gp;case 36289:case 36303:case 36311:case 36292:return fp}}(e.type)}}class Fp{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return mp;case 35664:return yp;case 35665:return Ip;case 35666:return Cp;case 35674:return Ep;case 35675:return vp;case 35676:return xp;case 5124:case 35670:return wp;case 35667:case 35671:return _p;case 35668:case 35672:return Bp;case 35669:case 35673:return Sp;case 5125:return bp;case 36294:return Mp;case 36295:return Tp;case 36296:return Qp;case 35678:case 36198:case 36298:case 36306:case 35682:return Dp;case 35679:case 36299:case 36307:return Rp;case 35680:case 36300:case 36308:case 36293:return Up;case 36289:case 36303:case 36311:case 36292:return Pp}}(e.type)}}class Np{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const r=i[s];r.setValue(t,e[r.id],n)}}}const kp=/(\w+)(\])?(\[|\.)?/g;function Op(t,e){t.seq.push(e),t.map[e.id]=e}function zp(t,e,n){const i=t.name,s=i.length;for(kp.lastIndex=0;;){const r=kp.exec(i),a=kp.lastIndex;let o=r[1];const l="]"===r[2],c=r[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===s){Op(n,void 0===c?new Lp(o,t,e):new Fp(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new Np(o),Op(n,t)),n=t}}}class Gp{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);zp(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const s=this.map[e];void 0!==s&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,r=e.length;s!==r;++s){const r=e[s],a=n[r.id];!1!==a.needsUpdate&&r.setValue(t,a.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const s=t[i];s.id in e&&n.push(s)}return n}}function Hp(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let Vp=0;const Yp=new yi;function qp(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),s=(t.getShaderInfoLog(e)||"").trim();if(i&&""===s)return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const i=parseInt(r[1]);return n.toUpperCase()+"\n\n"+s+"\n\n"+function(t,e){const n=t.split("\n"),i=[],s=Math.max(e-6,0),r=Math.min(e+6,n.length);for(let t=s;t<r;t++){const s=t+1;i.push(`${s===e?">":" "} ${s}: ${n[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return s}function Wp(t,e){const n=function(t){Ti._getMatrix(Yp,Ti.workingColorSpace,t);const e=`mat3( ${Yp.elements.map(t=>t.toFixed(4))} )`;switch(Ti.getTransfer(t)){case dn:return[e,"LinearTransferOETF"];case pn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}(e);return[`vec4 ${t}( vec4 value ) {`,`\treturn ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join("\n")}function Jp(t,e){let n;switch(e){case pt:n="Linear";break;case gt:n="Reinhard";break;case ft:n="Cineon";break;case mt:n="ACESFilmic";break;case It:n="AgX";break;case Ct:n="Neutral";break;case yt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const jp=new gi;function Xp(t){return""!==t}function Kp(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Zp(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const $p=/^[ \t]*#include +<([\w\d./]+)>/gm;function tg(t){return t.replace($p,ng)}const eg=new Map;function ng(t,e){let n=id[e];if(void 0===n){const t=eg.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=id[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return tg(n)}const ig=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sg(t){return t.replace(ig,rg)}function rg(t,e,n,i){let s="";for(let t=parseInt(e);t<parseInt(n);t++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return s}function ag(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function og(t,e,n,i){const s=t.getContext(),r=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===w?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===_?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===B&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case wt:case _t:e="ENVMAP_TYPE_CUBE";break;case bt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),A=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===_t&&(e="ENVMAP_MODE_REFRACTION"),e}(n),h=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case At:e="ENVMAP_BLENDING_MULTIPLY";break;case ht:e="ENVMAP_BLENDING_MIX";break;case ut:e="ENVMAP_BLENDING_ADD"}return e}(n),u=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),d=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Xp).join("\n")}(n),p=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(r),g=s.createProgram();let f,m,y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(f=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Xp).join("\n"),f.length>0&&(f+="\n"),m=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Xp).join("\n"),m.length>0&&(m+="\n")):(f=[ag(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+A:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Xp).join("\n"),m=[ag(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+A:"",n.envMap?"#define "+h:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==dt?"#define TONE_MAPPING":"",n.toneMapping!==dt?id.tonemapping_pars_fragment:"",n.toneMapping!==dt?Jp("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",id.colorspace_pars_fragment,Wp("linearToOutputTexel",n.outputColorSpace),(Ti.getLuminanceCoefficients(jp),["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${jp.x.toFixed(4)}, ${jp.y.toFixed(4)}, ${jp.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Xp).join("\n")),a=tg(a),a=Kp(a,n),a=Zp(a,n),o=tg(o),o=Kp(o,n),o=Zp(o,n),a=sg(a),o=sg(o),!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",f=[d,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+f,m=["#define varying in",n.glslVersion===jn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===jn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+m);const I=y+f+a,C=y+m+o,E=Hp(s,s.VERTEX_SHADER,I),v=Hp(s,s.FRAGMENT_SHADER,C);function x(e){if(t.debug.checkShaderErrors){const n=s.getProgramInfoLog(g)||"",i=s.getShaderInfoLog(E)||"",r=s.getShaderInfoLog(v)||"",a=n.trim(),o=i.trim(),l=r.trim();let c=!0,A=!0;if(!1===s.getProgramParameter(g,s.LINK_STATUS))if(c=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(s,g,E,v);else{const t=qp(s,E,"vertex"),n=qp(s,v,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(g,s.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+a+"\n"+t+"\n"+n)}else""!==a?console.warn("THREE.WebGLProgram: Program Info Log:",a):""!==o&&""!==l||(A=!1);A&&(e.diagnostics={runnable:c,programLog:a,vertexShader:{log:o,prefix:f},fragmentShader:{log:l,prefix:m}})}s.deleteShader(E),s.deleteShader(v),S=new Gp(s,g),b=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const i=t.getActiveAttrib(e,s),r=i.name;let a=1;i.type===t.FLOAT_MAT2&&(a=2),i.type===t.FLOAT_MAT3&&(a=3),i.type===t.FLOAT_MAT4&&(a=4),n[r]={type:i.type,location:t.getAttribLocation(e,r),locationSize:a}}return n}(s,g)}let S,b;s.attachShader(g,E),s.attachShader(g,v),void 0!==n.index0AttributeName?s.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(g,0,"position"),s.linkProgram(g),this.getUniforms=function(){return void 0===S&&x(this),S},this.getAttributes=function(){return void 0===b&&x(this),b};let M=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===M&&(M=s.getProgramParameter(g,37297)),M},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=Vp++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=E,this.fragmentShader=v,this}let lg=0;class cg{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(t);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Ag(t),e.set(t,n)),n}}class Ag{constructor(t){this.id=lg++,this.code=t,this.usedTimes=0}}function hg(t,e,n,i,s,r,a){const o=new Ds,l=new cg,c=new Set,A=[],h=s.logarithmicDepthBuffer,u=s.vertexTextures;let d=s.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(r,o,A,f,m){const y=f.fog,I=m.geometry,C=r.isMeshStandardMaterial?f.environment:null,E=(r.isMeshStandardMaterial?n:e).get(r.envMap||C),v=E&&E.mapping===bt?E.image.height:null,x=p[r.type];null!==r.precision&&(d=s.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead."));const w=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,_=void 0!==w?w.length:0;let B,S,T,D,R=0;if(void 0!==I.morphAttributes.position&&(R=1),void 0!==I.morphAttributes.normal&&(R=2),void 0!==I.morphAttributes.color&&(R=3),x){const t=rd[x];B=t.vertexShader,S=t.fragmentShader}else B=r.vertexShader,S=r.fragmentShader,l.update(r),T=l.getVertexShaderID(r),D=l.getFragmentShaderID(r);const U=t.getRenderTarget(),P=t.state.buffers.depth.getReversed(),L=!0===m.isInstancedMesh,F=!0===m.isBatchedMesh,N=!!r.map,k=!!r.matcap,O=!!E,z=!!r.aoMap,G=!!r.lightMap,H=!!r.bumpMap,V=!!r.normalMap,Y=!!r.displacementMap,q=!!r.emissiveMap,W=!!r.metalnessMap,J=!!r.roughnessMap,j=r.anisotropy>0,X=r.clearcoat>0,K=r.dispersion>0,Z=r.iridescence>0,$=r.sheen>0,tt=r.transmission>0,et=j&&!!r.anisotropyMap,nt=X&&!!r.clearcoatMap,it=X&&!!r.clearcoatNormalMap,st=X&&!!r.clearcoatRoughnessMap,rt=Z&&!!r.iridescenceMap,at=Z&&!!r.iridescenceThicknessMap,ot=$&&!!r.sheenColorMap,lt=$&&!!r.sheenRoughnessMap,ct=!!r.specularMap,At=!!r.specularColorMap,ht=!!r.specularIntensityMap,ut=tt&&!!r.transmissionMap,pt=tt&&!!r.thicknessMap,gt=!!r.gradientMap,ft=!!r.alphaMap,mt=r.alphaTest>0,yt=!!r.alphaHash,It=!!r.extensions;let Ct=dt;r.toneMapped&&(null!==U&&!0!==U.isXRRenderTarget||(Ct=t.toneMapping));const Et={shaderID:x,shaderType:r.type,shaderName:r.name,vertexShader:B,fragmentShader:S,defines:r.defines,customVertexShaderID:T,customFragmentShaderID:D,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,batching:F,batchingColor:F&&null!==m._colorsTexture,instancing:L,instancingColor:L&&null!==m.instanceColor,instancingMorph:L&&null!==m.morphTexture,supportsVertexTextures:u,outputColorSpace:null===U?t.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:un,alphaToCoverage:!!r.alphaToCoverage,map:N,matcap:k,envMap:O,envMapMode:O&&E.mapping,envMapCubeUVHeight:v,aoMap:z,lightMap:G,bumpMap:H,normalMap:V,displacementMap:u&&Y,emissiveMap:q,normalMapObjectSpace:V&&r.normalMapType===cn,normalMapTangentSpace:V&&r.normalMapType===ln,metalnessMap:W,roughnessMap:J,anisotropy:j,anisotropyMap:et,clearcoat:X,clearcoatMap:nt,clearcoatNormalMap:it,clearcoatRoughnessMap:st,dispersion:K,iridescence:Z,iridescenceMap:rt,iridescenceThicknessMap:at,sheen:$,sheenColorMap:ot,sheenRoughnessMap:lt,specularMap:ct,specularColorMap:At,specularIntensityMap:ht,transmission:tt,transmissionMap:ut,thicknessMap:pt,gradientMap:gt,opaque:!1===r.transparent&&r.blending===Q&&!1===r.alphaToCoverage,alphaMap:ft,alphaTest:mt,alphaHash:yt,combine:r.combine,mapUv:N&&g(r.map.channel),aoMapUv:z&&g(r.aoMap.channel),lightMapUv:G&&g(r.lightMap.channel),bumpMapUv:H&&g(r.bumpMap.channel),normalMapUv:V&&g(r.normalMap.channel),displacementMapUv:Y&&g(r.displacementMap.channel),emissiveMapUv:q&&g(r.emissiveMap.channel),metalnessMapUv:W&&g(r.metalnessMap.channel),roughnessMapUv:J&&g(r.roughnessMap.channel),anisotropyMapUv:et&&g(r.anisotropyMap.channel),clearcoatMapUv:nt&&g(r.clearcoatMap.channel),clearcoatNormalMapUv:it&&g(r.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:st&&g(r.clearcoatRoughnessMap.channel),iridescenceMapUv:rt&&g(r.iridescenceMap.channel),iridescenceThicknessMapUv:at&&g(r.iridescenceThicknessMap.channel),sheenColorMapUv:ot&&g(r.sheenColorMap.channel),sheenRoughnessMapUv:lt&&g(r.sheenRoughnessMap.channel),specularMapUv:ct&&g(r.specularMap.channel),specularColorMapUv:At&&g(r.specularColorMap.channel),specularIntensityMapUv:ht&&g(r.specularIntensityMap.channel),transmissionMapUv:ut&&g(r.transmissionMap.channel),thicknessMapUv:pt&&g(r.thicknessMap.channel),alphaMapUv:ft&&g(r.alphaMap.channel),vertexTangents:!!I.attributes.tangent&&(V||j),vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!I.attributes.color&&4===I.attributes.color.itemSize,pointsUvs:!0===m.isPoints&&!!I.attributes.uv&&(N||ft),fog:!!y,useFog:!0===r.fog,fogExp2:!!y&&y.isFogExp2,flatShading:!0===r.flatShading&&!1===r.wireframe,sizeAttenuation:!0===r.sizeAttenuation,logarithmicDepthBuffer:h,reversedDepthBuffer:P,skinning:!0===m.isSkinnedMesh,morphTargets:void 0!==I.morphAttributes.position,morphNormals:void 0!==I.morphAttributes.normal,morphColors:void 0!==I.morphAttributes.color,morphTargetsCount:_,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&A.length>0,shadowMapType:t.shadowMap.type,toneMapping:Ct,decodeVideoTexture:N&&!0===r.map.isVideoTexture&&Ti.getTransfer(r.map.colorSpace)===pn,decodeVideoTextureEmissive:q&&!0===r.emissiveMap.isVideoTexture&&Ti.getTransfer(r.emissiveMap.colorSpace)===pn,premultipliedAlpha:r.premultipliedAlpha,doubleSided:r.side===M,flipSided:r.side===b,useDepthPacking:r.depthPacking>=0,depthPacking:r.depthPacking||0,index0AttributeName:r.index0AttributeName,extensionClipCullDistance:It&&!0===r.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(It&&!0===r.extensions.multiDraw||F)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:r.customProgramCacheKey()};return Et.vertexUv1s=c.has(1),Et.vertexUv2s=c.has(2),Et.vertexUv3s=c.has(3),c.clear(),Et},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0),e.instancing&&o.enable(1),e.instancingColor&&o.enable(2),e.instancingMorph&&o.enable(3),e.matcap&&o.enable(4),e.envMap&&o.enable(5),e.normalMapObjectSpace&&o.enable(6),e.normalMapTangentSpace&&o.enable(7),e.clearcoat&&o.enable(8),e.iridescence&&o.enable(9),e.alphaTest&&o.enable(10),e.vertexColors&&o.enable(11),e.vertexAlphas&&o.enable(12),e.vertexUv1s&&o.enable(13),e.vertexUv2s&&o.enable(14),e.vertexUv3s&&o.enable(15),e.vertexTangents&&o.enable(16),e.anisotropy&&o.enable(17),e.alphaHash&&o.enable(18),e.batching&&o.enable(19),e.dispersion&&o.enable(20),e.batchingColor&&o.enable(21),e.gradientMap&&o.enable(22),t.push(o.mask),o.disableAll(),e.fog&&o.enable(0),e.useFog&&o.enable(1),e.flatShading&&o.enable(2),e.logarithmicDepthBuffer&&o.enable(3),e.reversedDepthBuffer&&o.enable(4),e.skinning&&o.enable(5),e.morphTargets&&o.enable(6),e.morphNormals&&o.enable(7),e.morphColors&&o.enable(8),e.premultipliedAlpha&&o.enable(9),e.shadowMapEnabled&&o.enable(10),e.doubleSided&&o.enable(11),e.flipSided&&o.enable(12),e.useDepthPacking&&o.enable(13),e.dithering&&o.enable(14),e.transmission&&o.enable(15),e.sheen&&o.enable(16),e.opaque&&o.enable(17),e.pointsUvs&&o.enable(18),e.decodeVideoTexture&&o.enable(19),e.decodeVideoTextureEmissive&&o.enable(20),e.alphaToCoverage&&o.enable(21),t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=rd[e];n=oa.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=A.length;t<e;t++){const e=A[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new og(t,n,e,r),A.push(i)),i},releaseProgram:function(t){if(0===--t.usedTimes){const e=A.indexOf(t);A[e]=A[A.length-1],A.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:A,dispose:function(){l.dispose()}}}function ug(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function dg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function pg(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function gg(){const t=[];let e=0;const n=[],i=[],s=[];function r(n,i,s,r,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:s,groupOrder:r,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=s,l.groupOrder=r,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:s,init:function(){e=0,n.length=0,i.length=0,s.length=0},push:function(t,e,a,o,l,c){const A=r(t,e,a,o,l,c);a.transmission>0?i.push(A):!0===a.transparent?s.push(A):n.push(A)},unshift:function(t,e,a,o,l,c){const A=r(t,e,a,o,l,c);a.transmission>0?i.unshift(A):!0===a.transparent?s.unshift(A):n.unshift(A)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||dg),i.length>1&&i.sort(e||pg),s.length>1&&s.sort(e||pg)}}}function fg(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let s;return void 0===i?(s=new gg,t.set(e,[s])):n>=i.length?(s=new gg,i.push(s)):s=i[n],s},dispose:function(){t=new WeakMap}}}function mg(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new gi,color:new dr};break;case"SpotLight":n={position:new gi,direction:new gi,color:new dr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new gi,color:new dr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new gi,skyColor:new dr,groundColor:new dr};break;case"RectAreaLight":n={color:new dr,position:new gi,halfWidth:new gi,halfHeight:new gi}}return t[e.id]=n,n}}}let yg=0;function Ig(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Cg(t){const e=new mg,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new di};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new di,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)i.probe.push(new gi);const s=new gi,r=new Es,a=new Es;return{setup:function(s){let r=0,a=0,o=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,c=0,A=0,h=0,u=0,d=0,p=0,g=0,f=0,m=0,y=0;s.sort(Ig);for(let t=0,I=s.length;t<I;t++){const I=s[t],C=I.color,E=I.intensity,v=I.distance,x=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)r+=C.r*E,a+=C.g*E,o+=C.b*E;else if(I.isLightProbe){for(let t=0;t<9;t++)i.probe[t].addScaledVector(I.sh.coefficients[t],E);y++}else if(I.isDirectionalLight){const t=e.get(I);if(t.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const t=I.shadow,e=n.get(I);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,i.directionalShadow[l]=e,i.directionalShadowMap[l]=x,i.directionalShadowMatrix[l]=I.shadow.matrix,d++}i.directional[l]=t,l++}else if(I.isSpotLight){const t=e.get(I);t.position.setFromMatrixPosition(I.matrixWorld),t.color.copy(C).multiplyScalar(E),t.distance=v,t.coneCos=Math.cos(I.angle),t.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),t.decay=I.decay,i.spot[A]=t;const s=I.shadow;if(I.map&&(i.spotLightMap[f]=I.map,f++,s.updateMatrices(I),I.castShadow&&m++),i.spotLightMatrix[A]=s.matrix,I.castShadow){const t=n.get(I);t.shadowIntensity=s.intensity,t.shadowBias=s.bias,t.shadowNormalBias=s.normalBias,t.shadowRadius=s.radius,t.shadowMapSize=s.mapSize,i.spotShadow[A]=t,i.spotShadowMap[A]=x,g++}A++}else if(I.isRectAreaLight){const t=e.get(I);t.color.copy(C).multiplyScalar(E),t.halfWidth.set(.5*I.width,0,0),t.halfHeight.set(0,.5*I.height,0),i.rectArea[h]=t,h++}else if(I.isPointLight){const t=e.get(I);if(t.color.copy(I.color).multiplyScalar(I.intensity),t.distance=I.distance,t.decay=I.decay,I.castShadow){const t=I.shadow,e=n.get(I);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,i.pointShadow[c]=e,i.pointShadowMap[c]=x,i.pointShadowMatrix[c]=I.shadow.matrix,p++}i.point[c]=t,c++}else if(I.isHemisphereLight){const t=e.get(I);t.skyColor.copy(I.color).multiplyScalar(E),t.groundColor.copy(I.groundColor).multiplyScalar(E),i.hemi[u]=t,u++}}h>0&&(!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=sd.LTC_FLOAT_1,i.rectAreaLTC2=sd.LTC_FLOAT_2):(i.rectAreaLTC1=sd.LTC_HALF_1,i.rectAreaLTC2=sd.LTC_HALF_2)),i.ambient[0]=r,i.ambient[1]=a,i.ambient[2]=o;const I=i.hash;I.directionalLength===l&&I.pointLength===c&&I.spotLength===A&&I.rectAreaLength===h&&I.hemiLength===u&&I.numDirectionalShadows===d&&I.numPointShadows===p&&I.numSpotShadows===g&&I.numSpotMaps===f&&I.numLightProbes===y||(i.directional.length=l,i.spot.length=A,i.rectArea.length=h,i.point.length=c,i.hemi.length=u,i.directionalShadow.length=d,i.directionalShadowMap.length=d,i.pointShadow.length=p,i.pointShadowMap.length=p,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=d,i.pointShadowMatrix.length=p,i.spotLightMatrix.length=g+f-m,i.spotLightMap.length=f,i.numSpotLightShadowsWithMaps=m,i.numLightProbes=y,I.directionalLength=l,I.pointLength=c,I.spotLength=A,I.rectAreaLength=h,I.hemiLength=u,I.numDirectionalShadows=d,I.numPointShadows=p,I.numSpotShadows=g,I.numSpotMaps=f,I.numLightProbes=y,i.version=yg++)},setupView:function(t,e){let n=0,o=0,l=0,c=0,A=0;const h=e.matrixWorldInverse;for(let e=0,u=t.length;e<u;e++){const u=t[e];if(u.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(u.matrixWorld),s.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),n++}else if(u.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(u.matrixWorld),s.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(h),l++}else if(u.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),a.identity(),r.copy(u.matrixWorld),r.premultiply(h),a.extractRotation(r),t.halfWidth.set(.5*u.width,0,0),t.halfHeight.set(0,.5*u.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(u.isPointLight){const t=i.point[o];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),o++}else if(u.isHemisphereLight){const t=i.hemi[A];t.direction.setFromMatrixPosition(u.matrixWorld),t.direction.transformDirection(h),A++}}},state:i}}function Eg(t){const e=new Cg(t),n=[],i=[],s={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){s.camera=t,n.length=0,i.length=0},state:s,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){i.push(t)}}}function vg(t){let e=new WeakMap;return{get:function(n,i=0){const s=e.get(n);let r;return void 0===s?(r=new Eg(t),e.set(n,[r])):i>=s.length?(r=new Eg(t),s.push(r)):r=s[i],r},dispose:function(){e=new WeakMap}}}function xg(t,e,n){let i=new wo;const s=new di,r=new di,a=new zi,o=new eA({depthPacking:rn}),l=new nA,c={},A=n.maxTextureSize,h={[S]:b,[b]:S,[M]:M},u=new la({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new di},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const p=new Hr;p.setAttribute("position",new Br(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new ea(p,u),f=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=w;let m=this.type;function y(n,i){const r=e.update(g);u.defines.VSM_SAMPLES!==n.blurSamples&&(u.defines.VSM_SAMPLES=n.blurSamples,d.defines.VSM_SAMPLES=n.blurSamples,u.needsUpdate=!0,d.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Hi(s.x,s.y)),u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,u,g,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,d,g,null)}function I(e,n,i,s){let r=null;const a=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)r=a;else if(r=!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0||!0===n.alphaToCoverage){const t=r.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let s=i[e];void 0===s&&(s=r.clone(),i[e]=s,n.addEventListener("dispose",E)),r=s}return r.visible=n.visible,r.wireframe=n.wireframe,r.side=s===B?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],r.alphaMap=n.alphaMap,r.alphaTest=!0===n.alphaToCoverage?.5:n.alphaTest,r.map=n.map,r.clipShadows=n.clipShadows,r.clippingPlanes=n.clippingPlanes,r.clipIntersection=n.clipIntersection,r.displacementMap=n.displacementMap,r.displacementScale=n.displacementScale,r.displacementBias=n.displacementBias,r.wireframeLinewidth=n.wireframeLinewidth,r.linewidth=n.linewidth,!0===i.isPointLight&&!0===r.isMeshDistanceMaterial&&(t.properties.get(r).light=i),r}function C(n,s,r,a,o){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===B)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let c=0,A=e.length;c<A;c++){const A=e[c],h=l[A.materialIndex];if(h&&h.visible){const e=I(n,h,a,o);n.onBeforeShadow(t,n,s,r,i,e,A),t.renderBufferDirect(r,null,i,e,n,A),n.onAfterShadow(t,n,s,r,i,e,A)}}}else if(l.visible){const e=I(n,l,a,o);n.onBeforeShadow(t,n,s,r,i,e,null),t.renderBufferDirect(r,null,i,e,n,null),n.onAfterShadow(t,n,s,r,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)C(l[t],s,r,a,o)}function E(t){t.target.removeEventListener("dispose",E);for(const e in c){const n=c[e],i=t.target.uuid;i in n&&(n[i].dispose(),delete n[i])}}this.render=function(e,n,o){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),u=t.state;u.setBlending(T),u.buffers.depth.getReversed()?u.buffers.color.setClear(0,0,0,0):u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);const d=m!==B&&this.type===B,p=m===B&&this.type!==B;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=c.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;s.copy(h.mapSize);const g=h.getFrameExtents();if(s.multiply(g),r.copy(h.mapSize),(s.x>A||s.y>A)&&(s.x>A&&(r.x=Math.floor(A/g.x),s.x=r.x*g.x,h.mapSize.x=r.x),s.y>A&&(r.y=Math.floor(A/g.y),s.y=r.y*g.y,h.mapSize.y=r.y)),null===h.map||!0===d||!0===p){const t=this.type!==B?{minFilter:Dt,magFilter:Dt}:{};null!==h.map&&h.map.dispose(),h.map=new Hi(s.x,s.y,t),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}t.setRenderTarget(h.map),t.clear();const f=h.getViewportCount();for(let t=0;t<f;t++){const e=h.getViewport(t);a.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),u.viewport(a),h.updateMatrices(c,t),i=h.getFrustum(),C(n,o,h.camera,c,this.type)}!0!==h.isPointLightShadow&&this.type===B&&y(h,o),h.needsUpdate=!1}m=this.type,f.needsUpdate=!1,t.setRenderTarget(l,c,h)}}const wg={[nt]:it,[st]:lt,[at]:ct,[rt]:ot,[it]:nt,[lt]:st,[ct]:at,[ot]:rt};function _g(t,e){const n=new function(){let e=!1;const n=new zi;let i=null;const s=new zi(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,r,a,o){!0===o&&(e*=a,i*=a,r*=a),n.set(e,i,r,a),!1===s.equals(n)&&(t.clearColor(e,i,r,a),s.copy(n))},reset:function(){e=!1,i=null,s.set(-1,0,0,0)}}},i=new function(){let n=!1,i=!1,s=null,r=null,a=null;return{setReversed:function(t){if(i!==t){const n=e.get("EXT_clip_control");t?n.clipControlEXT(n.LOWER_LEFT_EXT,n.ZERO_TO_ONE_EXT):n.clipControlEXT(n.LOWER_LEFT_EXT,n.NEGATIVE_ONE_TO_ONE_EXT),i=t;const s=a;a=null,this.setClear(s)}},getReversed:function(){return i},setTest:function(e){e?_t(t.DEPTH_TEST):Bt(t.DEPTH_TEST)},setMask:function(e){s===e||n||(t.depthMask(e),s=e)},setFunc:function(e){if(i&&(e=wg[e]),r!==e){switch(e){case nt:t.depthFunc(t.NEVER);break;case it:t.depthFunc(t.ALWAYS);break;case st:t.depthFunc(t.LESS);break;case rt:t.depthFunc(t.LEQUAL);break;case at:t.depthFunc(t.EQUAL);break;case ot:t.depthFunc(t.GEQUAL);break;case lt:t.depthFunc(t.GREATER);break;case ct:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}r=e}},setLocked:function(t){n=t},setClear:function(e){a!==e&&(i&&(e=1-e),t.clearDepth(e),a=e)},reset:function(){n=!1,s=null,r=null,a=null,i=!1}}},s=new function(){let e=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?_t(t.STENCIL_TEST):Bt(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,a){i===e&&s===n&&r===a||(t.stencilFunc(e,n,a),i=e,s=n,r=a)},setOp:function(e,n,i){a===e&&o===n&&l===i||(t.stencilOp(e,n,i),a=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null}}},r=new WeakMap,a=new WeakMap;let o={},l={},c=new WeakMap,A=[],h=null,u=!1,d=null,p=null,g=null,f=null,m=null,y=null,v=null,x=new dr(0,0,0),w=0,_=!1,B=null,S=null,At=null,ht=null,ut=null;const dt=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let pt=!1,gt=0;const ft=t.getParameter(t.VERSION);-1!==ft.indexOf("WebGL")?(gt=parseFloat(/^WebGL (\d)/.exec(ft)[1]),pt=gt>=1):-1!==ft.indexOf("OpenGL ES")&&(gt=parseFloat(/^OpenGL ES (\d)/.exec(ft)[1]),pt=gt>=2);let mt=null,yt={};const It=t.getParameter(t.SCISSOR_BOX),Ct=t.getParameter(t.VIEWPORT),Et=(new zi).fromArray(It),vt=(new zi).fromArray(Ct);function xt(e,n,i,s){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let a=0;a<i;a++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,s,0,t.RGBA,t.UNSIGNED_BYTE,r):t.texImage2D(n+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}const wt={};function _t(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function Bt(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}wt[t.TEXTURE_2D]=xt(t.TEXTURE_2D,t.TEXTURE_2D,1),wt[t.TEXTURE_CUBE_MAP]=xt(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),wt[t.TEXTURE_2D_ARRAY]=xt(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),wt[t.TEXTURE_3D]=xt(t.TEXTURE_3D,t.TEXTURE_3D,1,1),n.setClear(0,0,0,1),i.setClear(1),s.setClear(0),_t(t.DEPTH_TEST),i.setFunc(rt),Tt(!1),Qt(C),_t(t.CULL_FACE),Mt(T);const St={[L]:t.FUNC_ADD,[F]:t.FUNC_SUBTRACT,[N]:t.FUNC_REVERSE_SUBTRACT};St[k]=t.MIN,St[O]=t.MAX;const bt={[z]:t.ZERO,[G]:t.ONE,[H]:t.SRC_COLOR,[Y]:t.SRC_ALPHA,[K]:t.SRC_ALPHA_SATURATE,[j]:t.DST_COLOR,[W]:t.DST_ALPHA,[V]:t.ONE_MINUS_SRC_COLOR,[q]:t.ONE_MINUS_SRC_ALPHA,[X]:t.ONE_MINUS_DST_COLOR,[J]:t.ONE_MINUS_DST_ALPHA,[Z]:t.CONSTANT_COLOR,[$]:t.ONE_MINUS_CONSTANT_COLOR,[tt]:t.CONSTANT_ALPHA,[et]:t.ONE_MINUS_CONSTANT_ALPHA};function Mt(e,n,i,s,r,a,o,l,c,A){if(e!==T){if(!1===u&&(_t(t.BLEND),u=!0),e===P)r=r||n,a=a||i,o=o||s,n===p&&r===m||(t.blendEquationSeparate(St[n],St[r]),p=n,m=r),i===g&&s===f&&a===y&&o===v||(t.blendFuncSeparate(bt[i],bt[s],bt[a],bt[o]),g=i,f=s,y=a,v=o),!1!==l.equals(x)&&c===w||(t.blendColor(l.r,l.g,l.b,c),x.copy(l),w=c),d=e,_=!1;else if(e!==d||A!==_){if(p===L&&m===L||(t.blendEquation(t.FUNC_ADD),p=L,m=L),A)switch(e){case Q:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case D:t.blendFunc(t.ONE,t.ONE);break;case R:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case U:t.blendFuncSeparate(t.DST_COLOR,t.ONE_MINUS_SRC_ALPHA,t.ZERO,t.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case Q:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case D:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE,t.ONE,t.ONE);break;case R:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case U:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}g=null,f=null,y=null,v=null,x.set(0,0,0),w=0,d=e,_=A}}else!0===u&&(Bt(t.BLEND),u=!1)}function Tt(e){B!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),B=e)}function Qt(e){e!==I?(_t(t.CULL_FACE),e!==S&&(e===C?t.cullFace(t.BACK):e===E?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):Bt(t.CULL_FACE),S=e}function Dt(e,n,i){e?(_t(t.POLYGON_OFFSET_FILL),ht===n&&ut===i||(t.polygonOffset(n,i),ht=n,ut=i)):Bt(t.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:i,stencil:s},enable:_t,disable:Bt,bindFramebuffer:function(e,n){return l[e]!==n&&(t.bindFramebuffer(e,n),l[e]=n,e===t.DRAW_FRAMEBUFFER&&(l[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(l[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let i=A,s=!1;if(e){i=c.get(n),void 0===i&&(i=[],c.set(n,i));const r=e.textures;if(i.length!==r.length||i[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=r.length;e<n;e++)i[e]=t.COLOR_ATTACHMENT0+e;i.length=r.length,s=!0}}else i[0]!==t.BACK&&(i[0]=t.BACK,s=!0);s&&t.drawBuffers(i)},useProgram:function(e){return h!==e&&(t.useProgram(e),h=e,!0)},setBlending:Mt,setMaterial:function(e,r){e.side===M?Bt(t.CULL_FACE):_t(t.CULL_FACE);let a=e.side===b;r&&(a=!a),Tt(a),e.blending===Q&&!1===e.transparent?Mt(T):Mt(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),n.setMask(e.colorWrite);const o=e.stencilWrite;s.setTest(o),o&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Dt(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?_t(t.SAMPLE_ALPHA_TO_COVERAGE):Bt(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:Tt,setCullFace:Qt,setLineWidth:function(e){e!==At&&(pt&&t.lineWidth(e),At=e)},setPolygonOffset:Dt,setScissorTest:function(e){e?_t(t.SCISSOR_TEST):Bt(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+dt-1),mt!==e&&(t.activeTexture(e),mt=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===mt?t.TEXTURE0+dt-1:mt);let s=yt[i];void 0===s&&(s={type:void 0,texture:void 0},yt[i]=s),s.type===e&&s.texture===n||(mt!==i&&(t.activeTexture(i),mt=i),t.bindTexture(e,n||wt[e]),s.type=e,s.texture=n)},unbindTexture:function(){const e=yt[mt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let i=a.get(n);void 0===i&&(i=new WeakMap,a.set(n,i));let s=i.get(e);void 0===s&&(s=t.getUniformBlockIndex(n,e.name),i.set(e,s))},uniformBlockBinding:function(e,n){const i=a.get(n).get(e);r.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),r.set(n,i))},texStorage2D:function(){try{t.texStorage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===Et.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),Et.copy(e))},viewport:function(e){!1===vt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),vt.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),i.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},mt=null,yt={},l={},c=new WeakMap,A=[],h=null,u=!1,d=null,p=null,g=null,f=null,m=null,y=null,v=null,x=new dr(0,0,0),w=0,_=!1,B=null,S=null,At=null,ht=null,ut=null,Et.set(0,0,t.canvas.width,t.canvas.height),vt.set(0,0,t.canvas.width,t.canvas.height),n.reset(),i.reset(),s.reset()}}}function Bg(t,e,n,i,s,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new di,A=new WeakMap;let h;const u=new WeakMap;let d=!1;try{d="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function p(t,e){return d?new OffscreenCanvas(t,e):xi("canvas")}function g(t,e,n){let i=1;const s=H(t);if((s.width>n||s.height>n)&&(i=n/Math.max(s.width,s.height)),i<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(i*s.width),r=Math.floor(i*s.height);void 0===h&&(h=p(n,r));const a=e?p(n,r):h;return a.width=n,a.height=r,a.getContext("2d").drawImage(t,0,0,n,r),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+s.width+"x"+s.height+") to ("+n+"x"+r+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+s.width+"x"+s.height+")."),t}return t}function f(t){return t.generateMipmaps}function m(e){t.generateMipmap(e)}function y(e){return e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:e.isWebGL3DRenderTarget?t.TEXTURE_3D:e.isWebGLArrayRenderTarget||e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function I(n,i,s,r,a=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===t.RED&&(s===t.FLOAT&&(o=t.R32F),s===t.HALF_FLOAT&&(o=t.R16F),s===t.UNSIGNED_BYTE&&(o=t.R8)),i===t.RED_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.R8UI),s===t.UNSIGNED_SHORT&&(o=t.R16UI),s===t.UNSIGNED_INT&&(o=t.R32UI),s===t.BYTE&&(o=t.R8I),s===t.SHORT&&(o=t.R16I),s===t.INT&&(o=t.R32I)),i===t.RG&&(s===t.FLOAT&&(o=t.RG32F),s===t.HALF_FLOAT&&(o=t.RG16F),s===t.UNSIGNED_BYTE&&(o=t.RG8)),i===t.RG_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RG8UI),s===t.UNSIGNED_SHORT&&(o=t.RG16UI),s===t.UNSIGNED_INT&&(o=t.RG32UI),s===t.BYTE&&(o=t.RG8I),s===t.SHORT&&(o=t.RG16I),s===t.INT&&(o=t.RG32I)),i===t.RGB_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RGB8UI),s===t.UNSIGNED_SHORT&&(o=t.RGB16UI),s===t.UNSIGNED_INT&&(o=t.RGB32UI),s===t.BYTE&&(o=t.RGB8I),s===t.SHORT&&(o=t.RGB16I),s===t.INT&&(o=t.RGB32I)),i===t.RGBA_INTEGER&&(s===t.UNSIGNED_BYTE&&(o=t.RGBA8UI),s===t.UNSIGNED_SHORT&&(o=t.RGBA16UI),s===t.UNSIGNED_INT&&(o=t.RGBA32UI),s===t.BYTE&&(o=t.RGBA8I),s===t.SHORT&&(o=t.RGBA16I),s===t.INT&&(o=t.RGBA32I)),i===t.RGB&&s===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),i===t.RGBA){const e=a?dn:Ti.getTransfer(r);s===t.FLOAT&&(o=t.RGBA32F),s===t.HALF_FLOAT&&(o=t.RGBA16F),s===t.UNSIGNED_BYTE&&(o=e===pn?t.SRGB8_ALPHA8:t.RGBA8),s===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),s===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function C(e,n){let i;return e?null===n||n===Wt||n===Zt?i=t.DEPTH24_STENCIL8:n===Jt?i=t.DEPTH32F_STENCIL8:n===Yt&&(i=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===Wt||n===Zt?i=t.DEPTH_COMPONENT24:n===Jt?i=t.DEPTH_COMPONENT32F:n===Yt&&(i=t.DEPTH_COMPONENT16),i}function E(t,e){return!0===f(t)||t.isFramebufferTexture&&t.minFilter!==Dt&&t.minFilter!==Ft?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function v(t){const e=t.target;e.removeEventListener("dispose",v),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,s=u.get(n);if(s){const i=s[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&w(t),0===Object.keys(s).length&&u.delete(n)}i.remove(t)}(e),e.isVideoTexture&&A.delete(e)}function x(e){const n=e.target;n.removeEventListener("dispose",x),function(e){const n=i.get(e);if(e.depthTexture&&(e.depthTexture.dispose(),i.remove(e.depthTexture)),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let i=0;i<n.__webglFramebuffer[e].length;i++)t.deleteFramebuffer(n.__webglFramebuffer[e][i]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const s=e.textures;for(let e=0,n=s.length;e<n;e++){const n=i.get(s[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),a.memory.textures--),i.remove(s[e])}i.remove(e)}(n)}function w(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const s=e.source;delete u.get(s)[n.__cacheKey],a.memory.textures--}let _=0;function B(e,s){const r=i.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;A.get(t)!==e&&(A.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&!0!==e.isExternalTexture&&e.version>0&&r.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void R(r,e,s);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}else e.isExternalTexture&&(r.__webglTexture=e.sourceTexture?e.sourceTexture:null);n.bindTexture(t.TEXTURE_2D,r.__webglTexture,t.TEXTURE0+s)}const S={[Mt]:t.REPEAT,[Tt]:t.CLAMP_TO_EDGE,[Qt]:t.MIRRORED_REPEAT},b={[Dt]:t.NEAREST,[Rt]:t.NEAREST_MIPMAP_NEAREST,[Pt]:t.NEAREST_MIPMAP_LINEAR,[Ft]:t.LINEAR,[Nt]:t.LINEAR_MIPMAP_NEAREST,[Ot]:t.LINEAR_MIPMAP_LINEAR},M={[Qn]:t.NEVER,[Nn]:t.ALWAYS,[Dn]:t.LESS,[Un]:t.LEQUAL,[Rn]:t.EQUAL,[Fn]:t.GEQUAL,[Pn]:t.GREATER,[Ln]:t.NOTEQUAL};function T(n,r){if(r.type!==Jt||!1!==e.has("OES_texture_float_linear")||r.magFilter!==Ft&&r.magFilter!==Nt&&r.magFilter!==Pt&&r.magFilter!==Ot&&r.minFilter!==Ft&&r.minFilter!==Nt&&r.minFilter!==Pt&&r.minFilter!==Ot||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,S[r.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,S[r.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,S[r.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,b[r.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,b[r.minFilter]),r.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,M[r.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(r.magFilter===Dt)return;if(r.minFilter!==Pt&&r.minFilter!==Ot)return;if(r.type===Jt&&!1===e.has("OES_texture_float_linear"))return;if(r.anisotropy>1||i.get(r).__currentAnisotropy){const a=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,s.getMaxAnisotropy())),i.get(r).__currentAnisotropy=r.anisotropy}}}function Q(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",v));const s=n.source;let r=u.get(s);void 0===r&&(r={},u.set(s,r));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===r[o]&&(r[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,i=!0),r[o].usedTimes++;const s=r[e.__cacheKey];void 0!==s&&(r[e.__cacheKey].usedTimes--,0===s.usedTimes&&w(n)),e.__cacheKey=o,e.__webglTexture=r[o].texture}return i}function D(t,e,n){return Math.floor(Math.floor(t/n)/e)}function R(e,a,o){let l=t.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=t.TEXTURE_3D);const c=Q(e,a),A=a.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const h=i.get(A);if(A.version!==h.__version||!0===c){n.activeTexture(t.TEXTURE0+o);const e=Ti.getPrimaries(Ti.workingColorSpace),i=a.colorSpace===An?null:Ti.getPrimaries(a.colorSpace),u=a.colorSpace===An||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);let d=g(a.image,!1,s.maxTextureSize);d=G(a,d);const p=r.convert(a.format,a.colorSpace),y=r.convert(a.type);let v,x=I(a.internalFormat,p,y,a.colorSpace,a.isVideoTexture);T(l,a);const w=a.mipmaps,_=!0!==a.isVideoTexture,B=void 0===h.__version||!0===c,S=A.dataReady,b=E(a,d);if(a.isDepthTexture)x=C(a.format===se,a.type),B&&(_?n.texStorage2D(t.TEXTURE_2D,1,x,d.width,d.height):n.texImage2D(t.TEXTURE_2D,0,x,d.width,d.height,0,p,y,null));else if(a.isDataTexture)if(w.length>0){_&&B&&n.texStorage2D(t.TEXTURE_2D,b,x,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)v=w[e],_?S&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,v.width,v.height,p,y,v.data):n.texImage2D(t.TEXTURE_2D,e,x,v.width,v.height,0,p,y,v.data);a.generateMipmaps=!1}else _?(B&&n.texStorage2D(t.TEXTURE_2D,b,x,d.width,d.height),S&&function(e,i,s,r){const a=e.updateRanges;if(0===a.length)n.texSubImage2D(t.TEXTURE_2D,0,0,0,i.width,i.height,s,r,i.data);else{a.sort((t,e)=>t.start-e.start);let o=0;for(let t=1;t<a.length;t++){const e=a[o],n=a[t],s=e.start+e.count,r=D(n.start,i.width,4),l=D(e.start,i.width,4);n.start<=s+1&&r===l&&D(n.start+n.count-1,i.width,4)===r?e.count=Math.max(e.count,n.start+n.count-e.start):(++o,a[o]=n)}a.length=o+1;const l=t.getParameter(t.UNPACK_ROW_LENGTH),c=t.getParameter(t.UNPACK_SKIP_PIXELS),A=t.getParameter(t.UNPACK_SKIP_ROWS);t.pixelStorei(t.UNPACK_ROW_LENGTH,i.width);for(let e=0,o=a.length;e<o;e++){const o=a[e],l=Math.floor(o.start/4),c=Math.ceil(o.count/4),A=l%i.width,h=Math.floor(l/i.width),u=c,d=1;t.pixelStorei(t.UNPACK_SKIP_PIXELS,A),t.pixelStorei(t.UNPACK_SKIP_ROWS,h),n.texSubImage2D(t.TEXTURE_2D,0,A,h,u,d,s,r,i.data)}e.clearUpdateRanges(),t.pixelStorei(t.UNPACK_ROW_LENGTH,l),t.pixelStorei(t.UNPACK_SKIP_PIXELS,c),t.pixelStorei(t.UNPACK_SKIP_ROWS,A)}}(a,d,p,y)):n.texImage2D(t.TEXTURE_2D,0,x,d.width,d.height,0,p,y,d.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){_&&B&&n.texStorage3D(t.TEXTURE_2D_ARRAY,b,x,w[0].width,w[0].height,d.depth);for(let e=0,i=w.length;e<i;e++)if(v=w[e],a.format!==ne)if(null!==p)if(_){if(S)if(a.layerUpdates.size>0){const i=$u(v.width,v.height,a.format,a.type);for(const s of a.layerUpdates){const r=v.data.subarray(s*i/v.data.BYTES_PER_ELEMENT,(s+1)*i/v.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,s,v.width,v.height,1,p,r)}a.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,v.width,v.height,d.depth,p,v.data)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,x,v.width,v.height,d.depth,0,v.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else _?S&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,v.width,v.height,d.depth,p,y,v.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,x,v.width,v.height,d.depth,0,p,y,v.data)}else{_&&B&&n.texStorage2D(t.TEXTURE_2D,b,x,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)v=w[e],a.format!==ne?null!==p?_?S&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,v.width,v.height,p,v.data):n.compressedTexImage2D(t.TEXTURE_2D,e,x,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?S&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,v.width,v.height,p,y,v.data):n.texImage2D(t.TEXTURE_2D,e,x,v.width,v.height,0,p,y,v.data)}else if(a.isDataArrayTexture)if(_){if(B&&n.texStorage3D(t.TEXTURE_2D_ARRAY,b,x,d.width,d.height,d.depth),S)if(a.layerUpdates.size>0){const e=$u(d.width,d.height,a.format,a.type);for(const i of a.layerUpdates){const s=d.data.subarray(i*e/d.data.BYTES_PER_ELEMENT,(i+1)*e/d.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,i,d.width,d.height,1,p,y,s)}a.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,p,y,d.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,x,d.width,d.height,d.depth,0,p,y,d.data);else if(a.isData3DTexture)_?(B&&n.texStorage3D(t.TEXTURE_3D,b,x,d.width,d.height,d.depth),S&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,p,y,d.data)):n.texImage3D(t.TEXTURE_3D,0,x,d.width,d.height,d.depth,0,p,y,d.data);else if(a.isFramebufferTexture){if(B)if(_)n.texStorage2D(t.TEXTURE_2D,b,x,d.width,d.height);else{let e=d.width,i=d.height;for(let s=0;s<b;s++)n.texImage2D(t.TEXTURE_2D,s,x,e,i,0,p,y,null),e>>=1,i>>=1}}else if(w.length>0){if(_&&B){const e=H(w[0]);n.texStorage2D(t.TEXTURE_2D,b,x,e.width,e.height)}for(let e=0,i=w.length;e<i;e++)v=w[e],_?S&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,p,y,v):n.texImage2D(t.TEXTURE_2D,e,x,p,y,v);a.generateMipmaps=!1}else if(_){if(B){const e=H(d);n.texStorage2D(t.TEXTURE_2D,b,x,e.width,e.height)}S&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,p,y,d)}else n.texImage2D(t.TEXTURE_2D,0,x,p,y,d);f(a)&&m(l),h.__version=A.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function U(e,s,a,l,c,A){const h=r.convert(a.format,a.colorSpace),u=r.convert(a.type),d=I(a.internalFormat,h,u,a.colorSpace),p=i.get(s),g=i.get(a);if(g.__renderTarget=s,!p.__hasExternalTextures){const e=Math.max(1,s.width>>A),i=Math.max(1,s.height>>A);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?n.texImage3D(c,A,d,e,i,s.depth,0,h,u,null):n.texImage2D(c,A,d,e,i,0,h,u,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),z(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,c,g.__webglTexture,0,O(s)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,c,g.__webglTexture,A),n.bindFramebuffer(t.FRAMEBUFFER,null)}function P(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const s=n.depthTexture,r=s&&s.isDepthTexture?s.type:null,a=C(n.stencilBuffer,r),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=O(n);z(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,c,a,n.width,n.height):i?t.renderbufferStorageMultisample(t.RENDERBUFFER,c,a,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,a,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let s=0;s<e.length;s++){const a=e[s],l=r.convert(a.format,a.colorSpace),c=r.convert(a.type),A=I(a.internalFormat,l,c,a.colorSpace),h=O(n);i&&!1===z(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,A,n.width,n.height):z(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,A,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,A,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function L(e,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const r=i.get(s.depthTexture);r.__renderTarget=s,r.__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),B(s.depthTexture,0);const a=r.__webglTexture,l=O(s);if(s.depthTexture.format===ie)z(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(s.depthTexture.format!==se)throw new Error("Unknown depthTexture format");z(s)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,l):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}function F(e){const s=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(s.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(s.__depthDisposeCallback&&s.__depthDisposeCallback(),t){const e=()=>{delete s.__boundDepthTexture,delete s.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),s.__depthDisposeCallback=e}s.__boundDepthTexture=t}if(e.depthTexture&&!s.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");const t=e.texture.mipmaps;t&&t.length>0?L(s.__webglFramebuffer[0],e):L(s.__webglFramebuffer,e)}else if(r){s.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer[i]),void 0===s.__webglDepthbuffer[i])s.__webglDepthbuffer[i]=t.createRenderbuffer(),P(s.__webglDepthbuffer[i],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,r=s.__webglDepthbuffer[i];t.bindRenderbuffer(t.RENDERBUFFER,r),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,r)}}else{const i=e.texture.mipmaps;if(i&&i.length>0?n.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer[0]):n.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer),void 0===s.__webglDepthbuffer)s.__webglDepthbuffer=t.createRenderbuffer(),P(s.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,i=s.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,i)}}n.bindFramebuffer(t.FRAMEBUFFER,null)}const N=[],k=[];function O(t){return Math.min(s.maxSamples,t.samples)}function z(t){const n=i.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function G(t,e){const n=t.colorSpace,i=t.format,s=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==un&&n!==An&&(Ti.getTransfer(n)===pn?i===ne&&s===Gt||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function H(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(c.width=t.naturalWidth||t.width,c.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(c.width=t.displayWidth,c.height=t.displayHeight):(c.width=t.width,c.height=t.height),c}this.allocateTextureUnit=function(){const t=_;return t>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+s.maxTextures),_+=1,t},this.resetTextureUnits=function(){_=0},this.setTexture2D=B,this.setTexture2DArray=function(e,s){const r=i.get(e);!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version?R(r,e,s):n.bindTexture(t.TEXTURE_2D_ARRAY,r.__webglTexture,t.TEXTURE0+s)},this.setTexture3D=function(e,s){const r=i.get(e);!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version?R(r,e,s):n.bindTexture(t.TEXTURE_3D,r.__webglTexture,t.TEXTURE0+s)},this.setTextureCube=function(e,a){const o=i.get(e);e.version>0&&o.__version!==e.version?function(e,a,o){if(6!==a.image.length)return;const l=Q(e,a),c=a.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const A=i.get(c);if(c.version!==A.__version||!0===l){n.activeTexture(t.TEXTURE0+o);const e=Ti.getPrimaries(Ti.workingColorSpace),i=a.colorSpace===An?null:Ti.getPrimaries(a.colorSpace),h=a.colorSpace===An||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,a.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,a.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);const u=a.isCompressedTexture||a.image[0].isCompressedTexture,d=a.image[0]&&a.image[0].isDataTexture,p=[];for(let t=0;t<6;t++)p[t]=u||d?d?a.image[t].image:a.image[t]:g(a.image[t],!0,s.maxCubemapSize),p[t]=G(a,p[t]);const y=p[0],C=r.convert(a.format,a.colorSpace),v=r.convert(a.type),x=I(a.internalFormat,C,v,a.colorSpace),w=!0!==a.isVideoTexture,_=void 0===A.__version||!0===l,B=c.dataReady;let S,b=E(a,y);if(T(t.TEXTURE_CUBE_MAP,a),u){w&&_&&n.texStorage2D(t.TEXTURE_CUBE_MAP,b,x,y.width,y.height);for(let e=0;e<6;e++){S=p[e].mipmaps;for(let i=0;i<S.length;i++){const s=S[i];a.format!==ne?null!==C?w?B&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,C,s.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,x,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):w?B&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,C,v,s.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,x,s.width,s.height,0,C,v,s.data)}}}else{if(S=a.mipmaps,w&&_){S.length>0&&b++;const e=H(p[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,b,x,e.width,e.height)}for(let e=0;e<6;e++)if(d){w?B&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,p[e].width,p[e].height,C,v,p[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,x,p[e].width,p[e].height,0,C,v,p[e].data);for(let i=0;i<S.length;i++){const s=S[i].image[e].image;w?B&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,s.width,s.height,C,v,s.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,x,s.width,s.height,0,C,v,s.data)}}else{w?B&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,C,v,p[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,x,C,v,p[e]);for(let i=0;i<S.length;i++){const s=S[i];w?B&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,C,v,s.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,x,C,v,s.image[e])}}}f(a)&&m(t.TEXTURE_CUBE_MAP),A.__version=c.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}(o,e,a):n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+a)},this.rebindTextures=function(e,n,s){const r=i.get(e);void 0!==n&&U(r.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==s&&F(e)},this.setupRenderTarget=function(e){const s=e.texture,o=i.get(e),l=i.get(s);e.addEventListener("dispose",x);const c=e.textures,A=!0===e.isWebGLCubeRenderTarget,h=c.length>1;if(h||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=s.version,a.memory.textures++),A){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(s.mipmaps&&s.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let n=0;n<s.mipmaps.length;n++)o.__webglFramebuffer[e][n]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(s.mipmaps&&s.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<s.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(h)for(let e=0,n=c.length;e<n;e++){const n=i.get(c[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),a.memory.textures++)}if(e.samples>0&&!1===z(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<c.length;n++){const i=c[n];o.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const s=r.convert(i.format,i.colorSpace),a=r.convert(i.type),l=I(i.internalFormat,s,a,i.colorSpace,!0===e.isXRRenderTarget),A=O(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,A,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,o.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),P(o.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(A){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),T(t.TEXTURE_CUBE_MAP,s);for(let n=0;n<6;n++)if(s.mipmaps&&s.mipmaps.length>0)for(let i=0;i<s.mipmaps.length;i++)U(o.__webglFramebuffer[n][i],e,s,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else U(o.__webglFramebuffer[n],e,s,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);f(s)&&m(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){for(let s=0,r=c.length;s<r;s++){const r=c[s],a=i.get(r);let l=t.TEXTURE_2D;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(l=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(l,a.__webglTexture),T(l,r),U(o.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0+s,l,0),f(r)&&m(l)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),T(i,s),s.mipmaps&&s.mipmaps.length>0)for(let n=0;n<s.mipmaps.length;n++)U(o.__webglFramebuffer[n],e,s,t.COLOR_ATTACHMENT0,i,n);else U(o.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0,i,0);f(s)&&m(i),n.unbindTexture()}e.depthBuffer&&F(e)},this.updateRenderTargetMipmap=function(t){const e=t.textures;for(let s=0,r=e.length;s<r;s++){const r=e[s];if(f(r)){const e=y(t),s=i.get(r).__webglTexture;n.bindTexture(e,s),m(e),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===z(e)){const s=e.textures,r=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,A=i.get(e),h=s.length>1;if(h)for(let e=0;e<s.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,A.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,A.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,A.__webglMultisampledFramebuffer);const u=e.texture.mipmaps;u&&u.length>0?n.bindFramebuffer(t.DRAW_FRAMEBUFFER,A.__webglFramebuffer[0]):n.bindFramebuffer(t.DRAW_FRAMEBUFFER,A.__webglFramebuffer);for(let n=0;n<s.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),h){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,A.__webglColorRenderbuffer[n]);const e=i.get(s[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,r,a,0,0,r,a,o,t.NEAREST),!0===l&&(N.length=0,k.length=0,N.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&(N.push(c),k.push(c),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,k)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,N))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),h)for(let e=0;e<s.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,A.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,A.__webglColorRenderbuffer[e]);const r=i.get(s[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,A.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,A.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=U,this.useMultisampledRTT=z}function Sg(t,e){return{convert:function(n,i=An){let s;const r=Ti.getTransfer(i);if(n===Gt)return t.UNSIGNED_BYTE;if(n===Xt)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Kt)return t.UNSIGNED_SHORT_5_5_5_1;if(n===$t)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===Ht)return t.BYTE;if(n===Vt)return t.SHORT;if(n===Yt)return t.UNSIGNED_SHORT;if(n===qt)return t.INT;if(n===Wt)return t.UNSIGNED_INT;if(n===Jt)return t.FLOAT;if(n===jt)return t.HALF_FLOAT;if(n===te)return t.ALPHA;if(n===ee)return t.RGB;if(n===ne)return t.RGBA;if(n===ie)return t.DEPTH_COMPONENT;if(n===se)return t.DEPTH_STENCIL;if(n===re)return t.RED;if(n===ae)return t.RED_INTEGER;if(n===oe)return t.RG;if(n===le)return t.RG_INTEGER;if(n===Ae)return t.RGBA_INTEGER;if(n===he||n===ue||n===de||n===pe)if(r===pn){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===he)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ue)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===de)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===pe)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===he)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ue)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===de)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===pe)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===ge||n===fe||n===me||n===ye){if(s=e.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(n===ge)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===fe)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===me)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ye)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===Ie||n===Ce||n===Ee){if(s=e.get("WEBGL_compressed_texture_etc"),null===s)return null;if(n===Ie||n===Ce)return r===pn?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Ee)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(n===ve||n===xe||n===we||n===_e||n===Be||n===Se||n===be||n===Me||n===Te||n===Qe||n===De||n===Re||n===Ue||n===Pe){if(s=e.get("WEBGL_compressed_texture_astc"),null===s)return null;if(n===ve)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===xe)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===we)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===_e)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Be)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Se)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===be)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Me)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Te)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Qe)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===De)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Re)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Ue)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Pe)return r===pn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Le||n===Fe||n===Ne){if(s=e.get("EXT_texture_compression_bptc"),null===s)return null;if(n===Le)return r===pn?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Fe)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Ne)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===ke||n===Oe||n===ze||n===Ge){if(s=e.get("EXT_texture_compression_rgtc"),null===s)return null;if(n===Le)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Oe)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===ze)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ge)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Zt?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class bg extends Oi{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}}class Mg{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(null===this.texture){const n=new bg(t.texture);t.depthNear===e.depthNear&&t.depthFar===e.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new la({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new ea(new Lc(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Tg extends ei{constructor(t,e){super();const n=this;let i=null,s=1,r=null,a="local-floor",o=1,l=null,c=null,A=null,h=null,u=null,d=null;const p=new Mg,g={},f=e.getContextAttributes();let m=null,y=null;const I=[],C=[],E=new di;let v=null;const x=new da;x.viewport=new zi;const w=new da;w.viewport=new zi;const _=[x,w],B=new vh;let S=null,b=null;function M(t){const e=C.indexOf(t.inputSource);if(-1===e)return;const n=I[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||r),n.dispatchEvent({type:t.type,data:t.inputSource}))}function T(){i.removeEventListener("select",M),i.removeEventListener("selectstart",M),i.removeEventListener("selectend",M),i.removeEventListener("squeeze",M),i.removeEventListener("squeezestart",M),i.removeEventListener("squeezeend",M),i.removeEventListener("end",T),i.removeEventListener("inputsourceschange",Q);for(let t=0;t<I.length;t++){const e=C[t];null!==e&&(C[t]=null,I[t].disconnect(e))}S=null,b=null,p.reset();for(const t in g)delete g[t];t.setRenderTarget(m),u=null,h=null,A=null,i=null,y=null,L.stop(),n.isPresenting=!1,t.setPixelRatio(v),t.setSize(E.width,E.height,!1),n.dispatchEvent({type:"sessionend"})}function Q(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=C.indexOf(n);i>=0&&(C[i]=null,I[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=C.indexOf(n);if(-1===i){for(let t=0;t<I.length;t++){if(t>=C.length){C.push(n),i=t;break}if(null===C[t]){C[t]=n,i=t;break}}if(-1===i)break}const s=I[i];s&&s.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=I[t];return void 0===e&&(e=new Ca,I[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=I[t];return void 0===e&&(e=new Ca,I[t]=e),e.getGripSpace()},this.getHand=function(t){let e=I[t];return void 0===e&&(e=new Ca,I[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||r},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return A},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(m=t.getRenderTarget(),i.addEventListener("select",M),i.addEventListener("selectstart",M),i.addEventListener("selectend",M),i.addEventListener("squeeze",M),i.addEventListener("squeezestart",M),i.addEventListener("squeezeend",M),i.addEventListener("end",T),i.addEventListener("inputsourceschange",Q),!0!==f.xrCompatible&&await e.makeXRCompatible(),v=t.getPixelRatio(),t.getSize(E),"undefined"!=typeof XRWebGLBinding&&(A=new XRWebGLBinding(i,e)),null!==A&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,r=null,a=null;f.depth&&(a=f.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=f.stencil?se:ie,r=f.stencil?Zt:Wt);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:s};h=A.createProjectionLayer(o),i.updateRenderState({layers:[h]}),t.setPixelRatio(1),t.setSize(h.textureWidth,h.textureHeight,!1),y=new Hi(h.textureWidth,h.textureHeight,{format:ne,type:Gt,depthTexture:new El(h.textureWidth,h.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,colorSpace:t.outputColorSpace,samples:f.antialias?4:0,resolveDepthBuffer:!1===h.ignoreDepthValues,resolveStencilBuffer:!1===h.ignoreDepthValues})}else{const n={antialias:f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:u}),t.setPixelRatio(1),t.setSize(u.framebufferWidth,u.framebufferHeight,!1),y=new Hi(u.framebufferWidth,u.framebufferHeight,{format:ne,type:Gt,colorSpace:t.outputColorSpace,stencilBuffer:f.stencil,resolveDepthBuffer:!1===u.ignoreDepthValues,resolveStencilBuffer:!1===u.ignoreDepthValues})}y.isXRRenderTarget=!0,this.setFoveation(o),l=null,r=await i.requestReferenceSpace(a),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return p.getDepthTexture()};const D=new gi,R=new gi;function U(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;let e=t.near,n=t.far;null!==p.texture&&(p.depthNear>0&&(e=p.depthNear),p.depthFar>0&&(n=p.depthFar)),B.near=w.near=x.near=e,B.far=w.far=x.far=n,S===B.near&&b===B.far||(i.updateRenderState({depthNear:B.near,depthFar:B.far}),S=B.near,b=B.far),B.layers.mask=6|t.layers.mask,x.layers.mask=3&B.layers.mask,w.layers.mask=5&B.layers.mask;const s=t.parent,r=B.cameras;U(B,s);for(let t=0;t<r.length;t++)U(r[t],s);2===r.length?function(t,e,n){D.setFromMatrixPosition(e.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);const i=D.distanceTo(R),s=e.projectionMatrix.elements,r=n.projectionMatrix.elements,a=s[14]/(s[10]-1),o=s[14]/(s[10]+1),l=(s[9]+1)/s[5],c=(s[9]-1)/s[5],A=(s[8]-1)/s[0],h=(r[8]+1)/r[0],u=a*A,d=a*h,p=i/(-A+h),g=p*-A;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(g),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===s[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=a+p,n=o+p,s=u-g,r=d+(i-g),A=l*o/n*e,h=c*o/n*e;t.projectionMatrix.makePerspective(s,r,A,h,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(B,x,w):B.projectionMatrix.copy(x.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*ri*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,B,s)},this.getCamera=function(){return B},this.getFoveation=function(){if(null!==h||null!==u)return o},this.setFoveation=function(t){o=t,null!==h&&(h.fixedFoveation=t),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==p.texture},this.getDepthSensingMesh=function(){return p.getMesh(B)},this.getCameraTexture=function(t){return g[t]};let P=null;const L=new ed;L.setAnimationLoop(function(e,s){if(c=s.getViewerPose(l||r),d=s,null!==c){const e=c.views;null!==u&&(t.setRenderTargetFramebuffer(y,u.framebuffer),t.setRenderTarget(y));let n=!1;e.length!==B.cameras.length&&(B.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const s=e[i];let r=null;if(null!==u)r=u.getViewport(s);else{const e=A.getViewSubImage(h,s);r=e.viewport,0===i&&(t.setRenderTargetTextures(y,e.colorTexture,e.depthStencilTexture),t.setRenderTarget(y))}let a=_[i];void 0===a&&(a=new da,a.layers.enable(i),a.viewport=new zi,_[i]=a),a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(s.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(r.x,r.y,r.width,r.height),0===i&&(B.matrix.copy(a.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale)),!0===n&&B.cameras.push(a)}const s=i.enabledFeatures;if(s&&s.includes("depth-sensing")&&"gpu-optimized"==i.depthUsage&&A){const t=A.getDepthInformation(e[0]);t&&t.isValid&&t.texture&&p.init(t,i.renderState)}if(s&&s.includes("camera-access")&&(t.state.unbindTexture(),A))for(let t=0;t<e.length;t++){const n=e[t].camera;if(n){let t=g[n];t||(t=new bg,g[n]=t);const e=A.getCameraImage(n);t.sourceTexture=e}}}for(let t=0;t<I.length;t++){const e=C[t],n=I[t];null!==e&&void 0!==n&&n.update(e,s,l||r)}P&&P(e,s),s.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:s}),d=null}),this.setAnimationLoop=function(t){P=t},this.dispose=function(){}}}const Qg=new Qs,Dg=new Es;function Rg(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,n(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,n(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,n(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,i.side===b&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,n(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),i.side===b&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,n(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,n(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const s=e.get(i),r=s.envMap,a=s.envMapRotation;r&&(t.envMap.value=r,Qg.copy(a),Qg.x*=-1,Qg.y*=-1,Qg.z*=-1,r.isCubeTexture&&!1===r.isRenderTargetTexture&&(Qg.y*=-1,Qg.z*=-1),t.envMapRotation.value.setFromMatrix4(Dg.makeRotationFromEuler(Qg)),t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,aa(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,s,r,a,o){s.isMeshBasicMaterial||s.isMeshLambertMaterial?i(t,s):s.isMeshToonMaterial?(i(t,s),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,s)):s.isMeshPhongMaterial?(i(t,s),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,s)):s.isMeshStandardMaterial?(i(t,s),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform)),t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform)),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,s),s.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform))),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===b&&t.clearcoatNormalScale.value.negate())),e.dispersion>0&&(t.dispersion.value=e.dispersion),e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform))),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform))),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform)),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,s,o)):s.isMeshMatcapMaterial?(i(t,s),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,s)):s.isMeshDepthMaterial?i(t,s):s.isMeshDistanceMaterial?(i(t,s),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,s)):s.isMeshNormalMaterial?i(t,s):s.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,s),s.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,s)):s.isPointsMaterial?function(t,e,i,s){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*s,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,s,r,a):s.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform)),e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform)),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,s):s.isShadowMaterial?(t.color.value.copy(s.color),t.opacity.value=s.opacity):s.isShaderMaterial&&(s.uniformsNeedUpdate=!1)}}}function Ug(t,e,n,i){let s={},r={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,i){const s=t.value,r=e+"_"+n;if(void 0===i[r])return i[r]="number"==typeof s||"boolean"==typeof s?s:s.clone(),!0;{const t=i[r];if("number"==typeof s||"boolean"==typeof s){if(t!==s)return i[r]=s,!0}else if(!1===t.equals(s))return t.copy(s),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function A(e){const n=e.target;n.removeEventListener("dispose",A);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),t.deleteBuffer(s[n.id]),delete s[n.id],delete r[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,h){let u=s[n.id];void 0===u&&(function(t){const e=t.uniforms;let n=0;for(let t=0,i=e.length;t<i;t++){const i=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=i.length;t<e;t++){const e=i[t],s=Array.isArray(e.value)?e.value:[e.value];for(let t=0,i=s.length;t<i;t++){const i=c(s[t]),r=n%16,a=r%i.boundary,o=r+a;n+=a,0!==o&&16-o<i.storage&&(n+=16-o),e.__data=new Float32Array(i.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=i.storage}}}const i=n%16;i>0&&(n+=16-i),t.__size=n,t.__cache={}}(n),u=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const i=t.createBuffer(),s=e.__size,r=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,s,r),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),s[n.id]=u,n.addEventListener("dispose",A));const d=h.program;i.updateUBOMapping(n,d);const p=e.render.frame;r[n.id]!==p&&(function(e){const n=s[e.id],i=e.uniforms,r=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=i.length;e<n;e++){const n=Array.isArray(i[e])?i[e]:[i[e]];for(let i=0,s=n.length;i<s;i++){const s=n[i];if(!0===l(s,e,i,r)){const e=s.__offset,n=Array.isArray(s.value)?s.value:[s.value];let i=0;for(let r=0;r<n.length;r++){const a=n[r],o=c(a);"number"==typeof a||"boolean"==typeof a?(s.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,e+i,s.__data)):a.isMatrix3?(s.__data[0]=a.elements[0],s.__data[1]=a.elements[1],s.__data[2]=a.elements[2],s.__data[3]=0,s.__data[4]=a.elements[3],s.__data[5]=a.elements[4],s.__data[6]=a.elements[5],s.__data[7]=0,s.__data[8]=a.elements[6],s.__data[9]=a.elements[7],s.__data[10]=a.elements[8],s.__data[11]=0):(a.toArray(s.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,s.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),r[n.id]=p)},dispose:function(){for(const e in s)t.deleteBuffer(s[e]);a=[],s={},r={}}}}class Pg{constructor(t={}){const{canvas:e=wi(),context:n=null,depth:i=!0,stencil:s=!1,alpha:r=!1,antialias:a=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:A=!1,reversedDepthBuffer:h=!1}=t;let u;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");u=n.getContextAttributes().alpha}else u=r;const d=new Uint32Array(4),p=new Int32Array(4);let g=null,m=null;const y=[],I=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=dt,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const C=this;let E=!1;this._outputColorSpace=hn;let v=0,x=0,w=null,_=-1,B=null;const T=new zi,Q=new zi;let D=null;const R=new dr(0);let U=0,P=e.width,L=e.height,F=1,N=null,k=null;const O=new zi(0,0,P,L),z=new zi(0,0,P,L);let G=!1;const H=new wo;let V=!1,Y=!1;const q=new Es,W=new gi,J=new zi,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let X=!1;function K(){return null===w?F:1}let Z,$,tt,et,nt,it,st,rt,at,ot,lt,ct,At,ht,ut,pt,gt,ft,mt,yt,It,Ct,Et,vt,xt=n;function wt(t,n){return e.getContext(t,n)}try{const t={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:A};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${f}`),e.addEventListener("webglcontextlost",St,!1),e.addEventListener("webglcontextrestored",bt,!1),e.addEventListener("webglcontextcreationerror",Mt,!1),null===xt){const e="webgl2";if(xt=wt(e,t),null===xt)throw wt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function _t(){Z=new Dd(xt),Z.init(),Ct=new Sg(xt,Z),$=new ud(xt,Z,t,Ct),tt=new _g(xt,Z),$.reversedDepthBuffer&&h&&tt.buffers.depth.setReversed(!0),et=new Pd(xt),nt=new ug,it=new Bg(xt,Z,tt,nt,$,Ct,et),st=new pd(C),rt=new Qd(C),at=new nd(xt),Et=new Ad(xt,at),ot=new Rd(xt,at,et,Et),lt=new Fd(xt,ot,at,et),mt=new Ld(xt,$,it),pt=new dd(nt),ct=new hg(C,st,rt,Z,$,Et,pt),At=new Rg(C,nt),ht=new fg,ut=new vg(Z),ft=new cd(C,st,rt,tt,lt,u,o),gt=new xg(C,lt,$),vt=new Ug(xt,et,$,tt),yt=new hd(xt,Z,et),It=new Ud(xt,Z,et),et.programs=ct.programs,C.capabilities=$,C.extensions=Z,C.properties=nt,C.renderLists=ht,C.shadowMap=gt,C.state=tt,C.info=et}_t();const Bt=new Tg(C,xt);function St(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function bt(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const t=et.autoReset,e=gt.enabled,n=gt.autoUpdate,i=gt.needsUpdate,s=gt.type;_t(),et.autoReset=t,gt.enabled=e,gt.autoUpdate=n,gt.needsUpdate=i,gt.type=s}function Mt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Tt(t){const e=t.target;e.removeEventListener("dispose",Tt),function(t){(function(t){const e=nt.get(t).programs;void 0!==e&&(e.forEach(function(t){ct.releaseProgram(t)}),t.isShaderMaterial&&ct.releaseShaderCache(t))})(t),nt.remove(t)}(e)}function Qt(t,e,n){!0===t.transparent&&t.side===M&&!1===t.forceSinglePass?(t.side=b,t.needsUpdate=!0,Ht(t,e,n),t.side=S,t.needsUpdate=!0,Ht(t,e,n),t.side=M):Ht(t,e,n)}this.xr=Bt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=Z.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Z.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(t){void 0!==t&&(F=t,this.setSize(P,L,!1))},this.getSize=function(t){return t.set(P,L)},this.setSize=function(t,n,i=!0){Bt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,L=n,e.width=Math.floor(t*F),e.height=Math.floor(n*F),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(P*F,L*F).floor()},this.setDrawingBufferSize=function(t,n,i){P=t,L=n,F=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(T)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),tt.viewport(T.copy(O).multiplyScalar(F).round())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),tt.scissor(Q.copy(z).multiplyScalar(F).round())},this.getScissorTest=function(){return G},this.setScissorTest=function(t){tt.setScissorTest(G=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){k=t},this.getClearColor=function(t){return t.copy(ft.getClearColor())},this.setClearColor=function(){ft.setClearColor(...arguments)},this.getClearAlpha=function(){return ft.getClearAlpha()},this.setClearAlpha=function(){ft.setClearAlpha(...arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==w){const e=w.texture.format;t=e===Ae||e===le||e===ae}if(t){const t=w.texture.type,e=t===Gt||t===Wt||t===Yt||t===Zt||t===Xt||t===Kt,n=ft.getClearColor(),i=ft.getClearAlpha(),s=n.r,r=n.g,a=n.b;e?(d[0]=s,d[1]=r,d[2]=a,d[3]=i,xt.clearBufferuiv(xt.COLOR,0,d)):(p[0]=s,p[1]=r,p[2]=a,p[3]=i,xt.clearBufferiv(xt.COLOR,0,p))}else i|=xt.COLOR_BUFFER_BIT}e&&(i|=xt.DEPTH_BUFFER_BIT),n&&(i|=xt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),xt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",St,!1),e.removeEventListener("webglcontextrestored",bt,!1),e.removeEventListener("webglcontextcreationerror",Mt,!1),ft.dispose(),ht.dispose(),ut.dispose(),nt.dispose(),st.dispose(),rt.dispose(),lt.dispose(),Et.dispose(),vt.dispose(),ct.dispose(),Bt.dispose(),Bt.removeEventListener("sessionstart",Rt),Bt.removeEventListener("sessionend",Ut),Pt.stop()},this.renderBufferDirect=function(t,e,n,i,s,r){null===e&&(e=j);const a=s.isMesh&&s.matrixWorld.determinant()<0,o=function(t,e,n,i,s){!0!==e.isScene&&(e=j),it.resetTextureUnits();const r=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===w?C.outputColorSpace:!0===w.isXRRenderTarget?w.texture.colorSpace:un,l=(i.isMeshStandardMaterial?rt:st).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,A=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),h=!!n.morphAttributes.position,u=!!n.morphAttributes.normal,d=!!n.morphAttributes.color;let p=dt;i.toneMapped&&(null!==w&&!0!==w.isXRRenderTarget||(p=C.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,f=void 0!==g?g.length:0,y=nt.get(i),I=m.state.lights;if(!0===V&&(!0===Y||t!==B)){const e=t===B&&i.id===_;pt.setState(i,t,e)}let E=!1;i.version===y.__version?y.needsLights&&y.lightsStateVersion!==I.state.version||y.outputColorSpace!==o||s.isBatchedMesh&&!1===y.batching?E=!0:s.isBatchedMesh||!0!==y.batching?s.isBatchedMesh&&!0===y.batchingColor&&null===s.colorTexture||s.isBatchedMesh&&!1===y.batchingColor&&null!==s.colorTexture||s.isInstancedMesh&&!1===y.instancing?E=!0:s.isInstancedMesh||!0!==y.instancing?s.isSkinnedMesh&&!1===y.skinning?E=!0:s.isSkinnedMesh||!0!==y.skinning?s.isInstancedMesh&&!0===y.instancingColor&&null===s.instanceColor||s.isInstancedMesh&&!1===y.instancingColor&&null!==s.instanceColor||s.isInstancedMesh&&!0===y.instancingMorph&&null===s.morphTexture||s.isInstancedMesh&&!1===y.instancingMorph&&null!==s.morphTexture||y.envMap!==l||!0===i.fog&&y.fog!==r?E=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===pt.numPlanes&&y.numIntersection===pt.numIntersection?(y.vertexAlphas!==c||y.vertexTangents!==A||y.morphTargets!==h||y.morphNormals!==u||y.morphColors!==d||y.toneMapping!==p||y.morphTargetsCount!==f)&&(E=!0):E=!0:E=!0:E=!0:E=!0:(E=!0,y.__version=i.version);let v=y.currentProgram;!0===E&&(v=Ht(i,e,s));let x=!1,S=!1,b=!1;const M=v.getUniforms(),T=y.uniforms;if(tt.useProgram(v.program)&&(x=!0,S=!0,b=!0),i.id!==_&&(_=i.id,S=!0),x||B!==t){tt.buffers.depth.getReversed()&&!0!==t.reversedDepth&&(t._reversedDepth=!0,t.updateProjectionMatrix()),M.setValue(xt,"projectionMatrix",t.projectionMatrix),M.setValue(xt,"viewMatrix",t.matrixWorldInverse);const e=M.map.cameraPosition;void 0!==e&&e.setValue(xt,W.setFromMatrixPosition(t.matrixWorld)),$.logarithmicDepthBuffer&&M.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&M.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),B!==t&&(B=t,S=!0,b=!0)}if(s.isSkinnedMesh){M.setOptional(xt,s,"bindMatrix"),M.setOptional(xt,s,"bindMatrixInverse");const t=s.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),M.setValue(xt,"boneTexture",t.boneTexture,it))}s.isBatchedMesh&&(M.setOptional(xt,s,"batchingTexture"),M.setValue(xt,"batchingTexture",s._matricesTexture,it),M.setOptional(xt,s,"batchingIdTexture"),M.setValue(xt,"batchingIdTexture",s._indirectTexture,it),M.setOptional(xt,s,"batchingColorTexture"),null!==s._colorsTexture&&M.setValue(xt,"batchingColorTexture",s._colorsTexture,it));const Q=n.morphAttributes;var D,R;if(void 0===Q.position&&void 0===Q.normal&&void 0===Q.color||mt.update(s,n,v),(S||y.receiveShadow!==s.receiveShadow)&&(y.receiveShadow=s.receiveShadow,M.setValue(xt,"receiveShadow",s.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(T.envMap.value=l,T.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),i.isMeshStandardMaterial&&null===i.envMap&&null!==e.environment&&(T.envMapIntensity.value=e.environmentIntensity),S&&(M.setValue(xt,"toneMappingExposure",C.toneMappingExposure),y.needsLights&&(R=b,(D=T).ambientLightColor.needsUpdate=R,D.lightProbe.needsUpdate=R,D.directionalLights.needsUpdate=R,D.directionalLightShadows.needsUpdate=R,D.pointLights.needsUpdate=R,D.pointLightShadows.needsUpdate=R,D.spotLights.needsUpdate=R,D.spotLightShadows.needsUpdate=R,D.rectAreaLights.needsUpdate=R,D.hemisphereLights.needsUpdate=R),r&&!0===i.fog&&At.refreshFogUniforms(T,r),At.refreshMaterialUniforms(T,i,F,L,m.state.transmissionRenderTarget[t.id]),Gp.upload(xt,Vt(y),T,it)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Gp.upload(xt,Vt(y),T,it),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&M.setValue(xt,"center",s.center),M.setValue(xt,"modelViewMatrix",s.modelViewMatrix),M.setValue(xt,"normalMatrix",s.normalMatrix),M.setValue(xt,"modelMatrix",s.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];vt.update(n,v),vt.bind(n,v)}}return v}(t,e,n,i,s);tt.setMaterial(i,a);let l=n.index,c=1;if(!0===i.wireframe){if(l=ot.getWireframeAttribute(n),void 0===l)return;c=2}const A=n.drawRange,h=n.attributes.position;let u=A.start*c,d=(A.start+A.count)*c;null!==r&&(u=Math.max(u,r.start*c),d=Math.min(d,(r.start+r.count)*c)),null!==l?(u=Math.max(u,0),d=Math.min(d,l.count)):null!=h&&(u=Math.max(u,0),d=Math.min(d,h.count));const p=d-u;if(p<0||p===1/0)return;let g;Et.setup(s,i,o,n,l);let f=yt;if(null!==l&&(g=at.get(l),f=It,f.setIndex(g)),s.isMesh)!0===i.wireframe?(tt.setLineWidth(i.wireframeLinewidth*K()),f.setMode(xt.LINES)):f.setMode(xt.TRIANGLES);else if(s.isLine){let t=i.linewidth;void 0===t&&(t=1),tt.setLineWidth(t*K()),s.isLineSegments?f.setMode(xt.LINES):s.isLineLoop?f.setMode(xt.LINE_LOOP):f.setMode(xt.LINE_STRIP)}else s.isPoints?f.setMode(xt.POINTS):s.isSprite&&f.setMode(xt.TRIANGLES);if(s.isBatchedMesh)if(null!==s._multiDrawInstances)Bi("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),f.renderMultiDrawInstances(s._multiDrawStarts,s._multiDrawCounts,s._multiDrawCount,s._multiDrawInstances);else if(Z.get("WEBGL_multi_draw"))f.renderMultiDraw(s._multiDrawStarts,s._multiDrawCounts,s._multiDrawCount);else{const t=s._multiDrawStarts,e=s._multiDrawCounts,n=s._multiDrawCount,r=l?at.get(l).bytesPerElement:1,a=nt.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)a.setValue(xt,"_gl_DrawID",i),f.render(t[i]/r,e[i])}else if(s.isInstancedMesh)f.renderInstances(u,p,s.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);f.renderInstances(u,p,e)}else f.render(u,p)},this.compile=function(t,e,n=null){null===n&&(n=t),m=ut.get(n),m.init(e),I.push(m),n.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))}),t!==n&&t.traverseVisible(function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))}),m.setupLights();const i=new Set;return t.traverse(function(t){if(!(t.isMesh||t.isPoints||t.isLine||t.isSprite))return;const e=t.material;if(e)if(Array.isArray(e))for(let s=0;s<e.length;s++){const r=e[s];Qt(r,n,t),i.add(r)}else Qt(e,n,t),i.add(e)}),m=I.pop(),i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise(e=>{function n(){i.forEach(function(t){nt.get(t).currentProgram.isReady()&&i.delete(t)}),0!==i.size?setTimeout(n,10):e(t)}null!==Z.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let Dt=null;function Rt(){Pt.stop()}function Ut(){Pt.start()}const Pt=new ed;function Lt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||H.intersectsSprite(t)){i&&J.setFromMatrixPosition(t.matrixWorld).applyMatrix4(q);const e=lt.update(t),s=t.material;s.visible&&g.push(t,e,s,n,J.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||H.intersectsObject(t))){const e=lt.update(t),s=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),J.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),J.copy(e.boundingSphere.center)),J.applyMatrix4(t.matrixWorld).applyMatrix4(q)),Array.isArray(s)){const i=e.groups;for(let r=0,a=i.length;r<a;r++){const a=i[r],o=s[a.materialIndex];o&&o.visible&&g.push(t,e,o,n,J.z,a)}}else s.visible&&g.push(t,e,s,n,J.z,null)}const s=t.children;for(let t=0,r=s.length;t<r;t++)Lt(s[t],e,n,i)}function Ft(t,e,n,i){const s=t.opaque,r=t.transmissive,a=t.transparent;m.setupLightsView(n),!0===V&&pt.setGlobalState(C.clippingPlanes,n),i&&tt.viewport(T.copy(i)),s.length>0&&kt(s,e,n),r.length>0&&kt(r,e,n),a.length>0&&kt(a,e,n),tt.buffers.depth.setTest(!0),tt.buffers.depth.setMask(!0),tt.buffers.color.setMask(!0),tt.setPolygonOffset(!1)}function Nt(t,e,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===m.state.transmissionRenderTarget[i.id]&&(m.state.transmissionRenderTarget[i.id]=new Hi(1,1,{generateMipmaps:!0,type:Z.has("EXT_color_buffer_half_float")||Z.has("EXT_color_buffer_float")?jt:Gt,minFilter:Ot,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ti.workingColorSpace}));const r=m.state.transmissionRenderTarget[i.id],a=i.viewport||T;r.setSize(a.z*C.transmissionResolutionScale,a.w*C.transmissionResolutionScale);const o=C.getRenderTarget(),l=C.getActiveCubeFace(),c=C.getActiveMipmapLevel();C.setRenderTarget(r),C.getClearColor(R),U=C.getClearAlpha(),U<1&&C.setClearColor(16777215,.5),C.clear(),X&&ft.render(n);const A=C.toneMapping;C.toneMapping=dt;const h=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),m.setupLightsView(i),!0===V&&pt.setGlobalState(C.clippingPlanes,i),kt(t,n,i),it.updateMultisampleRenderTarget(r),it.updateRenderTargetMipmap(r),!1===Z.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let s=0,r=e.length;s<r;s++){const r=e[s],a=r.object,o=r.geometry,l=r.material,c=r.group;if(l.side===M&&a.layers.test(i.layers)){const e=l.side;l.side=b,l.needsUpdate=!0,zt(a,n,i,o,l,c),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(it.updateMultisampleRenderTarget(r),it.updateRenderTargetMipmap(r))}C.setRenderTarget(o,l,c),C.setClearColor(R,U),void 0!==h&&(i.viewport=h),C.toneMapping=A}function kt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let s=0,r=t.length;s<r;s++){const r=t[s],a=r.object,o=r.geometry,l=r.group;let c=r.material;!0===c.allowOverride&&null!==i&&(c=i),a.layers.test(n.layers)&&zt(a,e,n,o,c,l)}}function zt(t,e,n,i,s,r){t.onBeforeRender(C,e,n,i,s,r),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),s.onBeforeRender(C,e,n,i,t,r),!0===s.transparent&&s.side===M&&!1===s.forceSinglePass?(s.side=b,s.needsUpdate=!0,C.renderBufferDirect(n,e,i,s,t,r),s.side=S,s.needsUpdate=!0,C.renderBufferDirect(n,e,i,s,t,r),s.side=M):C.renderBufferDirect(n,e,i,s,t,r),t.onAfterRender(C,e,n,i,s,r)}function Ht(t,e,n){!0!==e.isScene&&(e=j);const i=nt.get(t),s=m.state.lights,r=m.state.shadowsArray,a=s.state.version,o=ct.getParameters(t,s.state,r,e,n),l=ct.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?rt:st).get(t.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===c&&(t.addEventListener("dispose",Tt),c=new Map,i.programs=c);let A=c.get(l);if(void 0!==A){if(i.currentProgram===A&&i.lightsStateVersion===a)return qt(t,o),A}else o.uniforms=ct.getUniforms(t),t.onBeforeCompile(o,C),A=ct.acquireProgram(o,l),c.set(l,A),i.uniforms=o.uniforms;const h=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=pt.uniform),qt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(h.ambientLightColor.value=s.state.ambient,h.lightProbe.value=s.state.probe,h.directionalLights.value=s.state.directional,h.directionalLightShadows.value=s.state.directionalShadow,h.spotLights.value=s.state.spot,h.spotLightShadows.value=s.state.spotShadow,h.rectAreaLights.value=s.state.rectArea,h.ltc_1.value=s.state.rectAreaLTC1,h.ltc_2.value=s.state.rectAreaLTC2,h.pointLights.value=s.state.point,h.pointLightShadows.value=s.state.pointShadow,h.hemisphereLights.value=s.state.hemi,h.directionalShadowMap.value=s.state.directionalShadowMap,h.directionalShadowMatrix.value=s.state.directionalShadowMatrix,h.spotShadowMap.value=s.state.spotShadowMap,h.spotLightMatrix.value=s.state.spotLightMatrix,h.spotLightMap.value=s.state.spotLightMap,h.pointShadowMap.value=s.state.pointShadowMap,h.pointShadowMatrix.value=s.state.pointShadowMatrix),i.currentProgram=A,i.uniformsList=null,A}function Vt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=Gp.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function qt(t,e){const n=nt.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Pt.setAnimationLoop(function(t){Dt&&Dt(t)}),"undefined"!=typeof self&&Pt.setContext(self),this.setAnimationLoop=function(t){Dt=t,Bt.setAnimationLoop(t),null===t?Pt.stop():Pt.start()},Bt.addEventListener("sessionstart",Rt),Bt.addEventListener("sessionend",Ut),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===E)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Bt.enabled&&!0===Bt.isPresenting&&(!0===Bt.cameraAutoUpdate&&Bt.updateCamera(e),e=Bt.getCamera()),!0===t.isScene&&t.onBeforeRender(C,t,e,w),m=ut.get(t,I.length),m.init(e),I.push(m),q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),H.setFromProjectionMatrix(q,Xn,e.reversedDepth),Y=this.localClippingEnabled,V=pt.init(this.clippingPlanes,Y),g=ht.get(t,y.length),g.init(),y.push(g),!0===Bt.enabled&&!0===Bt.isPresenting){const t=C.xr.getDepthSensingMesh();null!==t&&Lt(t,e,-1/0,C.sortObjects)}Lt(t,e,0,C.sortObjects),g.finish(),!0===C.sortObjects&&g.sort(N,k),X=!1===Bt.enabled||!1===Bt.isPresenting||!1===Bt.hasDepthSensing(),X&&ft.addToRenderList(g,t),this.info.render.frame++,!0===V&&pt.beginShadows();const n=m.state.shadowsArray;gt.render(n,t,e),!0===V&&pt.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=g.opaque,s=g.transmissive;if(m.setupLights(),e.isArrayCamera){const n=e.cameras;if(s.length>0)for(let e=0,r=n.length;e<r;e++)Nt(i,s,t,n[e]);X&&ft.render(t);for(let e=0,i=n.length;e<i;e++){const i=n[e];Ft(g,t,i,i.viewport)}}else s.length>0&&Nt(i,s,t,e),X&&ft.render(t),Ft(g,t,e);null!==w&&0===x&&(it.updateMultisampleRenderTarget(w),it.updateRenderTargetMipmap(w)),!0===t.isScene&&t.onAfterRender(C,t,e),Et.resetDefaultState(),_=-1,B=null,I.pop(),I.length>0?(m=I[I.length-1],!0===V&&pt.setGlobalState(C.clippingPlanes,m.state.camera)):m=null,y.pop(),g=y.length>0?y[y.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(t,e,n){const i=nt.get(t);i.__autoAllocateDepthBuffer=!1===t.resolveDepthBuffer,!1===i.__autoAllocateDepthBuffer&&(i.__useRenderToTexture=!1),nt.get(t.texture).__webglTexture=e,nt.get(t.depthTexture).__webglTexture=i.__autoAllocateDepthBuffer?void 0:n,i.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(t,e){const n=nt.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e};const Jt=xt.createFramebuffer();this.setRenderTarget=function(t,e=0,n=0){w=t,v=e,x=n;let i=!0,s=null,r=!1,a=!1;if(t){const o=nt.get(t);if(void 0!==o.__useDefaultFramebuffer)tt.bindFramebuffer(xt.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)it.setupRenderTarget(t);else if(o.__hasExternalTextures)it.rebindTextures(t,nt.get(t.texture).__webglTexture,nt.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&nt.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");it.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const c=nt.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(s=Array.isArray(c[e])?c[e][n]:c[e],r=!0):s=t.samples>0&&!1===it.useMultisampledRTT(t)?nt.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,T.copy(t.viewport),Q.copy(t.scissor),D=t.scissorTest}else T.copy(O).multiplyScalar(F).floor(),Q.copy(z).multiplyScalar(F).floor(),D=G;if(0!==n&&(s=Jt),tt.bindFramebuffer(xt.FRAMEBUFFER,s)&&i&&tt.drawBuffers(t,s),tt.viewport(T),tt.scissor(Q),tt.setScissorTest(D),r){const i=nt.get(t.texture);xt.framebufferTexture2D(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,xt.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(a){const i=e;for(let e=0;e<t.textures.length;e++){const s=nt.get(t.textures[e]);xt.framebufferTextureLayer(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0+e,s.__webglTexture,n,i)}}else if(null!==t&&0!==n){const e=nt.get(t.texture);xt.framebufferTexture2D(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,xt.TEXTURE_2D,e.__webglTexture,n)}_=-1},this.readRenderTargetPixels=function(t,e,n,i,s,r,a,o=0){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){tt.bindFramebuffer(xt.FRAMEBUFFER,l);try{const a=t.textures[o],l=a.format,c=a.type;if(!$.textureFormatReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-s&&(t.textures.length>1&&xt.readBuffer(xt.COLOR_ATTACHMENT0+o),xt.readPixels(e,n,i,s,Ct.convert(l),Ct.convert(c),r))}finally{const t=null!==w?nt.get(w).__webglFramebuffer:null;tt.bindFramebuffer(xt.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,i,s,r,a,o=0){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=nt.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){if(e>=0&&e<=t.width-i&&n>=0&&n<=t.height-s){tt.bindFramebuffer(xt.FRAMEBUFFER,l);const a=t.textures[o],c=a.format,A=a.type;if(!$.textureFormatReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(A))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const h=xt.createBuffer();xt.bindBuffer(xt.PIXEL_PACK_BUFFER,h),xt.bufferData(xt.PIXEL_PACK_BUFFER,r.byteLength,xt.STREAM_READ),t.textures.length>1&&xt.readBuffer(xt.COLOR_ATTACHMENT0+o),xt.readPixels(e,n,i,s,Ct.convert(c),Ct.convert(A),0);const u=null!==w?nt.get(w).__webglFramebuffer:null;tt.bindFramebuffer(xt.FRAMEBUFFER,u);const d=xt.fenceSync(xt.SYNC_GPU_COMMANDS_COMPLETE,0);return xt.flush(),await function(t,e){return new Promise(function(n,i){setTimeout(function s(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:i();break;case t.TIMEOUT_EXPIRED:setTimeout(s,4);break;default:n()}},4)})}(xt,d),xt.bindBuffer(xt.PIXEL_PACK_BUFFER,h),xt.getBufferSubData(xt.PIXEL_PACK_BUFFER,0,r),xt.deleteBuffer(h),xt.deleteSync(d),r}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(t,e=null,n=0){const i=Math.pow(2,-n),s=Math.floor(t.image.width*i),r=Math.floor(t.image.height*i),a=null!==e?e.x:0,o=null!==e?e.y:0;it.setTexture2D(t,0),xt.copyTexSubImage2D(xt.TEXTURE_2D,n,0,0,a,o,s,r),tt.unbindTexture()};const $t=xt.createFramebuffer(),te=xt.createFramebuffer();this.copyTextureToTexture=function(t,e,n=null,i=null,s=0,r=null){let a,o,l,c,A,h,u,d,p;null===r&&(0!==s?(Bi("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),r=s,s=0):r=0);const g=t.isCompressedTexture?t.mipmaps[r]:t.image;if(null!==n)a=n.max.x-n.min.x,o=n.max.y-n.min.y,l=n.isBox3?n.max.z-n.min.z:1,c=n.min.x,A=n.min.y,h=n.isBox3?n.min.z:0;else{const e=Math.pow(2,-s);a=Math.floor(g.width*e),o=Math.floor(g.height*e),l=t.isDataArrayTexture?g.depth:t.isData3DTexture?Math.floor(g.depth*e):1,c=0,A=0,h=0}null!==i?(u=i.x,d=i.y,p=i.z):(u=0,d=0,p=0);const f=Ct.convert(e.format),m=Ct.convert(e.type);let y;e.isData3DTexture?(it.setTexture3D(e,0),y=xt.TEXTURE_3D):e.isDataArrayTexture||e.isCompressedArrayTexture?(it.setTexture2DArray(e,0),y=xt.TEXTURE_2D_ARRAY):(it.setTexture2D(e,0),y=xt.TEXTURE_2D),xt.pixelStorei(xt.UNPACK_FLIP_Y_WEBGL,e.flipY),xt.pixelStorei(xt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),xt.pixelStorei(xt.UNPACK_ALIGNMENT,e.unpackAlignment);const I=xt.getParameter(xt.UNPACK_ROW_LENGTH),C=xt.getParameter(xt.UNPACK_IMAGE_HEIGHT),E=xt.getParameter(xt.UNPACK_SKIP_PIXELS),v=xt.getParameter(xt.UNPACK_SKIP_ROWS),x=xt.getParameter(xt.UNPACK_SKIP_IMAGES);xt.pixelStorei(xt.UNPACK_ROW_LENGTH,g.width),xt.pixelStorei(xt.UNPACK_IMAGE_HEIGHT,g.height),xt.pixelStorei(xt.UNPACK_SKIP_PIXELS,c),xt.pixelStorei(xt.UNPACK_SKIP_ROWS,A),xt.pixelStorei(xt.UNPACK_SKIP_IMAGES,h);const w=t.isDataArrayTexture||t.isData3DTexture,_=e.isDataArrayTexture||e.isData3DTexture;if(t.isDepthTexture){const n=nt.get(t),i=nt.get(e),g=nt.get(n.__renderTarget),f=nt.get(i.__renderTarget);tt.bindFramebuffer(xt.READ_FRAMEBUFFER,g.__webglFramebuffer),tt.bindFramebuffer(xt.DRAW_FRAMEBUFFER,f.__webglFramebuffer);for(let n=0;n<l;n++)w&&(xt.framebufferTextureLayer(xt.READ_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,nt.get(t).__webglTexture,s,h+n),xt.framebufferTextureLayer(xt.DRAW_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,nt.get(e).__webglTexture,r,p+n)),xt.blitFramebuffer(c,A,a,o,u,d,a,o,xt.DEPTH_BUFFER_BIT,xt.NEAREST);tt.bindFramebuffer(xt.READ_FRAMEBUFFER,null),tt.bindFramebuffer(xt.DRAW_FRAMEBUFFER,null)}else if(0!==s||t.isRenderTargetTexture||nt.has(t)){const n=nt.get(t),i=nt.get(e);tt.bindFramebuffer(xt.READ_FRAMEBUFFER,$t),tt.bindFramebuffer(xt.DRAW_FRAMEBUFFER,te);for(let t=0;t<l;t++)w?xt.framebufferTextureLayer(xt.READ_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,n.__webglTexture,s,h+t):xt.framebufferTexture2D(xt.READ_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,xt.TEXTURE_2D,n.__webglTexture,s),_?xt.framebufferTextureLayer(xt.DRAW_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,i.__webglTexture,r,p+t):xt.framebufferTexture2D(xt.DRAW_FRAMEBUFFER,xt.COLOR_ATTACHMENT0,xt.TEXTURE_2D,i.__webglTexture,r),0!==s?xt.blitFramebuffer(c,A,a,o,u,d,a,o,xt.COLOR_BUFFER_BIT,xt.NEAREST):_?xt.copyTexSubImage3D(y,r,u,d,p+t,c,A,a,o):xt.copyTexSubImage2D(y,r,u,d,c,A,a,o);tt.bindFramebuffer(xt.READ_FRAMEBUFFER,null),tt.bindFramebuffer(xt.DRAW_FRAMEBUFFER,null)}else _?t.isDataTexture||t.isData3DTexture?xt.texSubImage3D(y,r,u,d,p,a,o,l,f,m,g.data):e.isCompressedArrayTexture?xt.compressedTexSubImage3D(y,r,u,d,p,a,o,l,f,g.data):xt.texSubImage3D(y,r,u,d,p,a,o,l,f,m,g):t.isDataTexture?xt.texSubImage2D(xt.TEXTURE_2D,r,u,d,a,o,f,m,g.data):t.isCompressedTexture?xt.compressedTexSubImage2D(xt.TEXTURE_2D,r,u,d,g.width,g.height,f,g.data):xt.texSubImage2D(xt.TEXTURE_2D,r,u,d,a,o,f,m,g);xt.pixelStorei(xt.UNPACK_ROW_LENGTH,I),xt.pixelStorei(xt.UNPACK_IMAGE_HEIGHT,C),xt.pixelStorei(xt.UNPACK_SKIP_PIXELS,E),xt.pixelStorei(xt.UNPACK_SKIP_ROWS,v),xt.pixelStorei(xt.UNPACK_SKIP_IMAGES,x),0===r&&e.generateMipmaps&&xt.generateMipmap(y),tt.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n=null,i=null,s=0){return Bi('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(t,e,n,i,s)},this.initRenderTarget=function(t){void 0===nt.get(t).__webglFramebuffer&&it.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?it.setTextureCube(t,0):t.isData3DTexture?it.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?it.setTexture2DArray(t,0):it.setTexture2D(t,0),tt.unbindTexture()},this.resetState=function(){v=0,x=0,w=null,tt.reset(),Et.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Xn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Ti._getDrawingBufferColorSpace(t),e.unpackColorSpace=Ti._getUnpackColorSpace()}}const Lg={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"};class Fg{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Ng=new ZA(-1,1,1,-1,0,1),kg=new class extends Hr{constructor(){super(),this.setAttribute("position",new Pr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Pr([0,2,0,0,2,0],2))}};class Og{constructor(t){this._mesh=new ea(kg,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,Ng)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class zg extends Fg{constructor(t,e="tDiffuse"){super(),this.textureID=e,this.uniforms=null,this.material=null,t instanceof la?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=oa.clone(t.uniforms),this.material=new la({name:void 0!==t.name?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this._fsQuad=new Og(this.material)}render(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this._fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this._fsQuad.render(t))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Gg extends Fg{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,n){const i=t.getContext(),s=t.state;let r,a;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0),this.inverse?(r=0,a=1):(r=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),s.buffers.stencil.setFunc(i.ALWAYS,r,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),t.setRenderTarget(n),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(i.EQUAL,1,4294967295),s.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),s.buffers.stencil.setLocked(!0)}}class Hg extends Fg{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}const Vg={name:"SAOShader",defines:{NUM_SAMPLES:7,NUM_RINGS:4,DIFFUSE_TEXTURE:0,PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},tDiffuse:{value:null},tNormal:{value:null},size:{value:new di(512,512)},cameraNear:{value:1},cameraFar:{value:100},cameraProjectionMatrix:{value:new Es},cameraInverseProjectionMatrix:{value:new Es},scale:{value:1},intensity:{value:.1},bias:{value:.5},minResolution:{value:0},kernelRadius:{value:100},randomSeed:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\t#if DIFFUSE_TEXTURE == 1\n\t\tuniform sampler2D tDiffuse;\n\t\t#endif\n\n\t\tuniform highp sampler2D tDepth;\n\t\tuniform highp sampler2D tNormal;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\n\t\tuniform float scale;\n\t\tuniform float intensity;\n\t\tuniform float bias;\n\t\tuniform float kernelRadius;\n\t\tuniform float minResolution;\n\t\tuniform vec2 size;\n\t\tuniform float randomSeed;\n\n\t\t// RGBA depth\n\n\t\t#include <packing>\n\n\t\tvec4 getDefaultColor( const in vec2 screenPosition ) {\n\t\t\t#if DIFFUSE_TEXTURE == 1\n\t\t\treturn texture2D( tDiffuse, vUv );\n\t\t\t#else\n\t\t\treturn vec4( 1.0 );\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];\n\t\t\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\n\t\t\tclipPosition *= clipW; // unprojection.\n\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;\n\t\t}\n\n\t\tvec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );\n\t\t}\n\n\t\tfloat scaleDividedByCameraFar;\n\t\tfloat minResolutionMultipliedByCameraFar;\n\n\t\tfloat getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\n\t\t\tvec3 viewDelta = sampleViewPosition - centerViewPosition;\n\t\t\tfloat viewDistance = length( viewDelta );\n\t\t\tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\n\n\t\t\treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );\n\t\t}\n\n\t\t// moving costly divides into consts\n\t\tconst float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );\n\t\tconst float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );\n\n\t\tfloat getAmbientOcclusion( const in vec3 centerViewPosition ) {\n\t\t\t// precompute some variables require in getOcclusion.\n\t\t\tscaleDividedByCameraFar = scale / cameraFar;\n\t\t\tminResolutionMultipliedByCameraFar = minResolution * cameraFar;\n\t\t\tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );\n\n\t\t\t// jsfiddle that shows sample pattern: https://jsfiddle.net/a16ff1p7/\n\t\t\tfloat angle = rand( vUv + randomSeed ) * PI2;\n\t\t\tvec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES ) / size;\n\t\t\tvec2 radiusStep = radius;\n\n\t\t\tfloat occlusionSum = 0.0;\n\t\t\tfloat weightSum = 0.0;\n\n\t\t\tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {\n\t\t\t\tvec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;\n\t\t\t\tradius += radiusStep;\n\t\t\t\tangle += ANGLE_STEP;\n\n\t\t\t\tfloat sampleDepth = getDepth( sampleUv );\n\t\t\t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfloat sampleViewZ = getViewZ( sampleDepth );\n\t\t\t\tvec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );\n\t\t\t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\n\t\t\t\tweightSum += 1.0;\n\t\t\t}\n\n\t\t\tif( weightSum == 0.0 ) discard;\n\n\t\t\treturn occlusionSum * ( intensity / weightSum );\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat centerDepth = getDepth( vUv );\n\t\t\tif( centerDepth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\tdiscard;\n\t\t\t}\n\n\t\t\tfloat centerViewZ = getViewZ( centerDepth );\n\t\t\tvec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );\n\n\t\t\tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );\n\n\t\t\tgl_FragColor = getDefaultColor( vUv );\n\t\t\tgl_FragColor.xyz *=  1.0 - ambientOcclusion;\n\t\t}"},Yg={name:"DepthLimitedBlurShader",defines:{KERNEL_RADIUS:4,DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tDiffuse:{value:null},size:{value:new di(512,512)},sampleUvOffsets:{value:[new di(0,0)]},sampleWeights:{value:[1]},tDepth:{value:null},cameraNear:{value:10},cameraFar:{value:1e3},depthCutoff:{value:10}},vertexShader:"\n\n\t\t#include <common>\n\n\t\tuniform vec2 size;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec2 vInvSize;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tvInvSize = 1.0 / size;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float depthCutoff;\n\n\t\tuniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];\n\t\tuniform float sampleWeights[ KERNEL_RADIUS + 1 ];\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec2 vInvSize;\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\t#if DEPTH_PACKING == 1\n\t\t\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\n\t\t\t#else\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tif( depth >= ( 1.0 - EPSILON ) ) {\n\t\t\t\tdiscard;\n\t\t\t}\n\n\t\t\tfloat centerViewZ = -getViewZ( depth );\n\t\t\tbool rBreak = false, lBreak = false;\n\n\t\t\tfloat weightSum = sampleWeights[0];\n\t\t\tvec4 diffuseSum = texture2D( tDiffuse, vUv ) * weightSum;\n\n\t\t\tfor( int i = 1; i <= KERNEL_RADIUS; i ++ ) {\n\n\t\t\t\tfloat sampleWeight = sampleWeights[i];\n\t\t\t\tvec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;\n\n\t\t\t\tvec2 sampleUv = vUv + sampleUvOffset;\n\t\t\t\tfloat viewZ = -getViewZ( getDepth( sampleUv ) );\n\n\t\t\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;\n\n\t\t\t\tif( ! rBreak ) {\n\t\t\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\n\t\t\t\t\tweightSum += sampleWeight;\n\t\t\t\t}\n\n\t\t\t\tsampleUv = vUv - sampleUvOffset;\n\t\t\t\tviewZ = -getViewZ( getDepth( sampleUv ) );\n\n\t\t\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;\n\n\t\t\t\tif( ! lBreak ) {\n\t\t\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\n\t\t\t\t\tweightSum += sampleWeight;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgl_FragColor = diffuseSum / weightSum;\n\t\t}"},qg={createSampleWeights:function(t,e){const n=[];for(let i=0;i<=t;i++)n.push(Wg(i,e));return n},createSampleOffsets:function(t,e){const n=[];for(let i=0;i<=t;i++)n.push(e.clone().multiplyScalar(i));return n},configure:function(t,e,n,i){t.defines.KERNEL_RADIUS=e,t.uniforms.sampleUvOffsets.value=qg.createSampleOffsets(e,i),t.uniforms.sampleWeights.value=qg.createSampleWeights(e,n),t.needsUpdate=!0}};function Wg(t,e){return Math.exp(-t*t/(e*e*2))/(Math.sqrt(2*Math.PI)*e)}class Jg extends Fg{constructor(t,e,n=new di(256,256)){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this._originalClearColor=new dr,this._oldClearColor=new dr,this._oldClearAlpha=1,this.params={output:0,saoBias:.5,saoIntensity:.18,saoScale:1,saoKernelRadius:100,saoMinResolution:0,saoBlur:!0,saoBlurRadius:8,saoBlurStdDev:4,saoBlurDepthCutoff:.01},this.resolution=new di(n.x,n.y),this.saoRenderTarget=new Hi(this.resolution.x,this.resolution.y,{type:jt}),this.blurIntermediateRenderTarget=this.saoRenderTarget.clone();const i=new El;i.format=se,i.type=Zt,this.normalRenderTarget=new Hi(this.resolution.x,this.resolution.y,{minFilter:Dt,magFilter:Dt,type:jt,depthTexture:i}),this.normalMaterial=new $c,this.normalMaterial.blending=T,this.saoMaterial=new la({defines:Object.assign({},Vg.defines),fragmentShader:Vg.fragmentShader,vertexShader:Vg.vertexShader,uniforms:oa.clone(Vg.uniforms)}),this.saoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.saoMaterial.uniforms.tDepth.value=i,this.saoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.saoMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.blending=T,this.vBlurMaterial=new la({uniforms:oa.clone(Yg.uniforms),defines:Object.assign({},Yg.defines),vertexShader:Yg.vertexShader,fragmentShader:Yg.fragmentShader}),this.vBlurMaterial.defines.DEPTH_PACKING=0,this.vBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.vBlurMaterial.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.vBlurMaterial.uniforms.tDepth.value=i,this.vBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.vBlurMaterial.blending=T,this.hBlurMaterial=new la({uniforms:oa.clone(Yg.uniforms),defines:Object.assign({},Yg.defines),vertexShader:Yg.vertexShader,fragmentShader:Yg.fragmentShader}),this.hBlurMaterial.defines.DEPTH_PACKING=0,this.hBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.hBlurMaterial.uniforms.tDiffuse.value=this.blurIntermediateRenderTarget.texture,this.hBlurMaterial.uniforms.tDepth.value=i,this.hBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.hBlurMaterial.blending=T,this.materialCopy=new la({uniforms:oa.clone(Lg.uniforms),vertexShader:Lg.vertexShader,fragmentShader:Lg.fragmentShader,blending:T}),this.materialCopy.transparent=!0,this.materialCopy.depthTest=!1,this.materialCopy.depthWrite=!1,this.materialCopy.blending=P,this.materialCopy.blendSrc=j,this.materialCopy.blendDst=z,this.materialCopy.blendEquation=L,this.materialCopy.blendSrcAlpha=W,this.materialCopy.blendDstAlpha=z,this.materialCopy.blendEquationAlpha=L,this.fsQuad=new Og(null)}render(t,e,n){this.renderToScreen&&(this.materialCopy.blending=T,this.materialCopy.uniforms.tDiffuse.value=n.texture,this.materialCopy.needsUpdate=!0,this._renderPass(t,this.materialCopy,null)),t.getClearColor(this._oldClearColor),this._oldClearAlpha=t.getClearAlpha();const i=t.autoClear;t.autoClear=!1,this.saoMaterial.uniforms.bias.value=this.params.saoBias,this.saoMaterial.uniforms.intensity.value=this.params.saoIntensity,this.saoMaterial.uniforms.scale.value=this.params.saoScale,this.saoMaterial.uniforms.kernelRadius.value=this.params.saoKernelRadius,this.saoMaterial.uniforms.minResolution.value=this.params.saoMinResolution,this.saoMaterial.uniforms.cameraNear.value=this.camera.near,this.saoMaterial.uniforms.cameraFar.value=this.camera.far;const s=this.params.saoBlurDepthCutoff*(this.camera.far-this.camera.near);this.vBlurMaterial.uniforms.depthCutoff.value=s,this.hBlurMaterial.uniforms.depthCutoff.value=s,this.vBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.vBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.hBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.hBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.params.saoBlurRadius=Math.floor(this.params.saoBlurRadius),this.prevStdDev===this.params.saoBlurStdDev&&this.prevNumSamples===this.params.saoBlurRadius||(qg.configure(this.vBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new di(0,1)),qg.configure(this.hBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new di(1,0)),this.prevStdDev=this.params.saoBlurStdDev,this.prevNumSamples=this.params.saoBlurRadius),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,7829503,1),this._renderPass(t,this.saoMaterial,this.saoRenderTarget,16777215,1),this.params.saoBlur&&(this._renderPass(t,this.vBlurMaterial,this.blurIntermediateRenderTarget,16777215,1),this._renderPass(t,this.hBlurMaterial,this.saoRenderTarget,16777215,1));const r=this.materialCopy;this.params.output===Jg.OUTPUT.Normal?(this.materialCopy.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.materialCopy.needsUpdate=!0):(this.materialCopy.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.materialCopy.needsUpdate=!0),this.params.output===Jg.OUTPUT.Default?r.blending=P:r.blending=T,this._renderPass(t,r,this.renderToScreen?null:n),t.setClearColor(this._oldClearColor,this._oldClearAlpha),t.autoClear=i}setSize(t,e){this.saoRenderTarget.setSize(t,e),this.blurIntermediateRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.saoMaterial.uniforms.size.value.set(t,e),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.needsUpdate=!0,this.vBlurMaterial.uniforms.size.value.set(t,e),this.vBlurMaterial.needsUpdate=!0,this.hBlurMaterial.uniforms.size.value.set(t,e),this.hBlurMaterial.needsUpdate=!0}dispose(){this.saoRenderTarget.dispose(),this.blurIntermediateRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.normalMaterial.dispose(),this.saoMaterial.dispose(),this.vBlurMaterial.dispose(),this.hBlurMaterial.dispose(),this.materialCopy.dispose(),this.fsQuad.dispose()}_renderPass(t,e,n,i,s){t.getClearColor(this._originalClearColor);const r=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.fsQuad.material=e,this.fsQuad.render(t),t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(r)}_renderOverride(t,e,n,i,s){t.getClearColor(this._originalClearColor);const r=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,s=e.clearAlpha||s,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(r)}}Jg.OUTPUT={Default:0,SAO:1,Normal:2};const jg={name:"GTAOShader",defines:{PERSPECTIVE_CAMERA:1,SAMPLES:16,NORMAL_VECTOR_TYPE:1,DEPTH_SWIZZLING:"x",SCREEN_SPACE_RADIUS:0,SCREEN_SPACE_RADIUS_SCALE:100,SCENE_CLIP_BOX:0},uniforms:{tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},resolution:{value:new di},cameraNear:{value:null},cameraFar:{value:null},cameraProjectionMatrix:{value:new Es},cameraProjectionMatrixInverse:{value:new Es},cameraWorldMatrix:{value:new Es},radius:{value:.25},distanceExponent:{value:1},thickness:{value:1},distanceFallOff:{value:1},scale:{value:1},sceneBoxMin:{value:new gi(-1,-1,-1)},sceneBoxMax:{value:new gi(1,1,1)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\t\tvarying vec2 vUv;\n\t\tuniform highp sampler2D tNormal;\n\t\tuniform highp sampler2D tDepth;\n\t\tuniform sampler2D tNoise;\n\t\tuniform vec2 resolution;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraProjectionMatrixInverse;\n\t\tuniform mat4 cameraWorldMatrix;\n\t\tuniform float radius;\n\t\tuniform float distanceExponent;\n\t\tuniform float thickness;\n\t\tuniform float distanceFallOff;\n\t\tuniform float scale;\n\t\t#if SCENE_CLIP_BOX == 1\n\t\t\tuniform vec3 sceneBoxMin;\n\t\t\tuniform vec3 sceneBoxMax;\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\t#ifndef FRAGMENT_OUTPUT\n\t\t#define FRAGMENT_OUTPUT vec4(vec3(ao), 1.)\n\t\t#endif\n\n\t\tvec3 getViewPosition(const in vec2 screenPosition, const in float depth) {\n\t\t\tvec4 clipSpacePosition = vec4(vec3(screenPosition, depth) * 2.0 - 1.0, 1.0);\n\t\t\tvec4 viewSpacePosition = cameraProjectionMatrixInverse * clipSpacePosition;\n\t\t\treturn viewSpacePosition.xyz / viewSpacePosition.w;\n\t\t}\n\n\t\tfloat getDepth(const vec2 uv) {\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).DEPTH_SWIZZLING;\n\t\t}\n\n\t\tfloat fetchDepth(const ivec2 uv) {\n\t\t\treturn texelFetch(tDepth, uv.xy, 0).DEPTH_SWIZZLING;\n\t\t}\n\n\t\tfloat getViewZ(const in float depth) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\t\treturn perspectiveDepthToViewZ(depth, cameraNear, cameraFar);\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ(depth, cameraNear, cameraFar);\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 computeNormalFromDepth(const vec2 uv) {\n\t\t\tvec2 size = vec2(textureSize(tDepth, 0));\n\t\t\tivec2 p = ivec2(uv * size);\n\t\t\tfloat c0 = fetchDepth(p);\n\t\t\tfloat l2 = fetchDepth(p - ivec2(2, 0));\n\t\t\tfloat l1 = fetchDepth(p - ivec2(1, 0));\n\t\t\tfloat r1 = fetchDepth(p + ivec2(1, 0));\n\t\t\tfloat r2 = fetchDepth(p + ivec2(2, 0));\n\t\t\tfloat b2 = fetchDepth(p - ivec2(0, 2));\n\t\t\tfloat b1 = fetchDepth(p - ivec2(0, 1));\n\t\t\tfloat t1 = fetchDepth(p + ivec2(0, 1));\n\t\t\tfloat t2 = fetchDepth(p + ivec2(0, 2));\n\t\t\tfloat dl = abs((2.0 * l1 - l2) - c0);\n\t\t\tfloat dr = abs((2.0 * r1 - r2) - c0);\n\t\t\tfloat db = abs((2.0 * b1 - b2) - c0);\n\t\t\tfloat dt = abs((2.0 * t1 - t2) - c0);\n\t\t\tvec3 ce = getViewPosition(uv, c0).xyz;\n\t\t\tvec3 dpdx = (dl < dr) ? ce - getViewPosition((uv - vec2(1.0 / size.x, 0.0)), l1).xyz : -ce + getViewPosition((uv + vec2(1.0 / size.x, 0.0)), r1).xyz;\n\t\t\tvec3 dpdy = (db < dt) ? ce - getViewPosition((uv - vec2(0.0, 1.0 / size.y)), b1).xyz : -ce + getViewPosition((uv + vec2(0.0, 1.0 / size.y)), t1).xyz;\n\t\t\treturn normalize(cross(dpdx, dpdy));\n\t\t}\n\n\t\tvec3 getViewNormal(const vec2 uv) {\n\t\t\t#if NORMAL_VECTOR_TYPE == 2\n\t\t\t\treturn normalize(textureLod(tNormal, uv, 0.).rgb);\n\t\t\t#elif NORMAL_VECTOR_TYPE == 1\n\t\t\t\treturn unpackRGBToNormal(textureLod(tNormal, uv, 0.).rgb);\n\t\t\t#else\n\t\t\t\treturn computeNormalFromDepth(uv);\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 getSceneUvAndDepth(vec3 sampleViewPos) {\n\t\t\tvec4 sampleClipPos = cameraProjectionMatrix * vec4(sampleViewPos, 1.);\n\t\t\tvec2 sampleUv = sampleClipPos.xy / sampleClipPos.w * 0.5 + 0.5;\n\t\t\tfloat sampleSceneDepth = getDepth(sampleUv);\n\t\t\treturn vec3(sampleUv, sampleSceneDepth);\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth(vUv.xy);\n\t\t\tif (depth >= 1.0) {\n\t\t\t\tdiscard;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvec3 viewPos = getViewPosition(vUv, depth);\n\t\t\tvec3 viewNormal = getViewNormal(vUv);\n\n\t\t\tfloat radiusToUse = radius;\n\t\t\tfloat distanceFalloffToUse = thickness;\n\t\t\t#if SCREEN_SPACE_RADIUS == 1\n\t\t\t\tfloat radiusScale = getViewPosition(vec2(0.5 + float(SCREEN_SPACE_RADIUS_SCALE) / resolution.x, 0.0), depth).x;\n\t\t\t\tradiusToUse *= radiusScale;\n\t\t\t\tdistanceFalloffToUse *= radiusScale;\n\t\t\t#endif\n\n\t\t\t#if SCENE_CLIP_BOX == 1\n\t\t\t\tvec3 worldPos = (cameraWorldMatrix * vec4(viewPos, 1.0)).xyz;\n\t\t\t\tfloat boxDistance = length(max(vec3(0.0), max(sceneBoxMin - worldPos, worldPos - sceneBoxMax)));\n\t\t\t\tif (boxDistance > radiusToUse) {\n\t\t\t\t\tdiscard;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t#endif\n\n\t\t\tvec2 noiseResolution = vec2(textureSize(tNoise, 0));\n\t\t\tvec2 noiseUv = vUv * resolution / noiseResolution;\n\t\t\tvec4 noiseTexel = textureLod(tNoise, noiseUv, 0.0);\n\t\t\tvec3 randomVec = noiseTexel.xyz * 2.0 - 1.0;\n\t\t\tvec3 tangent = normalize(vec3(randomVec.xy, 0.));\n\t\t\tvec3 bitangent = vec3(-tangent.y, tangent.x, 0.);\n\t\t\tmat3 kernelMatrix = mat3(tangent, bitangent, vec3(0., 0., 1.));\n\n\t\t\tconst int DIRECTIONS = SAMPLES < 30 ? 3 : 5;\n\t\t\tconst int STEPS = (SAMPLES + DIRECTIONS - 1) / DIRECTIONS;\n\t\t\tfloat ao = 0.0;\n\t\t\tfor (int i = 0; i < DIRECTIONS; ++i) {\n\n\t\t\t\tfloat angle = float(i) / float(DIRECTIONS) * PI;\n\t\t\t\tvec4 sampleDir = vec4(cos(angle), sin(angle), 0., 0.5 + 0.5 * noiseTexel.w);\n\t\t\t\tsampleDir.xyz = normalize(kernelMatrix * sampleDir.xyz);\n\n\t\t\t\tvec3 viewDir = normalize(-viewPos.xyz);\n\t\t\t\tvec3 sliceBitangent = normalize(cross(sampleDir.xyz, viewDir));\n\t\t\t\tvec3 sliceTangent = cross(sliceBitangent, viewDir);\n\t\t\t\tvec3 normalInSlice = normalize(viewNormal - sliceBitangent * dot(viewNormal, sliceBitangent));\n\n\t\t\t\tvec3 tangentToNormalInSlice = cross(normalInSlice, sliceBitangent);\n\t\t\t\tvec2 cosHorizons = vec2(dot(viewDir, tangentToNormalInSlice), dot(viewDir, -tangentToNormalInSlice));\n\n\t\t\t\tfor (int j = 0; j < STEPS; ++j) {\n\t\t\t\t\tvec3 sampleViewOffset = sampleDir.xyz * radiusToUse * sampleDir.w * pow(float(j + 1) / float(STEPS), distanceExponent);\n\n\t\t\t\t\tvec3 sampleSceneUvDepth = getSceneUvAndDepth(viewPos + sampleViewOffset);\n\t\t\t\t\tvec3 sampleSceneViewPos = getViewPosition(sampleSceneUvDepth.xy, sampleSceneUvDepth.z);\n\t\t\t\t\tvec3 viewDelta = sampleSceneViewPos - viewPos;\n\t\t\t\t\tif (abs(viewDelta.z) < thickness) {\n\t\t\t\t\t\tfloat sampleCosHorizon = dot(viewDir, normalize(viewDelta));\n\t\t\t\t\t\tcosHorizons.x += max(0., (sampleCosHorizon - cosHorizons.x) * mix(1., 2. / float(j + 2), distanceFallOff));\n\t\t\t\t\t}\n\n\t\t\t\t\tsampleSceneUvDepth = getSceneUvAndDepth(viewPos - sampleViewOffset);\n\t\t\t\t\tsampleSceneViewPos = getViewPosition(sampleSceneUvDepth.xy, sampleSceneUvDepth.z);\n\t\t\t\t\tviewDelta = sampleSceneViewPos - viewPos;\n\t\t\t\t\tif (abs(viewDelta.z) < thickness) {\n\t\t\t\t\t\tfloat sampleCosHorizon = dot(viewDir, normalize(viewDelta));\n\t\t\t\t\t\tcosHorizons.y += max(0., (sampleCosHorizon - cosHorizons.y) * mix(1., 2. / float(j + 2), distanceFallOff));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvec2 sinHorizons = sqrt(1. - cosHorizons * cosHorizons);\n\t\t\t\tfloat nx = dot(normalInSlice, sliceTangent);\n\t\t\t\tfloat ny = dot(normalInSlice, viewDir);\n\t\t\t\tfloat nxb = 1. / 2. * (acos(cosHorizons.y) - acos(cosHorizons.x) + sinHorizons.x * cosHorizons.x - sinHorizons.y * cosHorizons.y);\n\t\t\t\tfloat nyb = 1. / 2. * (2. - cosHorizons.x * cosHorizons.x - cosHorizons.y * cosHorizons.y);\n\t\t\t\tfloat occlusion = nx * nxb + ny * nyb;\n\t\t\t\tao += occlusion;\n\t\t\t}\n\n\t\t\tao = clamp(ao / float(DIRECTIONS), 0., 1.);\n\t\t#if SCENE_CLIP_BOX == 1\n\t\t\tao = mix(ao, 1., smoothstep(0., radiusToUse, boxDistance));\n\t\t#endif\n\t\t\tao = pow(ao, scale);\n\n\t\t\tgl_FragColor = FRAGMENT_OUTPUT;\n\t\t}"},Xg={PERSPECTIVE_CAMERA:1},Kg={tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},Zg="\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",$g="\n\t\tuniform sampler2D tDepth;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 screenPosition ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tgl_FragColor = vec4( vec3( 1.0 - depth ), 1.0 );\n\n\t\t}",tf={tDiffuse:{value:null},intensity:{value:1}},ef="\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",nf="\n\t\tuniform float intensity;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4(mix(vec3(1.), texel.rgb, intensity), texel.a);\n\t\t}";const sf={name:"PoissonDenoiseShader",defines:{SAMPLES:16,SAMPLE_VECTORS:rf(16,2,1),NORMAL_VECTOR_TYPE:1,DEPTH_VALUE_SOURCE:0},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},resolution:{value:new di},cameraProjectionMatrixInverse:{value:new Es},lumaPhi:{value:5},depthPhi:{value:5},normalPhi:{value:5},radius:{value:4},index:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNoise;\n\t\tuniform vec2 resolution;\n\t\tuniform mat4 cameraProjectionMatrixInverse;\n\t\tuniform float lumaPhi;\n\t\tuniform float depthPhi;\n\t\tuniform float normalPhi;\n\t\tuniform float radius;\n\t\tuniform int index;\n\n\t\t#include <common>\n\t\t#include <packing>\n\n\t\t#ifndef SAMPLE_LUMINANCE\n\t\t#define SAMPLE_LUMINANCE dot(vec3(0.2125, 0.7154, 0.0721), a)\n\t\t#endif\n\n\t\t#ifndef FRAGMENT_OUTPUT\n\t\t#define FRAGMENT_OUTPUT vec4(denoised, 1.)\n\t\t#endif\n\n\t\tfloat getLuminance(const in vec3 a) {\n\t\t\treturn SAMPLE_LUMINANCE;\n\t\t}\n\n\t\tconst vec3 poissonDisk[SAMPLES] = SAMPLE_VECTORS;\n\n\t\tvec3 getViewPosition(const in vec2 screenPosition, const in float depth) {\n\t\t\tvec4 clipSpacePosition = vec4(vec3(screenPosition, depth) * 2.0 - 1.0, 1.0);\n\t\t\tvec4 viewSpacePosition = cameraProjectionMatrixInverse * clipSpacePosition;\n\t\t\treturn viewSpacePosition.xyz / viewSpacePosition.w;\n\t\t}\n\n\t\tfloat getDepth(const vec2 uv) {\n\t\t#if DEPTH_VALUE_SOURCE == 1\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).a;\n\t\t#else\n\t\t\treturn textureLod(tDepth, uv.xy, 0.0).r;\n\t\t#endif\n\t\t}\n\n\t\tfloat fetchDepth(const ivec2 uv) {\n\t\t\t#if DEPTH_VALUE_SOURCE == 1\n\t\t\t\treturn texelFetch(tDepth, uv.xy, 0).a;\n\t\t\t#else\n\t\t\t\treturn texelFetch(tDepth, uv.xy, 0).r;\n\t\t\t#endif\n\t\t}\n\n\t\tvec3 computeNormalFromDepth(const vec2 uv) {\n\t\t\tvec2 size = vec2(textureSize(tDepth, 0));\n\t\t\tivec2 p = ivec2(uv * size);\n\t\t\tfloat c0 = fetchDepth(p);\n\t\t\tfloat l2 = fetchDepth(p - ivec2(2, 0));\n\t\t\tfloat l1 = fetchDepth(p - ivec2(1, 0));\n\t\t\tfloat r1 = fetchDepth(p + ivec2(1, 0));\n\t\t\tfloat r2 = fetchDepth(p + ivec2(2, 0));\n\t\t\tfloat b2 = fetchDepth(p - ivec2(0, 2));\n\t\t\tfloat b1 = fetchDepth(p - ivec2(0, 1));\n\t\t\tfloat t1 = fetchDepth(p + ivec2(0, 1));\n\t\t\tfloat t2 = fetchDepth(p + ivec2(0, 2));\n\t\t\tfloat dl = abs((2.0 * l1 - l2) - c0);\n\t\t\tfloat dr = abs((2.0 * r1 - r2) - c0);\n\t\t\tfloat db = abs((2.0 * b1 - b2) - c0);\n\t\t\tfloat dt = abs((2.0 * t1 - t2) - c0);\n\t\t\tvec3 ce = getViewPosition(uv, c0).xyz;\n\t\t\tvec3 dpdx = (dl < dr) ?  ce - getViewPosition((uv - vec2(1.0 / size.x, 0.0)), l1).xyz\n\t\t\t\t\t\t\t\t\t: -ce + getViewPosition((uv + vec2(1.0 / size.x, 0.0)), r1).xyz;\n\t\t\tvec3 dpdy = (db < dt) ?  ce - getViewPosition((uv - vec2(0.0, 1.0 / size.y)), b1).xyz\n\t\t\t\t\t\t\t\t\t: -ce + getViewPosition((uv + vec2(0.0, 1.0 / size.y)), t1).xyz;\n\t\t\treturn normalize(cross(dpdx, dpdy));\n\t\t}\n\n\t\tvec3 getViewNormal(const vec2 uv) {\n\t\t#if NORMAL_VECTOR_TYPE == 2\n\t\t\treturn normalize(textureLod(tNormal, uv, 0.).rgb);\n\t\t#elif NORMAL_VECTOR_TYPE == 1\n\t\t\treturn unpackRGBToNormal(textureLod(tNormal, uv, 0.).rgb);\n\t\t#else\n\t\t\treturn computeNormalFromDepth(uv);\n\t\t#endif\n\t\t}\n\n\t\tvoid denoiseSample(in vec3 center, in vec3 viewNormal, in vec3 viewPos, in vec2 sampleUv, inout vec3 denoised, inout float totalWeight) {\n\t\t\tvec4 sampleTexel = textureLod(tDiffuse, sampleUv, 0.0);\n\t\t\tfloat sampleDepth = getDepth(sampleUv);\n\t\t\tvec3 sampleNormal = getViewNormal(sampleUv);\n\t\t\tvec3 neighborColor = sampleTexel.rgb;\n\t\t\tvec3 viewPosSample = getViewPosition(sampleUv, sampleDepth);\n\n\t\t\tfloat normalDiff = dot(viewNormal, sampleNormal);\n\t\t\tfloat normalSimilarity = pow(max(normalDiff, 0.), normalPhi);\n\t\t\tfloat lumaDiff = abs(getLuminance(neighborColor) - getLuminance(center));\n\t\t\tfloat lumaSimilarity = max(1.0 - lumaDiff / lumaPhi, 0.0);\n\t\t\tfloat depthDiff = abs(dot(viewPos - viewPosSample, viewNormal));\n\t\t\tfloat depthSimilarity = max(1. - depthDiff / depthPhi, 0.);\n\t\t\tfloat w = lumaSimilarity * depthSimilarity * normalSimilarity;\n\n\t\t\tdenoised += w * neighborColor;\n\t\t\ttotalWeight += w;\n\t\t}\n\n\t\tvoid main() {\n\t\t\tfloat depth = getDepth(vUv.xy);\n\t\t\tvec3 viewNormal = getViewNormal(vUv);\n\t\t\tif (depth == 1. || dot(viewNormal, viewNormal) == 0.) {\n\t\t\t\tdiscard;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvec4 texel = textureLod(tDiffuse, vUv, 0.0);\n\t\t\tvec3 center = texel.rgb;\n\t\t\tvec3 viewPos = getViewPosition(vUv, depth);\n\n\t\t\tvec2 noiseResolution = vec2(textureSize(tNoise, 0));\n\t\t\tvec2 noiseUv = vUv * resolution / noiseResolution;\n\t\t\tvec4 noiseTexel = textureLod(tNoise, noiseUv, 0.0);\n      \t\tvec2 noiseVec = vec2(sin(noiseTexel[index % 4] * 2. * PI), cos(noiseTexel[index % 4] * 2. * PI));\n    \t\tmat2 rotationMatrix = mat2(noiseVec.x, -noiseVec.y, noiseVec.x, noiseVec.y);\n\n\t\t\tfloat totalWeight = 1.0;\n\t\t\tvec3 denoised = texel.rgb;\n\t\t\tfor (int i = 0; i < SAMPLES; i++) {\n\t\t\t\tvec3 sampleDir = poissonDisk[i];\n\t\t\t\tvec2 offset = rotationMatrix * (sampleDir.xy * (1. + sampleDir.z * (radius - 1.)) / resolution);\n\t\t\t\tvec2 sampleUv = vUv + offset;\n\t\t\t\tdenoiseSample(center, viewNormal, viewPos, sampleUv, denoised, totalWeight);\n\t\t\t}\n\n\t\t\tif (totalWeight > 0.) {\n\t\t\t\tdenoised /= totalWeight;\n\t\t\t}\n\t\t\tgl_FragColor = FRAGMENT_OUTPUT;\n\t\t}"};function rf(t,e,n){const i=function(t,e,n){const i=[];for(let s=0;s<t;s++){const r=2*Math.PI*e*s/t,a=Math.pow(s/(t-1),n);i.push(new gi(Math.cos(r),Math.sin(r),a))}return i}(t,e,n);let s="vec3[SAMPLES](";for(let e=0;e<t;e++){const n=i[e];s+=`vec3(${n.x}, ${n.y}, ${n.z})${e<t-1?",":")"}`}return s}class af{constructor(t=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let e=0;e<256;e++)this.p[e]=Math.floor(256*t.random());this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[255&t];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}noise(t,e){let n,i,s;const r=(t+e)*(.5*(Math.sqrt(3)-1)),a=Math.floor(t+r),o=Math.floor(e+r),l=(3-Math.sqrt(3))/6,c=(a+o)*l,A=t-(a-c),h=e-(o-c);let u,d;A>h?(u=1,d=0):(u=0,d=1);const p=A-u+l,g=h-d+l,f=A-1+2*l,m=h-1+2*l,y=255&a,I=255&o,C=this.perm[y+this.perm[I]]%12,E=this.perm[y+u+this.perm[I+d]]%12,v=this.perm[y+1+this.perm[I+1]]%12;let x=.5-A*A-h*h;x<0?n=0:(x*=x,n=x*x*this._dot(this.grad3[C],A,h));let w=.5-p*p-g*g;w<0?i=0:(w*=w,i=w*w*this._dot(this.grad3[E],p,g));let _=.5-f*f-m*m;return _<0?s=0:(_*=_,s=_*_*this._dot(this.grad3[v],f,m)),70*(n+i+s)}noise3d(t,e,n){let i,s,r,a;const o=(t+e+n)*(1/3),l=Math.floor(t+o),c=Math.floor(e+o),A=Math.floor(n+o),h=1/6,u=(l+c+A)*h,d=t-(l-u),p=e-(c-u),g=n-(A-u);let f,m,y,I,C,E;d>=p?p>=g?(f=1,m=0,y=0,I=1,C=1,E=0):d>=g?(f=1,m=0,y=0,I=1,C=0,E=1):(f=0,m=0,y=1,I=1,C=0,E=1):p<g?(f=0,m=0,y=1,I=0,C=1,E=1):d<g?(f=0,m=1,y=0,I=0,C=1,E=1):(f=0,m=1,y=0,I=1,C=1,E=0);const v=d-f+h,x=p-m+h,w=g-y+h,_=d-I+2*h,B=p-C+2*h,S=g-E+2*h,b=d-1+.5,M=p-1+.5,T=g-1+.5,Q=255&l,D=255&c,R=255&A,U=this.perm[Q+this.perm[D+this.perm[R]]]%12,P=this.perm[Q+f+this.perm[D+m+this.perm[R+y]]]%12,L=this.perm[Q+I+this.perm[D+C+this.perm[R+E]]]%12,F=this.perm[Q+1+this.perm[D+1+this.perm[R+1]]]%12;let N=.6-d*d-p*p-g*g;N<0?i=0:(N*=N,i=N*N*this._dot3(this.grad3[U],d,p,g));let k=.6-v*v-x*x-w*w;k<0?s=0:(k*=k,s=k*k*this._dot3(this.grad3[P],v,x,w));let O=.6-_*_-B*B-S*S;O<0?r=0:(O*=O,r=O*O*this._dot3(this.grad3[L],_,B,S));let z=.6-b*b-M*M-T*T;return z<0?a=0:(z*=z,a=z*z*this._dot3(this.grad3[F],b,M,T)),32*(i+s+r+a)}noise4d(t,e,n,i){const s=this.grad4,r=this.simplex,a=this.perm,o=(Math.sqrt(5)-1)/4,l=(5-Math.sqrt(5))/20;let c,A,h,u,d;const p=(t+e+n+i)*o,g=Math.floor(t+p),f=Math.floor(e+p),m=Math.floor(n+p),y=Math.floor(i+p),I=(g+f+m+y)*l,C=t-(g-I),E=e-(f-I),v=n-(m-I),x=i-(y-I),w=(C>E?32:0)+(C>v?16:0)+(E>v?8:0)+(C>x?4:0)+(E>x?2:0)+(v>x?1:0),_=r[w][0]>=3?1:0,B=r[w][1]>=3?1:0,S=r[w][2]>=3?1:0,b=r[w][3]>=3?1:0,M=r[w][0]>=2?1:0,T=r[w][1]>=2?1:0,Q=r[w][2]>=2?1:0,D=r[w][3]>=2?1:0,R=r[w][0]>=1?1:0,U=r[w][1]>=1?1:0,P=r[w][2]>=1?1:0,L=r[w][3]>=1?1:0,F=C-_+l,N=E-B+l,k=v-S+l,O=x-b+l,z=C-M+2*l,G=E-T+2*l,H=v-Q+2*l,V=x-D+2*l,Y=C-R+3*l,q=E-U+3*l,W=v-P+3*l,J=x-L+3*l,j=C-1+4*l,X=E-1+4*l,K=v-1+4*l,Z=x-1+4*l,$=255&g,tt=255&f,et=255&m,nt=255&y,it=a[$+a[tt+a[et+a[nt]]]]%32,st=a[$+_+a[tt+B+a[et+S+a[nt+b]]]]%32,rt=a[$+M+a[tt+T+a[et+Q+a[nt+D]]]]%32,at=a[$+R+a[tt+U+a[et+P+a[nt+L]]]]%32,ot=a[$+1+a[tt+1+a[et+1+a[nt+1]]]]%32;let lt=.6-C*C-E*E-v*v-x*x;lt<0?c=0:(lt*=lt,c=lt*lt*this._dot4(s[it],C,E,v,x));let ct=.6-F*F-N*N-k*k-O*O;ct<0?A=0:(ct*=ct,A=ct*ct*this._dot4(s[st],F,N,k,O));let At=.6-z*z-G*G-H*H-V*V;At<0?h=0:(At*=At,h=At*At*this._dot4(s[rt],z,G,H,V));let ht=.6-Y*Y-q*q-W*W-J*J;ht<0?u=0:(ht*=ht,u=ht*ht*this._dot4(s[at],Y,q,W,J));let ut=.6-j*j-X*X-K*K-Z*Z;return ut<0?d=0:(ut*=ut,d=ut*ut*this._dot4(s[ot],j,X,K,Z)),27*(c+A+h+u+d)}_dot(t,e,n){return t[0]*e+t[1]*n}_dot3(t,e,n,i){return t[0]*e+t[1]*n+t[2]*i}_dot4(t,e,n,i,s){return t[0]*e+t[1]*n+t[2]*i+t[3]*s}}class of extends Fg{constructor(t,e,n=512,i=512,s,r,a){super(),this.width=n,this.height=i,this.clear=!0,this.camera=e,this.scene=t,this.output=0,this._renderGBuffer=!0,this._visibilityCache=[],this.blendIntensity=1,this.pdRings=2,this.pdRadiusExponent=2,this.pdSamples=16,this.gtaoNoiseTexture=function(t=5){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=function(t){const e=Math.floor(t)%2==0?Math.floor(t)+1:Math.floor(t),n=e*e,i=Array(n).fill(0);let s=Math.floor(e/2),r=e-1;for(let t=1;t<=n;)-1===s&&r===e?(r=e-2,s=0):(r===e&&(r=0),s<0&&(s=e-1)),0===i[s*e+r]?(i[s*e+r]=t++,r++,s--):(r-=2,s++);return i}(e),i=n.length,s=new Uint8Array(4*i);for(let t=0;t<i;++t){const e=n[t],r=2*Math.PI*e/i,a=new gi(Math.cos(r),Math.sin(r),0).normalize();s[4*t]=255*(.5*a.x+.5),s[4*t+1]=255*(.5*a.y+.5),s[4*t+2]=127,s[4*t+3]=255}const r=new io(s,e,e);return r.wrapS=Mt,r.wrapT=Mt,r.needsUpdate=!0,r}(),this.pdNoiseTexture=this._generateNoise(),this.gtaoRenderTarget=new Hi(this.width,this.height,{type:jt}),this.pdRenderTarget=this.gtaoRenderTarget.clone(),this.gtaoMaterial=new la({defines:Object.assign({},jg.defines),uniforms:oa.clone(jg.uniforms),vertexShader:jg.vertexShader,fragmentShader:jg.fragmentShader,blending:T,depthTest:!1,depthWrite:!1}),this.gtaoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.gtaoMaterial.uniforms.tNoise.value=this.gtaoNoiseTexture,this.gtaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.normalMaterial=new $c,this.normalMaterial.blending=T,this.pdMaterial=new la({defines:Object.assign({},sf.defines),uniforms:oa.clone(sf.uniforms),vertexShader:sf.vertexShader,fragmentShader:sf.fragmentShader,depthTest:!1,depthWrite:!1}),this.pdMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.pdMaterial.uniforms.tNoise.value=this.pdNoiseTexture,this.pdMaterial.uniforms.resolution.value.set(this.width,this.height),this.pdMaterial.uniforms.lumaPhi.value=10,this.pdMaterial.uniforms.depthPhi.value=2,this.pdMaterial.uniforms.normalPhi.value=3,this.pdMaterial.uniforms.radius.value=8,this.depthRenderMaterial=new la({defines:Object.assign({},Xg),uniforms:oa.clone(Kg),vertexShader:Zg,fragmentShader:$g,blending:T}),this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new la({uniforms:oa.clone(Lg.uniforms),vertexShader:Lg.vertexShader,fragmentShader:Lg.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:j,blendDst:z,blendEquation:L,blendSrcAlpha:W,blendDstAlpha:z,blendEquationAlpha:L}),this.blendMaterial=new la({uniforms:oa.clone(tf),vertexShader:ef,fragmentShader:nf,transparent:!0,depthTest:!1,depthWrite:!1,blending:P,blendSrc:j,blendDst:z,blendEquation:L,blendSrcAlpha:W,blendDstAlpha:z,blendEquationAlpha:L}),this._fsQuad=new Og(null),this._originalClearColor=new dr,this.setGBuffer(s?s.depthTexture:void 0,s?s.normalTexture:void 0),void 0!==r&&this.updateGtaoMaterial(r),void 0!==a&&this.updatePdMaterial(a)}setSize(t,e){this.width=t,this.height=e,this.gtaoRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.pdRenderTarget.setSize(t,e),this.gtaoMaterial.uniforms.resolution.value.set(t,e),this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.pdMaterial.uniforms.resolution.value.set(t,e),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse)}dispose(){this.gtaoNoiseTexture.dispose(),this.pdNoiseTexture.dispose(),this.normalRenderTarget.dispose(),this.gtaoRenderTarget.dispose(),this.pdRenderTarget.dispose(),this.normalMaterial.dispose(),this.pdMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this._fsQuad.dispose()}get gtaoMap(){return this.pdRenderTarget.texture}setGBuffer(t,e){void 0!==t?(this.depthTexture=t,this.normalTexture=e,this._renderGBuffer=!1):(this.depthTexture=new El,this.depthTexture.format=se,this.depthTexture.type=Zt,this.normalRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt,type:jt,depthTexture:this.depthTexture}),this.normalTexture=this.normalRenderTarget.texture,this._renderGBuffer=!0);const n=this.normalTexture?1:0,i=this.depthTexture===this.normalTexture?"w":"x";this.gtaoMaterial.defines.NORMAL_VECTOR_TYPE=n,this.gtaoMaterial.defines.DEPTH_SWIZZLING=i,this.gtaoMaterial.uniforms.tNormal.value=this.normalTexture,this.gtaoMaterial.uniforms.tDepth.value=this.depthTexture,this.pdMaterial.defines.NORMAL_VECTOR_TYPE=n,this.pdMaterial.defines.DEPTH_SWIZZLING=i,this.pdMaterial.uniforms.tNormal.value=this.normalTexture,this.pdMaterial.uniforms.tDepth.value=this.depthTexture,this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture}setSceneClipBox(t){t?(this.gtaoMaterial.needsUpdate=1!==this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=1,this.gtaoMaterial.uniforms.sceneBoxMin.value.copy(t.min),this.gtaoMaterial.uniforms.sceneBoxMax.value.copy(t.max)):(this.gtaoMaterial.needsUpdate=0===this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=0)}updateGtaoMaterial(t){void 0!==t.radius&&(this.gtaoMaterial.uniforms.radius.value=t.radius),void 0!==t.distanceExponent&&(this.gtaoMaterial.uniforms.distanceExponent.value=t.distanceExponent),void 0!==t.thickness&&(this.gtaoMaterial.uniforms.thickness.value=t.thickness),void 0!==t.distanceFallOff&&(this.gtaoMaterial.uniforms.distanceFallOff.value=t.distanceFallOff,this.gtaoMaterial.needsUpdate=!0),void 0!==t.scale&&(this.gtaoMaterial.uniforms.scale.value=t.scale),void 0!==t.samples&&t.samples!==this.gtaoMaterial.defines.SAMPLES&&(this.gtaoMaterial.defines.SAMPLES=t.samples,this.gtaoMaterial.needsUpdate=!0),void 0!==t.screenSpaceRadius&&(t.screenSpaceRadius?1:0)!==this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS&&(this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS=t.screenSpaceRadius?1:0,this.gtaoMaterial.needsUpdate=!0)}updatePdMaterial(t){let e=!1;void 0!==t.lumaPhi&&(this.pdMaterial.uniforms.lumaPhi.value=t.lumaPhi),void 0!==t.depthPhi&&(this.pdMaterial.uniforms.depthPhi.value=t.depthPhi),void 0!==t.normalPhi&&(this.pdMaterial.uniforms.normalPhi.value=t.normalPhi),void 0!==t.radius&&t.radius!==this.radius&&(this.pdMaterial.uniforms.radius.value=t.radius),void 0!==t.radiusExponent&&t.radiusExponent!==this.pdRadiusExponent&&(this.pdRadiusExponent=t.radiusExponent,e=!0),void 0!==t.rings&&t.rings!==this.pdRings&&(this.pdRings=t.rings,e=!0),void 0!==t.samples&&t.samples!==this.pdSamples&&(this.pdSamples=t.samples,e=!0),e&&(this.pdMaterial.defines.SAMPLES=this.pdSamples,this.pdMaterial.defines.SAMPLE_VECTORS=rf(this.pdSamples,this.pdRings,this.pdRadiusExponent),this.pdMaterial.needsUpdate=!0)}render(t,e,n){switch(this._renderGBuffer&&(this._overrideVisibility(),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,7829503,1),this._restoreVisibility()),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.gtaoMaterial.uniforms.cameraWorldMatrix.value.copy(this.camera.matrixWorld),this._renderPass(t,this.gtaoMaterial,this.gtaoRenderTarget,16777215,1),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this._renderPass(t,this.pdMaterial,this.pdRenderTarget,16777215,1),this.output){case of.OUTPUT.Off:break;case of.OUTPUT.Diffuse:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case of.OUTPUT.AO:this.copyMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case of.OUTPUT.Denoise:this.copyMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case of.OUTPUT.Depth:this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this._renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:e);break;case of.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case of.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.blendMaterial.uniforms.intensity.value=this.blendIntensity,this.blendMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this._renderPass(t,this.blendMaterial,this.renderToScreen?null:e);break;default:console.warn("THREE.GTAOPass: Unknown output type.")}}_renderPass(t,e,n,i,s){t.getClearColor(this._originalClearColor);const r=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this._fsQuad.material=e,this._fsQuad.render(t),t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(r)}_renderOverride(t,e,n,i,s){t.getClearColor(this._originalClearColor);const r=t.getClearAlpha(),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,s=e.clearAlpha||s,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this._originalClearColor),t.setClearAlpha(r)}_overrideVisibility(){const t=this.scene,e=this._visibilityCache;t.traverse(function(t){(t.isPoints||t.isLine||t.isLine2)&&t.visible&&(t.visible=!1,e.push(t))})}_restoreVisibility(){const t=this._visibilityCache;for(let e=0;e<t.length;e++)t[e].visible=!0;t.length=0}_generateNoise(t=64){const e=new af,n=new Uint8Array(t*t*4);for(let i=0;i<t;i++)for(let s=0;s<t;s++){const r=i,a=s;n[4*(i*t+s)]=255*(.5*e.noise(r,a)+.5),n[4*(i*t+s)+1]=255*(.5*e.noise(r+t,a)+.5),n[4*(i*t+s)+2]=255*(.5*e.noise(r,a+t)+.5),n[4*(i*t+s)+3]=255*(.5*e.noise(r+t,a+t)+.5)}const i=new io(n,t,t,ne,Gt);return i.wrapS=Mt,i.wrapT=Mt,i.needsUpdate=!0,i}}of.OUTPUT={Off:-1,Default:0,Diffuse:1,Depth:2,Normal:3,AO:4,Denoise:5};const lf={name:"LuminosityHighPassShader",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new dr(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class cf extends Fg{constructor(t,e=1,n,i){super(),this.strength=e,this.radius=n,this.threshold=i,this.resolution=void 0!==t?new di(t.x,t.y):new di(256,256),this.clearColor=new dr(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let s=Math.round(this.resolution.x/2),r=Math.round(this.resolution.y/2);this.renderTargetBright=new Hi(s,r,{type:jt}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let t=0;t<this.nMips;t++){const e=new Hi(s,r,{type:jt});e.texture.name="UnrealBloomPass.h"+t,e.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(e);const n=new Hi(s,r,{type:jt});n.texture.name="UnrealBloomPass.v"+t,n.texture.generateMipmaps=!1,this.renderTargetsVertical.push(n),s=Math.round(s/2),r=Math.round(r/2)}const a=lf;this.highPassUniforms=oa.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new la({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.separableBlurMaterials=[];const o=[3,5,7,9,11];s=Math.round(this.resolution.x/2),r=Math.round(this.resolution.y/2);for(let t=0;t<this.nMips;t++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(o[t])),this.separableBlurMaterials[t].uniforms.invSize.value=new di(1/s,1/r),s=Math.round(s/2),r=Math.round(r/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new gi(1,1,1),new gi(1,1,1),new gi(1,1,1),new gi(1,1,1),new gi(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=oa.clone(Lg.uniforms),this.blendMaterial=new la({uniforms:this.copyUniforms,vertexShader:Lg.vertexShader,fragmentShader:Lg.fragmentShader,blending:D,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new dr,this._oldClearAlpha=1,this._basic=new mr,this._fsQuad=new Og(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(t,e){let n=Math.round(t/2),i=Math.round(e/2);this.renderTargetBright.setSize(n,i);for(let t=0;t<this.nMips;t++)this.renderTargetsHorizontal[t].setSize(n,i),this.renderTargetsVertical[t].setSize(n,i),this.separableBlurMaterials[t].uniforms.invSize.value=new di(1/n,1/i),n=Math.round(n/2),i=Math.round(i/2)}render(t,e,n,i,s){t.getClearColor(this._oldClearColor),this._oldClearAlpha=t.getClearAlpha();const r=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),s&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=n.texture,t.setRenderTarget(null),t.clear(),this._fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this._fsQuad.render(t);let a=this.renderTargetBright;for(let e=0;e<this.nMips;e++)this._fsQuad.material=this.separableBlurMaterials[e],this.separableBlurMaterials[e].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[e].uniforms.direction.value=cf.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[e]),t.clear(),this._fsQuad.render(t),this.separableBlurMaterials[e].uniforms.colorTexture.value=this.renderTargetsHorizontal[e].texture,this.separableBlurMaterials[e].uniforms.direction.value=cf.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[e]),t.clear(),this._fsQuad.render(t),a=this.renderTargetsVertical[e];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this._fsQuad.render(t),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(n),this._fsQuad.render(t)),t.setClearColor(this._oldClearColor,this._oldClearAlpha),t.autoClear=r}_getSeparableBlurMaterial(t){const e=[];for(let n=0;n<t;n++)e.push(.39894*Math.exp(-.5*n*n/(t*t))/t);return new la({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new di(.5,.5)},direction:{value:new di(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}_getCompositeMaterial(t){return new la({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}cf.BlurDirectionX=new di(1,0),cf.BlurDirectionY=new di(0,1);const Af={name:"SobelOperatorShader",uniforms:{tDiffuse:{value:null},resolution:{value:new di}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec2 texel = vec2( 1.0 / resolution.x, 1.0 / resolution.y );\n\n\t\t// kernel definition (in glsl matrices are filled in column-major order)\n\n\t\t\tconst mat3 Gx = mat3( -1, -2, -1, 0, 0, 0, 1, 2, 1 ); // x direction kernel\n\t\t\tconst mat3 Gy = mat3( -1, 0, 1, -2, 0, 2, -1, 0, 1 ); // y direction kernel\n\n\t\t// fetch the 3x3 neighbourhood of a fragment\n\n\t\t// first column\n\n\t\t\tfloat tx0y0 = texture2D( tDiffuse, vUv + texel * vec2( -1, -1 ) ).r;\n\t\t\tfloat tx0y1 = texture2D( tDiffuse, vUv + texel * vec2( -1,  0 ) ).r;\n\t\t\tfloat tx0y2 = texture2D( tDiffuse, vUv + texel * vec2( -1,  1 ) ).r;\n\n\t\t// second column\n\n\t\t\tfloat tx1y0 = texture2D( tDiffuse, vUv + texel * vec2(  0, -1 ) ).r;\n\t\t\tfloat tx1y1 = texture2D( tDiffuse, vUv + texel * vec2(  0,  0 ) ).r;\n\t\t\tfloat tx1y2 = texture2D( tDiffuse, vUv + texel * vec2(  0,  1 ) ).r;\n\n\t\t// third column\n\n\t\t\tfloat tx2y0 = texture2D( tDiffuse, vUv + texel * vec2(  1, -1 ) ).r;\n\t\t\tfloat tx2y1 = texture2D( tDiffuse, vUv + texel * vec2(  1,  0 ) ).r;\n\t\t\tfloat tx2y2 = texture2D( tDiffuse, vUv + texel * vec2(  1,  1 ) ).r;\n\n\t\t// gradient value in x direction\n\n\t\t\tfloat valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 +\n\t\t\t\tGx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 +\n\t\t\t\tGx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2;\n\n\t\t// gradient value in y direction\n\n\t\t\tfloat valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 +\n\t\t\t\tGy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 +\n\t\t\t\tGy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2;\n\n\t\t// magnitude of the total gradient\n\n\t\t\tfloat G = sqrt( ( valueGx * valueGx ) + ( valueGy * valueGy ) );\n\n\t\t\tgl_FragColor = vec4( vec3( G ), 1 );\n\n\t\t}"},hf={name:"SSRShader",defines:{MAX_STEP:0,PERSPECTIVE_CAMERA:!0,DISTANCE_ATTENUATION:!0,FRESNEL:!0,INFINITE_THICK:!1,SELECTIVE:!1},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tMetalness:{value:null},tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null},resolution:{value:new di},cameraProjectionMatrix:{value:new Es},cameraInverseProjectionMatrix:{value:new Es},opacity:{value:.5},maxDistance:{value:180},cameraRange:{value:0},thickness:{value:.018}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:'\n\t\t// precision highp float;\n\t\tprecision highp sampler2D;\n\t\tvarying vec2 vUv;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tMetalness;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float cameraRange;\n\t\tuniform vec2 resolution;\n\t\tuniform float opacity;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float maxDistance;\n\t\tuniform float thickness;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\t\t#include <packing>\n\t\tfloat pointToLineDistance(vec3 x0, vec3 x1, vec3 x2) {\n\t\t\t//x0: point, x1: linePointA, x2: linePointB\n\t\t\t//https://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n\t\t\treturn length(cross(x0-x1,x0-x2))/length(x2-x1);\n\t\t}\n\t\tfloat pointPlaneDistance(vec3 point,vec3 planePoint,vec3 planeNormal){\n\t\t\t// https://mathworld.wolfram.com/Point-PlaneDistance.html\n\t\t\t//// https://en.wikipedia.org/wiki/Plane_(geometry)\n\t\t\t//// http://paulbourke.net/geometry/pointlineplane/\n\t\t\tfloat a=planeNormal.x,b=planeNormal.y,c=planeNormal.z;\n\t\t\tfloat x0=point.x,y0=point.y,z0=point.z;\n\t\t\tfloat x=planePoint.x,y=planePoint.y,z=planePoint.z;\n\t\t\tfloat d=-(a*x+b*y+c*z);\n\t\t\tfloat distance=(a*x0+b*y0+c*z0+d)/sqrt(a*a+b*b+c*c);\n\t\t\treturn distance;\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;//view\n\t\t}\n\t\tvec3 getViewNormal( const in vec2 uv ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, uv ).xyz );\n\t\t}\n\t\tvec2 viewPositionToXY(vec3 viewPosition){\n\t\t\tvec2 xy;\n\t\t\tvec4 clip=cameraProjectionMatrix*vec4(viewPosition,1);\n\t\t\txy=clip.xy;//clip\n\t\t\tfloat clipW=clip.w;\n\t\t\txy/=clipW;//NDC\n\t\t\txy=(xy+1.)/2.;//uv\n\t\t\txy*=resolution;//screen\n\t\t\treturn xy;\n\t\t}\n\t\tvoid main(){\n\t\t\t#ifdef SELECTIVE\n\t\t\t\tfloat metalness=texture2D(tMetalness,vUv).r;\n\t\t\t\tif(metalness==0.) return;\n\t\t\t#endif\n\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\tif(-viewZ>=cameraFar) return;\n\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ+cameraProjectionMatrix[3][3];\n\t\t\tvec3 viewPosition=getViewPosition( vUv, depth, clipW );\n\n\t\t\tvec2 d0=gl_FragCoord.xy;\n\t\t\tvec2 d1;\n\n\t\t\tvec3 viewNormal=getViewNormal( vUv );\n\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tvec3 viewIncidentDir=normalize(viewPosition);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#else\n\t\t\t\tvec3 viewIncidentDir=vec3(0,0,-1);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#endif\n\n\t\t\tfloat maxReflectRayLen=maxDistance/dot(-viewIncidentDir,viewNormal);\n\t\t\t// dot(a,b)==length(a)*length(b)*cos(theta) // https://www.mathsisfun.com/algebra/vectors-dot-product.html\n\t\t\t// if(a.isNormalized&&b.isNormalized) dot(a,b)==cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen=cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen==dot(a,b)\n\t\t\t// maxReflectRayLen==maxDistance/dot(a,b)\n\n\t\t\tvec3 d1viewPosition=viewPosition+viewReflectDir*maxReflectRayLen;\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tif(d1viewPosition.z>-cameraNear){\n\t\t\t\t\t//https://tutorial.math.lamar.edu/Classes/CalcIII/EqnsOfLines.aspx\n\t\t\t\t\tfloat t=(-cameraNear-viewPosition.z)/viewReflectDir.z;\n\t\t\t\t\td1viewPosition=viewPosition+viewReflectDir*t;\n\t\t\t\t}\n\t\t\t#endif\n\t\t\td1=viewPositionToXY(d1viewPosition);\n\n\t\t\tfloat totalLen=length(d1-d0);\n\t\t\tfloat xLen=d1.x-d0.x;\n\t\t\tfloat yLen=d1.y-d0.y;\n\t\t\tfloat totalStep=max(abs(xLen),abs(yLen));\n\t\t\tfloat xSpan=xLen/totalStep;\n\t\t\tfloat ySpan=yLen/totalStep;\n\t\t\tfor(float i=0.;i<float(MAX_STEP);i++){\n\t\t\t\tif(i>=totalStep) break;\n\t\t\t\tvec2 xy=vec2(d0.x+i*xSpan,d0.y+i*ySpan);\n\t\t\t\tif(xy.x<0.||xy.x>resolution.x||xy.y<0.||xy.y>resolution.y) break;\n\t\t\t\tfloat s=length(xy-d0)/totalLen;\n\t\t\t\tvec2 uv=xy/resolution;\n\n\t\t\t\tfloat d = getDepth(uv);\n\t\t\t\tfloat vZ = getViewZ( d );\n\t\t\t\tif(-vZ>=cameraFar) continue;\n\t\t\t\tfloat cW = cameraProjectionMatrix[2][3] * vZ+cameraProjectionMatrix[3][3];\n\t\t\t\tvec3 vP=getViewPosition( uv, d, cW );\n\n\t\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\t\t// https://comp.nus.edu.sg/~lowkl/publications/lowk_persp_interp_techrep.pdf\n\t\t\t\t\tfloat recipVPZ=1./viewPosition.z;\n\t\t\t\t\tfloat viewReflectRayZ=1./(recipVPZ+s*(1./d1viewPosition.z-recipVPZ));\n\t\t\t\t#else\n\t\t\t\t\tfloat viewReflectRayZ=viewPosition.z+s*(d1viewPosition.z-viewPosition.z);\n\t\t\t\t#endif\n\n\t\t\t\t// if(viewReflectRayZ>vZ) continue; // will cause "npm run make-screenshot webgl_postprocessing_ssr" high probability hang.\n\t\t\t\t// https://github.com/mrdoob/three.js/pull/21539#issuecomment-821061164\n\t\t\t\tif(viewReflectRayZ<=vZ){\n\n\t\t\t\t\tbool hit;\n\t\t\t\t\t#ifdef INFINITE_THICK\n\t\t\t\t\t\thit=true;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat away=pointToLineDistance(vP,viewPosition,d1viewPosition);\n\n\t\t\t\t\t\tfloat minThickness;\n\t\t\t\t\t\tvec2 xyNeighbor=xy;\n\t\t\t\t\t\txyNeighbor.x+=1.;\n\t\t\t\t\t\tvec2 uvNeighbor=xyNeighbor/resolution;\n\t\t\t\t\t\tvec3 vPNeighbor=getViewPosition(uvNeighbor,d,cW);\n\t\t\t\t\t\tminThickness=vPNeighbor.x-vP.x;\n\t\t\t\t\t\tminThickness*=3.;\n\t\t\t\t\t\tfloat tk=max(minThickness,thickness);\n\n\t\t\t\t\t\thit=away<=tk;\n\t\t\t\t\t#endif\n\n\t\t\t\t\tif(hit){\n\t\t\t\t\t\tvec3 vN=getViewNormal( uv );\n\t\t\t\t\t\tif(dot(viewReflectDir,vN)>=0.) continue;\n\t\t\t\t\t\tfloat distance=pointPlaneDistance(vP,viewPosition,viewNormal);\n\t\t\t\t\t\tif(distance>maxDistance) break;\n\t\t\t\t\t\tfloat op=opacity;\n\t\t\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\t\t\tfloat ratio=1.-(distance/maxDistance);\n\t\t\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\t\t\tfloat fresnelCoe=(dot(viewIncidentDir,viewReflectDir)+1.)/2.;\n\t\t\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvec4 reflectColor=texture2D(tDiffuse,uv);\n\t\t\t\t\t\tgl_FragColor.xyz=reflectColor.xyz;\n\t\t\t\t\t\tgl_FragColor.a=op;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t'},uf={PERSPECTIVE_CAMERA:1},df={tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},pf="\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",gf="\n\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 uv ) {\n\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, uv ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\n\t\t\t#else\n\n\t\t\t\treturn texture2D( tDepth, uv ).x;\n\n\t\t\t#endif\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tfloat d = 1.0 - depth;\n\t\t\t// d=(d-.999)*1000.;\n\t\t\tgl_FragColor = vec4( vec3( d ), 1.0 );\n\n\t\t}\n\n\t",ff={name:"SSRBlurShader",uniforms:{tDiffuse:{value:null},resolution:{value:new di},opacity:{value:.5}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\t//reverse engineering from PhotoShop blur filter, then change coefficient\n\n\t\t\tvec2 texelSize = ( 1.0 / resolution );\n\n\t\t\tvec4 c=texture2D(tDiffuse,vUv);\n\n\t\t\tvec2 offset;\n\n\t\t\toffset=(vec2(-1,0))*texelSize;\n\t\t\tvec4 cl=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(1,0))*texelSize;\n\t\t\tvec4 cr=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,-1))*texelSize;\n\t\t\tvec4 cb=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,1))*texelSize;\n\t\t\tvec4 ct=texture2D(tDiffuse,vUv+offset);\n\n\t\t\t// float coeCenter=.5;\n\t\t\t// float coeSide=.125;\n\t\t\tfloat coeCenter=.2;\n\t\t\tfloat coeSide=.2;\n\t\t\tfloat a=c.a*coeCenter+cl.a*coeSide+cr.a*coeSide+cb.a*coeSide+ct.a*coeSide;\n\t\t\tvec3 rgb=(c.rgb*c.a*coeCenter+cl.rgb*cl.a*coeSide+cr.rgb*cr.a*coeSide+cb.rgb*cb.a*coeSide+ct.rgb*ct.a*coeSide)/a;\n\t\t\tgl_FragColor=vec4(rgb,a);\n\n\t\t}\n\t"};class mf extends Fg{constructor({renderer:t,scene:e,camera:n,width:i=512,height:s=512,selects:r=null,bouncing:a=!1,groundReflector:o=null}){super(),this.width=i,this.height=s,this.clear=!0,this.renderer=t,this.scene=e,this.camera=n,this.groundReflector=o,this.opacity=hf.uniforms.opacity.value,this.output=0,this.maxDistance=hf.uniforms.maxDistance.value,this.thickness=hf.uniforms.thickness.value,this.tempColor=new dr,this._selects=r,this.selective=Array.isArray(this._selects),Object.defineProperty(this,"selects",{get(){return this._selects},set(t){this._selects!==t&&(this._selects=t,Array.isArray(t)?(this.selective=!0,this.ssrMaterial.defines.SELECTIVE=!0,this.ssrMaterial.needsUpdate=!0):(this.selective=!1,this.ssrMaterial.defines.SELECTIVE=!1,this.ssrMaterial.needsUpdate=!0))}}),this._bouncing=a,Object.defineProperty(this,"bouncing",{get(){return this._bouncing},set(t){this._bouncing!==t&&(this._bouncing=t,this.ssrMaterial.uniforms.tDiffuse.value=t?this.prevRenderTarget.texture:this.beautyRenderTarget.texture)}}),this.blur=!0,this._distanceAttenuation=hf.defines.DISTANCE_ATTENUATION,Object.defineProperty(this,"distanceAttenuation",{get(){return this._distanceAttenuation},set(t){this._distanceAttenuation!==t&&(this._distanceAttenuation=t,this.ssrMaterial.defines.DISTANCE_ATTENUATION=t,this.ssrMaterial.needsUpdate=!0)}}),this._fresnel=hf.defines.FRESNEL,Object.defineProperty(this,"fresnel",{get(){return this._fresnel},set(t){this._fresnel!==t&&(this._fresnel=t,this.ssrMaterial.defines.FRESNEL=t,this.ssrMaterial.needsUpdate=!0)}}),this._infiniteThick=hf.defines.INFINITE_THICK,Object.defineProperty(this,"infiniteThick",{get(){return this._infiniteThick},set(t){this._infiniteThick!==t&&(this._infiniteThick=t,this.ssrMaterial.defines.INFINITE_THICK=t,this.ssrMaterial.needsUpdate=!0)}});const l=new El;l.type=Yt,l.minFilter=Dt,l.magFilter=Dt,this.beautyRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt,type:jt,depthTexture:l,depthBuffer:!0}),this.prevRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt}),this.normalRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt,type:jt}),this.metalnessRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt,type:jt}),this.ssrRenderTarget=new Hi(this.width,this.height,{minFilter:Dt,magFilter:Dt}),this.blurRenderTarget=this.ssrRenderTarget.clone(),this.blurRenderTarget2=this.ssrRenderTarget.clone(),this.ssrMaterial=new la({defines:Object.assign({},hf.defines,{MAX_STEP:Math.sqrt(this.width*this.width+this.height*this.height)}),uniforms:oa.clone(hf.uniforms),vertexShader:hf.vertexShader,fragmentShader:hf.fragmentShader,blending:T}),this.ssrMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssrMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssrMaterial.defines.SELECTIVE=this.selective,this.ssrMaterial.needsUpdate=!0,this.ssrMaterial.uniforms.tMetalness.value=this.metalnessRenderTarget.texture,this.ssrMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.ssrMaterial.uniforms.cameraNear.value=this.camera.near,this.ssrMaterial.uniforms.cameraFar.value=this.camera.far,this.ssrMaterial.uniforms.thickness.value=this.thickness,this.ssrMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new $c,this.normalMaterial.blending=T,this.metalnessOnMaterial=new mr({color:"white"}),this.metalnessOffMaterial=new mr({color:"black"}),this.blurMaterial=new la({defines:Object.assign({},ff.defines),uniforms:oa.clone(ff.uniforms),vertexShader:ff.vertexShader,fragmentShader:ff.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.blurMaterial2=new la({defines:Object.assign({},ff.defines),uniforms:oa.clone(ff.uniforms),vertexShader:ff.vertexShader,fragmentShader:ff.fragmentShader}),this.blurMaterial2.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.blurMaterial2.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new la({defines:Object.assign({},uf),uniforms:oa.clone(df),vertexShader:pf,fragmentShader:gf,blending:T}),this.depthRenderMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new la({uniforms:oa.clone(Lg.uniforms),vertexShader:Lg.vertexShader,fragmentShader:Lg.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:Y,blendDst:q,blendEquation:L,blendSrcAlpha:Y,blendDstAlpha:q,blendEquationAlpha:L}),this.fsQuad=new Og(null),this.originalClearColor=new dr}dispose(){this.beautyRenderTarget.dispose(),this.prevRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.metalnessRenderTarget.dispose(),this.ssrRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.blurRenderTarget2.dispose(),this.normalMaterial.dispose(),this.metalnessOnMaterial.dispose(),this.metalnessOffMaterial.dispose(),this.blurMaterial.dispose(),this.blurMaterial2.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(t,e){switch(t.setRenderTarget(this.beautyRenderTarget),t.clear(),this.groundReflector&&(this.groundReflector.visible=!1,this.groundReflector.doRender(this.renderer,this.scene,this.camera),this.groundReflector.visible=!0),t.render(this.scene,this.camera),this.groundReflector&&(this.groundReflector.visible=!1),this._renderOverride(t,this.normalMaterial,this.normalRenderTarget,0,0),this.selective&&this._renderMetalness(t,this.metalnessOnMaterial,this.metalnessRenderTarget,0,0),this.ssrMaterial.uniforms.opacity.value=this.opacity,this.ssrMaterial.uniforms.maxDistance.value=this.maxDistance,this.ssrMaterial.uniforms.thickness.value=this.thickness,this._renderPass(t,this.ssrMaterial,this.ssrRenderTarget),this.blur&&(this._renderPass(t,this.blurMaterial,this.blurRenderTarget),this._renderPass(t,this.blurMaterial2,this.blurRenderTarget2)),this.output){case mf.OUTPUT.Default:this.bouncing?(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=Q,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.prevRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e)):(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=Q,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e));break;case mf.OUTPUT.SSR:this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e),this.bouncing&&(this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=Q,this._renderPass(t,this.copyMaterial,this.prevRenderTarget));break;case mf.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case mf.OUTPUT.Depth:this._renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:e);break;case mf.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;case mf.OUTPUT.Metalness:this.copyMaterial.uniforms.tDiffuse.value=this.metalnessRenderTarget.texture,this.copyMaterial.blending=T,this._renderPass(t,this.copyMaterial,this.renderToScreen?null:e);break;default:console.warn("THREE.SSRPass: Unknown output type.")}}setSize(t,e){this.width=t,this.height=e,this.ssrMaterial.defines.MAX_STEP=Math.sqrt(t*t+e*e),this.ssrMaterial.needsUpdate=!0,this.beautyRenderTarget.setSize(t,e),this.prevRenderTarget.setSize(t,e),this.ssrRenderTarget.setSize(t,e),this.normalRenderTarget.setSize(t,e),this.metalnessRenderTarget.setSize(t,e),this.blurRenderTarget.setSize(t,e),this.blurRenderTarget2.setSize(t,e),this.ssrMaterial.uniforms.resolution.value.set(t,e),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(t,e),this.blurMaterial2.uniforms.resolution.value.set(t,e)}_renderPass(t,e,n,i,s){this.originalClearColor.copy(t.getClearColor(this.tempColor));const r=t.getClearAlpha(this.tempColor),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.fsQuad.material=e,this.fsQuad.render(t),t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(r)}_renderOverride(t,e,n,i,s){this.originalClearColor.copy(t.getClearColor(this.tempColor));const r=t.getClearAlpha(this.tempColor),a=t.autoClear;t.setRenderTarget(n),t.autoClear=!1,i=e.clearColor||i,s=e.clearAlpha||s,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.scene.overrideMaterial=e,t.render(this.scene,this.camera),this.scene.overrideMaterial=null,t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(r)}_renderMetalness(t,e,n,i,s){this.originalClearColor.copy(t.getClearColor(this.tempColor));const r=t.getClearAlpha(this.tempColor),a=t.autoClear,o=this.scene.background,l=this.scene.fog;t.setRenderTarget(n),t.autoClear=!1,this.scene.background=null,this.scene.fog=null,i=e.clearColor||i,s=e.clearAlpha||s,null!=i&&(t.setClearColor(i),t.setClearAlpha(s||0),t.clear()),this.scene.traverseVisible(t=>{t._SSRPassBackupMaterial=t.material,this._selects.includes(t)?t.material=this.metalnessOnMaterial:t.material=this.metalnessOffMaterial}),t.render(this.scene,this.camera),this.scene.traverseVisible(t=>{t.material=t._SSRPassBackupMaterial}),t.autoClear=a,t.setClearColor(this.originalClearColor),t.setClearAlpha(r),this.scene.background=o,this.scene.fog=l}}mf.OUTPUT={Default:0,SSR:1,Beauty:3,Depth:4,Normal:5,Metalness:7};const yf={DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},If={tColor:{value:null},tDepth:{value:null},focus:{value:1},aspect:{value:1},aperture:{value:.025},maxblur:{value:.01},nearClip:{value:1},farClip:{value:1e3}},Cf="\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",Ef="\n\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColor;\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float maxblur; // max blur amount\n\t\tuniform float aperture; // aperture - bigger values for shallower depth of field\n\n\t\tuniform float nearClip;\n\t\tuniform float farClip;\n\n\t\tuniform float focus;\n\t\tuniform float aspect;\n\n\t\t#include <packing>\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\t#if DEPTH_PACKING == 1\n\t\t\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\n\t\t\t#else\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#endif\n\t\t}\n\n\n\t\tvoid main() {\n\n\t\t\tvec2 aspectcorrect = vec2( 1.0, aspect );\n\n\t\t\tfloat viewZ = getViewZ( getDepth( vUv ) );\n\n\t\t\tfloat factor = ( focus + viewZ ); // viewZ is <= 0, so this is a difference equation\n\n\t\t\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\n\n\t\t\tvec2 dofblur9 = dofblur * 0.9;\n\t\t\tvec2 dofblur7 = dofblur * 0.7;\n\t\t\tvec2 dofblur4 = dofblur * 0.4;\n\n\t\t\tvec4 col = vec4( 0.0 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\n\n\t\t\tgl_FragColor = col / 41.0;\n\t\t\tgl_FragColor.a = 1.0;\n\n\t\t}",vf=new Es;class xf{constructor(t){t=t||{},this.zNear=!0===t.webGL?-1:0,this.vertices={near:[new gi,new gi,new gi,new gi],far:[new gi,new gi,new gi,new gi]},void 0!==t.projectionMatrix&&this.setFromProjectionMatrix(t.projectionMatrix,t.maxFar||1e4)}setFromProjectionMatrix(t,e){const n=this.zNear,i=0===t.elements[11];return vf.copy(t).invert(),this.vertices.near[0].set(1,1,n),this.vertices.near[1].set(1,-1,n),this.vertices.near[2].set(-1,-1,n),this.vertices.near[3].set(-1,1,n),this.vertices.near.forEach(function(t){t.applyMatrix4(vf)}),this.vertices.far[0].set(1,1,1),this.vertices.far[1].set(1,-1,1),this.vertices.far[2].set(-1,-1,1),this.vertices.far[3].set(-1,1,1),this.vertices.far.forEach(function(t){t.applyMatrix4(vf);const n=Math.abs(t.z);i?t.z*=Math.min(e/n,1):t.multiplyScalar(Math.min(e/n,1))}),this.vertices}split(t,e){for(;t.length>e.length;)e.push(new xf);e.length=t.length;for(let n=0;n<t.length;n++){const i=e[n];if(0===n)for(let t=0;t<4;t++)i.vertices.near[t].copy(this.vertices.near[t]);else for(let e=0;e<4;e++)i.vertices.near[e].lerpVectors(this.vertices.near[e],this.vertices.far[e],t[n-1]);if(n===t.length-1)for(let t=0;t<4;t++)i.vertices.far[t].copy(this.vertices.far[t]);else for(let e=0;e<4;e++)i.vertices.far[e].lerpVectors(this.vertices.near[e],this.vertices.far[e],t[n])}}toSpace(t,e){for(let n=0;n<4;n++)e.vertices.near[n].copy(this.vertices.near[n]).applyMatrix4(t),e.vertices.far[n].copy(this.vertices.far[n]).applyMatrix4(t)}}const wf={lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n\n#ifdef USE_CLEARCOAT\n\n\tgeometryClearcoatNormal = clearcoatNormal;\n\n#endif\n\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\t// Iridescence F0 approximation\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n \tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\n  \t\t// spot lights are ordered [shadows with maps, shadows without maps, maps without shadows, none]\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\t\tvec2 cascade;\n\t\tfloat cascadeCenter;\n\t\tfloat closestEdge;\n\t\tfloat margin;\n\t\tfloat csmx;\n\t\tfloat csmy;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\t#if ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\t\t\t// NOTE: Depth gets larger away from the camera.\n\t\t\t\t// cascade.x is closer, cascade.y is further\n\t\t\t\tcascade = CSM_cascades[ i ];\n\t\t\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\t\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\t\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\t\t\tcsmx = cascade.x - margin / 2.0;\n\t\t\t\tcsmy = cascade.y + margin / 2.0;\n\t\t\t\tif( linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\n\t\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\t\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t\t\t}\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#elif defined (USE_SHADOWMAP)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\t#if ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#elif ( NUM_DIR_LIGHT_SHADOWS > 0 )\n\t\t// note: no loop here - all CSM lights are in fact one light only\n\t\tgetDirectionalLightInfo( directionalLights[0], directLight );\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t#endif\n\n\t#if ( NUM_DIR_LIGHTS > NUM_DIR_LIGHT_SHADOWS)\n\t\t// compute the lights not casting shadows (if any)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = NUM_DIR_LIGHT_SHADOWS; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\n\t\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#if defined( USE_LIGHT_PROBES )\n\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\n\t#endif\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_pars_begin:"\n#if defined( USE_CSM ) && defined( CSM_CASCADES )\nuniform vec2 CSM_cascades[CSM_CASCADES];\nuniform float cameraNear;\nuniform float shadowFar;\n#endif\n\t"+id.lights_pars_begin},_f=new Es,Bf=new xf({webGL:!0}),Sf=new gi,bf=new Ji,Mf=[],Tf=[],Qf=new Es,Df=new Es,Rf=new gi(0,1,0),Uf={type:"change"},Pf={type:"start"},Lf={type:"end"},Ff=new Cs,Nf=new Co,kf=Math.cos(70*ui.DEG2RAD),Of=new gi,zf=2*Math.PI,Gf=-1,Hf=1e-6;function Vf(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function Yf(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function qf(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Lf),this.state=Gf;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y})}}function Wf(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case m.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=1;break;case m.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}break;case m.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=0}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=2}break;default:this.state=Gf}this.state!==Gf&&this.dispatchEvent(Pf)}function Jf(t){switch(this.state){case 0:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case 1:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case 2:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function jf(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===Gf&&(t.preventDefault(),this.dispatchEvent(Pf),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(Lf))}function Xf(t){!1!==this.enabled&&this._handleKeyDown(t)}function Kf(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case y.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=3;break;case y.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=4;break;default:this.state=Gf}break;case 2:switch(this.touches.TWO){case y.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=5;break;case y.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=6;break;default:this.state=Gf}break;default:this.state=Gf}this.state!==Gf&&this.dispatchEvent(Pf)}function Zf(t){switch(this._trackPointer(t),this.state){case 3:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case 4:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case 5:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case 6:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=Gf}}function $f(t){!1!==this.enabled&&t.preventDefault()}function tm(t){"Control"===t.key&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function em(t){"Control"===t.key&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function nm(t,e=!1){const n=null!==t[0].index,i=new Set(Object.keys(t[0].attributes)),s=new Set(Object.keys(t[0].morphAttributes)),r={},a={},o=t[0].morphTargetsRelative,l=new Hr;let c=0;for(let A=0;A<t.length;++A){const h=t[A];let u=0;if(n!==(null!==h.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const t in h.attributes){if(!i.has(t))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+'. All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.'),null;void 0===r[t]&&(r[t]=[]),r[t].push(h.attributes[t]),u++}if(u!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+". Make sure all geometries have the same number of attributes."),null;if(o!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const t in h.morphAttributes){if(!s.has(t))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===a[t]&&(a[t]=[]),a[t].push(h.morphAttributes[t])}if(e){let t;if(n)t=h.index.count;else{if(void 0===h.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+A+". The geometry must have either an index or a position attribute"),null;t=h.attributes.position.count}l.addGroup(c,t,A),c+=t}}if(n){let e=0;const n=[];for(let i=0;i<t.length;++i){const s=t[i].index;for(let t=0;t<s.count;++t)n.push(s.getX(t)+e);e+=t[i].attributes.position.count}l.setIndex(n)}for(const t in r){const e=im(r[t]);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+t+" attribute."),null;l.setAttribute(t,e)}for(const t in a){const e=a[t][0].length;if(0===e)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[t]=[];for(let n=0;n<e;++n){const e=[];for(let i=0;i<a[t].length;++i)e.push(a[t][i][n]);const i=im(e);if(!i)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+t+" morphAttribute."),null;l.morphAttributes[t].push(i)}}return l}function im(t){let e,n,i,s=-1,r=0;for(let a=0;a<t.length;++a){const o=t[a];if(void 0===e&&(e=o.array.constructor),e!==o.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===n&&(n=o.itemSize),n!==o.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===i&&(i=o.normalized),i!==o.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(-1===s&&(s=o.gpuType),s!==o.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=o.count*n}const a=new e(r),o=new Br(a,n,i);let l=0;for(let e=0;e<t.length;++e){const i=t[e];if(i.isInterleavedBufferAttribute){const t=l/n;for(let e=0,s=i.count;e<s;e++)for(let s=0;s<n;s++){const n=i.getComponent(e,s);o.setComponent(e+t,s,n)}}else a.set(i.array,l);l+=i.count*n}return void 0!==s&&(o.gpuType=s),o}function sm(t){let e=0;for(const n in t.attributes){const i=t.getAttribute(n);e+=i.count*i.itemSize*i.array.BYTES_PER_ELEMENT}const n=t.getIndex();return e+=n?n.count*n.itemSize*n.array.BYTES_PER_ELEMENT:0,e}function rm(t,e){if(e===tn)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),t;if(e===nn||e===en){let n=t.getIndex();if(null===n){const e=[],i=t.getAttribute("position");if(void 0===i)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),t;for(let t=0;t<i.count;t++)e.push(t);t.setIndex(e),n=t.getIndex()}const i=n.count-2,s=[];if(e===nn)for(let t=1;t<=i;t++)s.push(n.getX(0)),s.push(n.getX(t)),s.push(n.getX(t+1));else for(let t=0;t<i;t++)t%2==0?(s.push(n.getX(t)),s.push(n.getX(t+1)),s.push(n.getX(t+2))):(s.push(n.getX(t+2)),s.push(n.getX(t+1)),s.push(n.getX(t)));s.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=t.clone();return r.setIndex(s),r.clearGroups(),r}return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),t}class am extends bA{constructor(t){super(t),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new um(t)}),this.register(function(t){return new dm(t)}),this.register(function(t){return new vm(t)}),this.register(function(t){return new xm(t)}),this.register(function(t){return new wm(t)}),this.register(function(t){return new gm(t)}),this.register(function(t){return new fm(t)}),this.register(function(t){return new mm(t)}),this.register(function(t){return new ym(t)}),this.register(function(t){return new hm(t)}),this.register(function(t){return new Im(t)}),this.register(function(t){return new pm(t)}),this.register(function(t){return new Em(t)}),this.register(function(t){return new Cm(t)}),this.register(function(t){return new cm(t)}),this.register(function(t){return new _m(t)}),this.register(function(t){return new Bm(t)})}load(t,e,n,i){const s=this;let r;if(""!==this.resourcePath)r=this.resourcePath;else if(""!==this.path){const e=ah.extractUrlBase(t);r=ah.resolveURL(e,this.path)}else r=ah.extractUrlBase(t);this.manager.itemStart(t);const a=function(e){i?i(e):console.error(e),s.manager.itemError(t),s.manager.itemEnd(t)},o=new QA(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(n){try{s.parse(n,r,function(n){e(n),s.manager.itemEnd(t)},a)}catch(t){a(t)}},n,a)}setDRACOLoader(t){return this.dracoLoader=t,this}setKTX2Loader(t){return this.ktx2Loader=t,this}setMeshoptDecoder(t){return this.meshoptDecoder=t,this}register(t){return-1===this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.push(t),this}unregister(t){return-1!==this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(t),1),this}parse(t,e,n,i){let s;const r={},a={},o=new TextDecoder;if("string"==typeof t)s=JSON.parse(t);else if(t instanceof ArrayBuffer)if(o.decode(new Uint8Array(t,0,4))===Sm){try{r[lm.KHR_BINARY_GLTF]=new bm(t)}catch(t){return void(i&&i(t))}s=JSON.parse(r[lm.KHR_BINARY_GLTF].content)}else s=JSON.parse(o.decode(t));else s=t;if(void 0===s.asset||s.asset.version[0]<2)return void(i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.")));const l=new Km(s,{path:e||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let t=0;t<this.pluginCallbacks.length;t++){const e=this.pluginCallbacks[t](l);e.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[e.name]=e,r[e.name]=!0}if(s.extensionsUsed)for(let t=0;t<s.extensionsUsed.length;++t){const e=s.extensionsUsed[t],n=s.extensionsRequired||[];switch(e){case lm.KHR_MATERIALS_UNLIT:r[e]=new Am;break;case lm.KHR_DRACO_MESH_COMPRESSION:r[e]=new Mm(s,this.dracoLoader);break;case lm.KHR_TEXTURE_TRANSFORM:r[e]=new Tm;break;case lm.KHR_MESH_QUANTIZATION:r[e]=new Qm;break;default:n.indexOf(e)>=0&&void 0===a[e]&&console.warn('THREE.GLTFLoader: Unknown extension "'+e+'".')}}l.setExtensions(r),l.setPlugins(a),l.parse(n,i)}parseAsync(t,e){const n=this;return new Promise(function(i,s){n.parse(t,e,i,s)})}}function om(){let t={};return{get:function(e){return t[e]},add:function(e,n){t[e]=n},remove:function(e){delete t[e]},removeAll:function(){t={}}}}const lm={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class cm{constructor(t){this.parser=t,this.name=lm.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const t=this.parser,e=this.parser.json.nodes||[];for(let n=0,i=e.length;n<i;n++){const i=e[n];i.extensions&&i.extensions[this.name]&&void 0!==i.extensions[this.name].light&&t._addNodeRef(this.cache,i.extensions[this.name].light)}}_loadLight(t){const e=this.parser,n="light:"+t;let i=e.cache.get(n);if(i)return i;const s=e.json,r=((s.extensions&&s.extensions[this.name]||{}).lights||[])[t];let a;const o=new dr(16777215);void 0!==r.color&&o.setRGB(r.color[0],r.color[1],r.color[2],un);const l=void 0!==r.range?r.range:0;switch(r.type){case"directional":a=new th(o),a.target.position.set(0,0,-1),a.add(a.target);break;case"point":a=new KA(o),a.distance=l;break;case"spot":a=new qA(o),a.distance=l,r.spot=r.spot||{},r.spot.innerConeAngle=void 0!==r.spot.innerConeAngle?r.spot.innerConeAngle:0,r.spot.outerConeAngle=void 0!==r.spot.outerConeAngle?r.spot.outerConeAngle:Math.PI/4,a.angle=r.spot.outerConeAngle,a.penumbra=1-r.spot.innerConeAngle/r.spot.outerConeAngle,a.target.position.set(0,0,-1),a.add(a.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+r.type)}return a.position.set(0,0,0),Ym(a,r),void 0!==r.intensity&&(a.intensity=r.intensity),a.name=e.createUniqueName(r.name||"light_"+t),i=Promise.resolve(a),e.cache.add(n,i),i}getDependency(t,e){if("light"===t)return this._loadLight(e)}createNodeAttachment(t){const e=this,n=this.parser,i=n.json.nodes[t],s=(i.extensions&&i.extensions[this.name]||{}).light;return void 0===s?null:this._loadLight(s).then(function(t){return n._getNodeRef(e.cache,s,t)})}}class Am{constructor(){this.name=lm.KHR_MATERIALS_UNLIT}getMaterialType(){return mr}extendParams(t,e,n){const i=[];t.color=new dr(1,1,1),t.opacity=1;const s=e.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const e=s.baseColorFactor;t.color.setRGB(e[0],e[1],e[2],un),t.opacity=e[3]}void 0!==s.baseColorTexture&&i.push(n.assignTexture(t,"map",s.baseColorTexture,hn))}return Promise.all(i)}}class hm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name].emissiveStrength;return void 0!==i&&(e.emissiveIntensity=i),Promise.resolve()}}class um{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_CLEARCOAT}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];if(void 0!==r.clearcoatFactor&&(e.clearcoat=r.clearcoatFactor),void 0!==r.clearcoatTexture&&s.push(n.assignTexture(e,"clearcoatMap",r.clearcoatTexture)),void 0!==r.clearcoatRoughnessFactor&&(e.clearcoatRoughness=r.clearcoatRoughnessFactor),void 0!==r.clearcoatRoughnessTexture&&s.push(n.assignTexture(e,"clearcoatRoughnessMap",r.clearcoatRoughnessTexture)),void 0!==r.clearcoatNormalTexture&&(s.push(n.assignTexture(e,"clearcoatNormalMap",r.clearcoatNormalTexture)),void 0!==r.clearcoatNormalTexture.scale)){const t=r.clearcoatNormalTexture.scale;e.clearcoatNormalScale=new di(t,t)}return Promise.all(s)}}class dm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_DISPERSION}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return e.dispersion=void 0!==i.dispersion?i.dispersion:0,Promise.resolve()}}class pm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_IRIDESCENCE}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return void 0!==r.iridescenceFactor&&(e.iridescence=r.iridescenceFactor),void 0!==r.iridescenceTexture&&s.push(n.assignTexture(e,"iridescenceMap",r.iridescenceTexture)),void 0!==r.iridescenceIor&&(e.iridescenceIOR=r.iridescenceIor),void 0===e.iridescenceThicknessRange&&(e.iridescenceThicknessRange=[100,400]),void 0!==r.iridescenceThicknessMinimum&&(e.iridescenceThicknessRange[0]=r.iridescenceThicknessMinimum),void 0!==r.iridescenceThicknessMaximum&&(e.iridescenceThicknessRange[1]=r.iridescenceThicknessMaximum),void 0!==r.iridescenceThicknessTexture&&s.push(n.assignTexture(e,"iridescenceThicknessMap",r.iridescenceThicknessTexture)),Promise.all(s)}}class gm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_SHEEN}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[];e.sheenColor=new dr(0,0,0),e.sheenRoughness=0,e.sheen=1;const r=i.extensions[this.name];if(void 0!==r.sheenColorFactor){const t=r.sheenColorFactor;e.sheenColor.setRGB(t[0],t[1],t[2],un)}return void 0!==r.sheenRoughnessFactor&&(e.sheenRoughness=r.sheenRoughnessFactor),void 0!==r.sheenColorTexture&&s.push(n.assignTexture(e,"sheenColorMap",r.sheenColorTexture,hn)),void 0!==r.sheenRoughnessTexture&&s.push(n.assignTexture(e,"sheenRoughnessMap",r.sheenRoughnessTexture)),Promise.all(s)}}class fm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_TRANSMISSION}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return void 0!==r.transmissionFactor&&(e.transmission=r.transmissionFactor),void 0!==r.transmissionTexture&&s.push(n.assignTexture(e,"transmissionMap",r.transmissionTexture)),Promise.all(s)}}class mm{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_VOLUME}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];e.thickness=void 0!==r.thicknessFactor?r.thicknessFactor:0,void 0!==r.thicknessTexture&&s.push(n.assignTexture(e,"thicknessMap",r.thicknessTexture)),e.attenuationDistance=r.attenuationDistance||1/0;const a=r.attenuationColor||[1,1,1];return e.attenuationColor=(new dr).setRGB(a[0],a[1],a[2],un),Promise.all(s)}}class ym{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_IOR}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return e.ior=void 0!==i.ior?i.ior:1.5,Promise.resolve()}}class Im{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_SPECULAR}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];e.specularIntensity=void 0!==r.specularFactor?r.specularFactor:1,void 0!==r.specularTexture&&s.push(n.assignTexture(e,"specularIntensityMap",r.specularTexture));const a=r.specularColorFactor||[1,1,1];return e.specularColor=(new dr).setRGB(a[0],a[1],a[2],un),void 0!==r.specularColorTexture&&s.push(n.assignTexture(e,"specularColorMap",r.specularColorTexture,hn)),Promise.all(s)}}class Cm{constructor(t){this.parser=t,this.name=lm.EXT_MATERIALS_BUMP}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return e.bumpScale=void 0!==r.bumpFactor?r.bumpFactor:1,void 0!==r.bumpTexture&&s.push(n.assignTexture(e,"bumpMap",r.bumpTexture)),Promise.all(s)}}class Em{constructor(t){this.parser=t,this.name=lm.KHR_MATERIALS_ANISOTROPY}getMaterialType(t){const e=this.parser.json.materials[t];return e.extensions&&e.extensions[this.name]?Xc:null}extendMaterialParams(t,e){const n=this.parser,i=n.json.materials[t];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return void 0!==r.anisotropyStrength&&(e.anisotropy=r.anisotropyStrength),void 0!==r.anisotropyRotation&&(e.anisotropyRotation=r.anisotropyRotation),void 0!==r.anisotropyTexture&&s.push(n.assignTexture(e,"anisotropyMap",r.anisotropyTexture)),Promise.all(s)}}class vm{constructor(t){this.parser=t,this.name=lm.KHR_TEXTURE_BASISU}loadTexture(t){const e=this.parser,n=e.json,i=n.textures[t];if(!i.extensions||!i.extensions[this.name])return null;const s=i.extensions[this.name],r=e.options.ktx2Loader;if(!r){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return e.loadTextureImage(t,s.source,r)}}class xm{constructor(t){this.parser=t,this.name=lm.EXT_TEXTURE_WEBP}loadTexture(t){const e=this.name,n=this.parser,i=n.json,s=i.textures[t];if(!s.extensions||!s.extensions[e])return null;const r=s.extensions[e],a=i.images[r.source];let o=n.textureLoader;if(a.uri){const t=n.options.manager.getHandler(a.uri);null!==t&&(o=t)}return n.loadTextureImage(t,r.source,o)}}class wm{constructor(t){this.parser=t,this.name=lm.EXT_TEXTURE_AVIF}loadTexture(t){const e=this.name,n=this.parser,i=n.json,s=i.textures[t];if(!s.extensions||!s.extensions[e])return null;const r=s.extensions[e],a=i.images[r.source];let o=n.textureLoader;if(a.uri){const t=n.options.manager.getHandler(a.uri);null!==t&&(o=t)}return n.loadTextureImage(t,r.source,o)}}class _m{constructor(t){this.name=lm.EXT_MESHOPT_COMPRESSION,this.parser=t}loadBufferView(t){const e=this.parser.json,n=e.bufferViews[t];if(n.extensions&&n.extensions[this.name]){const t=n.extensions[this.name],i=this.parser.getDependency("buffer",t.buffer),s=this.parser.options.meshoptDecoder;if(!s||!s.supported){if(e.extensionsRequired&&e.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return i.then(function(e){const n=t.byteOffset||0,i=t.byteLength||0,r=t.count,a=t.byteStride,o=new Uint8Array(e,n,i);return s.decodeGltfBufferAsync?s.decodeGltfBufferAsync(r,a,o,t.mode,t.filter).then(function(t){return t.buffer}):s.ready.then(function(){const e=new ArrayBuffer(r*a);return s.decodeGltfBuffer(new Uint8Array(e),r,a,o,t.mode,t.filter),e})})}return null}}class Bm{constructor(t){this.name=lm.EXT_MESH_GPU_INSTANCING,this.parser=t}createNodeMesh(t){const e=this.parser.json,n=e.nodes[t];if(!n.extensions||!n.extensions[this.name]||void 0===n.mesh)return null;const i=e.meshes[n.mesh];for(const t of i.primitives)if(t.mode!==Pm.TRIANGLES&&t.mode!==Pm.TRIANGLE_STRIP&&t.mode!==Pm.TRIANGLE_FAN&&void 0!==t.mode)return null;const s=n.extensions[this.name].attributes,r=[],a={};for(const t in s)r.push(this.parser.getDependency("accessor",s[t]).then(e=>(a[t]=e,a[t])));return r.length<1?null:(r.push(this.parser.createNodeMesh(t)),Promise.all(r).then(t=>{const e=t.pop(),n=e.isGroup?e.children:[e],i=t[0].count,s=[];for(const t of n){const e=new Es,n=new gi,r=new pi,o=new gi(1,1,1),l=new fo(t.geometry,t.material,i);for(let t=0;t<i;t++)a.TRANSLATION&&n.fromBufferAttribute(a.TRANSLATION,t),a.ROTATION&&r.fromBufferAttribute(a.ROTATION,t),a.SCALE&&o.fromBufferAttribute(a.SCALE,t),l.setMatrixAt(t,e.compose(n,r,o));for(const e in a)if("_COLOR_0"===e){const t=a[e];l.instanceColor=new oo(t.array,t.itemSize,t.normalized)}else"TRANSLATION"!==e&&"ROTATION"!==e&&"SCALE"!==e&&t.geometry.setAttribute(e,a[e]);Js.prototype.copy.call(l,t),this.parser.assignFinalMaterial(l),s.push(l)}return e.isGroup?(e.clear(),e.add(...s),e):s[0]}))}}const Sm="glTF";class bm{constructor(t){this.name=lm.KHR_BINARY_GLTF,this.content=null,this.body=null;const e=new DataView(t,0,12),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(t.slice(0,4))),version:e.getUint32(4,!0),length:e.getUint32(8,!0)},this.header.magic!==Sm)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-12,s=new DataView(t,12);let r=0;for(;r<i;){const e=s.getUint32(r,!0);r+=4;const i=s.getUint32(r,!0);if(r+=4,1313821514===i){const i=new Uint8Array(t,12+r,e);this.content=n.decode(i)}else if(5130562===i){const n=12+r;this.body=t.slice(n,n+e)}r+=e}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class Mm{constructor(t,e){if(!e)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=lm.KHR_DRACO_MESH_COMPRESSION,this.json=t,this.dracoLoader=e,this.dracoLoader.preload()}decodePrimitive(t,e){const n=this.json,i=this.dracoLoader,s=t.extensions[this.name].bufferView,r=t.extensions[this.name].attributes,a={},o={},l={};for(const t in r){const e=Om[t]||t.toLowerCase();a[e]=r[t]}for(const e in t.attributes){const i=Om[e]||e.toLowerCase();if(void 0!==r[e]){const s=n.accessors[t.attributes[e]],r=Lm[s.componentType];l[i]=r.name,o[i]=!0===s.normalized}}return e.getDependency("bufferView",s).then(function(t){return new Promise(function(e,n){i.decodeDracoFile(t,function(t){for(const e in t.attributes){const n=t.attributes[e],i=o[e];void 0!==i&&(n.normalized=i)}e(t)},a,l,un,n)})})}}class Tm{constructor(){this.name=lm.KHR_TEXTURE_TRANSFORM}extendTexture(t,e){return void 0!==e.texCoord&&e.texCoord!==t.channel||void 0!==e.offset||void 0!==e.rotation||void 0!==e.scale?(t=t.clone(),void 0!==e.texCoord&&(t.channel=e.texCoord),void 0!==e.offset&&t.offset.fromArray(e.offset),void 0!==e.rotation&&(t.rotation=e.rotation),void 0!==e.scale&&t.repeat.fromArray(e.scale),t.needsUpdate=!0,t):t}}class Qm{constructor(){this.name=lm.KHR_MESH_QUANTIZATION}}class Dm extends hA{constructor(t,e,n,i){super(t,e,n,i)}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i*3+i;for(let t=0;t!==i;t++)e[t]=n[s+t];return e}interpolate_(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=2*a,l=3*a,c=i-e,A=(n-e)/c,h=A*A,u=h*A,d=t*l,p=d-l,g=-2*u+3*h,f=u-h,m=1-g,y=f-h+A;for(let t=0;t!==a;t++){const e=r[p+t+a],n=r[p+t+o]*c,i=r[d+t+a],l=r[d+t]*c;s[t]=m*e+y*n+g*i+f*l}return s}}const Rm=new pi;class Um extends Dm{interpolate_(t,e,n,i){const s=super.interpolate_(t,e,n,i);return Rm.fromArray(s).normalize().toArray(s),s}}const Pm={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},Lm={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Fm={9728:Dt,9729:Ft,9984:Rt,9985:Nt,9986:Pt,9987:Ot},Nm={33071:Tt,33648:Qt,10497:Mt},km={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Om={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},zm={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},Gm={CUBICSPLINE:void 0,LINEAR:We,STEP:qe};function Hm(t){return void 0===t.DefaultMaterial&&(t.DefaultMaterial=new jc({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:S})),t.DefaultMaterial}function Vm(t,e,n){for(const i in n.extensions)void 0===t[i]&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[i]=n.extensions[i])}function Ym(t,e){void 0!==e.extras&&("object"==typeof e.extras?Object.assign(t.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function qm(t,e){if(t.updateMorphTargets(),void 0!==e.weights)for(let n=0,i=e.weights.length;n<i;n++)t.morphTargetInfluences[n]=e.weights[n];if(e.extras&&Array.isArray(e.extras.targetNames)){const n=e.extras.targetNames;if(t.morphTargetInfluences.length===n.length){t.morphTargetDictionary={};for(let e=0,i=n.length;e<i;e++)t.morphTargetDictionary[n[e]]=e}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function Wm(t){let e;const n=t.extensions&&t.extensions[lm.KHR_DRACO_MESH_COMPRESSION];if(e=n?"draco:"+n.bufferView+":"+n.indices+":"+Jm(n.attributes):t.indices+":"+Jm(t.attributes)+":"+t.mode,void 0!==t.targets)for(let n=0,i=t.targets.length;n<i;n++)e+=":"+Jm(t.targets[n]);return e}function Jm(t){let e="";const n=Object.keys(t).sort();for(let i=0,s=n.length;i<s;i++)e+=n[i]+":"+t[n[i]]+";";return e}function jm(t){switch(t){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}const Xm=new Es;class Km{constructor(t={},e={}){this.json=t,this.extensions={},this.plugins={},this.options=e,this.cache=new om,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,s=!1,r=-1;if("undefined"!=typeof navigator){const t=navigator.userAgent;n=!0===/^((?!chrome|android).)*safari/i.test(t);const e=t.match(/Version\/(\d+)/);i=n&&e?parseInt(e[1],10):-1,s=t.indexOf("Firefox")>-1,r=s?t.match(/Firefox\/([0-9]+)\./)[1]:-1}"undefined"==typeof createImageBitmap||n&&i<17||s&&r<98?this.textureLoader=new NA(this.options.manager):this.textureLoader=new ph(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new QA(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}setExtensions(t){this.extensions=t}setPlugins(t){this.plugins=t}parse(t,e){const n=this,i=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(t){return t._markDefs&&t._markDefs()}),Promise.all(this._invokeAll(function(t){return t.beforeRoot&&t.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(e){const r={scene:e[0][i.scene||0],scenes:e[0],animations:e[1],cameras:e[2],asset:i.asset,parser:n,userData:{}};return Vm(s,r,i),Ym(r,i),Promise.all(n._invokeAll(function(t){return t.afterRoot&&t.afterRoot(r)})).then(function(){for(const t of r.scenes)t.updateMatrixWorld();t(r)})}).catch(e)}_markDefs(){const t=this.json.nodes||[],e=this.json.skins||[],n=this.json.meshes||[];for(let n=0,i=e.length;n<i;n++){const i=e[n].joints;for(let e=0,n=i.length;e<n;e++)t[i[e]].isBone=!0}for(let e=0,i=t.length;e<i;e++){const i=t[e];void 0!==i.mesh&&(this._addNodeRef(this.meshCache,i.mesh),void 0!==i.skin&&(n[i.mesh].isSkinnedMesh=!0)),void 0!==i.camera&&this._addNodeRef(this.cameraCache,i.camera)}}_addNodeRef(t,e){void 0!==e&&(void 0===t.refs[e]&&(t.refs[e]=t.uses[e]=0),t.refs[e]++)}_getNodeRef(t,e,n){if(t.refs[e]<=1)return n;const i=n.clone(),s=(t,e)=>{const n=this.associations.get(t);null!=n&&this.associations.set(e,n);for(const[n,i]of t.children.entries())s(i,e.children[n])};return s(n,i),i.name+="_instance_"+t.uses[e]++,i}_invokeOne(t){const e=Object.values(this.plugins);e.push(this);for(let n=0;n<e.length;n++){const i=t(e[n]);if(i)return i}return null}_invokeAll(t){const e=Object.values(this.plugins);e.unshift(this);const n=[];for(let i=0;i<e.length;i++){const s=t(e[i]);s&&n.push(s)}return n}getDependency(t,e){const n=t+":"+e;let i=this.cache.get(n);if(!i){switch(t){case"scene":i=this.loadScene(e);break;case"node":i=this._invokeOne(function(t){return t.loadNode&&t.loadNode(e)});break;case"mesh":i=this._invokeOne(function(t){return t.loadMesh&&t.loadMesh(e)});break;case"accessor":i=this.loadAccessor(e);break;case"bufferView":i=this._invokeOne(function(t){return t.loadBufferView&&t.loadBufferView(e)});break;case"buffer":i=this.loadBuffer(e);break;case"material":i=this._invokeOne(function(t){return t.loadMaterial&&t.loadMaterial(e)});break;case"texture":i=this._invokeOne(function(t){return t.loadTexture&&t.loadTexture(e)});break;case"skin":i=this.loadSkin(e);break;case"animation":i=this._invokeOne(function(t){return t.loadAnimation&&t.loadAnimation(e)});break;case"camera":i=this.loadCamera(e);break;default:if(i=this._invokeOne(function(n){return n!=this&&n.getDependency&&n.getDependency(t,e)}),!i)throw new Error("Unknown type: "+t)}this.cache.add(n,i)}return i}getDependencies(t){let e=this.cache.get(t);if(!e){const n=this,i=this.json[t+("mesh"===t?"es":"s")]||[];e=Promise.all(i.map(function(e,i){return n.getDependency(t,i)})),this.cache.add(t,e)}return e}loadBuffer(t){const e=this.json.buffers[t],n=this.fileLoader;if(e.type&&"arraybuffer"!==e.type)throw new Error("THREE.GLTFLoader: "+e.type+" buffer type is not supported.");if(void 0===e.uri&&0===t)return Promise.resolve(this.extensions[lm.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(t,s){n.load(ah.resolveURL(e.uri,i.path),t,void 0,function(){s(new Error('THREE.GLTFLoader: Failed to load buffer "'+e.uri+'".'))})})}loadBufferView(t){const e=this.json.bufferViews[t];return this.getDependency("buffer",e.buffer).then(function(t){const n=e.byteLength||0,i=e.byteOffset||0;return t.slice(i,i+n)})}loadAccessor(t){const e=this,n=this.json,i=this.json.accessors[t];if(void 0===i.bufferView&&void 0===i.sparse){const t=km[i.type],e=Lm[i.componentType],n=!0===i.normalized,s=new e(i.count*t);return Promise.resolve(new Br(s,t,n))}const s=[];return void 0!==i.bufferView?s.push(this.getDependency("bufferView",i.bufferView)):s.push(null),void 0!==i.sparse&&(s.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(s).then(function(t){const s=t[0],r=km[i.type],a=Lm[i.componentType],o=a.BYTES_PER_ELEMENT,l=o*r,c=i.byteOffset||0,A=void 0!==i.bufferView?n.bufferViews[i.bufferView].byteStride:void 0,h=!0===i.normalized;let u,d;if(A&&A!==l){const t=Math.floor(c/A),n="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+t+":"+i.count;let l=e.cache.get(n);l||(u=new a(s,t*A,i.count*A/o),l=new wa(u,A/o),e.cache.add(n,l)),d=new Ba(l,r,c%A/o,h)}else u=null===s?new a(i.count*r):new a(s,c,i.count*r),d=new Br(u,r,h);if(void 0!==i.sparse){const e=km.SCALAR,n=Lm[i.sparse.indices.componentType],o=i.sparse.indices.byteOffset||0,l=i.sparse.values.byteOffset||0,c=new n(t[1],o,i.sparse.count*e),A=new a(t[2],l,i.sparse.count*r);null!==s&&(d=new Br(d.array.slice(),d.itemSize,d.normalized)),d.normalized=!1;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(d.setX(e,A[t*r]),r>=2&&d.setY(e,A[t*r+1]),r>=3&&d.setZ(e,A[t*r+2]),r>=4&&d.setW(e,A[t*r+3]),r>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}d.normalized=h}return d})}loadTexture(t){const e=this.json,n=this.options,i=e.textures[t].source,s=e.images[i];let r=this.textureLoader;if(s.uri){const t=n.manager.getHandler(s.uri);null!==t&&(r=t)}return this.loadTextureImage(t,i,r)}loadTextureImage(t,e,n){const i=this,s=this.json,r=s.textures[t],a=s.images[e],o=(a.uri||a.bufferView)+":"+r.sampler;if(this.textureCache[o])return this.textureCache[o];const l=this.loadImageSource(e,n).then(function(e){e.flipY=!1,e.name=r.name||a.name||"",""===e.name&&"string"==typeof a.uri&&!1===a.uri.startsWith("data:image/")&&(e.name=a.uri);const n=(s.samplers||{})[r.sampler]||{};return e.magFilter=Fm[n.magFilter]||Ft,e.minFilter=Fm[n.minFilter]||Ot,e.wrapS=Nm[n.wrapS]||Mt,e.wrapT=Nm[n.wrapT]||Mt,e.generateMipmaps=!e.isCompressedTexture&&e.minFilter!==Dt&&e.minFilter!==Ft,i.associations.set(e,{textures:t}),e}).catch(function(){return null});return this.textureCache[o]=l,l}loadImageSource(t,e){const n=this.json,i=this.options;if(void 0!==this.sourceCache[t])return this.sourceCache[t].then(t=>t.clone());const s=n.images[t],r=self.URL||self.webkitURL;let a=s.uri||"",o=!1;if(void 0!==s.bufferView)a=this.getDependency("bufferView",s.bufferView).then(function(t){o=!0;const e=new Blob([t],{type:s.mimeType});return a=r.createObjectURL(e),a});else if(void 0===s.uri)throw new Error("THREE.GLTFLoader: Image "+t+" is missing URI and bufferView");const l=Promise.resolve(a).then(function(t){return new Promise(function(n,s){let r=n;!0===e.isImageBitmapLoader&&(r=function(t){const e=new Oi(t);e.needsUpdate=!0,n(e)}),e.load(ah.resolveURL(t,i.path),r,void 0,s)})}).then(function(t){var e;return!0===o&&r.revokeObjectURL(a),Ym(t,s),t.userData.mimeType=s.mimeType||((e=s.uri).search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/)?"image/jpeg":e.search(/\.webp($|\?)/i)>0||0===e.search(/^data\:image\/webp/)?"image/webp":e.search(/\.ktx2($|\?)/i)>0||0===e.search(/^data\:image\/ktx2/)?"image/ktx2":"image/png"),t}).catch(function(t){throw console.error("THREE.GLTFLoader: Couldn't load texture",a),t});return this.sourceCache[t]=l,l}assignTexture(t,e,n,i){const s=this;return this.getDependency("texture",n.index).then(function(r){if(!r)return null;if(void 0!==n.texCoord&&n.texCoord>0&&((r=r.clone()).channel=n.texCoord),s.extensions[lm.KHR_TEXTURE_TRANSFORM]){const t=void 0!==n.extensions?n.extensions[lm.KHR_TEXTURE_TRANSFORM]:void 0;if(t){const e=s.associations.get(r);r=s.extensions[lm.KHR_TEXTURE_TRANSFORM].extendTexture(r,t),s.associations.set(r,e)}}return void 0!==i&&(r.colorSpace=i),t[e]=r,r})}assignFinalMaterial(t){const e=t.geometry;let n=t.material;const i=void 0===e.attributes.tangent,s=void 0!==e.attributes.color,r=void 0===e.attributes.normal;if(t.isPoints){const t="PointsMaterial:"+n.uuid;let e=this.cache.get(t);e||(e=new ol,fr.prototype.copy.call(e,n),e.color.copy(n.color),e.map=n.map,e.sizeAttenuation=!1,this.cache.add(t,e)),n=e}else if(t.isLine){const t="LineBasicMaterial:"+n.uuid;let e=this.cache.get(t);e||(e=new Wo,fr.prototype.copy.call(e,n),e.color.copy(n.color),e.map=n.map,this.cache.add(t,e)),n=e}if(i||s||r){let t="ClonedMaterial:"+n.uuid+":";i&&(t+="derivative-tangents:"),s&&(t+="vertex-colors:"),r&&(t+="flat-shading:");let e=this.cache.get(t);e||(e=n.clone(),s&&(e.vertexColors=!0),r&&(e.flatShading=!0),i&&(e.normalScale&&(e.normalScale.y*=-1),e.clearcoatNormalScale&&(e.clearcoatNormalScale.y*=-1)),this.cache.add(t,e),this.associations.set(e,this.associations.get(n))),n=e}t.material=n}getMaterialType(){return jc}loadMaterial(t){const e=this,n=this.json,i=this.extensions,s=n.materials[t];let r;const a={},o=[];if((s.extensions||{})[lm.KHR_MATERIALS_UNLIT]){const t=i[lm.KHR_MATERIALS_UNLIT];r=t.getMaterialType(),o.push(t.extendParams(a,s,e))}else{const n=s.pbrMetallicRoughness||{};if(a.color=new dr(1,1,1),a.opacity=1,Array.isArray(n.baseColorFactor)){const t=n.baseColorFactor;a.color.setRGB(t[0],t[1],t[2],un),a.opacity=t[3]}void 0!==n.baseColorTexture&&o.push(e.assignTexture(a,"map",n.baseColorTexture,hn)),a.metalness=void 0!==n.metallicFactor?n.metallicFactor:1,a.roughness=void 0!==n.roughnessFactor?n.roughnessFactor:1,void 0!==n.metallicRoughnessTexture&&(o.push(e.assignTexture(a,"metalnessMap",n.metallicRoughnessTexture)),o.push(e.assignTexture(a,"roughnessMap",n.metallicRoughnessTexture))),r=this._invokeOne(function(e){return e.getMaterialType&&e.getMaterialType(t)}),o.push(Promise.all(this._invokeAll(function(e){return e.extendMaterialParams&&e.extendMaterialParams(t,a)})))}!0===s.doubleSided&&(a.side=M);const l=s.alphaMode||"OPAQUE";if("BLEND"===l?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,"MASK"===l&&(a.alphaTest=void 0!==s.alphaCutoff?s.alphaCutoff:.5)),void 0!==s.normalTexture&&r!==mr&&(o.push(e.assignTexture(a,"normalMap",s.normalTexture)),a.normalScale=new di(1,1),void 0!==s.normalTexture.scale)){const t=s.normalTexture.scale;a.normalScale.set(t,t)}if(void 0!==s.occlusionTexture&&r!==mr&&(o.push(e.assignTexture(a,"aoMap",s.occlusionTexture)),void 0!==s.occlusionTexture.strength&&(a.aoMapIntensity=s.occlusionTexture.strength)),void 0!==s.emissiveFactor&&r!==mr){const t=s.emissiveFactor;a.emissive=(new dr).setRGB(t[0],t[1],t[2],un)}return void 0!==s.emissiveTexture&&r!==mr&&o.push(e.assignTexture(a,"emissiveMap",s.emissiveTexture,hn)),Promise.all(o).then(function(){const n=new r(a);return s.name&&(n.name=s.name),Ym(n,s),e.associations.set(n,{materials:t}),s.extensions&&Vm(i,n,s),n})}createUniqueName(t){const e=Vh.sanitizeNodeName(t||"");return e in this.nodeNamesUsed?e+"_"+ ++this.nodeNamesUsed[e]:(this.nodeNamesUsed[e]=0,e)}loadGeometries(t){const e=this,n=this.extensions,i=this.primitiveCache;function s(t){return n[lm.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(t,e).then(function(n){return Zm(n,t,e)})}const r=[];for(let n=0,a=t.length;n<a;n++){const a=t[n],o=Wm(a),l=i[o];if(l)r.push(l.promise);else{let t;t=a.extensions&&a.extensions[lm.KHR_DRACO_MESH_COMPRESSION]?s(a):Zm(new Hr,a,e),i[o]={primitive:a,promise:t},r.push(t)}}return Promise.all(r)}loadMesh(t){const e=this,n=this.json,i=this.extensions,s=n.meshes[t],r=s.primitives,a=[];for(let t=0,e=r.length;t<e;t++){const e=void 0===r[t].material?Hm(this.cache):this.getDependency("material",r[t].material);a.push(e)}return a.push(e.loadGeometries(r)),Promise.all(a).then(function(n){const a=n.slice(0,n.length-1),o=n[n.length-1],l=[];for(let n=0,c=o.length;n<c;n++){const c=o[n],A=r[n];let h;const u=a[n];if(A.mode===Pm.TRIANGLES||A.mode===Pm.TRIANGLE_STRIP||A.mode===Pm.TRIANGLE_FAN||void 0===A.mode)h=!0===s.isSkinnedMesh?new eo(c,u):new ea(c,u),!0===h.isSkinnedMesh&&h.normalizeSkinWeights(),A.mode===Pm.TRIANGLE_STRIP?h.geometry=rm(h.geometry,en):A.mode===Pm.TRIANGLE_FAN&&(h.geometry=rm(h.geometry,nn));else if(A.mode===Pm.LINES)h=new rl(c,u);else if(A.mode===Pm.LINE_STRIP)h=new el(c,u);else if(A.mode===Pm.LINE_LOOP)h=new al(c,u);else{if(A.mode!==Pm.POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+A.mode);h=new ul(c,u)}Object.keys(h.geometry.morphAttributes).length>0&&qm(h,s),h.name=e.createUniqueName(s.name||"mesh_"+t),Ym(h,s),A.extensions&&Vm(i,h,A),e.assignFinalMaterial(h),l.push(h)}for(let n=0,i=l.length;n<i;n++)e.associations.set(l[n],{meshes:t,primitives:n});if(1===l.length)return s.extensions&&Vm(i,l[0],s),l[0];const c=new ya;s.extensions&&Vm(i,c,s),e.associations.set(c,{meshes:t});for(let t=0,e=l.length;t<e;t++)c.add(l[t]);return c})}loadCamera(t){let e;const n=this.json.cameras[t],i=n[n.type];if(i)return"perspective"===n.type?e=new da(ui.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):"orthographic"===n.type&&(e=new ZA(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(e.name=this.createUniqueName(n.name)),Ym(e,n),Promise.resolve(e);console.warn("THREE.GLTFLoader: Missing camera parameters.")}loadSkin(t){const e=this.json.skins[t],n=[];for(let t=0,i=e.joints.length;t<i;t++)n.push(this._loadNodeShallow(e.joints[t]));return void 0!==e.inverseBindMatrices?n.push(this.getDependency("accessor",e.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(t){const n=t.pop(),i=t,s=[],r=[];for(let t=0,a=i.length;t<a;t++){const a=i[t];if(a){s.push(a);const e=new Es;null!==n&&e.fromArray(n.array,16*t),r.push(e)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',e.joints[t])}return new ao(s,r)})}loadAnimation(t){const e=this.json,n=this,i=e.animations[t],s=i.name?i.name:"animation_"+t,r=[],a=[],o=[],l=[],c=[];for(let t=0,e=i.channels.length;t<e;t++){const e=i.channels[t],n=i.samplers[e.sampler],s=e.target,A=s.node,h=void 0!==i.parameters?i.parameters[n.input]:n.input,u=void 0!==i.parameters?i.parameters[n.output]:n.output;void 0!==s.node&&(r.push(this.getDependency("node",A)),a.push(this.getDependency("accessor",h)),o.push(this.getDependency("accessor",u)),l.push(n),c.push(s))}return Promise.all([Promise.all(r),Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(c)]).then(function(t){const e=t[0],i=t[1],r=t[2],a=t[3],o=t[4],l=[];for(let t=0,s=e.length;t<s;t++){const s=e[t],c=i[t],A=r[t],h=a[t],u=o[t];if(void 0===s)continue;s.updateMatrix&&s.updateMatrix();const d=n._createAnimationTracks(s,c,A,h,u);if(d)for(let t=0;t<d.length;t++)l.push(d[t])}return new xA(s,void 0,l)})}createNodeMesh(t){const e=this.json,n=this,i=e.nodes[t];return void 0===i.mesh?null:n.getDependency("mesh",i.mesh).then(function(t){const e=n._getNodeRef(n.meshCache,i.mesh,t);return void 0!==i.weights&&e.traverse(function(t){if(t.isMesh)for(let e=0,n=i.weights.length;e<n;e++)t.morphTargetInfluences[e]=i.weights[e]}),e})}loadNode(t){const e=this,n=this.json.nodes[t],i=e._loadNodeShallow(t),s=[],r=n.children||[];for(let t=0,n=r.length;t<n;t++)s.push(e.getDependency("node",r[t]));const a=void 0===n.skin?Promise.resolve(null):e.getDependency("skin",n.skin);return Promise.all([i,Promise.all(s),a]).then(function(t){const e=t[0],n=t[1],i=t[2];null!==i&&e.traverse(function(t){t.isSkinnedMesh&&t.bind(i,Xm)});for(let t=0,i=n.length;t<i;t++)e.add(n[t]);return e})}_loadNodeShallow(t){const e=this.json,n=this.extensions,i=this;if(void 0!==this.nodeCache[t])return this.nodeCache[t];const s=e.nodes[t],r=s.name?i.createUniqueName(s.name):"",a=[],o=i._invokeOne(function(e){return e.createNodeMesh&&e.createNodeMesh(t)});return o&&a.push(o),void 0!==s.camera&&a.push(i.getDependency("camera",s.camera).then(function(t){return i._getNodeRef(i.cameraCache,s.camera,t)})),i._invokeAll(function(e){return e.createNodeAttachment&&e.createNodeAttachment(t)}).forEach(function(t){a.push(t)}),this.nodeCache[t]=Promise.all(a).then(function(e){let a;if(a=!0===s.isBone?new no:e.length>1?new ya:1===e.length?e[0]:new Js,a!==e[0])for(let t=0,n=e.length;t<n;t++)a.add(e[t]);if(s.name&&(a.userData.name=s.name,a.name=r),Ym(a,s),s.extensions&&Vm(n,a,s),void 0!==s.matrix){const t=new Es;t.fromArray(s.matrix),a.applyMatrix4(t)}else void 0!==s.translation&&a.position.fromArray(s.translation),void 0!==s.rotation&&a.quaternion.fromArray(s.rotation),void 0!==s.scale&&a.scale.fromArray(s.scale);if(i.associations.has(a)){if(void 0!==s.mesh&&i.meshCache.refs[s.mesh]>1){const t=i.associations.get(a);i.associations.set(a,{...t})}}else i.associations.set(a,{});return i.associations.get(a).nodes=t,a}),this.nodeCache[t]}loadScene(t){const e=this.extensions,n=this.json.scenes[t],i=this,s=new ya;n.name&&(s.name=i.createUniqueName(n.name)),Ym(s,n),n.extensions&&Vm(e,s,n);const r=n.nodes||[],a=[];for(let t=0,e=r.length;t<e;t++)a.push(i.getDependency("node",r[t]));return Promise.all(a).then(function(t){for(let e=0,n=t.length;e<n;e++)s.add(t[e]);return i.associations=(t=>{const e=new Map;for(const[t,n]of i.associations)(t instanceof fr||t instanceof Oi)&&e.set(t,n);return t.traverse(t=>{const n=i.associations.get(t);null!=n&&e.set(t,n)}),e})(s),s})}_createAnimationTracks(t,e,n,i,s){const r=[],a=t.name?t.name:t.uuid,o=[];let l;switch(zm[s.path]===zm.weights?t.traverse(function(t){t.morphTargetInfluences&&o.push(t.name?t.name:t.uuid)}):o.push(a),zm[s.path]){case zm.weights:l=yA;break;case zm.rotation:l=CA;break;case zm.translation:case zm.scale:l=vA;break;default:l=1===n.itemSize?yA:vA}const c=void 0!==i.interpolation?Gm[i.interpolation]:We,A=this._getArrayFromAccessor(n);for(let t=0,n=o.length;t<n;t++){const n=new l(o[t]+"."+zm[s.path],e.array,A,c);"CUBICSPLINE"===i.interpolation&&this._createCubicSplineTrackInterpolant(n),r.push(n)}return r}_getArrayFromAccessor(t){let e=t.array;if(t.normalized){const t=jm(e.constructor),n=new Float32Array(e.length);for(let i=0,s=e.length;i<s;i++)n[i]=e[i]*t;e=n}return e}_createCubicSplineTrackInterpolant(t){t.createInterpolant=function(t){return new(this instanceof CA?Um:Dm)(this.times,this.values,this.getValueSize()/3,t)},t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function Zm(t,e,n){const i=e.attributes,s=[];function r(e,i){return n.getDependency("accessor",e).then(function(e){t.setAttribute(i,e)})}for(const e in i){const n=Om[e]||e.toLowerCase();n in t.attributes||s.push(r(i[e],n))}if(void 0!==e.indices&&!t.index){const i=n.getDependency("accessor",e.indices).then(function(e){t.setIndex(e)});s.push(i)}return Ti.workingColorSpace!==un&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${Ti.workingColorSpace}" not supported.`),Ym(t,e),function(t,e,n){const i=e.attributes,s=new Ji;if(void 0===i.POSITION)return;{const t=n.json.accessors[i.POSITION],e=t.min,r=t.max;if(void 0===e||void 0===r)return void console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");if(s.set(new gi(e[0],e[1],e[2]),new gi(r[0],r[1],r[2])),t.normalized){const e=jm(Lm[t.componentType]);s.min.multiplyScalar(e),s.max.multiplyScalar(e)}}const r=e.targets;if(void 0!==r){const t=new gi,e=new gi;for(let i=0,s=r.length;i<s;i++){const s=r[i];if(void 0!==s.POSITION){const i=n.json.accessors[s.POSITION],r=i.min,a=i.max;if(void 0!==r&&void 0!==a){if(e.setX(Math.max(Math.abs(r[0]),Math.abs(a[0]))),e.setY(Math.max(Math.abs(r[1]),Math.abs(a[1]))),e.setZ(Math.max(Math.abs(r[2]),Math.abs(a[2]))),i.normalized){const t=jm(Lm[i.componentType]);e.multiplyScalar(t)}t.max(e)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}s.expandByVector(t)}t.boundingBox=s;const a=new us;s.getCenter(a.center),a.radius=s.min.distanceTo(s.max)/2,t.boundingSphere=a}(t,e,n),Promise.all(s).then(function(){return void 0!==e.targets?function(t,e,n){let i=!1,s=!1,r=!1;for(let t=0,n=e.length;t<n;t++){const n=e[t];if(void 0!==n.POSITION&&(i=!0),void 0!==n.NORMAL&&(s=!0),void 0!==n.COLOR_0&&(r=!0),i&&s&&r)break}if(!i&&!s&&!r)return Promise.resolve(t);const a=[],o=[],l=[];for(let c=0,A=e.length;c<A;c++){const A=e[c];if(i){const e=void 0!==A.POSITION?n.getDependency("accessor",A.POSITION):t.attributes.position;a.push(e)}if(s){const e=void 0!==A.NORMAL?n.getDependency("accessor",A.NORMAL):t.attributes.normal;o.push(e)}if(r){const e=void 0!==A.COLOR_0?n.getDependency("accessor",A.COLOR_0):t.attributes.color;l.push(e)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then(function(e){const n=e[0],a=e[1],o=e[2];return i&&(t.morphAttributes.position=n),s&&(t.morphAttributes.normal=a),r&&(t.morphAttributes.color=o),t.morphTargetsRelative=!0,t})}(t,e.targets,n):t})}const $m={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class ty{constructor(){this.textureUtils=null,this.pluginCallbacks=[],this.register(function(t){return new gy(t)}),this.register(function(t){return new fy(t)}),this.register(function(t){return new Cy(t)}),this.register(function(t){return new Ey(t)}),this.register(function(t){return new vy(t)}),this.register(function(t){return new xy(t)}),this.register(function(t){return new my(t)}),this.register(function(t){return new yy(t)}),this.register(function(t){return new Iy(t)}),this.register(function(t){return new wy(t)}),this.register(function(t){return new _y(t)}),this.register(function(t){return new By(t)}),this.register(function(t){return new Sy(t)}),this.register(function(t){return new by(t)})}register(t){return-1===this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.push(t),this}unregister(t){return-1!==this.pluginCallbacks.indexOf(t)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(t),1),this}setTextureUtils(t){return this.textureUtils=t,this}parse(t,e,n,i){const s=new py,r=[];for(let t=0,e=this.pluginCallbacks.length;t<e;t++)r.push(this.pluginCallbacks[t](s));s.setPlugins(r),s.setTextureUtils(this.textureUtils),s.writeAsync(t,e,i).catch(n)}parseAsync(t,e){const n=this;return new Promise(function(i,s){n.parse(t,i,s,e)})}}const ey=5120,ny=5121,iy=5122,sy=5123,ry=34962,ay="KHR_mesh_quantization",oy={};oy[Dt]=9728,oy[Rt]=9984,oy[Pt]=9986,oy[Ft]=9729,oy[Nt]=9985,oy[Ot]=9987,oy[Tt]=33071,oy[Mt]=10497,oy[Qt]=33648;const ly={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},cy=new dr;function Ay(t,e){return t.length===e.length&&t.every(function(t,n){return t===e[n]})}function hy(t){return 4*Math.ceil(t/4)}function uy(t,e=0){const n=hy(t.byteLength);if(n!==t.byteLength){const i=new Uint8Array(n);if(i.set(new Uint8Array(t)),0!==e)for(let s=t.byteLength;s<n;s++)i[s]=e;return i.buffer}return t}function dy(){return"undefined"==typeof document&&"undefined"!=typeof OffscreenCanvas?new OffscreenCanvas(1,1):document.createElement("canvas")}class py{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter r"+f}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map},this.textureUtils=null}setPlugins(t){this.plugins=t}setTextureUtils(t){this.textureUtils=t}async writeAsync(t,e,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),await this.processInputAsync(t),await Promise.all(this.pending);const i=this,s=i.buffers,r=i.json;n=i.options;const a=i.extensionsUsed,o=i.extensionsRequired,l=new Blob(s,{type:"application/octet-stream"}),c=Object.keys(a),A=Object.keys(o);if(c.length>0&&(r.extensionsUsed=c),A.length>0&&(r.extensionsRequired=A),r.buffers&&r.buffers.length>0&&(r.buffers[0].byteLength=l.size),!0===n.binary){const t=new FileReader;t.readAsArrayBuffer(l),t.onloadend=function(){const n=uy(t.result),i=new DataView(new ArrayBuffer(8));i.setUint32(0,n.byteLength,!0),i.setUint32(4,5130562,!0);const s=uy((a=JSON.stringify(r),(new TextEncoder).encode(a).buffer),32);var a;const o=new DataView(new ArrayBuffer(8));o.setUint32(0,s.byteLength,!0),o.setUint32(4,1313821514,!0);const l=new ArrayBuffer(12),c=new DataView(l);c.setUint32(0,1179937895,!0),c.setUint32(4,2,!0);const A=12+o.byteLength+s.byteLength+i.byteLength+n.byteLength;c.setUint32(8,A,!0);const h=new Blob([l,o,s,i,n],{type:"application/octet-stream"}),u=new FileReader;u.readAsArrayBuffer(h),u.onloadend=function(){e(u.result)}}}else if(r.buffers&&r.buffers.length>0){const t=new FileReader;t.readAsDataURL(l),t.onloadend=function(){const n=t.result;r.buffers[0].uri=n,e(r)}}else e(r)}serializeUserData(t,e){if(0===Object.keys(t.userData).length)return;const n=this.options,i=this.extensionsUsed;try{const s=JSON.parse(JSON.stringify(t.userData));if(n.includeCustomExtensions&&s.gltfExtensions){void 0===e.extensions&&(e.extensions={});for(const t in s.gltfExtensions)e.extensions[t]=s.gltfExtensions[t],i[t]=!0;delete s.gltfExtensions}Object.keys(s).length>0&&(e.extras=s)}catch(e){console.warn("THREE.GLTFExporter: userData of '"+t.name+"' won't be serialized because of JSON.stringify error - "+e.message)}}getUID(t,e=!1){if(!1===this.uids.has(t)){const e=new Map;e.set(!0,this.uid++),e.set(!1,this.uid++),this.uids.set(t,e)}return this.uids.get(t).get(e)}isNormalizedNormalAttribute(t){if(this.cache.attributesNormalized.has(t))return!1;const e=new gi;for(let n=0,i=t.count;n<i;n++)if(Math.abs(e.fromBufferAttribute(t,n).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(t){const e=this.cache;if(e.attributesNormalized.has(t))return e.attributesNormalized.get(t);const n=t.clone(),i=new gi;for(let t=0,e=n.count;t<e;t++)i.fromBufferAttribute(n,t),0===i.x&&0===i.y&&0===i.z?i.setX(1):i.normalize(),n.setXYZ(t,i.x,i.y,i.z);return e.attributesNormalized.set(t,n),n}applyTextureTransform(t,e){let n=!1;const i={};0===e.offset.x&&0===e.offset.y||(i.offset=e.offset.toArray(),n=!0),0!==e.rotation&&(i.rotation=e.rotation,n=!0),1===e.repeat.x&&1===e.repeat.y||(i.scale=e.repeat.toArray(),n=!0),n&&(t.extensions=t.extensions||{},t.extensions.KHR_texture_transform=i,this.extensionsUsed.KHR_texture_transform=!0)}async buildMetalRoughTextureAsync(t,e){if(t===e)return t;function n(t){return t.colorSpace===hn?function(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}:function(t){return t}}t instanceof ml&&(t=await this.decompressTextureAsync(t)),e instanceof ml&&(e=await this.decompressTextureAsync(e));const i=t?t.image:null,s=e?e.image:null,r=Math.max(i?i.width:0,s?s.width:0),a=Math.max(i?i.height:0,s?s.height:0),o=dy();o.width=r,o.height=a;const l=o.getContext("2d",{willReadFrequently:!0});l.fillStyle="#00ffff",l.fillRect(0,0,r,a);const c=l.getImageData(0,0,r,a);if(i){l.drawImage(i,0,0,r,a);const e=n(t),s=l.getImageData(0,0,r,a).data;for(let t=2;t<s.length;t+=4)c.data[t]=256*e(s[t]/256)}if(s){l.drawImage(s,0,0,r,a);const t=n(e),i=l.getImageData(0,0,r,a).data;for(let e=1;e<i.length;e+=4)c.data[e]=256*t(i[e]/256)}l.putImageData(c,0,0);const A=(t||e).clone();return A.source=new Li(o),A.colorSpace=An,A.channel=(t||e).channel,t&&e&&t.channel!==e.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),A}async decompressTextureAsync(t,e=1/0){if(null===this.textureUtils)throw new Error("THREE.GLTFExporter: setTextureUtils() must be called to process compressed textures.");return await this.textureUtils.decompress(t,e)}processBuffer(t){const e=this.json,n=this.buffers;return e.buffers||(e.buffers=[{byteLength:0}]),n.push(t),0}processBufferView(t,e,n,i,s){const r=this.json;let a;switch(r.bufferViews||(r.bufferViews=[]),e){case ey:case ny:a=1;break;case iy:case sy:a=2;break;default:a=4}let o=t.itemSize*a;s===ry&&(o=4*Math.ceil(o/4));const l=hy(i*o),c=new DataView(new ArrayBuffer(l));let A=0;for(let s=n;s<n+i;s++){for(let n=0;n<t.itemSize;n++){let i;t.itemSize>4?i=t.array[s*t.itemSize+n]:(0===n?i=t.getX(s):1===n?i=t.getY(s):2===n?i=t.getZ(s):3===n&&(i=t.getW(s)),!0===t.normalized&&(i=ui.normalize(i,t.array))),5126===e?c.setFloat32(A,i,!0):5124===e?c.setInt32(A,i,!0):5125===e?c.setUint32(A,i,!0):e===iy?c.setInt16(A,i,!0):e===sy?c.setUint16(A,i,!0):e===ey?c.setInt8(A,i):e===ny&&c.setUint8(A,i),A+=a}A%o!==0&&(A+=o-A%o)}const h={buffer:this.processBuffer(c.buffer),byteOffset:this.byteOffset,byteLength:l};return void 0!==s&&(h.target=s),s===ry&&(h.byteStride=o),this.byteOffset+=l,r.bufferViews.push(h),{id:r.bufferViews.length-1,byteLength:0}}processBufferViewImage(t){const e=this,n=e.json;return n.bufferViews||(n.bufferViews=[]),new Promise(function(i){const s=new FileReader;s.readAsArrayBuffer(t),s.onloadend=function(){const t=uy(s.result),r={buffer:e.processBuffer(t),byteOffset:e.byteOffset,byteLength:t.byteLength};e.byteOffset+=t.byteLength,i(n.bufferViews.push(r)-1)}})}processAccessor(t,e,n,i){const s=this.json;let r;if(t.array.constructor===Float32Array)r=5126;else if(t.array.constructor===Int32Array)r=5124;else if(t.array.constructor===Uint32Array)r=5125;else if(t.array.constructor===Int16Array)r=iy;else if(t.array.constructor===Uint16Array)r=sy;else if(t.array.constructor===Int8Array)r=ey;else{if(t.array.constructor!==Uint8Array)throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+t.array.constructor.name);r=ny}if(void 0===n&&(n=0),void 0!==i&&i!==1/0||(i=t.count),0===i)return null;const a=function(t,e,n){const i={min:new Array(t.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(t.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let s=e;s<e+n;s++)for(let e=0;e<t.itemSize;e++){let n;t.itemSize>4?n=t.array[s*t.itemSize+e]:(0===e?n=t.getX(s):1===e?n=t.getY(s):2===e?n=t.getZ(s):3===e&&(n=t.getW(s)),!0===t.normalized&&(n=ui.normalize(n,t.array))),i.min[e]=Math.min(i.min[e],n),i.max[e]=Math.max(i.max[e],n)}return i}(t,n,i);let o;void 0!==e&&(o=t===e.index?34963:ry);const l=this.processBufferView(t,r,n,i,o),c={bufferView:l.id,byteOffset:l.byteOffset,componentType:r,count:i,max:a.max,min:a.min,type:{1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"}[t.itemSize]};return!0===t.normalized&&(c.normalized=!0),s.accessors||(s.accessors=[]),s.accessors.push(c)-1}processImage(t,e,n,i="image/png"){if(null!==t){const s=this,r=s.cache,a=s.json,o=s.options,l=s.pending;r.images.has(t)||r.images.set(t,{});const c=r.images.get(t),A=i+":flipY/"+n.toString();if(void 0!==c[A])return c[A];a.images||(a.images=[]);const h={mimeType:i},u=dy();u.width=Math.min(t.width,o.maxTextureSize),u.height=Math.min(t.height,o.maxTextureSize);const d=u.getContext("2d",{willReadFrequently:!0});if(!0===n&&(d.translate(0,u.height),d.scale(1,-1)),void 0!==t.data){e!==ne&&console.error("GLTFExporter: Only RGBAFormat is supported.",e),(t.width>o.maxTextureSize||t.height>o.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",t);const n=new Uint8ClampedArray(t.height*t.width*4);for(let e=0;e<n.length;e+=4)n[e+0]=t.data[e+0],n[e+1]=t.data[e+1],n[e+2]=t.data[e+2],n[e+3]=t.data[e+3];d.putImageData(new ImageData(n,t.width,t.height),0,0)}else{if(!("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas))throw new Error("THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.");d.drawImage(t,0,0,u.width,u.height)}!0===o.binary?l.push(function(t,e){if(void 0!==t.toBlob)return new Promise(n=>t.toBlob(n,e));let n;return"image/jpeg"===e?n=.92:"image/webp"===e&&(n=.8),t.convertToBlob({type:e,quality:n})}(u,i).then(t=>s.processBufferViewImage(t)).then(t=>{h.bufferView=t})):h.uri=Ui.getDataURL(u,i);const p=a.images.push(h)-1;return c[A]=p,p}throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(t){const e=this.json;e.samplers||(e.samplers=[]);const n={magFilter:oy[t.magFilter],minFilter:oy[t.minFilter],wrapS:oy[t.wrapS],wrapT:oy[t.wrapT]};return e.samplers.push(n)-1}async processTextureAsync(t){const e=this.options,n=this.cache,i=this.json;if(n.textures.has(t))return n.textures.get(t);i.textures||(i.textures=[]),t instanceof ml&&(t=await this.decompressTextureAsync(t,e.maxTextureSize));let s=t.userData.mimeType;"image/webp"===s&&(s="image/png");const r={sampler:this.processSampler(t),source:this.processImage(t.image,t.format,t.flipY,s)};t.name&&(r.name=t.name),await this._invokeAllAsync(async function(e){e.writeTexture&&await e.writeTexture(t,r)});const a=i.textures.push(r)-1;return n.textures.set(t,a),a}async processMaterialAsync(t){const e=this.cache,n=this.json;if(e.materials.has(t))return e.materials.get(t);if(t.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const i={pbrMetallicRoughness:{}};!0!==t.isMeshStandardMaterial&&!0!==t.isMeshBasicMaterial&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const s=t.color.toArray().concat([t.opacity]);if(Ay(s,[1,1,1,1])||(i.pbrMetallicRoughness.baseColorFactor=s),t.isMeshStandardMaterial?(i.pbrMetallicRoughness.metallicFactor=t.metalness,i.pbrMetallicRoughness.roughnessFactor=t.roughness):(i.pbrMetallicRoughness.metallicFactor=0,i.pbrMetallicRoughness.roughnessFactor=1),t.metalnessMap||t.roughnessMap){const e=await this.buildMetalRoughTextureAsync(t.metalnessMap,t.roughnessMap),n={index:await this.processTextureAsync(e),texCoord:e.channel};this.applyTextureTransform(n,e),i.pbrMetallicRoughness.metallicRoughnessTexture=n}if(t.map){const e={index:await this.processTextureAsync(t.map),texCoord:t.map.channel};this.applyTextureTransform(e,t.map),i.pbrMetallicRoughness.baseColorTexture=e}if(t.emissive){const e=t.emissive;if(Math.max(e.r,e.g,e.b)>0&&(i.emissiveFactor=t.emissive.toArray()),t.emissiveMap){const e={index:await this.processTextureAsync(t.emissiveMap),texCoord:t.emissiveMap.channel};this.applyTextureTransform(e,t.emissiveMap),i.emissiveTexture=e}}if(t.normalMap){const e={index:await this.processTextureAsync(t.normalMap),texCoord:t.normalMap.channel};t.normalScale&&1!==t.normalScale.x&&(e.scale=t.normalScale.x),this.applyTextureTransform(e,t.normalMap),i.normalTexture=e}if(t.aoMap){const e={index:await this.processTextureAsync(t.aoMap),texCoord:t.aoMap.channel};1!==t.aoMapIntensity&&(e.strength=t.aoMapIntensity),this.applyTextureTransform(e,t.aoMap),i.occlusionTexture=e}t.transparent?i.alphaMode="BLEND":t.alphaTest>0&&(i.alphaMode="MASK",i.alphaCutoff=t.alphaTest),t.side===M&&(i.doubleSided=!0),""!==t.name&&(i.name=t.name),this.serializeUserData(t,i),await this._invokeAllAsync(async function(e){e.writeMaterialAsync&&await e.writeMaterialAsync(t,i)});const r=n.materials.push(i)-1;return e.materials.set(t,r),r}async processMeshAsync(t){const e=this.cache,n=this.json,i=[t.geometry.uuid];if(Array.isArray(t.material))for(let e=0,n=t.material.length;e<n;e++)i.push(t.material[e].uuid);else i.push(t.material.uuid);const s=i.join(":");if(e.meshes.has(s))return e.meshes.get(s);const r=t.geometry;let a;a=t.isLineSegments?1:t.isLineLoop?2:t.isLine?3:t.isPoints?0:t.material.wireframe?1:4;const o={},l={},c=[],A=[],h={uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},u=r.getAttribute("normal");void 0===u||this.isNormalizedNormalAttribute(u)||(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),r.setAttribute("normal",this.createNormalizedNormalAttribute(u)));let d=null;for(let t in r.attributes){if("morph"===t.slice(0,5))continue;const n=r.attributes[t];if(t=h[t]||t.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(t)||(t="_"+t),e.attributes.has(this.getUID(n))){l[t]=e.attributes.get(this.getUID(n));continue}d=null;const i=n.array;"JOINTS_0"!==t||i instanceof Uint16Array||i instanceof Uint8Array?(i instanceof Uint32Array||i instanceof Int32Array)&&!t.startsWith("_")&&(console.warn(`GLTFExporter: Attribute "${t}" converted to type FLOAT.`),d=ty.Utils.toFloat32BufferAttribute(n)):(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),d=new Br(new Uint16Array(i),n.itemSize,n.normalized));const s=this.processAccessor(d||n,r);null!==s&&(t.startsWith("_")||this.detectMeshQuantization(t,n),l[t]=s,e.attributes.set(this.getUID(n),s))}if(void 0!==u&&r.setAttribute("normal",u),0===Object.keys(l).length)return null;if(void 0!==t.morphTargetInfluences&&t.morphTargetInfluences.length>0){const n=[],i=[],s={};if(void 0!==t.morphTargetDictionary)for(const e in t.morphTargetDictionary)s[t.morphTargetDictionary[e]]=e;for(let a=0;a<t.morphTargetInfluences.length;++a){const o={};let l=!1;for(const t in r.morphAttributes){if("position"!==t&&"normal"!==t){l||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),l=!0);continue}const n=r.morphAttributes[t][a],i=t.toUpperCase(),s=r.attributes[t];if(e.attributes.has(this.getUID(n,!0))){o[i]=e.attributes.get(this.getUID(n,!0));continue}const c=n.clone();if(!r.morphTargetsRelative)for(let t=0,e=n.count;t<e;t++)for(let e=0;e<n.itemSize;e++)0===e&&c.setX(t,n.getX(t)-s.getX(t)),1===e&&c.setY(t,n.getY(t)-s.getY(t)),2===e&&c.setZ(t,n.getZ(t)-s.getZ(t)),3===e&&c.setW(t,n.getW(t)-s.getW(t));o[i]=this.processAccessor(c,r),e.attributes.set(this.getUID(s,!0),o[i])}A.push(o),n.push(t.morphTargetInfluences[a]),void 0!==t.morphTargetDictionary&&i.push(s[a])}o.weights=n,i.length>0&&(o.extras={},o.extras.targetNames=i)}const p=Array.isArray(t.material);if(p&&0===r.groups.length)return null;let g=!1;if(p&&null===r.index){const t=[];for(let e=0,n=r.attributes.position.count;e<n;e++)t[e]=e;r.setIndex(t),g=!0}const f=p?t.material:[t.material],m=p?r.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let t=0,n=m.length;t<n;t++){const n={mode:a,attributes:l};if(this.serializeUserData(r,n),A.length>0&&(n.targets=A),null!==r.index){let i=this.getUID(r.index);void 0===m[t].start&&void 0===m[t].count||(i+=":"+m[t].start+":"+m[t].count),e.attributes.has(i)?n.indices=e.attributes.get(i):(n.indices=this.processAccessor(r.index,r,m[t].start,m[t].count),e.attributes.set(i,n.indices)),null===n.indices&&delete n.indices}const i=await this.processMaterialAsync(f[m[t].materialIndex]);null!==i&&(n.material=i),c.push(n)}!0===g&&r.setIndex(null),o.primitives=c,n.meshes||(n.meshes=[]),await this._invokeAllAsync(function(e){e.writeMesh&&e.writeMesh(t,o)});const y=n.meshes.push(o)-1;return e.meshes.set(s,y),y}detectMeshQuantization(t,e){if(this.extensionsUsed[ay])return;let n;switch(e.array.constructor){case Int8Array:n="byte";break;case Uint8Array:n="unsigned byte";break;case Int16Array:n="short";break;case Uint16Array:n="unsigned short";break;default:return}e.normalized&&(n+=" normalized");const i=t.split("_",1)[0];$m[i]&&$m[i].includes(n)&&(this.extensionsUsed[ay]=!0,this.extensionsRequired[ay]=!0)}processCamera(t){const e=this.json;e.cameras||(e.cameras=[]);const n=t.isOrthographicCamera,i={type:n?"orthographic":"perspective"};return n?i.orthographic={xmag:2*t.right,ymag:2*t.top,zfar:t.far<=0?.001:t.far,znear:t.near<0?0:t.near}:i.perspective={aspectRatio:t.aspect,yfov:ui.degToRad(t.fov),zfar:t.far<=0?.001:t.far,znear:t.near<0?0:t.near},""!==t.name&&(i.name=t.type),e.cameras.push(i)-1}processAnimation(t,e){const n=this.json,i=this.nodeMap;n.animations||(n.animations=[]);const s=(t=ty.Utils.mergeMorphTargetTracks(t.clone(),e)).tracks,r=[],a=[];for(let t=0;t<s.length;++t){const n=s[t],o=Vh.parseTrackName(n.name);let l=Vh.findNode(e,o.nodeName);const c=ly[o.propertyName];if("bones"===o.objectName&&(l=!0===l.isSkinnedMesh?l.skeleton.getBoneByName(o.objectIndex):void 0),!l||!c){console.warn('THREE.GLTFExporter: Could not export animation track "%s".',n.name);continue}const A=1;let h,u=n.values.length/n.times.length;c===ly.morphTargetInfluences&&(u/=l.morphTargetInfluences.length),!0===n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline?(h="CUBICSPLINE",u/=3):h=n.getInterpolation()===qe?"STEP":"LINEAR",a.push({input:this.processAccessor(new Br(n.times,A)),output:this.processAccessor(new Br(n.values,u)),interpolation:h}),r.push({sampler:a.length-1,target:{node:i.get(l),path:c}})}return n.animations.push({name:t.name||"clip_"+n.animations.length,samplers:a,channels:r}),n.animations.length-1}processSkin(t){const e=this.json,n=this.nodeMap,i=e.nodes[n.get(t)],s=t.skeleton;if(void 0===s)return null;const r=t.skeleton.bones[0];if(void 0===r)return null;const a=[],o=new Float32Array(16*s.bones.length),l=new Es;for(let e=0;e<s.bones.length;++e)a.push(n.get(s.bones[e])),l.copy(s.boneInverses[e]),l.multiply(t.bindMatrix).toArray(o,16*e);return void 0===e.skins&&(e.skins=[]),e.skins.push({inverseBindMatrices:this.processAccessor(new Br(o,16)),joints:a,skeleton:n.get(r)}),i.skin=e.skins.length-1}async processNodeAsync(t){const e=this.json,n=this.options,i=this.nodeMap;e.nodes||(e.nodes=[]);const s={};if(n.trs){const e=t.quaternion.toArray(),n=t.position.toArray(),i=t.scale.toArray();Ay(e,[0,0,0,1])||(s.rotation=e),Ay(n,[0,0,0])||(s.translation=n),Ay(i,[1,1,1])||(s.scale=i)}else t.matrixAutoUpdate&&t.updateMatrix(),!1===function(t){return Ay(t.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}(t.matrix)&&(s.matrix=t.matrix.elements);if(""!==t.name&&(s.name=String(t.name)),this.serializeUserData(t,s),t.isMesh||t.isLine||t.isPoints){const e=await this.processMeshAsync(t);null!==e&&(s.mesh=e)}else t.isCamera&&(s.camera=this.processCamera(t));t.isSkinnedMesh&&this.skins.push(t);const r=e.nodes.push(s)-1;if(i.set(t,r),t.children.length>0){const e=[];for(let i=0,s=t.children.length;i<s;i++){const s=t.children[i];if(s.visible||!1===n.onlyVisible){const t=await this.processNodeAsync(s);null!==t&&e.push(t)}}e.length>0&&(s.children=e)}return await this._invokeAllAsync(function(e){e.writeNode&&e.writeNode(t,s)}),r}async processSceneAsync(t){const e=this.json,n=this.options;e.scenes||(e.scenes=[],e.scene=0);const i={};""!==t.name&&(i.name=t.name),e.scenes.push(i);const s=[];for(let e=0,i=t.children.length;e<i;e++){const i=t.children[e];if(i.visible||!1===n.onlyVisible){const t=await this.processNodeAsync(i);null!==t&&s.push(t)}}s.length>0&&(i.nodes=s),this.serializeUserData(t,i)}async processObjectsAsync(t){const e=new xa;e.name="AuxScene";for(let n=0;n<t.length;n++)e.children.push(t[n]);await this.processSceneAsync(e)}async processInputAsync(t){const e=this.options;t=t instanceof Array?t:[t],await this._invokeAllAsync(function(e){e.beforeParse&&e.beforeParse(t)});const n=[];for(let e=0;e<t.length;e++)t[e]instanceof xa?await this.processSceneAsync(t[e]):n.push(t[e]);n.length>0&&await this.processObjectsAsync(n);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let n=0;n<e.animations.length;++n)this.processAnimation(e.animations[n],t[0]);await this._invokeAllAsync(function(e){e.afterParse&&e.afterParse(t)})}async _invokeAllAsync(t){for(let e=0,n=this.plugins.length;e<n;e++)await t(this.plugins[e])}}class gy{constructor(t){this.writer=t,this.name="KHR_lights_punctual"}writeNode(t,e){if(!t.isLight)return;if(!t.isDirectionalLight&&!t.isPointLight&&!t.isSpotLight)return void console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",t);const n=this.writer,i=n.json,s=n.extensionsUsed,r={};t.name&&(r.name=t.name),r.color=t.color.toArray(),r.intensity=t.intensity,t.isDirectionalLight?r.type="directional":t.isPointLight?(r.type="point",t.distance>0&&(r.range=t.distance)):t.isSpotLight&&(r.type="spot",t.distance>0&&(r.range=t.distance),r.spot={},r.spot.innerConeAngle=(1-t.penumbra)*t.angle,r.spot.outerConeAngle=t.angle),void 0!==t.decay&&2!==t.decay&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),!t.target||t.target.parent===t&&0===t.target.position.x&&0===t.target.position.y&&-1===t.target.position.z||console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),s[this.name]||(i.extensions=i.extensions||{},i.extensions[this.name]={lights:[]},s[this.name]=!0);const a=i.extensions[this.name].lights;a.push(r),e.extensions=e.extensions||{},e.extensions[this.name]={light:a.length-1}}}class fy{constructor(t){this.writer=t,this.name="KHR_materials_unlit"}async writeMaterialAsync(t,e){if(!t.isMeshBasicMaterial)return;const n=this.writer.extensionsUsed;e.extensions=e.extensions||{},e.extensions[this.name]={},n[this.name]=!0,e.pbrMetallicRoughness.metallicFactor=0,e.pbrMetallicRoughness.roughnessFactor=.9}}class my{constructor(t){this.writer=t,this.name="KHR_materials_clearcoat"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.clearcoat)return;const n=this.writer,i=n.extensionsUsed,s={};if(s.clearcoatFactor=t.clearcoat,t.clearcoatMap){const e={index:await n.processTextureAsync(t.clearcoatMap),texCoord:t.clearcoatMap.channel};n.applyTextureTransform(e,t.clearcoatMap),s.clearcoatTexture=e}if(s.clearcoatRoughnessFactor=t.clearcoatRoughness,t.clearcoatRoughnessMap){const e={index:await n.processTextureAsync(t.clearcoatRoughnessMap),texCoord:t.clearcoatRoughnessMap.channel};n.applyTextureTransform(e,t.clearcoatRoughnessMap),s.clearcoatRoughnessTexture=e}if(t.clearcoatNormalMap){const e={index:await n.processTextureAsync(t.clearcoatNormalMap),texCoord:t.clearcoatNormalMap.channel};1!==t.clearcoatNormalScale.x&&(e.scale=t.clearcoatNormalScale.x),n.applyTextureTransform(e,t.clearcoatNormalMap),s.clearcoatNormalTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class yy{constructor(t){this.writer=t,this.name="KHR_materials_dispersion"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.dispersion)return;const n=this.writer.extensionsUsed,i={};i.dispersion=t.dispersion,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class Iy{constructor(t){this.writer=t,this.name="KHR_materials_iridescence"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.iridescence)return;const n=this.writer,i=n.extensionsUsed,s={};if(s.iridescenceFactor=t.iridescence,t.iridescenceMap){const e={index:await n.processTextureAsync(t.iridescenceMap),texCoord:t.iridescenceMap.channel};n.applyTextureTransform(e,t.iridescenceMap),s.iridescenceTexture=e}if(s.iridescenceIor=t.iridescenceIOR,s.iridescenceThicknessMinimum=t.iridescenceThicknessRange[0],s.iridescenceThicknessMaximum=t.iridescenceThicknessRange[1],t.iridescenceThicknessMap){const e={index:await n.processTextureAsync(t.iridescenceThicknessMap),texCoord:t.iridescenceThicknessMap.channel};n.applyTextureTransform(e,t.iridescenceThicknessMap),s.iridescenceThicknessTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class Cy{constructor(t){this.writer=t,this.name="KHR_materials_transmission"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.transmission)return;const n=this.writer,i=n.extensionsUsed,s={};if(s.transmissionFactor=t.transmission,t.transmissionMap){const e={index:await n.processTextureAsync(t.transmissionMap),texCoord:t.transmissionMap.channel};n.applyTextureTransform(e,t.transmissionMap),s.transmissionTexture=e}e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class Ey{constructor(t){this.writer=t,this.name="KHR_materials_volume"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0===t.transmission)return;const n=this.writer,i=n.extensionsUsed,s={};if(s.thicknessFactor=t.thickness,t.thicknessMap){const e={index:await n.processTextureAsync(t.thicknessMap),texCoord:t.thicknessMap.channel};n.applyTextureTransform(e,t.thicknessMap),s.thicknessTexture=e}t.attenuationDistance!==1/0&&(s.attenuationDistance=t.attenuationDistance),s.attenuationColor=t.attenuationColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class vy{constructor(t){this.writer=t,this.name="KHR_materials_ior"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||1.5===t.ior)return;const n=this.writer.extensionsUsed,i={};i.ior=t.ior,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class xy{constructor(t){this.writer=t,this.name="KHR_materials_specular"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||1===t.specularIntensity&&t.specularColor.equals(cy)&&!t.specularIntensityMap&&!t.specularColorMap)return;const n=this.writer,i=n.extensionsUsed,s={};if(t.specularIntensityMap){const e={index:await n.processTextureAsync(t.specularIntensityMap),texCoord:t.specularIntensityMap.channel};n.applyTextureTransform(e,t.specularIntensityMap),s.specularTexture=e}if(t.specularColorMap){const e={index:await n.processTextureAsync(t.specularColorMap),texCoord:t.specularColorMap.channel};n.applyTextureTransform(e,t.specularColorMap),s.specularColorTexture=e}s.specularFactor=t.specularIntensity,s.specularColorFactor=t.specularColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class wy{constructor(t){this.writer=t,this.name="KHR_materials_sheen"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0==t.sheen)return;const n=this.writer,i=n.extensionsUsed,s={};if(t.sheenRoughnessMap){const e={index:await n.processTextureAsync(t.sheenRoughnessMap),texCoord:t.sheenRoughnessMap.channel};n.applyTextureTransform(e,t.sheenRoughnessMap),s.sheenRoughnessTexture=e}if(t.sheenColorMap){const e={index:await n.processTextureAsync(t.sheenColorMap),texCoord:t.sheenColorMap.channel};n.applyTextureTransform(e,t.sheenColorMap),s.sheenColorTexture=e}s.sheenRoughnessFactor=t.sheenRoughness,s.sheenColorFactor=t.sheenColor.toArray(),e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class _y{constructor(t){this.writer=t,this.name="KHR_materials_anisotropy"}async writeMaterialAsync(t,e){if(!t.isMeshPhysicalMaterial||0==t.anisotropy)return;const n=this.writer,i=n.extensionsUsed,s={};if(t.anisotropyMap){const e={index:await n.processTextureAsync(t.anisotropyMap)};n.applyTextureTransform(e,t.anisotropyMap),s.anisotropyTexture=e}s.anisotropyStrength=t.anisotropy,s.anisotropyRotation=t.anisotropyRotation,e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class By{constructor(t){this.writer=t,this.name="KHR_materials_emissive_strength"}async writeMaterialAsync(t,e){if(!t.isMeshStandardMaterial||1===t.emissiveIntensity)return;const n=this.writer.extensionsUsed,i={};i.emissiveStrength=t.emissiveIntensity,e.extensions=e.extensions||{},e.extensions[this.name]=i,n[this.name]=!0}}class Sy{constructor(t){this.writer=t,this.name="EXT_materials_bump"}async writeMaterialAsync(t,e){if(!t.isMeshStandardMaterial||1===t.bumpScale&&!t.bumpMap)return;const n=this.writer,i=n.extensionsUsed,s={};if(t.bumpMap){const e={index:await n.processTextureAsync(t.bumpMap),texCoord:t.bumpMap.channel};n.applyTextureTransform(e,t.bumpMap),s.bumpTexture=e}s.bumpFactor=t.bumpScale,e.extensions=e.extensions||{},e.extensions[this.name]=s,i[this.name]=!0}}class by{constructor(t){this.writer=t,this.name="EXT_mesh_gpu_instancing"}writeNode(t,e){if(!t.isInstancedMesh)return;const n=this.writer,i=t,s=new Float32Array(3*i.count),r=new Float32Array(4*i.count),a=new Float32Array(3*i.count),o=new Es,l=new gi,c=new pi,A=new gi;for(let t=0;t<i.count;t++)i.getMatrixAt(t,o),o.decompose(l,c,A),l.toArray(s,3*t),c.toArray(r,4*t),A.toArray(a,3*t);const h={TRANSLATION:n.processAccessor(new Br(s,3)),ROTATION:n.processAccessor(new Br(r,4)),SCALE:n.processAccessor(new Br(a,3))};i.instanceColor&&(h._COLOR_0=n.processAccessor(i.instanceColor)),e.extensions=e.extensions||{},e.extensions[this.name]={attributes:h},n.extensionsUsed[this.name]=!0,n.extensionsRequired[this.name]=!0}}ty.Utils={insertKeyframe:function(t,e){const n=.001,i=t.getValueSize(),s=new t.TimeBufferType(t.times.length+1),r=new t.ValueBufferType(t.values.length+i),a=t.createInterpolant(new t.ValueBufferType(i));let o;if(0===t.times.length){s[0]=e;for(let t=0;t<i;t++)r[t]=0;o=0}else if(e<t.times[0]){if(Math.abs(t.times[0]-e)<n)return 0;s[0]=e,s.set(t.times,1),r.set(a.evaluate(e),0),r.set(t.values,i),o=0}else if(e>t.times[t.times.length-1]){if(Math.abs(t.times[t.times.length-1]-e)<n)return t.times.length-1;s[s.length-1]=e,s.set(t.times,0),r.set(t.values,0),r.set(a.evaluate(e),t.values.length),o=s.length-1}else for(let l=0;l<t.times.length;l++){if(Math.abs(t.times[l]-e)<n)return l;if(t.times[l]<e&&t.times[l+1]>e){s.set(t.times.slice(0,l+1),0),s[l+1]=e,s.set(t.times.slice(l+1),l+2),r.set(t.values.slice(0,(l+1)*i),0),r.set(a.evaluate(e),(l+1)*i),r.set(t.values.slice((l+1)*i),(l+2)*i),o=l+1;break}}return t.times=s,t.values=r,o},mergeMorphTargetTracks:function(t,e){const n=[],i={},s=t.tracks;for(let t=0;t<s.length;++t){let r=s[t];const a=Vh.parseTrackName(r.name),o=Vh.findNode(e,a.nodeName);if("morphTargetInfluences"!==a.propertyName||void 0===a.propertyIndex){n.push(r);continue}if(r.createInterpolant!==r.InterpolantFactoryMethodDiscrete&&r.createInterpolant!==r.InterpolantFactoryMethodLinear){if(r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),r=r.clone(),r.setInterpolation(We)}const l=o.morphTargetInfluences.length,c=o.morphTargetDictionary[a.propertyIndex];if(void 0===c)throw new Error("THREE.GLTFExporter: Morph target name not found: "+a.propertyIndex);let A;if(void 0===i[o.uuid]){A=r.clone();const t=new A.ValueBufferType(l*A.times.length);for(let e=0;e<A.times.length;e++)t[e*l+c]=A.values[e];A.name=(a.nodeName||"")+".morphTargetInfluences",A.values=t,i[o.uuid]=A,n.push(A);continue}const h=r.createInterpolant(new r.ValueBufferType(1));A=i[o.uuid];for(let t=0;t<A.times.length;t++)A.values[t*l+c]=h.evaluate(A.times[t]);for(let t=0;t<r.times.length;t++){const e=this.insertKeyframe(A,r.times[t]);A.values[e*l+c]=r.values[t]}}return t.tracks=n,t},toFloat32BufferAttribute:function(t){const e=new Br(new Float32Array(t.count*t.itemSize),t.itemSize,!1);if(!t.normalized&&!t.isInterleavedBufferAttribute)return e.array.set(t.array),e;for(let n=0,i=t.count;n<i;n++)for(let i=0;i<t.itemSize;i++)e.setComponent(n,i,t.getComponent(n,i));return e}};const My=new WeakMap;function Ty(){let t,e;function n(t,e,n,i,s,r){const a=r.num_components(),o=n.num_points()*a,l=o*s.BYTES_PER_ELEMENT,c=function(t,e){switch(e){case Float32Array:return t.DT_FLOAT32;case Int8Array:return t.DT_INT8;case Int16Array:return t.DT_INT16;case Int32Array:return t.DT_INT32;case Uint8Array:return t.DT_UINT8;case Uint16Array:return t.DT_UINT16;case Uint32Array:return t.DT_UINT32}}(t,s),A=t._malloc(l);e.GetAttributeDataArrayForAllPoints(n,r,c,l,A);const h=new s(t.HEAPF32.buffer,A,o).slice();return t._free(A),{name:i,array:h,itemSize:a}}onmessage=function(i){const s=i.data;switch(s.type){case"init":t=s.decoderConfig,e=new Promise(function(e){t.onModuleLoaded=function(t){e({draco:t})},DracoDecoderModule(t)});break;case"decode":const i=s.buffer,r=s.taskConfig;e.then(t=>{const e=t.draco,a=new e.Decoder;try{const t=function(t,e,i,s){const r=s.attributeIDs,a=s.attributeTypes;let o,l;const c=e.GetEncodedGeometryType(i);if(c===t.TRIANGULAR_MESH)o=new t.Mesh,l=e.DecodeArrayToMesh(i,i.byteLength,o);else{if(c!==t.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");o=new t.PointCloud,l=e.DecodeArrayToPointCloud(i,i.byteLength,o)}if(!l.ok()||0===o.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+l.error_msg());const A={index:null,attributes:[]};for(const i in r){const l=self[a[i]];let c,h;if(s.useUniqueIDs)h=r[i],c=e.GetAttributeByUniqueId(o,h);else{if(h=e.GetAttributeId(o,t[r[i]]),-1===h)continue;c=e.GetAttribute(o,h)}const u=n(t,e,o,i,l,c);"color"===i&&(u.vertexColorSpace=s.vertexColorSpace),A.attributes.push(u)}return c===t.TRIANGULAR_MESH&&(A.index=function(t,e,n){const i=3*n.num_faces(),s=4*i,r=t._malloc(s);e.GetTrianglesUInt32Array(n,s,r);const a=new Uint32Array(t.HEAPF32.buffer,r,i).slice();return t._free(r),{array:a,itemSize:1}}(t,e,o)),t.destroy(o),A}(e,a,new Int8Array(i),r),o=t.attributes.map(t=>t.array.buffer);t.index&&o.push(t.index.array.buffer),self.postMessage({type:"decode",id:s.id,geometry:t},o)}catch(t){console.error(t),self.postMessage({type:"error",id:s.id,error:t.message})}finally{e.destroy(a)}})}}}var Qy=Uint8Array,Dy=Uint16Array,Ry=Int32Array,Uy=new Qy([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Py=new Qy([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ly=new Qy([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Fy=function(t,e){for(var n=new Dy(31),i=0;i<31;++i)n[i]=e+=1<<t[i-1];var s=new Ry(n[30]);for(i=1;i<30;++i)for(var r=n[i];r<n[i+1];++r)s[r]=r-n[i]<<5|i;return{b:n,r:s}},Ny=Fy(Uy,2),ky=Ny.b,Oy=Ny.r;ky[28]=258,Oy[258]=28;for(var zy=Fy(Py,0),Gy=zy.b,Hy=zy.r,Vy=new Dy(32768),Yy=0;Yy<32768;++Yy){var qy=(43690&Yy)>>1|(21845&Yy)<<1;qy=(61680&(qy=(52428&qy)>>2|(13107&qy)<<2))>>4|(3855&qy)<<4,Vy[Yy]=((65280&qy)>>8|(255&qy)<<8)>>1}var Wy=function(t,e,n){for(var i=t.length,s=0,r=new Dy(e);s<i;++s)t[s]&&++r[t[s]-1];var a,o=new Dy(e);for(s=1;s<e;++s)o[s]=o[s-1]+r[s-1]<<1;if(n){a=new Dy(1<<e);var l=15-e;for(s=0;s<i;++s)if(t[s])for(var c=s<<4|t[s],A=e-t[s],h=o[t[s]-1]++<<A,u=h|(1<<A)-1;h<=u;++h)a[Vy[h]>>l]=c}else for(a=new Dy(i),s=0;s<i;++s)t[s]&&(a[s]=Vy[o[t[s]-1]++]>>15-t[s]);return a},Jy=new Qy(288);for(Yy=0;Yy<144;++Yy)Jy[Yy]=8;for(Yy=144;Yy<256;++Yy)Jy[Yy]=9;for(Yy=256;Yy<280;++Yy)Jy[Yy]=7;for(Yy=280;Yy<288;++Yy)Jy[Yy]=8;var jy=new Qy(32);for(Yy=0;Yy<32;++Yy)jy[Yy]=5;var Xy=Wy(Jy,9,0),Ky=Wy(Jy,9,1),Zy=Wy(jy,5,0),$y=Wy(jy,5,1),tI=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},eI=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&n},nI=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(7&e)},iI=function(t){return(t+7)/8|0},sI=function(t,e,n){return(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length),new Qy(t.subarray(e,n))},rI=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],aI=function(t,e,n){var i=new Error(e||rI[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,aI),!n)throw i;return i},oI=function(t,e,n){n<<=7&e;var i=e/8|0;t[i]|=n,t[i+1]|=n>>8},lI=function(t,e,n){n<<=7&e;var i=e/8|0;t[i]|=n,t[i+1]|=n>>8,t[i+2]|=n>>16},cI=function(t,e){for(var n=[],i=0;i<t.length;++i)t[i]&&n.push({s:i,f:t[i]});var s=n.length,r=n.slice();if(!s)return{t:fI,l:0};if(1==s){var a=new Qy(n[0].s+1);return a[n[0].s]=1,{t:a,l:1}}n.sort(function(t,e){return t.f-e.f}),n.push({s:-1,f:25001});var o=n[0],l=n[1],c=0,A=1,h=2;for(n[0]={s:-1,f:o.f+l.f,l:o,r:l};A!=s-1;)o=n[n[c].f<n[h].f?c++:h++],l=n[c!=A&&n[c].f<n[h].f?c++:h++],n[A++]={s:-1,f:o.f+l.f,l:o,r:l};var u=r[0].s;for(i=1;i<s;++i)r[i].s>u&&(u=r[i].s);var d=new Dy(u+1),p=AI(n[A-1],d,0);if(p>e){i=0;var g=0,f=p-e,m=1<<f;for(r.sort(function(t,e){return d[e.s]-d[t.s]||t.f-e.f});i<s;++i){var y=r[i].s;if(!(d[y]>e))break;g+=m-(1<<p-d[y]),d[y]=e}for(g>>=f;g>0;){var I=r[i].s;d[I]<e?g-=1<<e-d[I]++-1:++i}for(;i>=0&&g;--i){var C=r[i].s;d[C]==e&&(--d[C],++g)}p=e}return{t:new Qy(d),l:p}},AI=function(t,e,n){return-1==t.s?Math.max(AI(t.l,e,n+1),AI(t.r,e,n+1)):e[t.s]=n},hI=function(t){for(var e=t.length;e&&!t[--e];);for(var n=new Dy(++e),i=0,s=t[0],r=1,a=function(t){n[i++]=t},o=1;o<=e;++o)if(t[o]==s&&o!=e)++r;else{if(!s&&r>2){for(;r>138;r-=138)a(32754);r>2&&(a(r>10?r-11<<5|28690:r-3<<5|12305),r=0)}else if(r>3){for(a(s),--r;r>6;r-=6)a(8304);r>2&&(a(r-3<<5|8208),r=0)}for(;r--;)a(s);r=1,s=t[o]}return{c:n.subarray(0,i),n:e}},uI=function(t,e){for(var n=0,i=0;i<e.length;++i)n+=t[i]*e[i];return n},dI=function(t,e,n){var i=n.length,s=iI(e+2);t[s]=255&i,t[s+1]=i>>8,t[s+2]=255^t[s],t[s+3]=255^t[s+1];for(var r=0;r<i;++r)t[s+r+4]=n[r];return 8*(s+4+i)},pI=function(t,e,n,i,s,r,a,o,l,c,A){oI(e,A++,n),++s[256];for(var h=cI(s,15),u=h.t,d=h.l,p=cI(r,15),g=p.t,f=p.l,m=hI(u),y=m.c,I=m.n,C=hI(g),E=C.c,v=C.n,x=new Dy(19),w=0;w<y.length;++w)++x[31&y[w]];for(w=0;w<E.length;++w)++x[31&E[w]];for(var _=cI(x,7),B=_.t,S=_.l,b=19;b>4&&!B[Ly[b-1]];--b);var M,T,Q,D,R=c+5<<3,U=uI(s,Jy)+uI(r,jy)+a,P=uI(s,u)+uI(r,g)+a+14+3*b+uI(x,B)+2*x[16]+3*x[17]+7*x[18];if(l>=0&&R<=U&&R<=P)return dI(e,A,t.subarray(l,l+c));if(oI(e,A,1+(P<U)),A+=2,P<U){M=Wy(u,d,0),T=u,Q=Wy(g,f,0),D=g;var L=Wy(B,S,0);for(oI(e,A,I-257),oI(e,A+5,v-1),oI(e,A+10,b-4),A+=14,w=0;w<b;++w)oI(e,A+3*w,B[Ly[w]]);A+=3*b;for(var F=[y,E],N=0;N<2;++N){var k=F[N];for(w=0;w<k.length;++w){var O=31&k[w];oI(e,A,L[O]),A+=B[O],O>15&&(oI(e,A,k[w]>>5&127),A+=k[w]>>12)}}}else M=Xy,T=Jy,Q=Zy,D=jy;for(w=0;w<o;++w){var z=i[w];if(z>255){lI(e,A,M[257+(O=z>>18&31)]),A+=T[O+257],O>7&&(oI(e,A,z>>23&31),A+=Uy[O]);var G=31&z;lI(e,A,Q[G]),A+=D[G],G>3&&(lI(e,A,z>>5&8191),A+=Py[G])}else lI(e,A,M[z]),A+=T[z]}return lI(e,A,M[256]),A+T[256]},gI=new Ry([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),fI=new Qy(0),mI=function(){for(var t=new Int32Array(256),e=0;e<256;++e){for(var n=e,i=9;--i;)n=(1&n&&-306674912)^n>>>1;t[e]=n}return t}(),yI=function(){var t=-1;return{p:function(e){for(var n=t,i=0;i<e.length;++i)n=mI[255&n^e[i]]^n>>>8;t=n},d:function(){return~t}}},II=function(t,e,n,i,s){if(!s&&(s={l:1},e.dictionary)){var r=e.dictionary.subarray(-32768),a=new Qy(r.length+t.length);a.set(r),a.set(t,r.length),t=a,s.w=r.length}return function(t,e,n,i,s,r){var a=r.z||t.length,o=new Qy(i+a+5*(1+Math.ceil(a/7e3))+s),l=o.subarray(i,o.length-s),c=r.l,A=7&(r.r||0);if(e){A&&(l[0]=r.r>>3);for(var h=gI[e-1],u=h>>13,d=8191&h,p=(1<<n)-1,g=r.p||new Dy(32768),f=r.h||new Dy(p+1),m=Math.ceil(n/3),y=2*m,I=function(e){return(t[e]^t[e+1]<<m^t[e+2]<<y)&p},C=new Ry(25e3),E=new Dy(288),v=new Dy(32),x=0,w=0,_=r.i||0,B=0,S=r.w||0,b=0;_+2<a;++_){var M=I(_),T=32767&_,Q=f[M];if(g[T]=Q,f[M]=T,S<=_){var D=a-_;if((x>7e3||B>24576)&&(D>423||!c)){A=pI(t,l,0,C,E,v,w,B,b,_-b,A),B=x=w=0,b=_;for(var R=0;R<286;++R)E[R]=0;for(R=0;R<30;++R)v[R]=0}var U=2,P=0,L=d,F=T-Q&32767;if(D>2&&M==I(_-F))for(var N=Math.min(u,D)-1,k=Math.min(32767,_),O=Math.min(258,D);F<=k&&--L&&T!=Q;){if(t[_+U]==t[_+U-F]){for(var z=0;z<O&&t[_+z]==t[_+z-F];++z);if(z>U){if(U=z,P=F,z>N)break;var G=Math.min(F,z-2),H=0;for(R=0;R<G;++R){var V=_-F+R&32767,Y=V-g[V]&32767;Y>H&&(H=Y,Q=V)}}}F+=(T=Q)-(Q=g[T])&32767}if(P){C[B++]=268435456|Oy[U]<<18|Hy[P];var q=31&Oy[U],W=31&Hy[P];w+=Uy[q]+Py[W],++E[257+q],++v[W],S=_+U,++x}else C[B++]=t[_],++E[t[_]]}}for(_=Math.max(_,S);_<a;++_)C[B++]=t[_],++E[t[_]];A=pI(t,l,c,C,E,v,w,B,b,_-b,A),c||(r.r=7&A|l[A/8|0]<<3,A-=7,r.h=f,r.p=g,r.i=_,r.w=S)}else{for(_=r.w||0;_<a+c;_+=65535){var J=_+65535;J>=a&&(l[A/8|0]=c,J=a),A=dI(l,A+1,t.subarray(_,J))}r.i=a}return sI(o,0,i+iI(A)+s)}(t,null==e.level?6:e.level,null==e.mem?s.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(t.length)))):20:12+e.mem,n,i,s)},CI=function(t,e){var n={};for(var i in t)n[i]=t[i];for(var i in e)n[i]=e[i];return n},EI=function(t,e,n){for(;n;++e)t[e]=n,n>>>=8};function vI(t,e){return II(t,e||{},0,0)}function xI(t,e){return function(t,e,n,i){var s=t.length,r=i?i.length:0;if(!s||e.f&&!e.l)return n||new Qy(0);var a=!n,o=a||2!=e.i,l=e.i;a&&(n=new Qy(3*s));var c=function(t){var e=n.length;if(t>e){var i=new Qy(Math.max(2*e,t));i.set(n),n=i}},A=e.f||0,h=e.p||0,u=e.b||0,d=e.l,p=e.d,g=e.m,f=e.n,m=8*s;do{if(!d){A=eI(t,h,1);var y=eI(t,h+1,3);if(h+=3,!y){var I=t[(T=iI(h)+4)-4]|t[T-3]<<8,C=T+I;if(C>s){l&&aI(0);break}o&&c(u+I),n.set(t.subarray(T,C),u),e.b=u+=I,e.p=h=8*C,e.f=A;continue}if(1==y)d=Ky,p=$y,g=9,f=5;else if(2==y){var E=eI(t,h,31)+257,v=eI(t,h+10,15)+4,x=E+eI(t,h+5,31)+1;h+=14;for(var w=new Qy(x),_=new Qy(19),B=0;B<v;++B)_[Ly[B]]=eI(t,h+3*B,7);h+=3*v;var S=tI(_),b=(1<<S)-1,M=Wy(_,S,1);for(B=0;B<x;){var T,Q=M[eI(t,h,b)];if(h+=15&Q,(T=Q>>4)<16)w[B++]=T;else{var D=0,R=0;for(16==T?(R=3+eI(t,h,3),h+=2,D=w[B-1]):17==T?(R=3+eI(t,h,7),h+=3):18==T&&(R=11+eI(t,h,127),h+=7);R--;)w[B++]=D}}var U=w.subarray(0,E),P=w.subarray(E);g=tI(U),f=tI(P),d=Wy(U,g,1),p=Wy(P,f,1)}else aI(1);if(h>m){l&&aI(0);break}}o&&c(u+131072);for(var L=(1<<g)-1,F=(1<<f)-1,N=h;;N=h){var k=(D=d[nI(t,h)&L])>>4;if((h+=15&D)>m){l&&aI(0);break}if(D||aI(2),k<256)n[u++]=k;else{if(256==k){N=h,d=null;break}var O=k-254;if(k>264){var z=Uy[B=k-257];O=eI(t,h,(1<<z)-1)+ky[B],h+=z}var G=p[nI(t,h)&F],H=G>>4;if(G||aI(3),h+=15&G,P=Gy[H],H>3&&(z=Py[H],P+=nI(t,h)&(1<<z)-1,h+=z),h>m){l&&aI(0);break}o&&c(u+131072);var V=u+O;if(u<P){var Y=r-P,q=Math.min(P,V);for(Y+u<0&&aI(3);u<q;++u)n[u]=i[Y+u]}for(;u<V;++u)n[u]=n[u-P]}}e.l=d,e.p=N,e.b=u,e.f=A,d&&(A=1,e.m=g,e.d=p,e.n=f)}while(!A);return u!=n.length&&a?sI(n,0,u):n.subarray(0,u)}(t.subarray((n=t,i=e&&e.dictionary,(8!=(15&n[0])||n[0]>>4>7||(n[0]<<8|n[1])%31)&&aI(6,"invalid zlib data"),(n[1]>>5&1)==+!i&&aI(6,"invalid zlib data: "+(32&n[1]?"need":"unexpected")+" dictionary"),2+(n[1]>>3&4)),-4),{i:2},e&&e.out,e&&e.dictionary);var n,i}var wI=function(t,e,n,i){for(var s in t){var r=t[s],a=e+s,o=i;Array.isArray(r)&&(o=CI(i,r[1]),r=r[0]),r instanceof Qy?n[a]=[r,o]:(n[a+="/"]=[new Qy(0),o],wI(r,a,n,i))}},_I="undefined"!=typeof TextEncoder&&new TextEncoder,BI="undefined"!=typeof TextDecoder&&new TextDecoder;try{BI.decode(fI,{stream:!0})}catch(t){}function SI(t,e){if(e){for(var n=new Qy(t.length),i=0;i<t.length;++i)n[i]=t.charCodeAt(i);return n}if(_I)return _I.encode(t);var s=t.length,r=new Qy(t.length+(t.length>>1)),a=0,o=function(t){r[a++]=t};for(i=0;i<s;++i){if(a+5>r.length){var l=new Qy(a+8+(s-i<<1));l.set(r),r=l}var c=t.charCodeAt(i);c<128||e?o(c):c<2048?(o(192|c>>6),o(128|63&c)):c>55295&&c<57344?(o(240|(c=65536+(1047552&c)|1023&t.charCodeAt(++i))>>18),o(128|c>>12&63),o(128|c>>6&63),o(128|63&c)):(o(224|c>>12),o(128|c>>6&63),o(128|63&c))}return sI(r,0,a)}var bI=function(t){var e=0;if(t)for(var n in t){var i=t[n].length;i>65535&&aI(9),e+=i+4}return e},MI=function(t,e,n,i,s,r,a,o){var l=i.length,c=n.extra,A=o&&o.length,h=bI(c);EI(t,e,null!=a?33639248:67324752),e+=4,null!=a&&(t[e++]=20,t[e++]=n.os),t[e]=20,e+=2,t[e++]=n.flag<<1|(r<0&&8),t[e++]=s&&8,t[e++]=255&n.compression,t[e++]=n.compression>>8;var u=new Date(null==n.mtime?Date.now():n.mtime),d=u.getFullYear()-1980;if((d<0||d>119)&&aI(10),EI(t,e,d<<25|u.getMonth()+1<<21|u.getDate()<<16|u.getHours()<<11|u.getMinutes()<<5|u.getSeconds()>>1),e+=4,-1!=r&&(EI(t,e,n.crc),EI(t,e+4,r<0?-r-2:r),EI(t,e+8,n.size)),EI(t,e+12,l),EI(t,e+14,h),e+=16,null!=a&&(EI(t,e,A),EI(t,e+6,n.attrs),EI(t,e+10,a),e+=14),t.set(i,e),e+=l,h)for(var p in c){var g=c[p],f=g.length;EI(t,e,+p),EI(t,e+2,f),t.set(g,e+4),e+=4+f}return A&&(t.set(o,e),e+=A),e};"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout;class TI{constructor(t,e="",n=[],i=[]){this.name=t,this.type=e,this.metadata=n,this.properties=i,this.children=[]}addMetadata(t,e){this.metadata.push({key:t,value:e})}addProperty(t,e=[]){this.properties.push({property:t,metadata:e})}addChild(t){this.children.push(t)}toString(t=0){const e="\t".repeat(t),n=this.metadata.map(t=>{const n=t.key,i=t.value;if(Array.isArray(i)){const t=[];return t.push(`${n} = {`),i.forEach(n=>{t.push(`${e}\t\t${n}`)}),t.push(`${e}\t}`),t.join("\n")}return`${n} = ${i}`}),i=n.length?` (\n${n.map(t=>`${e}\t${t}`).join("\n")}\n${e})`:"",s=this.properties.map(t=>{const n=t.property,i=t.metadata.length?` (\n${t.metadata.map(t=>`${e}\t\t${t}`).join("\n")}\n${e}\t)`:"";return`${e}\t${n}${i}`}),r=this.children.map(e=>e.toString(t+1)),a=[];if(s.length>0&&a.push(...s),r.length>0){s.length>0&&a.push("");for(let t=0;t<r.length;t++)a.push(r[t]),t<r.length-1&&a.push("")}const o=a.join("\n"),l=this.type?this.type+" ":"";return`${e}def ${l}"${this.name}"${i}\n${e}{\n${o}\n${e}}`}}function QI(t,e){let n=t.name;return n=n.replace(/[^A-Za-z0-9_]/g,""),/^[0-9]/.test(n)&&(n="_"+n),""===n&&(n=t.isCamera?"Camera":"Object"),e.has(n)&&(n=n+"_"+t.id),e.add(n),n}function DI(t,e,n){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=n/Math.max(t.width,t.height),s=document.createElement("canvas");s.width=t.width*Math.min(1,i),s.height=t.height*Math.min(1,i);const r=s.getContext("2d");return!0===e&&(r.translate(0,s.height),r.scale(1,-1)),r.drawImage(t,0,0,s.width,s.height),s}throw new Error("THREE.USDZExporter: No valid image data found. Unable to process texture.")}function RI(){return'#usda 1.0\n(\n\tcustomLayerData = {\n\t\tstring creator = "Three.js USDZExporter"\n\t}\n\tdefaultPrim = "Root"\n\tmetersPerUnit = 1\n\tupAxis = "Y"\n)\n'}function UI(t,e,n,i,s,r){for(let a=0,o=t.children.length;a<o;a++){const o=t.children[a];if(!1===o.visible&&!0===r.onlyVisible)continue;let l;if(o.isMesh){const t=o.geometry,e=o.material;if(e.isMeshStandardMaterial){const r="geometries/Geometry_"+t.id+".usda";if(!(r in s)){const e=kI(t);s[r]=SI(RI()+"\n"+e.toString())}e.uuid in n||(n[e.uuid]=e),l=LI(o,t,n[e.uuid],i)}else console.warn("THREE.USDZExporter: Unsupported material type (USDZ only supports MeshStandardMaterial)",o)}else l=o.isCamera?YI(o,i):PI(o,i);l&&(e.addChild(l),UI(o,l,n,i,s,r))}}function PI(t,e){const n=QI(t,e),i=FI(t.matrix);t.matrix.determinant()<0&&console.warn("THREE.USDZExporter: USDZ does not support negative scales",t);const s=new TI(n,"Xform");return s.addProperty(`matrix4d xformOp:transform = ${i}`),s.addProperty('uniform token[] xformOpOrder = ["xformOp:transform"]'),s}function LI(t,e,n,i){const s=PI(t,i);return s.addMetadata("prepend references",`@./geometries/Geometry_${e.id}.usda@</Geometry>`),s.addMetadata("prepend apiSchemas",'["MaterialBindingAPI"]'),s.addProperty(`rel material:binding = </Materials/Material_${n.id}>`),s}function FI(t){const e=t.elements;return`( ${NI(e,0)}, ${NI(e,4)}, ${NI(e,8)}, ${NI(e,12)} )`}function NI(t,e){return`(${t[e+0]}, ${t[e+1]}, ${t[e+2]}, ${t[e+3]})`}function kI(t){const e=new TI("Geometry"),n=function(t){const e=t.attributes,n=e.position.count,i=new TI("Geometry","Mesh");i.addProperty(`int[] faceVertexCounts = [${function(t){const e=null!==t.index?t.index.count:t.attributes.position.count;return Array(e/3).fill(3).join(", ")}(t)}]`),i.addProperty(`int[] faceVertexIndices = [${function(t){const e=t.index,n=[];if(null!==e)for(let t=0;t<e.count;t++)n.push(e.getX(t));else{const e=t.attributes.position.count;for(let t=0;t<e;t++)n.push(t)}return n.join(", ")}(t)}]`),i.addProperty(`normal3f[] normals = [${OI(e.normal,n)}]`,['interpolation = "vertex"']),i.addProperty(`point3f[] points = [${OI(e.position,n)}]`);for(let t=0;t<4;t++){const n=t>0?t:"",s=e["uv"+n];void 0!==s&&i.addProperty(`texCoord2f[] primvars:st${n} = [${zI(s)}]`,['interpolation = "vertex"'])}const s=e.color;return void 0!==s&&i.addProperty(`color3f[] primvars:displayColor = [${OI(s,n)}]`,['interpolation = "vertex"']),i.addProperty('uniform token subdivisionScheme = "none"'),i}(t);return e.addChild(n),e}function OI(t,e){if(void 0===t)return console.warn("USDZExporter: Normals missing."),Array(e).fill("(0, 0, 0)").join(", ");const n=[];for(let e=0;e<t.count;e++){const i=t.getX(e),s=t.getY(e),r=t.getZ(e);n.push(`(${i.toPrecision(7)}, ${s.toPrecision(7)}, ${r.toPrecision(7)})`)}return n.join(", ")}function zI(t){const e=[];for(let n=0;n<t.count;n++){const i=t.getX(n),s=t.getY(n);e.push(`(${i.toPrecision(7)}, ${1-s.toPrecision(7)})`)}return e.join(", ")}function GI(t,e,n=!1){const i=new TI(`Material_${t.id}`,"Material");function s(i,s,r){const a=i.source.id+"_"+i.flipY;e[a]=i;const o=i.channel>0?"st"+i.channel:"st",l={1e3:"repeat",1001:"clamp",1002:"mirror"},c=i.repeat.clone(),A=i.offset.clone(),h=i.rotation,u=Math.sin(h),d=Math.cos(h);A.y=1-A.y-c.y,n?(A.x=A.x/c.x,A.y=A.y/c.y,A.x+=u/c.x,A.y+=d-1):(A.x+=u*c.x,A.y+=(1-d)*c.y);const p=new TI(`PrimvarReader_${s}`,"Shader");p.addProperty('uniform token info:id = "UsdPrimvarReader_float2"'),p.addProperty("float2 inputs:fallback = (0.0, 0.0)"),p.addProperty(`token inputs:varname = "${o}"`),p.addProperty("float2 outputs:result");const g=new TI(`Transform2d_${s}`,"Shader");g.addProperty('uniform token info:id = "UsdTransform2d"'),g.addProperty(`token inputs:in.connect = </Materials/Material_${t.id}/PrimvarReader_${s}.outputs:result>`),g.addProperty(`float inputs:rotation = ${(h*(180/Math.PI)).toFixed(7)}`),g.addProperty(`float2 inputs:scale = ${VI(c)}`),g.addProperty(`float2 inputs:translation = ${VI(A)}`),g.addProperty("float2 outputs:result");const f=new TI(`Texture_${i.id}_${s}`,"Shader");return f.addProperty('uniform token info:id = "UsdUVTexture"'),f.addProperty(`asset inputs:file = @textures/Texture_${a}.png@`),f.addProperty(`float2 inputs:st.connect = </Materials/Material_${t.id}/Transform2d_${s}.outputs:result>`),void 0!==r&&f.addProperty(`float4 inputs:scale = ${function(t){return`(${t.r}, ${t.g}, ${t.b}, 1.0)`}(r)}`),f.addProperty(`token inputs:sourceColorSpace = "${i.colorSpace===An?"raw":"sRGB"}"`),f.addProperty(`token inputs:wrapS = "${l[i.wrapS]}"`),f.addProperty(`token inputs:wrapT = "${l[i.wrapT]}"`),f.addProperty("float outputs:r"),f.addProperty("float outputs:g"),f.addProperty("float outputs:b"),f.addProperty("float3 outputs:rgb"),(t.transparent||t.alphaTest>0)&&f.addProperty("float outputs:a"),[p,g,f]}t.side===M&&console.warn("THREE.USDZExporter: USDZ does not support double sided materials",t);const r=new TI("PreviewSurface","Shader");if(r.addProperty('uniform token info:id = "UsdPreviewSurface"'),null!==t.map?(r.addProperty(`color3f inputs:diffuseColor.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:rgb>`),t.transparent?r.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:a>`):t.alphaTest>0&&(r.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.map.id}_diffuse.outputs:a>`),r.addProperty(`float inputs:opacityThreshold = ${t.alphaTest}`)),s(t.map,"diffuse",t.color).forEach(t=>i.addChild(t))):r.addProperty(`color3f inputs:diffuseColor = ${HI(t.color)}`),null!==t.emissiveMap){r.addProperty(`color3f inputs:emissiveColor.connect = </Materials/Material_${t.id}/Texture_${t.emissiveMap.id}_emissive.outputs:rgb>`);const e=new dr(t.emissive.r*t.emissiveIntensity,t.emissive.g*t.emissiveIntensity,t.emissive.b*t.emissiveIntensity);s(t.emissiveMap,"emissive",e).forEach(t=>i.addChild(t))}else t.emissive.getHex()>0&&r.addProperty(`color3f inputs:emissiveColor = ${HI(t.emissive)}`);if(null!==t.normalMap&&(r.addProperty(`normal3f inputs:normal.connect = </Materials/Material_${t.id}/Texture_${t.normalMap.id}_normal.outputs:rgb>`),s(t.normalMap,"normal").forEach(t=>i.addChild(t))),null!==t.aoMap){r.addProperty(`float inputs:occlusion.connect = </Materials/Material_${t.id}/Texture_${t.aoMap.id}_occlusion.outputs:r>`);const e=new dr(t.aoMapIntensity,t.aoMapIntensity,t.aoMapIntensity);s(t.aoMap,"occlusion",e).forEach(t=>i.addChild(t))}if(null!==t.roughnessMap){r.addProperty(`float inputs:roughness.connect = </Materials/Material_${t.id}/Texture_${t.roughnessMap.id}_roughness.outputs:g>`);const e=new dr(t.roughness,t.roughness,t.roughness);s(t.roughnessMap,"roughness",e).forEach(t=>i.addChild(t))}else r.addProperty(`float inputs:roughness = ${t.roughness}`);if(null!==t.metalnessMap){r.addProperty(`float inputs:metallic.connect = </Materials/Material_${t.id}/Texture_${t.metalnessMap.id}_metallic.outputs:b>`);const e=new dr(t.metalness,t.metalness,t.metalness);s(t.metalnessMap,"metallic",e).forEach(t=>i.addChild(t))}else r.addProperty(`float inputs:metallic = ${t.metalness}`);if(null!==t.alphaMap?(r.addProperty(`float inputs:opacity.connect = </Materials/Material_${t.id}/Texture_${t.alphaMap.id}_opacity.outputs:r>`),r.addProperty("float inputs:opacityThreshold = 0.0001"),s(t.alphaMap,"opacity").forEach(t=>i.addChild(t))):r.addProperty(`float inputs:opacity = ${t.opacity}`),t.isMeshPhysicalMaterial){if(null!==t.clearcoatMap){r.addProperty(`float inputs:clearcoat.connect = </Materials/Material_${t.id}/Texture_${t.clearcoatMap.id}_clearcoat.outputs:r>`);const e=new dr(t.clearcoat,t.clearcoat,t.clearcoat);s(t.clearcoatMap,"clearcoat",e).forEach(t=>i.addChild(t))}else r.addProperty(`float inputs:clearcoat = ${t.clearcoat}`);if(null!==t.clearcoatRoughnessMap){r.addProperty(`float inputs:clearcoatRoughness.connect = </Materials/Material_${t.id}/Texture_${t.clearcoatRoughnessMap.id}_clearcoatRoughness.outputs:g>`);const e=new dr(t.clearcoatRoughness,t.clearcoatRoughness,t.clearcoatRoughness);s(t.clearcoatRoughnessMap,"clearcoatRoughness",e).forEach(t=>i.addChild(t))}else r.addProperty(`float inputs:clearcoatRoughness = ${t.clearcoatRoughness}`);r.addProperty(`float inputs:ior = ${t.ior}`)}return r.addProperty("int inputs:useSpecularWorkflow = 0"),r.addProperty("token outputs:surface"),i.addChild(r),i.addProperty(`token outputs:surface.connect = </Materials/Material_${t.id}/PreviewSurface.outputs:surface>`),i}function HI(t){return`(${t.r}, ${t.g}, ${t.b})`}function VI(t){return`(${t.x}, ${t.y})`}function YI(t,e){const n=QI(t,e),i=FI(t.matrix);t.matrix.determinant()<0&&console.warn("THREE.USDZExporter: USDZ does not support negative scales",t);const s=new TI(n,"Camera");s.addProperty(`matrix4d xformOp:transform = ${i}`),s.addProperty('uniform token[] xformOpOrder = ["xformOp:transform"]');const r=t.isOrthographicCamera?"orthographic":"perspective";s.addProperty(`token projection = "${r}"`);const a=`(${t.near.toPrecision(7)}, ${t.far.toPrecision(7)})`;let o,l;if(s.addProperty(`float2 clippingRange = ${a}`),o=t.isOrthographicCamera?(10*(Math.abs(t.left)+Math.abs(t.right))).toPrecision(7):t.getFilmWidth().toPrecision(7),s.addProperty(`float horizontalAperture = ${o}`),l=t.isOrthographicCamera?(10*(Math.abs(t.top)+Math.abs(t.bottom))).toPrecision(7):t.getFilmHeight().toPrecision(7),s.addProperty(`float verticalAperture = ${l}`),t.isPerspectiveCamera){const e=t.getFocalLength().toPrecision(7);s.addProperty(`float focalLength = ${e}`);const n=t.focus.toPrecision(7);s.addProperty(`float focusDistance = ${n}`)}return s}const qI=new gi,WI=new pi,JI=new gi;const jI=new Es,XI=new Es,KI=new Ji,ZI=new gi;class $I extends oh{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new Pr([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new Pr([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(t){const e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new $h(e,6,1);return this.setAttribute("instanceStart",new Ba(n,3,0)),this.setAttribute("instanceEnd",new Ba(n,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new $h(e,6,1);return this.setAttribute("instanceColorStart",new Ba(n,3,0)),this.setAttribute("instanceColorEnd",new Ba(n,3,3)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new Vc(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ji);const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;void 0!==t&&void 0!==e&&(this.boundingBox.setFromBufferAttribute(t),KI.setFromBufferAttribute(e),this.boundingBox.union(KI))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new us),null===this.boundingBox&&this.computeBoundingBox();const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(void 0!==t&&void 0!==e){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let s=0,r=t.count;s<r;s++)ZI.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(ZI)),ZI.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(ZI));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}sd.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new di(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},rd.line={uniforms:oa.merge([sd.common,sd.fog,sd.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );\n\t\t\t\tvec3 worldUp = normalize( cross( worldDir, tmpFwd ) );\n\t\t\t\tvec3 worldFwd = cross( worldDir, worldUp );\n\t\t\t\tworldPos = position.y < 0.5 ? start: end;\n\n\t\t\t\t// height offset\n\t\t\t\tfloat hw = linewidth * 0.5;\n\t\t\t\tworldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// cap extension\n\t\t\t\t\tworldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;\n\n\t\t\t\t\t// add width to the box\n\t\t\t\t\tworldPos.xyz += worldFwd * hw;\n\n\t\t\t\t\t// endcaps\n\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\tworldPos.xyz -= worldFwd * 2.0 * hw;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat alpha = opacity;\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class tC extends la{constructor(t){super({type:"LineMaterial",uniforms:oa.clone(rd.line.uniforms),vertexShader:rd.line.vertexShader,fragmentShader:rd.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(t)}get color(){return this.uniforms.diffuse.value}set color(t){this.uniforms.diffuse.value=t}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(t){!0===t?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(t){this.uniforms.linewidth&&(this.uniforms.linewidth.value=t)}get dashed(){return"USE_DASH"in this.defines}set dashed(t){!0===t!==this.dashed&&(this.needsUpdate=!0),!0===t?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(t){this.uniforms.dashScale.value=t}get dashSize(){return this.uniforms.dashSize.value}set dashSize(t){this.uniforms.dashSize.value=t}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(t){this.uniforms.dashOffset.value=t}get gapSize(){return this.uniforms.gapSize.value}set gapSize(t){this.uniforms.gapSize.value=t}get opacity(){return this.uniforms.opacity.value}set opacity(t){this.uniforms&&(this.uniforms.opacity.value=t)}get resolution(){return this.uniforms.resolution.value}set resolution(t){this.uniforms.resolution.value.copy(t)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(t){this.defines&&(!0===t!==this.alphaToCoverage&&(this.needsUpdate=!0),!0===t?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const eC=new zi,nC=new gi,iC=new gi,sC=new zi,rC=new zi,aC=new zi,oC=new gi,lC=new Es,cC=new Iu,AC=new gi,hC=new Ji,uC=new us,dC=new zi;let pC,gC;function fC(t,e,n){return dC.set(0,0,-e,1).applyMatrix4(t.projectionMatrix),dC.multiplyScalar(1/dC.w),dC.x=gC/n.width,dC.y=gC/n.height,dC.applyMatrix4(t.projectionMatrixInverse),dC.multiplyScalar(1/dC.w),Math.abs(Math.max(dC.x,dC.y))}class mC extends ea{constructor(t=new $I,e=new tC({color:16777215*Math.random()})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,e=t.attributes.instanceStart,n=t.attributes.instanceEnd,i=new Float32Array(2*e.count);for(let t=0,s=0,r=e.count;t<r;t++,s+=2)nC.fromBufferAttribute(e,t),iC.fromBufferAttribute(n,t),i[s]=0===s?0:i[s-1],i[s+1]=i[s]+nC.distanceTo(iC);const s=new $h(i,2,1);return t.setAttribute("instanceDistanceStart",new Ba(s,1,0)),t.setAttribute("instanceDistanceEnd",new Ba(s,1,1)),this}raycast(t,e){const n=this.material.worldUnits,i=t.camera;null!==i||n||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=void 0!==t.params.Line2&&t.params.Line2.threshold||0;pC=t.ray;const r=this.matrixWorld,a=this.geometry,o=this.material;let l,c;gC=o.linewidth+s,null===a.boundingSphere&&a.computeBoundingSphere(),uC.copy(a.boundingSphere).applyMatrix4(r),l=n?.5*gC:fC(i,Math.max(i.near,uC.distanceToPoint(pC.origin)),o.resolution),uC.radius+=l,!1!==pC.intersectsSphere(uC)&&(null===a.boundingBox&&a.computeBoundingBox(),hC.copy(a.boundingBox).applyMatrix4(r),c=n?.5*gC:fC(i,Math.max(i.near,hC.distanceToPoint(pC.origin)),o.resolution),hC.expandByScalar(c),!1!==pC.intersectsBox(hC)&&(n?function(t,e){const n=t.matrixWorld,i=t.geometry,s=i.attributes.instanceStart,r=i.attributes.instanceEnd;for(let a=0,o=Math.min(i.instanceCount,s.count);a<o;a++){cC.start.fromBufferAttribute(s,a),cC.end.fromBufferAttribute(r,a),cC.applyMatrix4(n);const i=new gi,o=new gi;pC.distanceSqToSegment(cC.start,cC.end,o,i),o.distanceTo(i)<.5*gC&&e.push({point:o,pointOnLine:i,distance:pC.origin.distanceTo(o),object:t,face:null,faceIndex:a,uv:null,uv1:null})}}(this,e):function(t,e,n){const i=e.projectionMatrix,s=t.material.resolution,r=t.matrixWorld,a=t.geometry,o=a.attributes.instanceStart,l=a.attributes.instanceEnd,c=Math.min(a.instanceCount,o.count),A=-e.near;pC.at(1,aC),aC.w=1,aC.applyMatrix4(e.matrixWorldInverse),aC.applyMatrix4(i),aC.multiplyScalar(1/aC.w),aC.x*=s.x/2,aC.y*=s.y/2,aC.z=0,oC.copy(aC),lC.multiplyMatrices(e.matrixWorldInverse,r);for(let e=0,a=c;e<a;e++){if(sC.fromBufferAttribute(o,e),rC.fromBufferAttribute(l,e),sC.w=1,rC.w=1,sC.applyMatrix4(lC),rC.applyMatrix4(lC),sC.z>A&&rC.z>A)continue;if(sC.z>A){const t=sC.z-rC.z,e=(sC.z-A)/t;sC.lerp(rC,e)}else if(rC.z>A){const t=rC.z-sC.z,e=(rC.z-A)/t;rC.lerp(sC,e)}sC.applyMatrix4(i),rC.applyMatrix4(i),sC.multiplyScalar(1/sC.w),rC.multiplyScalar(1/rC.w),sC.x*=s.x/2,sC.y*=s.y/2,rC.x*=s.x/2,rC.y*=s.y/2,cC.start.copy(sC),cC.start.z=0,cC.end.copy(rC),cC.end.z=0;const a=cC.closestPointToPointParameter(oC,!0);cC.at(a,AC);const c=ui.lerp(sC.z,rC.z,a),h=c>=-1&&c<=1,u=oC.distanceTo(AC)<.5*gC;if(h&&u){cC.start.fromBufferAttribute(o,e),cC.end.fromBufferAttribute(l,e),cC.start.applyMatrix4(r),cC.end.applyMatrix4(r);const i=new gi,s=new gi;pC.distanceSqToSegment(cC.start,cC.end,s,i),n.push({point:s,pointOnLine:i,distance:pC.origin.distanceTo(s),object:t,face:null,faceIndex:e,uv:null,uv1:null})}}}(this,i,e)))}onBeforeRender(t){const e=this.material.uniforms;e&&e.resolution&&(t.getViewport(eC),this.material.uniforms.resolution.value.set(eC.z,eC.w))}}class yC extends $I{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setPositions(n),this}setColors(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setColors(n),this}setFromPoints(t){const e=t.length-1,n=new Float32Array(6*e);for(let i=0;i<e;i++)n[6*i]=t[i].x,n[6*i+1]=t[i].y,n[6*i+2]=t[i].z||0,n[6*i+3]=t[i+1].x,n[6*i+4]=t[i+1].y,n[6*i+5]=t[i+1].z||0;return super.setPositions(n),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}const IC=new gi,CC=new Iu,EC=new Co,vC=new gi,xC=new lr;class wC{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new bC,this.unassigned=new bC,this.vertices=[]}setFromPoints(t){if(t.length>=4){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.vertices.push(new SC(t[e]));this._compute()}return this}setFromObject(t){const e=[];return t.updateMatrixWorld(!0),t.traverse(function(t){const n=t.geometry;if(void 0!==n){const i=n.attributes.position;if(void 0!==i)for(let n=0,s=i.count;n<s;n++){const s=new gi;s.fromBufferAttribute(i,n).applyMatrix4(t.matrixWorld),e.push(s)}}}),this.setFromPoints(e)}containsPoint(t){const e=this.faces;for(let n=0,i=e.length;n<i;n++)if(e[n].distanceToPoint(t)>this.tolerance)return!1;return!0}intersectRay(t,e){const n=this.faces;let i=-1/0,s=1/0;for(let e=0,r=n.length;e<r;e++){const r=n[e],a=r.distanceToPoint(t.origin),o=r.normal.dot(t.direction);if(a>0&&o>=0)return null;const l=0!==o?-a/o:0;if(!(l<=0)&&(o>0?s=Math.min(l,s):i=Math.max(l,i),i>s))return null}return i!==-1/0?t.at(i,e):t.at(s,e),e}intersectsRay(t){return null!==this.intersectRay(t,IC)}makeEmpty(){return this.faces=[],this.vertices=[],this}_addVertexToFace(t,e){return t.face=e,null===e.outside?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this}_removeVertexFromFace(t,e){return t===e.outside&&(null!==t.next&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this}_removeAllVerticesFromFace(t){if(null!==t.outside){const e=t.outside;let n=t.outside;for(;null!==n.next&&n.next.face===t;)n=n.next;return this.assigned.removeSubList(e,n),e.prev=n.next=null,t.outside=null,e}}_deleteFaceVertices(t,e){const n=this._removeAllVerticesFromFace(t);if(void 0!==n)if(void 0===e)this.unassigned.appendChain(n);else{let t=n;do{const n=t.next;e.distanceToPoint(t.point)>this.tolerance?this._addVertexToFace(t,e):this.unassigned.append(t),t=n}while(null!==t)}return this}_resolveUnassignedPoints(t){if(!1===this.unassigned.isEmpty()){let e=this.unassigned.first();do{const n=e.next;let i=this.tolerance,s=null;for(let n=0;n<t.length;n++){const r=t[n];if(0===r.mark){const t=r.distanceToPoint(e.point);if(t>i&&(i=t,s=r),i>1e3*this.tolerance)break}}null!==s&&this._addVertexToFace(e,s),e=n}while(null!==e)}return this}_computeExtremes(){const t=new gi,e=new gi,n=[],i=[];for(let t=0;t<3;t++)n[t]=i[t]=this.vertices[0];t.copy(this.vertices[0].point),e.copy(this.vertices[0].point);for(let s=0,r=this.vertices.length;s<r;s++){const r=this.vertices[s],a=r.point;for(let e=0;e<3;e++)a.getComponent(e)<t.getComponent(e)&&(t.setComponent(e,a.getComponent(e)),n[e]=r);for(let t=0;t<3;t++)a.getComponent(t)>e.getComponent(t)&&(e.setComponent(t,a.getComponent(t)),i[t]=r)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(t.x),Math.abs(e.x))+Math.max(Math.abs(t.y),Math.abs(e.y))+Math.max(Math.abs(t.z),Math.abs(e.z))),{min:n,max:i}}_computeInitialHull(){const t=this.vertices,e=this._computeExtremes(),n=e.min,i=e.max;let s=0,r=0;for(let t=0;t<3;t++){const e=i[t].point.getComponent(t)-n[t].point.getComponent(t);e>s&&(s=e,r=t)}const a=n[r],o=i[r];let l,c;s=0,CC.set(a.point,o.point);for(let e=0,n=this.vertices.length;e<n;e++){const n=t[e];if(n!==a&&n!==o){CC.closestPointToPoint(n.point,!0,vC);const t=vC.distanceToSquared(n.point);t>s&&(s=t,l=n)}}s=-1,EC.setFromCoplanarPoints(a.point,o.point,l.point);for(let e=0,n=this.vertices.length;e<n;e++){const n=t[e];if(n!==a&&n!==o&&n!==l){const t=Math.abs(EC.distanceToPoint(n.point));t>s&&(s=t,c=n)}}const A=[];if(EC.distanceToPoint(c.point)<0){A.push(_C.create(a,o,l),_C.create(c,o,a),_C.create(c,l,o),_C.create(c,a,l));for(let t=0;t<3;t++){const e=(t+1)%3;A[t+1].getEdge(2).setTwin(A[0].getEdge(e)),A[t+1].getEdge(1).setTwin(A[e+1].getEdge(0))}}else{A.push(_C.create(a,l,o),_C.create(c,a,o),_C.create(c,o,l),_C.create(c,l,a));for(let t=0;t<3;t++){const e=(t+1)%3;A[t+1].getEdge(2).setTwin(A[0].getEdge((3-t)%3)),A[t+1].getEdge(0).setTwin(A[e+1].getEdge(1))}}for(let t=0;t<4;t++)this.faces.push(A[t]);for(let e=0,n=t.length;e<n;e++){const n=t[e];if(n!==a&&n!==o&&n!==l&&n!==c){s=this.tolerance;let t=null;for(let e=0;e<4;e++){const i=this.faces[e].distanceToPoint(n.point);i>s&&(s=i,t=this.faces[e])}null!==t&&this._addVertexToFace(n,t)}}return this}_reindexFaces(){const t=[];for(let e=0;e<this.faces.length;e++){const n=this.faces[e];0===n.mark&&t.push(n)}return this.faces=t,this}_nextVertexToAdd(){if(!1===this.assigned.isEmpty()){let t,e=0;const n=this.assigned.first().face;let i=n.outside;do{const s=n.distanceToPoint(i.point);s>e&&(e=s,t=i),i=i.next}while(null!==i&&i.face===n);return t}}_computeHorizon(t,e,n,i){let s;this._deleteFaceVertices(n),n.mark=1,s=null===e?e=n.getEdge(0):e.next;do{const e=s.twin,n=e.face;0===n.mark&&(n.distanceToPoint(t)>this.tolerance?this._computeHorizon(t,e,n,i):i.push(s)),s=s.next}while(s!==e);return this}_addAdjoiningFace(t,e){const n=_C.create(t,e.tail(),e.head());return this.faces.push(n),n.getEdge(-1).setTwin(e.twin),n.getEdge(0)}_addNewFaces(t,e){this.newFaces=[];let n=null,i=null;for(let s=0;s<e.length;s++){const r=e[s],a=this._addAdjoiningFace(t,r);null===n?n=a:a.next.setTwin(i),this.newFaces.push(a.face),i=a}return n.next.setTwin(i),this}_addVertexToHull(t){const e=[];return this.unassigned.clear(),this._removeVertexFromFace(t,t.face),this._computeHorizon(t.point,null,t.face,e),this._addNewFaces(t,e),this._resolveUnassignedPoints(this.newFaces),this}_cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}_compute(){let t;for(this._computeInitialHull();void 0!==(t=this._nextVertexToAdd());)this._addVertexToHull(t);return this._reindexFaces(),this._cleanup(),this}}class _C{constructor(){this.normal=new gi,this.midpoint=new gi,this.area=0,this.constant=0,this.outside=null,this.mark=0,this.edge=null}static create(t,e,n){const i=new _C,s=new BC(t,i),r=new BC(e,i),a=new BC(n,i);return s.next=a.prev=r,r.next=s.prev=a,a.next=r.prev=s,i.edge=s,i.compute()}getEdge(t){let e=this.edge;for(;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e}compute(){const t=this.edge.tail(),e=this.edge.head(),n=this.edge.next.head();return xC.set(t.point,e.point,n.point),xC.getNormal(this.normal),xC.getMidpoint(this.midpoint),this.area=xC.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(t){return this.normal.dot(t)-this.constant}}class BC{constructor(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const t=this.head(),e=this.tail();return null!==e?e.point.distanceTo(t.point):-1}lengthSquared(){const t=this.head(),e=this.tail();return null!==e?e.point.distanceToSquared(t.point):-1}setTwin(t){return this.twin=t,t.twin=this,this}}class SC{constructor(t){this.point=t,this.prev=null,this.next=null,this.face=null}}class bC{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(t,e){return e.prev=t.prev,e.next=t,null===e.prev?this.head=e:e.prev.next=e,t.prev=e,this}insertAfter(t,e){return e.prev=t,e.next=t.next,null===e.next?this.tail=e:e.next.prev=e,t.next=e,this}append(t){return null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this}appendChain(t){for(null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail;null!==t.next;)t=t.next;return this.tail=t,this}remove(t){return null===t.prev?this.head=t.next:t.prev.next=t.next,null===t.next?this.tail=t.prev:t.next.prev=t.prev,this}removeSubList(t,e){return null===t.prev?this.head=e.next:t.prev.next=e.next,null===e.next?this.tail=t.prev:e.next.prev=t.prev,this}isEmpty(){return null===this.head}}class MC extends ea{constructor(t,e={}){super(t),this.isReflector=!0,this.type="Reflector",this.forceUpdate=!1,this.camera=new da;const n=this,i=void 0!==e.color?new dr(e.color):new dr(8355711),s=e.textureWidth||512,r=e.textureHeight||512,a=e.clipBias||0,o=e.shader||MC.ReflectorShader,l=void 0!==e.multisample?e.multisample:4,c=new Co,A=new gi,h=new gi,u=new gi,d=new Es,p=new gi(0,0,-1),g=new zi,f=new gi,m=new gi,y=new zi,I=new Es,C=this.camera,E=new Hi(s,r,{samples:l,type:jt}),v=new la({name:void 0!==o.name?o.name:"unspecified",uniforms:oa.clone(o.uniforms),fragmentShader:o.fragmentShader,vertexShader:o.vertexShader});v.uniforms.tDiffuse.value=E.texture,v.uniforms.color.value=i,v.uniforms.textureMatrix.value=I,this.material=v,this.onBeforeRender=function(t,e,i){if(h.setFromMatrixPosition(n.matrixWorld),u.setFromMatrixPosition(i.matrixWorld),d.extractRotation(n.matrixWorld),A.set(0,0,1),A.applyMatrix4(d),f.subVectors(h,u),!0==f.dot(A)>0&&!1===this.forceUpdate)return;f.reflect(A).negate(),f.add(h),d.extractRotation(i.matrixWorld),p.set(0,0,-1),p.applyMatrix4(d),p.add(u),m.subVectors(h,p),m.reflect(A).negate(),m.add(h),C.position.copy(f),C.up.set(0,1,0),C.up.applyMatrix4(d),C.up.reflect(A),C.lookAt(m),C.far=i.far,C.updateMatrixWorld(),C.projectionMatrix.copy(i.projectionMatrix),I.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),I.multiply(C.projectionMatrix),I.multiply(C.matrixWorldInverse),I.multiply(n.matrixWorld),c.setFromNormalAndCoplanarPoint(A,h),c.applyMatrix4(C.matrixWorldInverse),g.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const s=C.projectionMatrix;y.x=(Math.sign(g.x)+s.elements[8])/s.elements[0],y.y=(Math.sign(g.y)+s.elements[9])/s.elements[5],y.z=-1,y.w=(1+s.elements[10])/s.elements[14],g.multiplyScalar(2/g.dot(y)),s.elements[2]=g.x,s.elements[6]=g.y,s.elements[10]=g.z+1-a,s.elements[14]=g.w,n.visible=!1;const r=t.getRenderTarget(),o=t.xr.enabled,l=t.shadowMap.autoUpdate;t.xr.enabled=!1,t.shadowMap.autoUpdate=!1,t.setRenderTarget(E),t.state.buffers.depth.setMask(!0),!1===t.autoClear&&t.clear(),t.render(e,C),t.xr.enabled=o,t.shadowMap.autoUpdate=l,t.setRenderTarget(r);const v=i.viewport;void 0!==v&&t.state.viewport(v),n.visible=!0,this.forceUpdate=!1},this.getRenderTarget=function(){return E},this.dispose=function(){E.dispose(),n.material.dispose()}}}function TC(t,e){switch(e){case hn:t.convertSRGBToLinear();break;case un:case An:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported color space.")}return t}MC.ReflectorShader={name:"ReflectorShader",uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:"\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\t#include <common>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t}",fragmentShader:"\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec4 vUv;\n\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"};class QC{constructor(t,e,n,i,s){this.xrLight=t,this.renderer=e,this.lightProbe=n,this.xrWebGLBinding=null,this.estimationStartCallback=s,this.frameCallback=this.onXRFrame.bind(this);const r=e.xr.getSession();if(i&&"XRWebGLBinding"in window){const n=new ma(16);t.environment=n.texture;const i=e.getContext();switch(r.preferredReflectionFormat){case"srgba8":i.getExtension("EXT_sRGB");break;case"rgba16f":i.getExtension("OES_texture_half_float")}this.xrWebGLBinding=new XRWebGLBinding(r,i),this.lightProbe.addEventListener("reflectionchange",()=>{this.updateReflection()})}r.requestAnimationFrame(this.frameCallback)}updateReflection(){const t=this.renderer.properties.get(this.xrLight.environment);if(t){const e=this.xrWebGLBinding.getReflectionCubeMap(this.lightProbe);e&&(t.__webglTexture=e,this.xrLight.environment.needsPMREMUpdate=!0)}}onXRFrame(t,e){if(!this.xrLight)return;e.session.requestAnimationFrame(this.frameCallback);const n=e.getLightEstimate(this.lightProbe);if(n){this.xrLight.lightProbe.sh.fromArray(n.sphericalHarmonicsCoefficients),this.xrLight.lightProbe.intensity=1;const t=Math.max(1,Math.max(n.primaryLightIntensity.x,Math.max(n.primaryLightIntensity.y,n.primaryLightIntensity.z)));this.xrLight.directionalLight.color.setRGB(n.primaryLightIntensity.x/t,n.primaryLightIntensity.y/t,n.primaryLightIntensity.z/t),this.xrLight.directionalLight.intensity=t,this.xrLight.directionalLight.position.copy(n.primaryLightDirection),this.estimationStartCallback&&(this.estimationStartCallback(),this.estimationStartCallback=null)}}dispose(){this.xrLight=null,this.renderer=null,this.lightProbe=null,this.xrWebGLBinding=null}}class DC{constructor(t=4){this.pool=t,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0,this.workerCreator=null}_initWorker(t){if(!this.workers[t]){const e=this.workerCreator();e.addEventListener("message",this._onMessage.bind(this,t)),this.workers[t]=e}}_getIdleWorker(){for(let t=0;t<this.pool;t++)if(!(this.workerStatus&1<<t))return t;return-1}_onMessage(t,e){const n=this.workersResolve[t];if(n&&n(e),this.queue.length){const{resolve:e,msg:n,transfer:i}=this.queue.shift();this.workersResolve[t]=e,this.workers[t].postMessage(n,i)}else this.workerStatus^=1<<t}setWorkerCreator(t){this.workerCreator=t}setWorkerLimit(t){this.pool=t}postMessage(t,e){return new Promise(n=>{const i=this._getIdleWorker();-1!==i?(this._initWorker(i),this.workerStatus|=1<<i,this.workersResolve[i]=n,this.workers[i].postMessage(t,e)):this.queue.push({resolve:n,msg:t,transfer:e})})}dispose(){this.workers.forEach(t=>t.terminate()),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0}}const RC=9,UC=15,PC=16,LC=22,FC=37,NC=43,kC=76,OC=83,zC=97,GC=100,HC=103,VC=109,YC=131,qC=132,WC=133,JC=134,jC=137,XC=138,KC=141,ZC=142,$C=145,tE=146,eE=148,nE=152,iE=157,sE=158,rE=165,aE=166,oE=1000066e3;class lE{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}}class cE{constructor(t,e,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_nextInt32(){const t=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint8Array(t){const e=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,t);return this._offset+=t,e}_skip(t){return this._offset+=t,this}_scan(t,e){void 0===e&&(e=0);const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}new Uint8Array([0]);const AE=[171,75,84,88,32,50,48,187,13,10,26,10];function hE(t){return(new TextDecoder).decode(t)}let uE,dE,pE;const gE={env:{emscripten_notify_memory_growth:function(t){pE=new Uint8Array(dE.exports.memory.buffer)}}};class fE{init(){return uE||(uE="undefined"!=typeof fetch?fetch("data:application/wasm;base64,"+mE).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,gE)).then(this._init):WebAssembly.instantiate(Buffer.from(mE,"base64"),gE).then(this._init),uE)}_init(t){dE=t.instance,gE.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!dE)throw new Error("ZSTDDecoder: Await .init() before decoding.");const n=t.byteLength,i=dE.exports.malloc(n);pE.set(t,i),e=e||Number(dE.exports.ZSTD_findDecompressedSize(i,n));const s=dE.exports.malloc(e),r=dE.exports.ZSTD_decompress(s,e,i,n),a=pE.slice(s,s+r);return dE.exports.free(i),dE.exports.free(s),a}}const mE="AGFzbQEAAAABpQEVYAF/AX9gAn9/AGADf39/AX9gBX9/f39/AX9gAX8AYAJ/fwF/YAR/f39/AX9gA39/fwBgBn9/f39/fwF/YAd/f39/f39/AX9gAn9/AX5gAn5+AX5gAABgBX9/f39/AGAGf39/f39/AGAIf39/f39/f38AYAl/f39/f39/f38AYAABf2AIf39/f39/f38Bf2ANf39/f39/f39/f39/fwF/YAF/AX4CJwEDZW52H2Vtc2NyaXB0ZW5fbm90aWZ5X21lbW9yeV9ncm93dGgABANpaAEFAAAFAgEFCwACAQABAgIFBQcAAwABDgsBAQcAEhMHAAUBDAQEAAANBwQCAgYCBAgDAwMDBgEACQkHBgICAAYGAgQUBwYGAwIGAAMCAQgBBwUGCgoEEQAEBAEIAwgDBQgDEA8IAAcABAUBcAECAgUEAQCAAgYJAX8BQaCgwAILB2AHBm1lbW9yeQIABm1hbGxvYwAoBGZyZWUAJgxaU1REX2lzRXJyb3IAaBlaU1REX2ZpbmREZWNvbXByZXNzZWRTaXplAFQPWlNURF9kZWNvbXByZXNzAEoGX3N0YXJ0ACQJBwEAQQELASQKussBaA8AIAAgACgCBCABajYCBAsZACAAKAIAIAAoAgRBH3F0QQAgAWtBH3F2CwgAIABBiH9LC34BBH9BAyEBIAAoAgQiA0EgTQRAIAAoAggiASAAKAIQTwRAIAAQDQ8LIAAoAgwiAiABRgRAQQFBAiADQSBJGw8LIAAgASABIAJrIANBA3YiBCABIARrIAJJIgEbIgJrIgQ2AgggACADIAJBA3RrNgIEIAAgBCgAADYCAAsgAQsUAQF/IAAgARACIQIgACABEAEgAgv3AQECfyACRQRAIABCADcCACAAQQA2AhAgAEIANwIIQbh/DwsgACABNgIMIAAgAUEEajYCECACQQRPBEAgACABIAJqIgFBfGoiAzYCCCAAIAMoAAA2AgAgAUF/ai0AACIBBEAgAEEIIAEQFGs2AgQgAg8LIABBADYCBEF/DwsgACABNgIIIAAgAS0AACIDNgIAIAJBfmoiBEEBTQRAIARBAWtFBEAgACABLQACQRB0IANyIgM2AgALIAAgAS0AAUEIdCADajYCAAsgASACakF/ai0AACIBRQRAIABBADYCBEFsDwsgAEEoIAEQFCACQQN0ams2AgQgAgsWACAAIAEpAAA3AAAgACABKQAINwAICy8BAX8gAUECdEGgHWooAgAgACgCAEEgIAEgACgCBGprQR9xdnEhAiAAIAEQASACCyEAIAFCz9bTvtLHq9lCfiAAfEIfiUKHla+vmLbem55/fgsdAQF/IAAoAgggACgCDEYEfyAAKAIEQSBGBUEACwuCBAEDfyACQYDAAE8EQCAAIAEgAhBnIAAPCyAAIAJqIQMCQCAAIAFzQQNxRQRAAkAgAkEBSARAIAAhAgwBCyAAQQNxRQRAIAAhAgwBCyAAIQIDQCACIAEtAAA6AAAgAUEBaiEBIAJBAWoiAiADTw0BIAJBA3ENAAsLAkAgA0F8cSIEQcAASQ0AIAIgBEFAaiIFSw0AA0AgAiABKAIANgIAIAIgASgCBDYCBCACIAEoAgg2AgggAiABKAIMNgIMIAIgASgCEDYCECACIAEoAhQ2AhQgAiABKAIYNgIYIAIgASgCHDYCHCACIAEoAiA2AiAgAiABKAIkNgIkIAIgASgCKDYCKCACIAEoAiw2AiwgAiABKAIwNgIwIAIgASgCNDYCNCACIAEoAjg2AjggAiABKAI8NgI8IAFBQGshASACQUBrIgIgBU0NAAsLIAIgBE8NAQNAIAIgASgCADYCACABQQRqIQEgAkEEaiICIARJDQALDAELIANBBEkEQCAAIQIMAQsgA0F8aiIEIABJBEAgACECDAELIAAhAgNAIAIgAS0AADoAACACIAEtAAE6AAEgAiABLQACOgACIAIgAS0AAzoAAyABQQRqIQEgAkEEaiICIARNDQALCyACIANJBEADQCACIAEtAAA6AAAgAUEBaiEBIAJBAWoiAiADRw0ACwsgAAsMACAAIAEpAAA3AAALQQECfyAAKAIIIgEgACgCEEkEQEEDDwsgACAAKAIEIgJBB3E2AgQgACABIAJBA3ZrIgE2AgggACABKAAANgIAQQALDAAgACABKAIANgAAC/cCAQJ/AkAgACABRg0AAkAgASACaiAASwRAIAAgAmoiBCABSw0BCyAAIAEgAhALDwsgACABc0EDcSEDAkACQCAAIAFJBEAgAwRAIAAhAwwDCyAAQQNxRQRAIAAhAwwCCyAAIQMDQCACRQ0EIAMgAS0AADoAACABQQFqIQEgAkF/aiECIANBAWoiA0EDcQ0ACwwBCwJAIAMNACAEQQNxBEADQCACRQ0FIAAgAkF/aiICaiIDIAEgAmotAAA6AAAgA0EDcQ0ACwsgAkEDTQ0AA0AgACACQXxqIgJqIAEgAmooAgA2AgAgAkEDSw0ACwsgAkUNAgNAIAAgAkF/aiICaiABIAJqLQAAOgAAIAINAAsMAgsgAkEDTQ0AIAIhBANAIAMgASgCADYCACABQQRqIQEgA0EEaiEDIARBfGoiBEEDSw0ACyACQQNxIQILIAJFDQADQCADIAEtAAA6AAAgA0EBaiEDIAFBAWohASACQX9qIgINAAsLIAAL8wICAn8BfgJAIAJFDQAgACACaiIDQX9qIAE6AAAgACABOgAAIAJBA0kNACADQX5qIAE6AAAgACABOgABIANBfWogAToAACAAIAE6AAIgAkEHSQ0AIANBfGogAToAACAAIAE6AAMgAkEJSQ0AIABBACAAa0EDcSIEaiIDIAFB/wFxQYGChAhsIgE2AgAgAyACIARrQXxxIgRqIgJBfGogATYCACAEQQlJDQAgAyABNgIIIAMgATYCBCACQXhqIAE2AgAgAkF0aiABNgIAIARBGUkNACADIAE2AhggAyABNgIUIAMgATYCECADIAE2AgwgAkFwaiABNgIAIAJBbGogATYCACACQWhqIAE2AgAgAkFkaiABNgIAIAQgA0EEcUEYciIEayICQSBJDQAgAa0iBUIghiAFhCEFIAMgBGohAQNAIAEgBTcDGCABIAU3AxAgASAFNwMIIAEgBTcDACABQSBqIQEgAkFgaiICQR9LDQALCyAACy8BAn8gACgCBCAAKAIAQQJ0aiICLQACIQMgACACLwEAIAEgAi0AAxAIajYCACADCy8BAn8gACgCBCAAKAIAQQJ0aiICLQACIQMgACACLwEAIAEgAi0AAxAFajYCACADCx8AIAAgASACKAIEEAg2AgAgARAEGiAAIAJBCGo2AgQLCAAgAGdBH3MLugUBDX8jAEEQayIKJAACfyAEQQNNBEAgCkEANgIMIApBDGogAyAEEAsaIAAgASACIApBDGpBBBAVIgBBbCAAEAMbIAAgACAESxsMAQsgAEEAIAEoAgBBAXRBAmoQECENQVQgAygAACIGQQ9xIgBBCksNABogAiAAQQVqNgIAIAMgBGoiAkF8aiEMIAJBeWohDiACQXtqIRAgAEEGaiELQQQhBSAGQQR2IQRBICAAdCIAQQFyIQkgASgCACEPQQAhAiADIQYCQANAIAlBAkggAiAPS3JFBEAgAiEHAkAgCARAA0AgBEH//wNxQf//A0YEQCAHQRhqIQcgBiAQSQR/IAZBAmoiBigAACAFdgUgBUEQaiEFIARBEHYLIQQMAQsLA0AgBEEDcSIIQQNGBEAgBUECaiEFIARBAnYhBCAHQQNqIQcMAQsLIAcgCGoiByAPSw0EIAVBAmohBQNAIAIgB0kEQCANIAJBAXRqQQA7AQAgAkEBaiECDAELCyAGIA5LQQAgBiAFQQN1aiIHIAxLG0UEQCAHKAAAIAVBB3EiBXYhBAwCCyAEQQJ2IQQLIAYhBwsCfyALQX9qIAQgAEF/anEiBiAAQQF0QX9qIgggCWsiEUkNABogBCAIcSIEQQAgESAEIABIG2shBiALCyEIIA0gAkEBdGogBkF/aiIEOwEAIAlBASAGayAEIAZBAUgbayEJA0AgCSAASARAIABBAXUhACALQX9qIQsMAQsLAn8gByAOS0EAIAcgBSAIaiIFQQN1aiIGIAxLG0UEQCAFQQdxDAELIAUgDCIGIAdrQQN0awshBSACQQFqIQIgBEUhCCAGKAAAIAVBH3F2IQQMAQsLQWwgCUEBRyAFQSBKcg0BGiABIAJBf2o2AgAgBiAFQQdqQQN1aiADawwBC0FQCyEAIApBEGokACAACwkAQQFBBSAAGwsMACAAIAEoAAA2AAALqgMBCn8jAEHwAGsiCiQAIAJBAWohDiAAQQhqIQtBgIAEIAVBf2p0QRB1IQxBACECQQEhBkEBIAV0IglBf2oiDyEIA0AgAiAORkUEQAJAIAEgAkEBdCINai8BACIHQf//A0YEQCALIAhBA3RqIAI2AgQgCEF/aiEIQQEhBwwBCyAGQQAgDCAHQRB0QRB1ShshBgsgCiANaiAHOwEAIAJBAWohAgwBCwsgACAFNgIEIAAgBjYCACAJQQN2IAlBAXZqQQNqIQxBACEAQQAhBkEAIQIDQCAGIA5GBEADQAJAIAAgCUYNACAKIAsgAEEDdGoiASgCBCIGQQF0aiICIAIvAQAiAkEBajsBACABIAUgAhAUayIIOgADIAEgAiAIQf8BcXQgCWs7AQAgASAEIAZBAnQiAmooAgA6AAIgASACIANqKAIANgIEIABBAWohAAwBCwsFIAEgBkEBdGouAQAhDUEAIQcDQCAHIA1ORQRAIAsgAkEDdGogBjYCBANAIAIgDGogD3EiAiAISw0ACyAHQQFqIQcMAQsLIAZBAWohBgwBCwsgCkHwAGokAAsjAEIAIAEQCSAAhUKHla+vmLbem55/fkLj3MqV/M7y9YV/fAsQACAAQn43AwggACABNgIACyQBAX8gAARAIAEoAgQiAgRAIAEoAgggACACEQEADwsgABAmCwsfACAAIAEgAi8BABAINgIAIAEQBBogACACQQRqNgIEC0oBAX9BoCAoAgAiASAAaiIAQX9MBEBBiCBBMDYCAEF/DwsCQCAAPwBBEHRNDQAgABBmDQBBiCBBMDYCAEF/DwtBoCAgADYCACABC9cBAQh/Qbp/IQoCQCACKAIEIgggAigCACIJaiIOIAEgAGtLDQBBbCEKIAkgBCADKAIAIgtrSw0AIAAgCWoiBCACKAIIIgxrIQ0gACABQWBqIg8gCyAJQQAQKSADIAkgC2o2AgACQAJAIAwgBCAFa00EQCANIQUMAQsgDCAEIAZrSw0CIAcgDSAFayIAaiIBIAhqIAdNBEAgBCABIAgQDxoMAgsgBCABQQAgAGsQDyEBIAIgACAIaiIINgIEIAEgAGshBAsgBCAPIAUgCEEBECkLIA4hCgsgCgubAgEBfyMAQYABayINJAAgDSADNgJ8AkAgAkEDSwRAQX8hCQwBCwJAAkACQAJAIAJBAWsOAwADAgELIAZFBEBBuH8hCQwEC0FsIQkgBS0AACICIANLDQMgACAHIAJBAnQiAmooAgAgAiAIaigCABA7IAEgADYCAEEBIQkMAwsgASAJNgIAQQAhCQwCCyAKRQRAQWwhCQwCC0EAIQkgC0UgDEEZSHINAUEIIAR0QQhqIQBBACECA0AgAiAATw0CIAJBQGshAgwAAAsAC0FsIQkgDSANQfwAaiANQfgAaiAFIAYQFSICEAMNACANKAJ4IgMgBEsNACAAIA0gDSgCfCAHIAggAxAYIAEgADYCACACIQkLIA1BgAFqJAAgCQsLACAAIAEgAhALGgsQACAALwAAIAAtAAJBEHRyCy8AAn9BuH8gAUEISQ0AGkFyIAAoAAQiAEF3Sw0AGkG4fyAAQQhqIgAgACABSxsLCwkAIAAgATsAAAsDAAELigYBBX8gACAAKAIAIgVBfnE2AgBBACAAIAVBAXZqQYQgKAIAIgQgAEYbIQECQAJAIAAoAgQiAkUNACACKAIAIgNBAXENACACQQhqIgUgA0EBdkF4aiIDQQggA0EISxtnQR9zQQJ0QYAfaiIDKAIARgRAIAMgAigCDDYCAAsgAigCCCIDBEAgAyACKAIMNgIECyACKAIMIgMEQCADIAIoAgg2AgALIAIgAigCACAAKAIAQX5xajYCAEGEICEAAkACQCABRQ0AIAEgAjYCBCABKAIAIgNBAXENASADQQF2QXhqIgNBCCADQQhLG2dBH3NBAnRBgB9qIgMoAgAgAUEIakYEQCADIAEoAgw2AgALIAEoAggiAwRAIAMgASgCDDYCBAsgASgCDCIDBEAgAyABKAIINgIAQYQgKAIAIQQLIAIgAigCACABKAIAQX5xajYCACABIARGDQAgASABKAIAQQF2akEEaiEACyAAIAI2AgALIAIoAgBBAXZBeGoiAEEIIABBCEsbZ0Efc0ECdEGAH2oiASgCACEAIAEgBTYCACACIAA2AgwgAkEANgIIIABFDQEgACAFNgIADwsCQCABRQ0AIAEoAgAiAkEBcQ0AIAJBAXZBeGoiAkEIIAJBCEsbZ0Efc0ECdEGAH2oiAigCACABQQhqRgRAIAIgASgCDDYCAAsgASgCCCICBEAgAiABKAIMNgIECyABKAIMIgIEQCACIAEoAgg2AgBBhCAoAgAhBAsgACAAKAIAIAEoAgBBfnFqIgI2AgACQCABIARHBEAgASABKAIAQQF2aiAANgIEIAAoAgAhAgwBC0GEICAANgIACyACQQF2QXhqIgFBCCABQQhLG2dBH3NBAnRBgB9qIgIoAgAhASACIABBCGoiAjYCACAAIAE2AgwgAEEANgIIIAFFDQEgASACNgIADwsgBUEBdkF4aiIBQQggAUEISxtnQR9zQQJ0QYAfaiICKAIAIQEgAiAAQQhqIgI2AgAgACABNgIMIABBADYCCCABRQ0AIAEgAjYCAAsLDgAgAARAIABBeGoQJQsLgAIBA38CQCAAQQ9qQXhxQYQgKAIAKAIAQQF2ayICEB1Bf0YNAAJAQYQgKAIAIgAoAgAiAUEBcQ0AIAFBAXZBeGoiAUEIIAFBCEsbZ0Efc0ECdEGAH2oiASgCACAAQQhqRgRAIAEgACgCDDYCAAsgACgCCCIBBEAgASAAKAIMNgIECyAAKAIMIgFFDQAgASAAKAIINgIAC0EBIQEgACAAKAIAIAJBAXRqIgI2AgAgAkEBcQ0AIAJBAXZBeGoiAkEIIAJBCEsbZ0Efc0ECdEGAH2oiAygCACECIAMgAEEIaiIDNgIAIAAgAjYCDCAAQQA2AgggAkUNACACIAM2AgALIAELtwIBA38CQAJAIABBASAAGyICEDgiAA0AAkACQEGEICgCACIARQ0AIAAoAgAiA0EBcQ0AIAAgA0EBcjYCACADQQF2QXhqIgFBCCABQQhLG2dBH3NBAnRBgB9qIgEoAgAgAEEIakYEQCABIAAoAgw2AgALIAAoAggiAQRAIAEgACgCDDYCBAsgACgCDCIBBEAgASAAKAIINgIACyACECchAkEAIQFBhCAoAgAhACACDQEgACAAKAIAQX5xNgIAQQAPCyACQQ9qQXhxIgMQHSICQX9GDQIgAkEHakF4cSIAIAJHBEAgACACaxAdQX9GDQMLAkBBhCAoAgAiAUUEQEGAICAANgIADAELIAAgATYCBAtBhCAgADYCACAAIANBAXRBAXI2AgAMAQsgAEUNAQsgAEEIaiEBCyABC7kDAQJ/IAAgA2ohBQJAIANBB0wEQANAIAAgBU8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwAAAsACyAEQQFGBEACQCAAIAJrIgZBB00EQCAAIAItAAA6AAAgACACLQABOgABIAAgAi0AAjoAAiAAIAItAAM6AAMgAEEEaiACIAZBAnQiBkHAHmooAgBqIgIQFyACIAZB4B5qKAIAayECDAELIAAgAhAMCyACQQhqIQIgAEEIaiEACwJAAkACQAJAIAUgAU0EQCAAIANqIQEgBEEBRyAAIAJrQQ9Kcg0BA0AgACACEAwgAkEIaiECIABBCGoiACABSQ0ACwwFCyAAIAFLBEAgACEBDAQLIARBAUcgACACa0EPSnINASAAIQMgAiEEA0AgAyAEEAwgBEEIaiEEIANBCGoiAyABSQ0ACwwCCwNAIAAgAhAHIAJBEGohAiAAQRBqIgAgAUkNAAsMAwsgACEDIAIhBANAIAMgBBAHIARBEGohBCADQRBqIgMgAUkNAAsLIAIgASAAa2ohAgsDQCABIAVPDQEgASACLQAAOgAAIAFBAWohASACQQFqIQIMAAALAAsLQQECfyAAIAAoArjgASIDNgLE4AEgACgCvOABIQQgACABNgK84AEgACABIAJqNgK44AEgACABIAQgA2tqNgLA4AELpgEBAX8gACAAKALs4QEQFjYCyOABIABCADcD+OABIABCADcDuOABIABBwOABakIANwMAIABBqNAAaiIBQYyAgOAANgIAIABBADYCmOIBIABCADcDiOEBIABCAzcDgOEBIABBrNABakHgEikCADcCACAAQbTQAWpB6BIoAgA2AgAgACABNgIMIAAgAEGYIGo2AgggACAAQaAwajYCBCAAIABBEGo2AgALYQEBf0G4fyEDAkAgAUEDSQ0AIAIgABAhIgFBA3YiADYCCCACIAFBAXE2AgQgAiABQQF2QQNxIgM2AgACQCADQX9qIgFBAksNAAJAIAFBAWsOAgEAAgtBbA8LIAAhAwsgAwsMACAAIAEgAkEAEC4LiAQCA38CfiADEBYhBCAAQQBBKBAQIQAgBCACSwRAIAQPCyABRQRAQX8PCwJAAkAgA0EBRg0AIAEoAAAiBkGo6r5pRg0AQXYhAyAGQXBxQdDUtMIBRw0BQQghAyACQQhJDQEgAEEAQSgQECEAIAEoAAQhASAAQQE2AhQgACABrTcDAEEADwsgASACIAMQLyIDIAJLDQAgACADNgIYQXIhAyABIARqIgVBf2otAAAiAkEIcQ0AIAJBIHEiBkUEQEFwIQMgBS0AACIFQacBSw0BIAVBB3GtQgEgBUEDdkEKaq2GIgdCA4h+IAd8IQggBEEBaiEECyACQQZ2IQMgAkECdiEFAkAgAkEDcUF/aiICQQJLBEBBACECDAELAkACQAJAIAJBAWsOAgECAAsgASAEai0AACECIARBAWohBAwCCyABIARqLwAAIQIgBEECaiEEDAELIAEgBGooAAAhAiAEQQRqIQQLIAVBAXEhBQJ+AkACQAJAIANBf2oiA0ECTQRAIANBAWsOAgIDAQtCfyAGRQ0DGiABIARqMQAADAMLIAEgBGovAACtQoACfAwCCyABIARqKAAArQwBCyABIARqKQAACyEHIAAgBTYCICAAIAI2AhwgACAHNwMAQQAhAyAAQQA2AhQgACAHIAggBhsiBzcDCCAAIAdCgIAIIAdCgIAIVBs+AhALIAMLWwEBf0G4fyEDIAIQFiICIAFNBH8gACACakF/ai0AACIAQQNxQQJ0QaAeaigCACACaiAAQQZ2IgFBAnRBsB5qKAIAaiAAQSBxIgBFaiABRSAAQQV2cWoFQbh/CwsdACAAKAKQ4gEQWiAAQQA2AqDiASAAQgA3A5DiAQu1AwEFfyMAQZACayIKJABBuH8hBgJAIAVFDQAgBCwAACIIQf8BcSEHAkAgCEF/TARAIAdBgn9qQQF2IgggBU8NAkFsIQYgB0GBf2oiBUGAAk8NAiAEQQFqIQdBACEGA0AgBiAFTwRAIAUhBiAIIQcMAwUgACAGaiAHIAZBAXZqIgQtAABBBHY6AAAgACAGQQFyaiAELQAAQQ9xOgAAIAZBAmohBgwBCwAACwALIAcgBU8NASAAIARBAWogByAKEFMiBhADDQELIAYhBEEAIQYgAUEAQTQQECEJQQAhBQNAIAQgBkcEQCAAIAZqIggtAAAiAUELSwRAQWwhBgwDBSAJIAFBAnRqIgEgASgCAEEBajYCACAGQQFqIQZBASAILQAAdEEBdSAFaiEFDAILAAsLQWwhBiAFRQ0AIAUQFEEBaiIBQQxLDQAgAyABNgIAQQFBASABdCAFayIDEBQiAXQgA0cNACAAIARqIAFBAWoiADoAACAJIABBAnRqIgAgACgCAEEBajYCACAJKAIEIgBBAkkgAEEBcXINACACIARBAWo2AgAgB0EBaiEGCyAKQZACaiQAIAYLxhEBDH8jAEHwAGsiBSQAQWwhCwJAIANBCkkNACACLwAAIQogAi8AAiEJIAIvAAQhByAFQQhqIAQQDgJAIAMgByAJIApqakEGaiIMSQ0AIAUtAAohCCAFQdgAaiACQQZqIgIgChAGIgsQAw0BIAVBQGsgAiAKaiICIAkQBiILEAMNASAFQShqIAIgCWoiAiAHEAYiCxADDQEgBUEQaiACIAdqIAMgDGsQBiILEAMNASAAIAFqIg9BfWohECAEQQRqIQZBASELIAAgAUEDakECdiIDaiIMIANqIgIgA2oiDiEDIAIhBCAMIQcDQCALIAMgEElxBEAgACAGIAVB2ABqIAgQAkECdGoiCS8BADsAACAFQdgAaiAJLQACEAEgCS0AAyELIAcgBiAFQUBrIAgQAkECdGoiCS8BADsAACAFQUBrIAktAAIQASAJLQADIQogBCAGIAVBKGogCBACQQJ0aiIJLwEAOwAAIAVBKGogCS0AAhABIAktAAMhCSADIAYgBUEQaiAIEAJBAnRqIg0vAQA7AAAgBUEQaiANLQACEAEgDS0AAyENIAAgC2oiCyAGIAVB2ABqIAgQAkECdGoiAC8BADsAACAFQdgAaiAALQACEAEgAC0AAyEAIAcgCmoiCiAGIAVBQGsgCBACQQJ0aiIHLwEAOwAAIAVBQGsgBy0AAhABIActAAMhByAEIAlqIgkgBiAFQShqIAgQAkECdGoiBC8BADsAACAFQShqIAQtAAIQASAELQADIQQgAyANaiIDIAYgBUEQaiAIEAJBAnRqIg0vAQA7AAAgBUEQaiANLQACEAEgACALaiEAIAcgCmohByAEIAlqIQQgAyANLQADaiEDIAVB2ABqEA0gBUFAaxANciAFQShqEA1yIAVBEGoQDXJFIQsMAQsLIAQgDksgByACS3INAEFsIQsgACAMSw0BIAxBfWohCQNAQQAgACAJSSAFQdgAahAEGwRAIAAgBiAFQdgAaiAIEAJBAnRqIgovAQA7AAAgBUHYAGogCi0AAhABIAAgCi0AA2oiACAGIAVB2ABqIAgQAkECdGoiCi8BADsAACAFQdgAaiAKLQACEAEgACAKLQADaiEADAEFIAxBfmohCgNAIAVB2ABqEAQgACAKS3JFBEAgACAGIAVB2ABqIAgQAkECdGoiCS8BADsAACAFQdgAaiAJLQACEAEgACAJLQADaiEADAELCwNAIAAgCk0EQCAAIAYgBUHYAGogCBACQQJ0aiIJLwEAOwAAIAVB2ABqIAktAAIQASAAIAktAANqIQAMAQsLAkAgACAMTw0AIAAgBiAFQdgAaiAIEAIiAEECdGoiDC0AADoAACAMLQADQQFGBEAgBUHYAGogDC0AAhABDAELIAUoAlxBH0sNACAFQdgAaiAGIABBAnRqLQACEAEgBSgCXEEhSQ0AIAVBIDYCXAsgAkF9aiEMA0BBACAHIAxJIAVBQGsQBBsEQCAHIAYgBUFAayAIEAJBAnRqIgAvAQA7AAAgBUFAayAALQACEAEgByAALQADaiIAIAYgBUFAayAIEAJBAnRqIgcvAQA7AAAgBUFAayAHLQACEAEgACAHLQADaiEHDAEFIAJBfmohDANAIAVBQGsQBCAHIAxLckUEQCAHIAYgBUFAayAIEAJBAnRqIgAvAQA7AAAgBUFAayAALQACEAEgByAALQADaiEHDAELCwNAIAcgDE0EQCAHIAYgBUFAayAIEAJBAnRqIgAvAQA7AAAgBUFAayAALQACEAEgByAALQADaiEHDAELCwJAIAcgAk8NACAHIAYgBUFAayAIEAIiAEECdGoiAi0AADoAACACLQADQQFGBEAgBUFAayACLQACEAEMAQsgBSgCREEfSw0AIAVBQGsgBiAAQQJ0ai0AAhABIAUoAkRBIUkNACAFQSA2AkQLIA5BfWohAgNAQQAgBCACSSAFQShqEAQbBEAgBCAGIAVBKGogCBACQQJ0aiIALwEAOwAAIAVBKGogAC0AAhABIAQgAC0AA2oiACAGIAVBKGogCBACQQJ0aiIELwEAOwAAIAVBKGogBC0AAhABIAAgBC0AA2ohBAwBBSAOQX5qIQIDQCAFQShqEAQgBCACS3JFBEAgBCAGIAVBKGogCBACQQJ0aiIALwEAOwAAIAVBKGogAC0AAhABIAQgAC0AA2ohBAwBCwsDQCAEIAJNBEAgBCAGIAVBKGogCBACQQJ0aiIALwEAOwAAIAVBKGogAC0AAhABIAQgAC0AA2ohBAwBCwsCQCAEIA5PDQAgBCAGIAVBKGogCBACIgBBAnRqIgItAAA6AAAgAi0AA0EBRgRAIAVBKGogAi0AAhABDAELIAUoAixBH0sNACAFQShqIAYgAEECdGotAAIQASAFKAIsQSFJDQAgBUEgNgIsCwNAQQAgAyAQSSAFQRBqEAQbBEAgAyAGIAVBEGogCBACQQJ0aiIALwEAOwAAIAVBEGogAC0AAhABIAMgAC0AA2oiACAGIAVBEGogCBACQQJ0aiICLwEAOwAAIAVBEGogAi0AAhABIAAgAi0AA2ohAwwBBSAPQX5qIQIDQCAFQRBqEAQgAyACS3JFBEAgAyAGIAVBEGogCBACQQJ0aiIALwEAOwAAIAVBEGogAC0AAhABIAMgAC0AA2ohAwwBCwsDQCADIAJNBEAgAyAGIAVBEGogCBACQQJ0aiIALwEAOwAAIAVBEGogAC0AAhABIAMgAC0AA2ohAwwBCwsCQCADIA9PDQAgAyAGIAVBEGogCBACIgBBAnRqIgItAAA6AAAgAi0AA0EBRgRAIAVBEGogAi0AAhABDAELIAUoAhRBH0sNACAFQRBqIAYgAEECdGotAAIQASAFKAIUQSFJDQAgBUEgNgIUCyABQWwgBUHYAGoQCiAFQUBrEApxIAVBKGoQCnEgBUEQahAKcRshCwwJCwAACwALAAALAAsAAAsACwAACwALQWwhCwsgBUHwAGokACALC7UEAQ5/IwBBEGsiBiQAIAZBBGogABAOQVQhBQJAIARB3AtJDQAgBi0ABCEHIANB8ARqQQBB7AAQECEIIAdBDEsNACADQdwJaiIJIAggBkEIaiAGQQxqIAEgAhAxIhAQA0UEQCAGKAIMIgQgB0sNASADQdwFaiEPIANBpAVqIREgAEEEaiESIANBqAVqIQEgBCEFA0AgBSICQX9qIQUgCCACQQJ0aigCAEUNAAsgAkEBaiEOQQEhBQNAIAUgDk9FBEAgCCAFQQJ0IgtqKAIAIQwgASALaiAKNgIAIAVBAWohBSAKIAxqIQoMAQsLIAEgCjYCAEEAIQUgBigCCCELA0AgBSALRkUEQCABIAUgCWotAAAiDEECdGoiDSANKAIAIg1BAWo2AgAgDyANQQF0aiINIAw6AAEgDSAFOgAAIAVBAWohBQwBCwtBACEBIANBADYCqAUgBEF/cyAHaiEJQQEhBQNAIAUgDk9FBEAgCCAFQQJ0IgtqKAIAIQwgAyALaiABNgIAIAwgBSAJanQgAWohASAFQQFqIQUMAQsLIAcgBEEBaiIBIAJrIgRrQQFqIQgDQEEBIQUgBCAIT0UEQANAIAUgDk9FBEAgBUECdCIJIAMgBEE0bGpqIAMgCWooAgAgBHY2AgAgBUEBaiEFDAELCyAEQQFqIQQMAQsLIBIgByAPIAogESADIAIgARBkIAZBAToABSAGIAc6AAYgACAGKAIENgIACyAQIQULIAZBEGokACAFC8ENAQt/IwBB8ABrIgUkAEFsIQkCQCADQQpJDQAgAi8AACEKIAIvAAIhDCACLwAEIQYgBUEIaiAEEA4CQCADIAYgCiAMampBBmoiDUkNACAFLQAKIQcgBUHYAGogAkEGaiICIAoQBiIJEAMNASAFQUBrIAIgCmoiAiAMEAYiCRADDQEgBUEoaiACIAxqIgIgBhAGIgkQAw0BIAVBEGogAiAGaiADIA1rEAYiCRADDQEgACABaiIOQX1qIQ8gBEEEaiEGQQEhCSAAIAFBA2pBAnYiAmoiCiACaiIMIAJqIg0hAyAMIQQgCiECA0AgCSADIA9JcQRAIAYgBUHYAGogBxACQQF0aiIILQAAIQsgBUHYAGogCC0AARABIAAgCzoAACAGIAVBQGsgBxACQQF0aiIILQAAIQsgBUFAayAILQABEAEgAiALOgAAIAYgBUEoaiAHEAJBAXRqIggtAAAhCyAFQShqIAgtAAEQASAEIAs6AAAgBiAFQRBqIAcQAkEBdGoiCC0AACELIAVBEGogCC0AARABIAMgCzoAACAGIAVB2ABqIAcQAkEBdGoiCC0AACELIAVB2ABqIAgtAAEQASAAIAs6AAEgBiAFQUBrIAcQAkEBdGoiCC0AACELIAVBQGsgCC0AARABIAIgCzoAASAGIAVBKGogBxACQQF0aiIILQAAIQsgBUEoaiAILQABEAEgBCALOgABIAYgBUEQaiAHEAJBAXRqIggtAAAhCyAFQRBqIAgtAAEQASADIAs6AAEgA0ECaiEDIARBAmohBCACQQJqIQIgAEECaiEAIAkgBUHYAGoQDUVxIAVBQGsQDUVxIAVBKGoQDUVxIAVBEGoQDUVxIQkMAQsLIAQgDUsgAiAMS3INAEFsIQkgACAKSw0BIApBfWohCQNAIAVB2ABqEAQgACAJT3JFBEAgBiAFQdgAaiAHEAJBAXRqIggtAAAhCyAFQdgAaiAILQABEAEgACALOgAAIAYgBUHYAGogBxACQQF0aiIILQAAIQsgBUHYAGogCC0AARABIAAgCzoAASAAQQJqIQAMAQsLA0AgBUHYAGoQBCAAIApPckUEQCAGIAVB2ABqIAcQAkEBdGoiCS0AACEIIAVB2ABqIAktAAEQASAAIAg6AAAgAEEBaiEADAELCwNAIAAgCkkEQCAGIAVB2ABqIAcQAkEBdGoiCS0AACEIIAVB2ABqIAktAAEQASAAIAg6AAAgAEEBaiEADAELCyAMQX1qIQADQCAFQUBrEAQgAiAAT3JFBEAgBiAFQUBrIAcQAkEBdGoiCi0AACEJIAVBQGsgCi0AARABIAIgCToAACAGIAVBQGsgBxACQQF0aiIKLQAAIQkgBUFAayAKLQABEAEgAiAJOgABIAJBAmohAgwBCwsDQCAFQUBrEAQgAiAMT3JFBEAgBiAFQUBrIAcQAkEBdGoiAC0AACEKIAVBQGsgAC0AARABIAIgCjoAACACQQFqIQIMAQsLA0AgAiAMSQRAIAYgBUFAayAHEAJBAXRqIgAtAAAhCiAFQUBrIAAtAAEQASACIAo6AAAgAkEBaiECDAELCyANQX1qIQADQCAFQShqEAQgBCAAT3JFBEAgBiAFQShqIAcQAkEBdGoiAi0AACEKIAVBKGogAi0AARABIAQgCjoAACAGIAVBKGogBxACQQF0aiICLQAAIQogBUEoaiACLQABEAEgBCAKOgABIARBAmohBAwBCwsDQCAFQShqEAQgBCANT3JFBEAgBiAFQShqIAcQAkEBdGoiAC0AACECIAVBKGogAC0AARABIAQgAjoAACAEQQFqIQQMAQsLA0AgBCANSQRAIAYgBUEoaiAHEAJBAXRqIgAtAAAhAiAFQShqIAAtAAEQASAEIAI6AAAgBEEBaiEEDAELCwNAIAVBEGoQBCADIA9PckUEQCAGIAVBEGogBxACQQF0aiIALQAAIQIgBUEQaiAALQABEAEgAyACOgAAIAYgBUEQaiAHEAJBAXRqIgAtAAAhAiAFQRBqIAAtAAEQASADIAI6AAEgA0ECaiEDDAELCwNAIAVBEGoQBCADIA5PckUEQCAGIAVBEGogBxACQQF0aiIALQAAIQIgBUEQaiAALQABEAEgAyACOgAAIANBAWohAwwBCwsDQCADIA5JBEAgBiAFQRBqIAcQAkEBdGoiAC0AACECIAVBEGogAC0AARABIAMgAjoAACADQQFqIQMMAQsLIAFBbCAFQdgAahAKIAVBQGsQCnEgBUEoahAKcSAFQRBqEApxGyEJDAELQWwhCQsgBUHwAGokACAJC8oCAQR/IwBBIGsiBSQAIAUgBBAOIAUtAAIhByAFQQhqIAIgAxAGIgIQA0UEQCAEQQRqIQIgACABaiIDQX1qIQQDQCAFQQhqEAQgACAET3JFBEAgAiAFQQhqIAcQAkEBdGoiBi0AACEIIAVBCGogBi0AARABIAAgCDoAACACIAVBCGogBxACQQF0aiIGLQAAIQggBUEIaiAGLQABEAEgACAIOgABIABBAmohAAwBCwsDQCAFQQhqEAQgACADT3JFBEAgAiAFQQhqIAcQAkEBdGoiBC0AACEGIAVBCGogBC0AARABIAAgBjoAACAAQQFqIQAMAQsLA0AgACADT0UEQCACIAVBCGogBxACQQF0aiIELQAAIQYgBUEIaiAELQABEAEgACAGOgAAIABBAWohAAwBCwsgAUFsIAVBCGoQChshAgsgBUEgaiQAIAILtgMBCX8jAEEQayIGJAAgBkEANgIMIAZBADYCCEFUIQQCQAJAIANBQGsiDCADIAZBCGogBkEMaiABIAIQMSICEAMNACAGQQRqIAAQDiAGKAIMIgcgBi0ABEEBaksNASAAQQRqIQogBkEAOgAFIAYgBzoABiAAIAYoAgQ2AgAgB0EBaiEJQQEhBANAIAQgCUkEQCADIARBAnRqIgEoAgAhACABIAU2AgAgACAEQX9qdCAFaiEFIARBAWohBAwBCwsgB0EBaiEHQQAhBSAGKAIIIQkDQCAFIAlGDQEgAyAFIAxqLQAAIgRBAnRqIgBBASAEdEEBdSILIAAoAgAiAWoiADYCACAHIARrIQhBACEEAkAgC0EDTQRAA0AgBCALRg0CIAogASAEakEBdGoiACAIOgABIAAgBToAACAEQQFqIQQMAAALAAsDQCABIABPDQEgCiABQQF0aiIEIAg6AAEgBCAFOgAAIAQgCDoAAyAEIAU6AAIgBCAIOgAFIAQgBToABCAEIAg6AAcgBCAFOgAGIAFBBGohAQwAAAsACyAFQQFqIQUMAAALAAsgAiEECyAGQRBqJAAgBAutAQECfwJAQYQgKAIAIABHIAAoAgBBAXYiAyABa0F4aiICQXhxQQhHcgR/IAIFIAMQJ0UNASACQQhqC0EQSQ0AIAAgACgCACICQQFxIAAgAWpBD2pBeHEiASAAa0EBdHI2AgAgASAANgIEIAEgASgCAEEBcSAAIAJBAXZqIAFrIgJBAXRyNgIAQYQgIAEgAkH/////B3FqQQRqQYQgKAIAIABGGyABNgIAIAEQJQsLygIBBX8CQAJAAkAgAEEIIABBCEsbZ0EfcyAAaUEBR2oiAUEESSAAIAF2cg0AIAFBAnRB/B5qKAIAIgJFDQADQCACQXhqIgMoAgBBAXZBeGoiBSAATwRAIAIgBUEIIAVBCEsbZ0Efc0ECdEGAH2oiASgCAEYEQCABIAIoAgQ2AgALDAMLIARBHksNASAEQQFqIQQgAigCBCICDQALC0EAIQMgAUEgTw0BA0AgAUECdEGAH2ooAgAiAkUEQCABQR5LIQIgAUEBaiEBIAJFDQEMAwsLIAIgAkF4aiIDKAIAQQF2QXhqIgFBCCABQQhLG2dBH3NBAnRBgB9qIgEoAgBGBEAgASACKAIENgIACwsgAigCACIBBEAgASACKAIENgIECyACKAIEIgEEQCABIAIoAgA2AgALIAMgAygCAEEBcjYCACADIAAQNwsgAwvhCwINfwV+IwBB8ABrIgckACAHIAAoAvDhASIINgJcIAEgAmohDSAIIAAoAoDiAWohDwJAAkAgBUUEQCABIQQMAQsgACgCxOABIRAgACgCwOABIREgACgCvOABIQ4gAEEBNgKM4QFBACEIA0AgCEEDRwRAIAcgCEECdCICaiAAIAJqQazQAWooAgA2AkQgCEEBaiEIDAELC0FsIQwgB0EYaiADIAQQBhADDQEgB0EsaiAHQRhqIAAoAgAQEyAHQTRqIAdBGGogACgCCBATIAdBPGogB0EYaiAAKAIEEBMgDUFgaiESIAEhBEEAIQwDQCAHKAIwIAcoAixBA3RqKQIAIhRCEIinQf8BcSEIIAcoAkAgBygCPEEDdGopAgAiFUIQiKdB/wFxIQsgBygCOCAHKAI0QQN0aikCACIWQiCIpyEJIBVCIIghFyAUQiCIpyECAkAgFkIQiKdB/wFxIgNBAk8EQAJAIAZFIANBGUlyRQRAIAkgB0EYaiADQSAgBygCHGsiCiAKIANLGyIKEAUgAyAKayIDdGohCSAHQRhqEAQaIANFDQEgB0EYaiADEAUgCWohCQwBCyAHQRhqIAMQBSAJaiEJIAdBGGoQBBoLIAcpAkQhGCAHIAk2AkQgByAYNwNIDAELAkAgA0UEQCACBEAgBygCRCEJDAMLIAcoAkghCQwBCwJAAkAgB0EYakEBEAUgCSACRWpqIgNBA0YEQCAHKAJEQX9qIgMgA0VqIQkMAQsgA0ECdCAHaigCRCIJIAlFaiEJIANBAUYNAQsgByAHKAJINgJMCwsgByAHKAJENgJIIAcgCTYCRAsgF6chAyALBEAgB0EYaiALEAUgA2ohAwsgCCALakEUTwRAIAdBGGoQBBoLIAgEQCAHQRhqIAgQBSACaiECCyAHQRhqEAQaIAcgB0EYaiAUQhiIp0H/AXEQCCAUp0H//wNxajYCLCAHIAdBGGogFUIYiKdB/wFxEAggFadB//8DcWo2AjwgB0EYahAEGiAHIAdBGGogFkIYiKdB/wFxEAggFqdB//8DcWo2AjQgByACNgJgIAcoAlwhCiAHIAk2AmggByADNgJkAkACQAJAIAQgAiADaiILaiASSw0AIAIgCmoiEyAPSw0AIA0gBGsgC0Egak8NAQsgByAHKQNoNwMQIAcgBykDYDcDCCAEIA0gB0EIaiAHQdwAaiAPIA4gESAQEB4hCwwBCyACIARqIQggBCAKEAcgAkERTwRAIARBEGohAgNAIAIgCkEQaiIKEAcgAkEQaiICIAhJDQALCyAIIAlrIQIgByATNgJcIAkgCCAOa0sEQCAJIAggEWtLBEBBbCELDAILIBAgAiAOayICaiIKIANqIBBNBEAgCCAKIAMQDxoMAgsgCCAKQQAgAmsQDyEIIAcgAiADaiIDNgJkIAggAmshCCAOIQILIAlBEE8EQCADIAhqIQMDQCAIIAIQByACQRBqIQIgCEEQaiIIIANJDQALDAELAkAgCUEHTQRAIAggAi0AADoAACAIIAItAAE6AAEgCCACLQACOgACIAggAi0AAzoAAyAIQQRqIAIgCUECdCIDQcAeaigCAGoiAhAXIAIgA0HgHmooAgBrIQIgBygCZCEDDAELIAggAhAMCyADQQlJDQAgAyAIaiEDIAhBCGoiCCACQQhqIgJrQQ9MBEADQCAIIAIQDCACQQhqIQIgCEEIaiIIIANJDQAMAgALAAsDQCAIIAIQByACQRBqIQIgCEEQaiIIIANJDQALCyAHQRhqEAQaIAsgDCALEAMiAhshDCAEIAQgC2ogAhshBCAFQX9qIgUNAAsgDBADDQFBbCEMIAdBGGoQBEECSQ0BQQAhCANAIAhBA0cEQCAAIAhBAnQiAmpBrNABaiACIAdqKAJENgIAIAhBAWohCAwBCwsgBygCXCEIC0G6fyEMIA8gCGsiACANIARrSw0AIAQEfyAEIAggABALIABqBUEACyABayEMCyAHQfAAaiQAIAwLkRcCFn8FfiMAQdABayIHJAAgByAAKALw4QEiCDYCvAEgASACaiESIAggACgCgOIBaiETAkACQCAFRQRAIAEhAwwBCyAAKALE4AEhESAAKALA4AEhFSAAKAK84AEhDyAAQQE2AozhAUEAIQgDQCAIQQNHBEAgByAIQQJ0IgJqIAAgAmpBrNABaigCADYCVCAIQQFqIQgMAQsLIAcgETYCZCAHIA82AmAgByABIA9rNgJoQWwhECAHQShqIAMgBBAGEAMNASAFQQQgBUEESBshFyAHQTxqIAdBKGogACgCABATIAdBxABqIAdBKGogACgCCBATIAdBzABqIAdBKGogACgCBBATQQAhBCAHQeAAaiEMIAdB5ABqIQoDQCAHQShqEARBAksgBCAXTnJFBEAgBygCQCAHKAI8QQN0aikCACIdQhCIp0H/AXEhCyAHKAJQIAcoAkxBA3RqKQIAIh5CEIinQf8BcSEJIAcoAkggBygCREEDdGopAgAiH0IgiKchCCAeQiCIISAgHUIgiKchAgJAIB9CEIinQf8BcSIDQQJPBEACQCAGRSADQRlJckUEQCAIIAdBKGogA0EgIAcoAixrIg0gDSADSxsiDRAFIAMgDWsiA3RqIQggB0EoahAEGiADRQ0BIAdBKGogAxAFIAhqIQgMAQsgB0EoaiADEAUgCGohCCAHQShqEAQaCyAHKQJUISEgByAINgJUIAcgITcDWAwBCwJAIANFBEAgAgRAIAcoAlQhCAwDCyAHKAJYIQgMAQsCQAJAIAdBKGpBARAFIAggAkVqaiIDQQNGBEAgBygCVEF/aiIDIANFaiEIDAELIANBAnQgB2ooAlQiCCAIRWohCCADQQFGDQELIAcgBygCWDYCXAsLIAcgBygCVDYCWCAHIAg2AlQLICCnIQMgCQRAIAdBKGogCRAFIANqIQMLIAkgC2pBFE8EQCAHQShqEAQaCyALBEAgB0EoaiALEAUgAmohAgsgB0EoahAEGiAHIAcoAmggAmoiCSADajYCaCAKIAwgCCAJSxsoAgAhDSAHIAdBKGogHUIYiKdB/wFxEAggHadB//8DcWo2AjwgByAHQShqIB5CGIinQf8BcRAIIB6nQf//A3FqNgJMIAdBKGoQBBogB0EoaiAfQhiIp0H/AXEQCCEOIAdB8ABqIARBBHRqIgsgCSANaiAIazYCDCALIAg2AgggCyADNgIEIAsgAjYCACAHIA4gH6dB//8DcWo2AkQgBEEBaiEEDAELCyAEIBdIDQEgEkFgaiEYIAdB4ABqIRogB0HkAGohGyABIQMDQCAHQShqEARBAksgBCAFTnJFBEAgBygCQCAHKAI8QQN0aikCACIdQhCIp0H/AXEhCyAHKAJQIAcoAkxBA3RqKQIAIh5CEIinQf8BcSEIIAcoAkggBygCREEDdGopAgAiH0IgiKchCSAeQiCIISAgHUIgiKchDAJAIB9CEIinQf8BcSICQQJPBEACQCAGRSACQRlJckUEQCAJIAdBKGogAkEgIAcoAixrIgogCiACSxsiChAFIAIgCmsiAnRqIQkgB0EoahAEGiACRQ0BIAdBKGogAhAFIAlqIQkMAQsgB0EoaiACEAUgCWohCSAHQShqEAQaCyAHKQJUISEgByAJNgJUIAcgITcDWAwBCwJAIAJFBEAgDARAIAcoAlQhCQwDCyAHKAJYIQkMAQsCQAJAIAdBKGpBARAFIAkgDEVqaiICQQNGBEAgBygCVEF/aiICIAJFaiEJDAELIAJBAnQgB2ooAlQiCSAJRWohCSACQQFGDQELIAcgBygCWDYCXAsLIAcgBygCVDYCWCAHIAk2AlQLICCnIRQgCARAIAdBKGogCBAFIBRqIRQLIAggC2pBFE8EQCAHQShqEAQaCyALBEAgB0EoaiALEAUgDGohDAsgB0EoahAEGiAHIAcoAmggDGoiGSAUajYCaCAbIBogCSAZSxsoAgAhHCAHIAdBKGogHUIYiKdB/wFxEAggHadB//8DcWo2AjwgByAHQShqIB5CGIinQf8BcRAIIB6nQf//A3FqNgJMIAdBKGoQBBogByAHQShqIB9CGIinQf8BcRAIIB+nQf//A3FqNgJEIAcgB0HwAGogBEEDcUEEdGoiDSkDCCIdNwPIASAHIA0pAwAiHjcDwAECQAJAAkAgBygCvAEiDiAepyICaiIWIBNLDQAgAyAHKALEASIKIAJqIgtqIBhLDQAgEiADayALQSBqTw0BCyAHIAcpA8gBNwMQIAcgBykDwAE3AwggAyASIAdBCGogB0G8AWogEyAPIBUgERAeIQsMAQsgAiADaiEIIAMgDhAHIAJBEU8EQCADQRBqIQIDQCACIA5BEGoiDhAHIAJBEGoiAiAISQ0ACwsgCCAdpyIOayECIAcgFjYCvAEgDiAIIA9rSwRAIA4gCCAVa0sEQEFsIQsMAgsgESACIA9rIgJqIhYgCmogEU0EQCAIIBYgChAPGgwCCyAIIBZBACACaxAPIQggByACIApqIgo2AsQBIAggAmshCCAPIQILIA5BEE8EQCAIIApqIQoDQCAIIAIQByACQRBqIQIgCEEQaiIIIApJDQALDAELAkAgDkEHTQRAIAggAi0AADoAACAIIAItAAE6AAEgCCACLQACOgACIAggAi0AAzoAAyAIQQRqIAIgDkECdCIKQcAeaigCAGoiAhAXIAIgCkHgHmooAgBrIQIgBygCxAEhCgwBCyAIIAIQDAsgCkEJSQ0AIAggCmohCiAIQQhqIgggAkEIaiICa0EPTARAA0AgCCACEAwgAkEIaiECIAhBCGoiCCAKSQ0ADAIACwALA0AgCCACEAcgAkEQaiECIAhBEGoiCCAKSQ0ACwsgCxADBEAgCyEQDAQFIA0gDDYCACANIBkgHGogCWs2AgwgDSAJNgIIIA0gFDYCBCAEQQFqIQQgAyALaiEDDAILAAsLIAQgBUgNASAEIBdrIQtBACEEA0AgCyAFSARAIAcgB0HwAGogC0EDcUEEdGoiAikDCCIdNwPIASAHIAIpAwAiHjcDwAECQAJAAkAgBygCvAEiDCAepyICaiIKIBNLDQAgAyAHKALEASIJIAJqIhBqIBhLDQAgEiADayAQQSBqTw0BCyAHIAcpA8gBNwMgIAcgBykDwAE3AxggAyASIAdBGGogB0G8AWogEyAPIBUgERAeIRAMAQsgAiADaiEIIAMgDBAHIAJBEU8EQCADQRBqIQIDQCACIAxBEGoiDBAHIAJBEGoiAiAISQ0ACwsgCCAdpyIGayECIAcgCjYCvAEgBiAIIA9rSwRAIAYgCCAVa0sEQEFsIRAMAgsgESACIA9rIgJqIgwgCWogEU0EQCAIIAwgCRAPGgwCCyAIIAxBACACaxAPIQggByACIAlqIgk2AsQBIAggAmshCCAPIQILIAZBEE8EQCAIIAlqIQYDQCAIIAIQByACQRBqIQIgCEEQaiIIIAZJDQALDAELAkAgBkEHTQRAIAggAi0AADoAACAIIAItAAE6AAEgCCACLQACOgACIAggAi0AAzoAAyAIQQRqIAIgBkECdCIGQcAeaigCAGoiAhAXIAIgBkHgHmooAgBrIQIgBygCxAEhCQwBCyAIIAIQDAsgCUEJSQ0AIAggCWohBiAIQQhqIgggAkEIaiICa0EPTARAA0AgCCACEAwgAkEIaiECIAhBCGoiCCAGSQ0ADAIACwALA0AgCCACEAcgAkEQaiECIAhBEGoiCCAGSQ0ACwsgEBADDQMgC0EBaiELIAMgEGohAwwBCwsDQCAEQQNHBEAgACAEQQJ0IgJqQazQAWogAiAHaigCVDYCACAEQQFqIQQMAQsLIAcoArwBIQgLQbp/IRAgEyAIayIAIBIgA2tLDQAgAwR/IAMgCCAAEAsgAGoFQQALIAFrIRALIAdB0AFqJAAgEAslACAAQgA3AgAgAEEAOwEIIABBADoACyAAIAE2AgwgACACOgAKC7QFAQN/IwBBMGsiBCQAIABB/wFqIgVBfWohBgJAIAMvAQIEQCAEQRhqIAEgAhAGIgIQAw0BIARBEGogBEEYaiADEBwgBEEIaiAEQRhqIAMQHCAAIQMDQAJAIARBGGoQBCADIAZPckUEQCADIARBEGogBEEYahASOgAAIAMgBEEIaiAEQRhqEBI6AAEgBEEYahAERQ0BIANBAmohAwsgBUF+aiEFAn8DQEG6fyECIAMiASAFSw0FIAEgBEEQaiAEQRhqEBI6AAAgAUEBaiEDIARBGGoQBEEDRgRAQQIhAiAEQQhqDAILIAMgBUsNBSABIARBCGogBEEYahASOgABIAFBAmohA0EDIQIgBEEYahAEQQNHDQALIARBEGoLIQUgAyAFIARBGGoQEjoAACABIAJqIABrIQIMAwsgAyAEQRBqIARBGGoQEjoAAiADIARBCGogBEEYahASOgADIANBBGohAwwAAAsACyAEQRhqIAEgAhAGIgIQAw0AIARBEGogBEEYaiADEBwgBEEIaiAEQRhqIAMQHCAAIQMDQAJAIARBGGoQBCADIAZPckUEQCADIARBEGogBEEYahAROgAAIAMgBEEIaiAEQRhqEBE6AAEgBEEYahAERQ0BIANBAmohAwsgBUF+aiEFAn8DQEG6fyECIAMiASAFSw0EIAEgBEEQaiAEQRhqEBE6AAAgAUEBaiEDIARBGGoQBEEDRgRAQQIhAiAEQQhqDAILIAMgBUsNBCABIARBCGogBEEYahAROgABIAFBAmohA0EDIQIgBEEYahAEQQNHDQALIARBEGoLIQUgAyAFIARBGGoQEToAACABIAJqIABrIQIMAgsgAyAEQRBqIARBGGoQEToAAiADIARBCGogBEEYahAROgADIANBBGohAwwAAAsACyAEQTBqJAAgAgtpAQF/An8CQAJAIAJBB00NACABKAAAQbfIwuF+Rw0AIAAgASgABDYCmOIBQWIgAEEQaiABIAIQPiIDEAMNAhogAEKBgICAEDcDiOEBIAAgASADaiACIANrECoMAQsgACABIAIQKgtBAAsLrQMBBn8jAEGAAWsiAyQAQWIhCAJAIAJBCUkNACAAQZjQAGogAUEIaiIEIAJBeGogAEGY0AAQMyIFEAMiBg0AIANBHzYCfCADIANB/ABqIANB+ABqIAQgBCAFaiAGGyIEIAEgAmoiAiAEaxAVIgUQAw0AIAMoAnwiBkEfSw0AIAMoAngiB0EJTw0AIABBiCBqIAMgBkGAC0GADCAHEBggA0E0NgJ8IAMgA0H8AGogA0H4AGogBCAFaiIEIAIgBGsQFSIFEAMNACADKAJ8IgZBNEsNACADKAJ4IgdBCk8NACAAQZAwaiADIAZBgA1B4A4gBxAYIANBIzYCfCADIANB/ABqIANB+ABqIAQgBWoiBCACIARrEBUiBRADDQAgAygCfCIGQSNLDQAgAygCeCIHQQpPDQAgACADIAZBwBBB0BEgBxAYIAQgBWoiBEEMaiIFIAJLDQAgAiAFayEFQQAhAgNAIAJBA0cEQCAEKAAAIgZBf2ogBU8NAiAAIAJBAnRqQZzQAWogBjYCACACQQFqIQIgBEEEaiEEDAELCyAEIAFrIQgLIANBgAFqJAAgCAtGAQN/IABBCGohAyAAKAIEIQJBACEAA0AgACACdkUEQCABIAMgAEEDdGotAAJBFktqIQEgAEEBaiEADAELCyABQQggAmt0C4YDAQV/Qbh/IQcCQCADRQ0AIAItAAAiBEUEQCABQQA2AgBBAUG4fyADQQFGGw8LAn8gAkEBaiIFIARBGHRBGHUiBkF/Sg0AGiAGQX9GBEAgA0EDSA0CIAUvAABBgP4BaiEEIAJBA2oMAQsgA0ECSA0BIAItAAEgBEEIdHJBgIB+aiEEIAJBAmoLIQUgASAENgIAIAVBAWoiASACIANqIgNLDQBBbCEHIABBEGogACAFLQAAIgVBBnZBI0EJIAEgAyABa0HAEEHQEUHwEiAAKAKM4QEgACgCnOIBIAQQHyIGEAMiCA0AIABBmCBqIABBCGogBUEEdkEDcUEfQQggASABIAZqIAgbIgEgAyABa0GAC0GADEGAFyAAKAKM4QEgACgCnOIBIAQQHyIGEAMiCA0AIABBoDBqIABBBGogBUECdkEDcUE0QQkgASABIAZqIAgbIgEgAyABa0GADUHgDkGQGSAAKAKM4QEgACgCnOIBIAQQHyIAEAMNACAAIAFqIAJrIQcLIAcLrQMBCn8jAEGABGsiCCQAAn9BUiACQf8BSw0AGkFUIANBDEsNABogAkEBaiELIABBBGohCUGAgAQgA0F/anRBEHUhCkEAIQJBASEEQQEgA3QiB0F/aiIMIQUDQCACIAtGRQRAAkAgASACQQF0Ig1qLwEAIgZB//8DRgRAIAkgBUECdGogAjoAAiAFQX9qIQVBASEGDAELIARBACAKIAZBEHRBEHVKGyEECyAIIA1qIAY7AQAgAkEBaiECDAELCyAAIAQ7AQIgACADOwEAIAdBA3YgB0EBdmpBA2ohBkEAIQRBACECA0AgBCALRkUEQCABIARBAXRqLgEAIQpBACEAA0AgACAKTkUEQCAJIAJBAnRqIAQ6AAIDQCACIAZqIAxxIgIgBUsNAAsgAEEBaiEADAELCyAEQQFqIQQMAQsLQX8gAg0AGkEAIQIDfyACIAdGBH9BAAUgCCAJIAJBAnRqIgAtAAJBAXRqIgEgAS8BACIBQQFqOwEAIAAgAyABEBRrIgU6AAMgACABIAVB/wFxdCAHazsBACACQQFqIQIMAQsLCyEFIAhBgARqJAAgBQvjBgEIf0FsIQcCQCACQQNJDQACQAJAAkACQCABLQAAIgNBA3EiCUEBaw4DAwEAAgsgACgCiOEBDQBBYg8LIAJBBUkNAkEDIQYgASgAACEFAn8CQAJAIANBAnZBA3EiCEF+aiIEQQFNBEAgBEEBaw0BDAILIAVBDnZB/wdxIQQgBUEEdkH/B3EhAyAIRQwCCyAFQRJ2IQRBBCEGIAVBBHZB//8AcSEDQQAMAQsgBUEEdkH//w9xIgNBgIAISw0DIAEtAARBCnQgBUEWdnIhBEEFIQZBAAshBSAEIAZqIgogAksNAgJAIANBgQZJDQAgACgCnOIBRQ0AQQAhAgNAIAJBg4ABSw0BIAJBQGshAgwAAAsACwJ/IAlBA0YEQCABIAZqIQEgAEHw4gFqIQIgACgCDCEGIAUEQCACIAMgASAEIAYQXwwCCyACIAMgASAEIAYQXQwBCyAAQbjQAWohAiABIAZqIQEgAEHw4gFqIQYgAEGo0ABqIQggBQRAIAggBiADIAEgBCACEF4MAQsgCCAGIAMgASAEIAIQXAsQAw0CIAAgAzYCgOIBIABBATYCiOEBIAAgAEHw4gFqNgLw4QEgCUECRgRAIAAgAEGo0ABqNgIMCyAAIANqIgBBiOMBakIANwAAIABBgOMBakIANwAAIABB+OIBakIANwAAIABB8OIBakIANwAAIAoPCwJ/AkACQAJAIANBAnZBA3FBf2oiBEECSw0AIARBAWsOAgACAQtBASEEIANBA3YMAgtBAiEEIAEvAABBBHYMAQtBAyEEIAEQIUEEdgsiAyAEaiIFQSBqIAJLBEAgBSACSw0CIABB8OIBaiABIARqIAMQCyEBIAAgAzYCgOIBIAAgATYC8OEBIAEgA2oiAEIANwAYIABCADcAECAAQgA3AAggAEIANwAAIAUPCyAAIAM2AoDiASAAIAEgBGo2AvDhASAFDwsCfwJAAkACQCADQQJ2QQNxQX9qIgRBAksNACAEQQFrDgIAAgELQQEhByADQQN2DAILQQIhByABLwAAQQR2DAELIAJBBEkgARAhIgJBj4CAAUtyDQFBAyEHIAJBBHYLIQIgAEHw4gFqIAEgB2otAAAgAkEgahAQIQEgACACNgKA4gEgACABNgLw4QEgB0EBaiEHCyAHC0sAIABC+erQ0OfJoeThADcDICAAQgA3AxggAELP1tO+0ser2UI3AxAgAELW64Lu6v2J9eAANwMIIABCADcDACAAQShqQQBBKBAQGgviAgICfwV+IABBKGoiASAAKAJIaiECAn4gACkDACIDQiBaBEAgACkDECIEQgeJIAApAwgiBUIBiXwgACkDGCIGQgyJfCAAKQMgIgdCEol8IAUQGSAEEBkgBhAZIAcQGQwBCyAAKQMYQsXP2bLx5brqJ3wLIAN8IQMDQCABQQhqIgAgAk0EQEIAIAEpAAAQCSADhUIbiUKHla+vmLbem55/fkLj3MqV/M7y9YV/fCEDIAAhAQwBCwsCQCABQQRqIgAgAksEQCABIQAMAQsgASgAAK1Ch5Wvr5i23puef34gA4VCF4lCz9bTvtLHq9lCfkL5893xmfaZqxZ8IQMLA0AgACACSQRAIAAxAABCxc/ZsvHluuonfiADhUILiUKHla+vmLbem55/fiEDIABBAWohAAwBCwsgA0IhiCADhULP1tO+0ser2UJ+IgNCHYggA4VC+fPd8Zn2masWfiIDQiCIIAOFC+8CAgJ/BH4gACAAKQMAIAKtfDcDAAJAAkAgACgCSCIDIAJqIgRBH00EQCABRQ0BIAAgA2pBKGogASACECAgACgCSCACaiEEDAELIAEgAmohAgJ/IAMEQCAAQShqIgQgA2ogAUEgIANrECAgACAAKQMIIAQpAAAQCTcDCCAAIAApAxAgACkAMBAJNwMQIAAgACkDGCAAKQA4EAk3AxggACAAKQMgIABBQGspAAAQCTcDICAAKAJIIQMgAEEANgJIIAEgA2tBIGohAQsgAUEgaiACTQsEQCACQWBqIQMgACkDICEFIAApAxghBiAAKQMQIQcgACkDCCEIA0AgCCABKQAAEAkhCCAHIAEpAAgQCSEHIAYgASkAEBAJIQYgBSABKQAYEAkhBSABQSBqIgEgA00NAAsgACAFNwMgIAAgBjcDGCAAIAc3AxAgACAINwMICyABIAJPDQEgAEEoaiABIAIgAWsiBBAgCyAAIAQ2AkgLCy8BAX8gAEUEQEG2f0EAIAMbDwtBun8hBCADIAFNBH8gACACIAMQEBogAwVBun8LCy8BAX8gAEUEQEG2f0EAIAMbDwtBun8hBCADIAFNBH8gACACIAMQCxogAwVBun8LC6gCAQZ/IwBBEGsiByQAIABB2OABaikDAEKAgIAQViEIQbh/IQUCQCAEQf//B0sNACAAIAMgBBBCIgUQAyIGDQAgACgCnOIBIQkgACAHQQxqIAMgAyAFaiAGGyIKIARBACAFIAYbayIGEEAiAxADBEAgAyEFDAELIAcoAgwhBCABRQRAQbp/IQUgBEEASg0BCyAGIANrIQUgAyAKaiEDAkAgCQRAIABBADYCnOIBDAELAkACQAJAIARBBUgNACAAQdjgAWopAwBCgICACFgNAAwBCyAAQQA2ApziAQwBCyAAKAIIED8hBiAAQQA2ApziASAGQRRPDQELIAAgASACIAMgBSAEIAgQOSEFDAELIAAgASACIAMgBSAEIAgQOiEFCyAHQRBqJAAgBQtnACAAQdDgAWogASACIAAoAuzhARAuIgEQAwRAIAEPC0G4fyECAkAgAQ0AIABB7OABaigCACIBBEBBYCECIAAoApjiASABRw0BC0EAIQIgAEHw4AFqKAIARQ0AIABBkOEBahBDCyACCycBAX8QVyIERQRAQUAPCyAEIAAgASACIAMgBBBLEE8hACAEEFYgAAs/AQF/AkACQAJAIAAoAqDiAUEBaiIBQQJLDQAgAUEBaw4CAAECCyAAEDBBAA8LIABBADYCoOIBCyAAKAKU4gELvAMCB38BfiMAQRBrIgkkAEG4fyEGAkAgBCgCACIIQQVBCSAAKALs4QEiBRtJDQAgAygCACIHQQFBBSAFGyAFEC8iBRADBEAgBSEGDAELIAggBUEDakkNACAAIAcgBRBJIgYQAw0AIAEgAmohCiAAQZDhAWohCyAIIAVrIQIgBSAHaiEHIAEhBQNAIAcgAiAJECwiBhADDQEgAkF9aiICIAZJBEBBuH8hBgwCCyAJKAIAIghBAksEQEFsIQYMAgsgB0EDaiEHAn8CQAJAAkAgCEEBaw4CAgABCyAAIAUgCiAFayAHIAYQSAwCCyAFIAogBWsgByAGEEcMAQsgBSAKIAVrIActAAAgCSgCCBBGCyIIEAMEQCAIIQYMAgsgACgC8OABBEAgCyAFIAgQRQsgAiAGayECIAYgB2ohByAFIAhqIQUgCSgCBEUNAAsgACkD0OABIgxCf1IEQEFsIQYgDCAFIAFrrFINAQsgACgC8OABBEBBaiEGIAJBBEkNASALEEQhDCAHKAAAIAynRw0BIAdBBGohByACQXxqIQILIAMgBzYCACAEIAI2AgAgBSABayEGCyAJQRBqJAAgBgsuACAAECsCf0EAQQAQAw0AGiABRSACRXJFBEBBYiAAIAEgAhA9EAMNARoLQQALCzcAIAEEQCAAIAAoAsTgASABKAIEIAEoAghqRzYCnOIBCyAAECtBABADIAFFckUEQCAAIAEQWwsL0QIBB38jAEEQayIGJAAgBiAENgIIIAYgAzYCDCAFBEAgBSgCBCEKIAUoAgghCQsgASEIAkACQANAIAAoAuzhARAWIQsCQANAIAQgC0kNASADKAAAQXBxQdDUtMIBRgRAIAMgBBAiIgcQAw0EIAQgB2shBCADIAdqIQMMAQsLIAYgAzYCDCAGIAQ2AggCQCAFBEAgACAFEE5BACEHQQAQA0UNAQwFCyAAIAogCRBNIgcQAw0ECyAAIAgQUCAMQQFHQQAgACAIIAIgBkEMaiAGQQhqEEwiByIDa0EAIAMQAxtBCkdyRQRAQbh/IQcMBAsgBxADDQMgAiAHayECIAcgCGohCEEBIQwgBigCDCEDIAYoAgghBAwBCwsgBiADNgIMIAYgBDYCCEG4fyEHIAQNASAIIAFrIQcMAQsgBiADNgIMIAYgBDYCCAsgBkEQaiQAIAcLRgECfyABIAAoArjgASICRwRAIAAgAjYCxOABIAAgATYCuOABIAAoArzgASEDIAAgATYCvOABIAAgASADIAJrajYCwOABCwutAgIEfwF+IwBBQGoiBCQAAkACQCACQQhJDQAgASgAAEFwcUHQ1LTCAUcNACABIAIQIiEBIABCADcDCCAAQQA2AgQgACABNgIADAELIARBGGogASACEC0iAxADBEAgACADEBoMAQsgAwRAIABBuH8QGgwBCyACIAQoAjAiA2shAiABIANqIQMDQAJAIAAgAyACIARBCGoQLCIFEAMEfyAFBSACIAVBA2oiBU8NAUG4fwsQGgwCCyAGQQFqIQYgAiAFayECIAMgBWohAyAEKAIMRQ0ACyAEKAI4BEAgAkEDTQRAIABBuH8QGgwCCyADQQRqIQMLIAQoAighAiAEKQMYIQcgAEEANgIEIAAgAyABazYCACAAIAIgBmytIAcgB0J/URs3AwgLIARBQGskAAslAQF/IwBBEGsiAiQAIAIgACABEFEgAigCACEAIAJBEGokACAAC30BBH8jAEGQBGsiBCQAIARB/wE2AggCQCAEQRBqIARBCGogBEEMaiABIAIQFSIGEAMEQCAGIQUMAQtBVCEFIAQoAgwiB0EGSw0AIAMgBEEQaiAEKAIIIAcQQSIFEAMNACAAIAEgBmogAiAGayADEDwhBQsgBEGQBGokACAFC4cBAgJ/An5BABAWIQMCQANAIAEgA08EQAJAIAAoAABBcHFB0NS0wgFGBEAgACABECIiAhADRQ0BQn4PCyAAIAEQVSIEQn1WDQMgBCAFfCIFIARUIQJCfiEEIAINAyAAIAEQUiICEAMNAwsgASACayEBIAAgAmohAAwBCwtCfiAFIAEbIQQLIAQLPwIBfwF+IwBBMGsiAiQAAn5CfiACQQhqIAAgARAtDQAaQgAgAigCHEEBRg0AGiACKQMICyEDIAJBMGokACADC40BAQJ/IwBBMGsiASQAAkAgAEUNACAAKAKI4gENACABIABB/OEBaigCADYCKCABIAApAvThATcDICAAEDAgACgCqOIBIQIgASABKAIoNgIYIAEgASkDIDcDECACIAFBEGoQGyAAQQA2AqjiASABIAEoAig2AgggASABKQMgNwMAIAAgARAbCyABQTBqJAALKgECfyMAQRBrIgAkACAAQQA2AgggAEIANwMAIAAQWCEBIABBEGokACABC4cBAQN/IwBBEGsiAiQAAkAgACgCAEUgACgCBEVzDQAgAiAAKAIINgIIIAIgACkCADcDAAJ/IAIoAgAiAQRAIAIoAghBqOMJIAERBQAMAQtBqOMJECgLIgFFDQAgASAAKQIANwL04QEgAUH84QFqIAAoAgg2AgAgARBZIAEhAwsgAkEQaiQAIAMLywEBAn8jAEEgayIBJAAgAEGBgIDAADYCtOIBIABBADYCiOIBIABBADYC7OEBIABCADcDkOIBIABBADYCpOMJIABBADYC3OIBIABCADcCzOIBIABBADYCvOIBIABBADYCxOABIABCADcCnOIBIABBpOIBakIANwIAIABBrOIBakEANgIAIAFCADcCECABQgA3AhggASABKQMYNwMIIAEgASkDEDcDACABKAIIQQh2QQFxIQIgAEEANgLg4gEgACACNgKM4gEgAUEgaiQAC3YBA38jAEEwayIBJAAgAARAIAEgAEHE0AFqIgIoAgA2AiggASAAKQK80AE3AyAgACgCACEDIAEgAigCADYCGCABIAApArzQATcDECADIAFBEGoQGyABIAEoAig2AgggASABKQMgNwMAIAAgARAbCyABQTBqJAALzAEBAX8gACABKAK00AE2ApjiASAAIAEoAgQiAjYCwOABIAAgAjYCvOABIAAgAiABKAIIaiICNgK44AEgACACNgLE4AEgASgCuNABBEAgAEKBgICAEDcDiOEBIAAgAUGk0ABqNgIMIAAgAUGUIGo2AgggACABQZwwajYCBCAAIAFBDGo2AgAgAEGs0AFqIAFBqNABaigCADYCACAAQbDQAWogAUGs0AFqKAIANgIAIABBtNABaiABQbDQAWooAgA2AgAPCyAAQgA3A4jhAQs7ACACRQRAQbp/DwsgBEUEQEFsDwsgAiAEEGAEQCAAIAEgAiADIAQgBRBhDwsgACABIAIgAyAEIAUQZQtGAQF/IwBBEGsiBSQAIAVBCGogBBAOAn8gBS0ACQRAIAAgASACIAMgBBAyDAELIAAgASACIAMgBBA0CyEAIAVBEGokACAACzQAIAAgAyAEIAUQNiIFEAMEQCAFDwsgBSAESQR/IAEgAiADIAVqIAQgBWsgABA1BUG4fwsLRgEBfyMAQRBrIgUkACAFQQhqIAQQDgJ/IAUtAAkEQCAAIAEgAiADIAQQYgwBCyAAIAEgAiADIAQQNQshACAFQRBqJAAgAAtZAQF/QQ8hAiABIABJBEAgAUEEdCAAbiECCyAAQQh2IgEgAkEYbCIAQYwIaigCAGwgAEGICGooAgBqIgJBA3YgAmogAEGACGooAgAgAEGECGooAgAgAWxqSQs3ACAAIAMgBCAFQYAQEDMiBRADBEAgBQ8LIAUgBEkEfyABIAIgAyAFaiAEIAVrIAAQMgVBuH8LC78DAQN/IwBBIGsiBSQAIAVBCGogAiADEAYiAhADRQRAIAAgAWoiB0F9aiEGIAUgBBAOIARBBGohAiAFLQACIQMDQEEAIAAgBkkgBUEIahAEGwRAIAAgAiAFQQhqIAMQAkECdGoiBC8BADsAACAFQQhqIAQtAAIQASAAIAQtAANqIgQgAiAFQQhqIAMQAkECdGoiAC8BADsAACAFQQhqIAAtAAIQASAEIAAtAANqIQAMAQUgB0F+aiEEA0AgBUEIahAEIAAgBEtyRQRAIAAgAiAFQQhqIAMQAkECdGoiBi8BADsAACAFQQhqIAYtAAIQASAAIAYtAANqIQAMAQsLA0AgACAES0UEQCAAIAIgBUEIaiADEAJBAnRqIgYvAQA7AAAgBUEIaiAGLQACEAEgACAGLQADaiEADAELCwJAIAAgB08NACAAIAIgBUEIaiADEAIiA0ECdGoiAC0AADoAACAALQADQQFGBEAgBUEIaiAALQACEAEMAQsgBSgCDEEfSw0AIAVBCGogAiADQQJ0ai0AAhABIAUoAgxBIUkNACAFQSA2AgwLIAFBbCAFQQhqEAobIQILCwsgBUEgaiQAIAILkgIBBH8jAEFAaiIJJAAgCSADQTQQCyEDAkAgBEECSA0AIAMgBEECdGooAgAhCSADQTxqIAgQIyADQQE6AD8gAyACOgA+QQAhBCADKAI8IQoDQCAEIAlGDQEgACAEQQJ0aiAKNgEAIARBAWohBAwAAAsAC0EAIQkDQCAGIAlGRQRAIAMgBSAJQQF0aiIKLQABIgtBAnRqIgwoAgAhBCADQTxqIAotAABBCHQgCGpB//8DcRAjIANBAjoAPyADIAcgC2siCiACajoAPiAEQQEgASAKa3RqIQogAygCPCELA0AgACAEQQJ0aiALNgEAIARBAWoiBCAKSQ0ACyAMIAo2AgAgCUEBaiEJDAELCyADQUBrJAALowIBCX8jAEHQAGsiCSQAIAlBEGogBUE0EAsaIAcgBmshDyAHIAFrIRADQAJAIAMgCkcEQEEBIAEgByACIApBAXRqIgYtAAEiDGsiCGsiC3QhDSAGLQAAIQ4gCUEQaiAMQQJ0aiIMKAIAIQYgCyAPTwRAIAAgBkECdGogCyAIIAUgCEE0bGogCCAQaiIIQQEgCEEBShsiCCACIAQgCEECdGooAgAiCEEBdGogAyAIayAHIA4QYyAGIA1qIQgMAgsgCUEMaiAOECMgCUEBOgAPIAkgCDoADiAGIA1qIQggCSgCDCELA0AgBiAITw0CIAAgBkECdGogCzYBACAGQQFqIQYMAAALAAsgCUHQAGokAA8LIAwgCDYCACAKQQFqIQoMAAALAAs0ACAAIAMgBCAFEDYiBRADBEAgBQ8LIAUgBEkEfyABIAIgAyAFaiAEIAVrIAAQNAVBuH8LCyMAIAA/AEEQdGtB//8DakEQdkAAQX9GBEBBAA8LQQAQAEEBCzsBAX8gAgRAA0AgACABIAJBgCAgAkGAIEkbIgMQCyEAIAFBgCBqIQEgAEGAIGohACACIANrIgINAAsLCwYAIAAQAwsLqBUJAEGICAsNAQAAAAEAAAACAAAAAgBBoAgLswYBAAAAAQAAAAIAAAACAAAAJgAAAIIAAAAhBQAASgAAAGcIAAAmAAAAwAEAAIAAAABJBQAASgAAAL4IAAApAAAALAIAAIAAAABJBQAASgAAAL4IAAAvAAAAygIAAIAAAACKBQAASgAAAIQJAAA1AAAAcwMAAIAAAACdBQAASgAAAKAJAAA9AAAAgQMAAIAAAADrBQAASwAAAD4KAABEAAAAngMAAIAAAABNBgAASwAAAKoKAABLAAAAswMAAIAAAADBBgAATQAAAB8NAABNAAAAUwQAAIAAAAAjCAAAUQAAAKYPAABUAAAAmQQAAIAAAABLCQAAVwAAALESAABYAAAA2gQAAIAAAABvCQAAXQAAACMUAABUAAAARQUAAIAAAABUCgAAagAAAIwUAABqAAAArwUAAIAAAAB2CQAAfAAAAE4QAAB8AAAA0gIAAIAAAABjBwAAkQAAAJAHAACSAAAAAAAAAAEAAAABAAAABQAAAA0AAAAdAAAAPQAAAH0AAAD9AAAA/QEAAP0DAAD9BwAA/Q8AAP0fAAD9PwAA/X8AAP3/AAD9/wEA/f8DAP3/BwD9/w8A/f8fAP3/PwD9/38A/f//AP3//wH9//8D/f//B/3//w/9//8f/f//P/3//38AAAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAAAVAAAAFgAAABcAAAAYAAAAGQAAABoAAAAbAAAAHAAAAB0AAAAeAAAAHwAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACUAAAAnAAAAKQAAACsAAAAvAAAAMwAAADsAAABDAAAAUwAAAGMAAACDAAAAAwEAAAMCAAADBAAAAwgAAAMQAAADIAAAA0AAAAOAAAADAAEAQeAPC1EBAAAAAQAAAAEAAAABAAAAAgAAAAIAAAADAAAAAwAAAAQAAAAEAAAABQAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAQcQQC4sBAQAAAAIAAAADAAAABAAAAAUAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAABIAAAAUAAAAFgAAABgAAAAcAAAAIAAAACgAAAAwAAAAQAAAAIAAAAAAAQAAAAIAAAAEAAAACAAAABAAAAAgAAAAQAAAAIAAAAAAAQBBkBIL5gQBAAAAAQAAAAEAAAABAAAAAgAAAAIAAAADAAAAAwAAAAQAAAAGAAAABwAAAAgAAAAJAAAACgAAAAsAAAAMAAAADQAAAA4AAAAPAAAAEAAAAAEAAAAEAAAACAAAAAAAAAABAAEBBgAAAAAAAAQAAAAAEAAABAAAAAAgAAAFAQAAAAAAAAUDAAAAAAAABQQAAAAAAAAFBgAAAAAAAAUHAAAAAAAABQkAAAAAAAAFCgAAAAAAAAUMAAAAAAAABg4AAAAAAAEFEAAAAAAAAQUUAAAAAAABBRYAAAAAAAIFHAAAAAAAAwUgAAAAAAAEBTAAAAAgAAYFQAAAAAAABwWAAAAAAAAIBgABAAAAAAoGAAQAAAAADAYAEAAAIAAABAAAAAAAAAAEAQAAAAAAAAUCAAAAIAAABQQAAAAAAAAFBQAAACAAAAUHAAAAAAAABQgAAAAgAAAFCgAAAAAAAAULAAAAAAAABg0AAAAgAAEFEAAAAAAAAQUSAAAAIAABBRYAAAAAAAIFGAAAACAAAwUgAAAAAAADBSgAAAAAAAYEQAAAABAABgRAAAAAIAAHBYAAAAAAAAkGAAIAAAAACwYACAAAMAAABAAAAAAQAAAEAQAAACAAAAUCAAAAIAAABQMAAAAgAAAFBQAAACAAAAUGAAAAIAAABQgAAAAgAAAFCQAAACAAAAULAAAAIAAABQwAAAAAAAAGDwAAACAAAQUSAAAAIAABBRQAAAAgAAIFGAAAACAAAgUcAAAAIAADBSgAAAAgAAQFMAAAAAAAEAYAAAEAAAAPBgCAAAAAAA4GAEAAAAAADQYAIABBgBcLhwIBAAEBBQAAAAAAAAUAAAAAAAAGBD0AAAAAAAkF/QEAAAAADwX9fwAAAAAVBf3/HwAAAAMFBQAAAAAABwR9AAAAAAAMBf0PAAAAABIF/f8DAAAAFwX9/38AAAAFBR0AAAAAAAgE/QAAAAAADgX9PwAAAAAUBf3/DwAAAAIFAQAAABAABwR9AAAAAAALBf0HAAAAABEF/f8BAAAAFgX9/z8AAAAEBQ0AAAAQAAgE/QAAAAAADQX9HwAAAAATBf3/BwAAAAEFAQAAABAABgQ9AAAAAAAKBf0DAAAAABAF/f8AAAAAHAX9//8PAAAbBf3//wcAABoF/f//AwAAGQX9//8BAAAYBf3//wBBkBkLhgQBAAEBBgAAAAAAAAYDAAAAAAAABAQAAAAgAAAFBQAAAAAAAAUGAAAAAAAABQgAAAAAAAAFCQAAAAAAAAULAAAAAAAABg0AAAAAAAAGEAAAAAAAAAYTAAAAAAAABhYAAAAAAAAGGQAAAAAAAAYcAAAAAAAABh8AAAAAAAAGIgAAAAAAAQYlAAAAAAABBikAAAAAAAIGLwAAAAAAAwY7AAAAAAAEBlMAAAAAAAcGgwAAAAAACQYDAgAAEAAABAQAAAAAAAAEBQAAACAAAAUGAAAAAAAABQcAAAAgAAAFCQAAAAAAAAUKAAAAAAAABgwAAAAAAAAGDwAAAAAAAAYSAAAAAAAABhUAAAAAAAAGGAAAAAAAAAYbAAAAAAAABh4AAAAAAAAGIQAAAAAAAQYjAAAAAAABBicAAAAAAAIGKwAAAAAAAwYzAAAAAAAEBkMAAAAAAAUGYwAAAAAACAYDAQAAIAAABAQAAAAwAAAEBAAAABAAAAQFAAAAIAAABQcAAAAgAAAFCAAAACAAAAUKAAAAIAAABQsAAAAAAAAGDgAAAAAAAAYRAAAAAAAABhQAAAAAAAAGFwAAAAAAAAYaAAAAAAAABh0AAAAAAAAGIAAAAAAAEAYDAAEAAAAPBgOAAAAAAA4GA0AAAAAADQYDIAAAAAAMBgMQAAAAAAsGAwgAAAAACgYDBABBpB0L2QEBAAAAAwAAAAcAAAAPAAAAHwAAAD8AAAB/AAAA/wAAAP8BAAD/AwAA/wcAAP8PAAD/HwAA/z8AAP9/AAD//wAA//8BAP//AwD//wcA//8PAP//HwD//z8A//9/AP///wD///8B////A////wf///8P////H////z////9/AAAAAAEAAAACAAAABAAAAAAAAAACAAAABAAAAAgAAAAAAAAAAQAAAAIAAAABAAAABAAAAAQAAAAEAAAABAAAAAgAAAAIAAAACAAAAAcAAAAIAAAACQAAAAoAAAALAEGgIAsDwBBQ",yE=new WeakMap;let IE,CE=0;class EE extends bA{constructor(t){super(t),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new DC,this.workerSourceURL="",this.workerConfig=null,"undefined"!=typeof MSC_TRANSCODER&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(t){return this.transcoderPath=t,this}setWorkerLimit(t){return this.workerPool.setWorkerLimit(t),this}async detectSupportAsync(t){return this.workerConfig={astcSupported:await t.hasFeatureAsync("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:await t.hasFeatureAsync("texture-compression-etc1"),etc2Supported:await t.hasFeatureAsync("texture-compression-etc2"),dxtSupported:await t.hasFeatureAsync("texture-compression-bc"),bptcSupported:await t.hasFeatureAsync("texture-compression-bptc"),pvrtcSupported:await t.hasFeatureAsync("texture-compression-pvrtc")},this}detectSupport(t){return!0===t.isWebGPURenderer?this.workerConfig={astcSupported:t.hasFeature("texture-compression-astc"),astcHDRSupported:!1,etc1Supported:t.hasFeature("texture-compression-etc1"),etc2Supported:t.hasFeature("texture-compression-etc2"),dxtSupported:t.hasFeature("texture-compression-bc"),bptcSupported:t.hasFeature("texture-compression-bptc"),pvrtcSupported:t.hasFeature("texture-compression-pvrtc")}:this.workerConfig={astcSupported:t.extensions.has("WEBGL_compressed_texture_astc"),astcHDRSupported:t.extensions.has("WEBGL_compressed_texture_astc")&&t.extensions.get("WEBGL_compressed_texture_astc").getSupportedProfiles().includes("hdr"),etc1Supported:t.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:t.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:t.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:t.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:t.extensions.has("WEBGL_compressed_texture_pvrtc")||t.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},this}init(){if(!this.transcoderPending){const t=new QA(this.manager);t.setPath(this.transcoderPath),t.setWithCredentials(this.withCredentials);const e=t.loadAsync("basis_transcoder.js"),n=new QA(this.manager);n.setPath(this.transcoderPath),n.setResponseType("arraybuffer"),n.setWithCredentials(this.withCredentials);const i=n.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([e,i]).then(([t,e])=>{const n=EE.BasisWorker.toString(),i=["/* constants */","let _EngineFormat = "+JSON.stringify(EE.EngineFormat),"let _EngineType = "+JSON.stringify(EE.EngineType),"let _TranscoderFormat = "+JSON.stringify(EE.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(EE.BasisFormat),"/* basis_transcoder.js */",t,"/* worker */",n.substring(n.indexOf("{")+1,n.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([i])),this.transcoderBinary=e,this.workerPool.setWorkerCreator(()=>{const t=new Worker(this.workerSourceURL),e=this.transcoderBinary.slice(0);return t.postMessage({type:"init",config:this.workerConfig,transcoderBinary:e},[e]),t})}),CE>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),CE++}return this.transcoderPending}load(t,e,n,i){if(null===this.workerConfig)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const s=new QA(this.manager);s.setPath(this.path),s.setCrossOrigin(this.crossOrigin),s.setWithCredentials(this.withCredentials),s.setResponseType("arraybuffer"),s.load(t,t=>{this.parse(t,e,i)},n,i)}parse(t,e,n){if(null===this.workerConfig)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");if(yE.has(t))return yE.get(t).promise.then(e).catch(n);this._createTexture(t).then(t=>e?e(t):null).catch(n)}_createTextureFrom(t,e){const{type:n,error:i,data:{faces:s,width:r,height:a,format:o,type:l,dfdFlags:c}}=t;if("error"===n)return Promise.reject(i);let A;if(6===e.faceCount)A=new Il(s,o,l);else{const t=s[0].mipmaps;A=e.layerCount>1?new yl(t,r,a,e.layerCount,o,l):new ml(t,r,a,o,l)}return A.minFilter=1===s[0].mipmaps.length?Ft:Ot,A.magFilter=Ft,A.generateMipmaps=!1,A.needsUpdate=!0,A.colorSpace=_E(e),A.premultiplyAlpha=!!(1&c),A}async _createTexture(t,e={}){const n=function(t){const e=new Uint8Array(t.buffer,t.byteOffset,AE.length);if(e[0]!==AE[0]||e[1]!==AE[1]||e[2]!==AE[2]||e[3]!==AE[3]||e[4]!==AE[4]||e[5]!==AE[5]||e[6]!==AE[6]||e[7]!==AE[7]||e[8]!==AE[8]||e[9]!==AE[9]||e[10]!==AE[10]||e[11]!==AE[11])throw new Error("Missing KTX 2.0 identifier.");const n=new lE,i=17*Uint32Array.BYTES_PER_ELEMENT,s=new cE(t,AE.length,i,!0);n.vkFormat=s._nextUint32(),n.typeSize=s._nextUint32(),n.pixelWidth=s._nextUint32(),n.pixelHeight=s._nextUint32(),n.pixelDepth=s._nextUint32(),n.layerCount=s._nextUint32(),n.faceCount=s._nextUint32();const r=s._nextUint32();n.supercompressionScheme=s._nextUint32();const a=s._nextUint32(),o=s._nextUint32(),l=s._nextUint32(),c=s._nextUint32(),A=s._nextUint64(),h=s._nextUint64(),u=new cE(t,AE.length+i,3*r*8,!0);for(let e=0;e<r;e++)n.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+u._nextUint64(),u._nextUint64()),uncompressedByteLength:u._nextUint64()});const d=new cE(t,a,o,!0),p={vendorId:d._skip(4)._nextUint16(),descriptorType:d._nextUint16(),versionNumber:d._nextUint16(),descriptorBlockSize:d._nextUint16(),colorModel:d._nextUint8(),colorPrimaries:d._nextUint8(),transferFunction:d._nextUint8(),flags:d._nextUint8(),texelBlockDimension:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],bytesPlane:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],samples:[]},g=(p.descriptorBlockSize/4-6)/4;for(let t=0;t<g;t++){const e={bitOffset:d._nextUint16(),bitLength:d._nextUint8(),channelType:d._nextUint8(),samplePosition:[d._nextUint8(),d._nextUint8(),d._nextUint8(),d._nextUint8()],sampleLower:-1/0,sampleUpper:1/0};64&e.channelType?(e.sampleLower=d._nextInt32(),e.sampleUpper=d._nextInt32()):(e.sampleLower=d._nextUint32(),e.sampleUpper=d._nextUint32()),p.samples[t]=e}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(p);const f=new cE(t,l,c,!0);for(;f._offset<c;){const t=f._nextUint32(),e=f._scan(t),i=hE(e);if(n.keyValue[i]=f._nextUint8Array(t-e.byteLength-1),i.match(/^ktx/i)){const t=hE(n.keyValue[i]);n.keyValue[i]=t.substring(0,t.lastIndexOf("\0"))}f._skip(t%4?4-t%4:0)}if(h<=0)return n;const m=new cE(t,A,h,!0),y=m._nextUint16(),I=m._nextUint16(),C=m._nextUint32(),E=m._nextUint32(),v=m._nextUint32(),x=m._nextUint32(),w=[];for(let t=0;t<r;t++)w.push({imageFlags:m._nextUint32(),rgbSliceByteOffset:m._nextUint32(),rgbSliceByteLength:m._nextUint32(),alphaSliceByteOffset:m._nextUint32(),alphaSliceByteLength:m._nextUint32()});const _=A+m._offset,B=_+C,S=B+E,b=S+v,M=new Uint8Array(t.buffer,t.byteOffset+_,C),T=new Uint8Array(t.buffer,t.byteOffset+B,E),Q=new Uint8Array(t.buffer,t.byteOffset+S,v),D=new Uint8Array(t.buffer,t.byteOffset+b,x);return n.globalData={endpointCount:y,selectorCount:I,imageDescs:w,endpointsData:M,selectorsData:T,tablesData:Q,extendedData:D},n}(new Uint8Array(t)),i=n.vkFormat===oE&&167===n.dataFormatDescriptor[0].colorModel;if(0!==n.vkFormat&&(!i||this.workerConfig.astcHDRSupported))return async function(t){const{vkFormat:e}=t;if(void 0===xE[e])throw new Error("THREE.KTX2Loader: Unsupported vkFormat.");let n;2===t.supercompressionScheme&&(IE||(IE=new Promise(async t=>{const e=new fE;await e.init(),t(e)})),n=await IE);const i=[];for(let s=0;s<t.levels.length;s++){const r=Math.max(1,t.pixelWidth>>s),a=Math.max(1,t.pixelHeight>>s),o=t.pixelDepth?Math.max(1,t.pixelDepth>>s):0,l=t.levels[s];let c,A;if(0===t.supercompressionScheme)c=l.levelData;else{if(2!==t.supercompressionScheme)throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");c=n.decode(l.levelData,l.uncompressedByteLength)}A=wE[e]===Jt?new Float32Array(c.buffer,c.byteOffset,c.byteLength/Float32Array.BYTES_PER_ELEMENT):wE[e]===jt?new Uint16Array(c.buffer,c.byteOffset,c.byteLength/Uint16Array.BYTES_PER_ELEMENT):c,i.push({data:A,width:r,height:a,depth:o})}let s;if(vE.has(xE[e]))s=0===t.pixelDepth?new io(i[0].data,t.pixelWidth,t.pixelHeight):new qi(i[0].data,t.pixelWidth,t.pixelHeight,t.pixelDepth);else{if(t.pixelDepth>0)throw new Error("THREE.KTX2Loader: Unsupported pixelDepth.");s=new ml(i,t.pixelWidth,t.pixelHeight),s.minFilter=1===i.length?Ft:Ot,s.magFilter=Ft}return s.mipmaps=i,s.type=wE[e],s.format=xE[e],s.colorSpace=_E(t),s.needsUpdate=!0,Promise.resolve(s)}(n);const s=e,r=this.init().then(()=>this.workerPool.postMessage({type:"transcode",buffer:t,taskConfig:s},[t])).then(t=>this._createTextureFrom(t.data,n));return yE.set(t,{promise:r}),r}dispose(){this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),CE--}}EE.BasisFormat={ETC1S:0,UASTC:1,UASTC_HDR:2},EE.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16,BC6H:22,RGB_HALF:24,RGBA_HALF:25},EE.EngineFormat={RGBAFormat:ne,RGBA_ASTC_4x4_Format:ve,RGB_BPTC_UNSIGNED_Format:Ne,RGBA_BPTC_Format:Le,RGBA_ETC2_EAC_Format:Ee,RGBA_PVRTC_4BPPV1_Format:me,RGBA_S3TC_DXT5_Format:pe,RGB_ETC1_Format:Ie,RGB_ETC2_Format:Ce,RGB_PVRTC_4BPPV1_Format:ge,RGBA_S3TC_DXT1_Format:ue},EE.EngineType={UnsignedByteType:Gt,HalfFloatType:jt,FloatType:Jt},EE.BasisWorker=function(){let t,e,n;const i=_EngineFormat,s=_EngineType,r=_TranscoderFormat,a=_BasisFormat;self.addEventListener("message",function(i){const r=i.data;switch(r.type){case"init":t=r.config,o=r.transcoderBinary,e=new Promise(t=>{n={wasmBinary:o,onRuntimeInitialized:t},BASIS(n)}).then(()=>{n.initializeBasis(),void 0===n.KTX2File&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")});break;case"transcode":e.then(()=>{try{const{faces:e,buffers:i,width:o,height:h,hasAlpha:u,format:d,type:p,dfdFlags:g}=function(e){const i=new n.KTX2File(new Uint8Array(e));function r(){i.close(),i.delete()}if(!i.isValid())throw r(),new Error("THREE.KTX2Loader:\tInvalid or unsupported .ktx2 file");let o;if(i.isUASTC())o=a.UASTC;else if(i.isETC1S())o=a.ETC1S;else{if(!i.isHDR())throw new Error("THREE.KTX2Loader: Unknown Basis encoding");o=a.UASTC_HDR}const h=i.getWidth(),u=i.getHeight(),d=i.getLayers()||1,p=i.getLevels(),g=i.getFaces(),f=i.getHasAlpha(),m=i.getDFDFlags(),{transcoderFormat:y,engineFormat:I,engineType:C}=function(e,n,i,s){const r=l[e];for(let a=0;a<r.length;a++){const o=r[a];if((!o.if||t[o.if])&&(o.basisFormat.includes(e)&&!(s&&o.transcoderFormat.length<2)&&(!o.needsPowerOfTwo||c(n)&&c(i))))return{transcoderFormat:o.transcoderFormat[s?1:0],engineFormat:o.engineFormat[s?1:0],engineType:o.engineType[0]}}throw new Error("THREE.KTX2Loader: Failed to identify transcoding target.")}(o,h,u,f);if(!h||!u||!p)throw r(),new Error("THREE.KTX2Loader:\tInvalid texture");if(!i.startTranscoding())throw r(),new Error("THREE.KTX2Loader: .startTranscoding failed");const E=[],v=[];for(let t=0;t<g;t++){const e=[];for(let n=0;n<p;n++){const a=[];let o,l;for(let e=0;e<d;e++){const c=i.getImageLevelInfo(n,e,t);0!==t||0!==n||0!==e||c.origWidth%4==0&&c.origHeight%4==0||console.warn("THREE.KTX2Loader: ETC1S and UASTC textures should use multiple-of-four dimensions."),p>1?(o=c.origWidth,l=c.origHeight):(o=c.width,l=c.height);let A=new Uint8Array(i.getImageTranscodedSizeInBytes(n,e,0,y));const h=i.transcodeImage(A,n,e,t,y,0,-1,-1);if(C===s.HalfFloatType&&(A=new Uint16Array(A.buffer,A.byteOffset,A.byteLength/Uint16Array.BYTES_PER_ELEMENT)),!h)throw r(),new Error("THREE.KTX2Loader: .transcodeImage failed.");a.push(A)}const c=A(a);e.push({data:c,width:o,height:l}),v.push(c.buffer)}E.push({mipmaps:e,width:h,height:u,format:I,type:C})}return r(),{faces:E,buffers:v,width:h,height:u,hasAlpha:f,dfdFlags:m,format:I,type:C}}(r.buffer);self.postMessage({type:"transcode",id:r.id,data:{faces:e,width:o,height:h,hasAlpha:u,format:d,type:p,dfdFlags:g}},i)}catch(t){console.error(t),self.postMessage({type:"error",id:r.id,error:t.message})}})}var o});const o=[{if:"astcSupported",basisFormat:[a.UASTC],transcoderFormat:[r.ASTC_4x4,r.ASTC_4x4],engineFormat:[i.RGBA_ASTC_4x4_Format,i.RGBA_ASTC_4x4_Format],engineType:[s.UnsignedByteType],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC7_M5,r.BC7_M5],engineFormat:[i.RGBA_BPTC_Format,i.RGBA_BPTC_Format],engineType:[s.UnsignedByteType],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.BC1,r.BC3],engineFormat:[i.RGBA_S3TC_DXT1_Format,i.RGBA_S3TC_DXT5_Format],engineType:[s.UnsignedByteType],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1,r.ETC2],engineFormat:[i.RGB_ETC2_Format,i.RGBA_ETC2_EAC_Format],engineType:[s.UnsignedByteType],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.ETC1],engineFormat:[i.RGB_ETC1_Format],engineType:[s.UnsignedByteType],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.PVRTC1_4_RGB,r.PVRTC1_4_RGBA],engineFormat:[i.RGB_PVRTC_4BPPV1_Format,i.RGBA_PVRTC_4BPPV1_Format],engineType:[s.UnsignedByteType],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0},{if:"bptcSupported",basisFormat:[a.UASTC_HDR],transcoderFormat:[r.BC6H],engineFormat:[i.RGB_BPTC_UNSIGNED_Format],engineType:[s.HalfFloatType],priorityHDR:1,needsPowerOfTwo:!1},{basisFormat:[a.ETC1S,a.UASTC],transcoderFormat:[r.RGBA32,r.RGBA32],engineFormat:[i.RGBAFormat,i.RGBAFormat],engineType:[s.UnsignedByteType,s.UnsignedByteType],priorityETC1S:100,priorityUASTC:100,needsPowerOfTwo:!1},{basisFormat:[a.UASTC_HDR],transcoderFormat:[r.RGBA_HALF],engineFormat:[i.RGBAFormat],engineType:[s.HalfFloatType],priorityHDR:100,needsPowerOfTwo:!1}],l={[a.ETC1S]:o.filter(t=>t.basisFormat.includes(a.ETC1S)).sort((t,e)=>t.priorityUASTC-e.priorityUASTC),[a.UASTC]:o.filter(t=>t.basisFormat.includes(a.UASTC)).sort((t,e)=>t.priorityUASTC-e.priorityUASTC),[a.UASTC_HDR]:o.filter(t=>t.basisFormat.includes(a.UASTC_HDR)).sort((t,e)=>t.priorityHDR-e.priorityHDR)};function c(t){return t<=2||!(t&t-1)&&0!==t}function A(t){if(1===t.length)return t[0];let e=0;for(let n=0;n<t.length;n++)e+=t[n].byteLength;const n=new Uint8Array(e);let i=0;for(let e=0;e<t.length;e++){const s=t[e];n.set(s,i),i+=s.byteLength}return n}};const vE=new Set([ne,oe,re]),xE={[VC]:ne,[zC]:ne,[FC]:ne,[NC]:ne,[HC]:oe,[OC]:oe,[PC]:oe,[LC]:oe,[GC]:re,[kC]:re,[UC]:re,[RC]:re,[eE]:Ce,[nE]:Ee,[oE]:ve,[sE]:ve,[iE]:ve,[aE]:Be,[rE]:Be,[WC]:ue,[JC]:ue,[YC]:he,[qC]:he,[XC]:de,[jC]:de,[ZC]:pe,[KC]:pe,[tE]:Le,[$C]:Le},wE={[VC]:Jt,[zC]:jt,[FC]:Gt,[NC]:Gt,[HC]:Jt,[OC]:jt,[PC]:Gt,[LC]:Gt,[GC]:Jt,[kC]:jt,[UC]:Gt,[RC]:Gt,[eE]:Gt,[nE]:Gt,[oE]:jt,[aE]:Gt,[rE]:Gt};function _E(t){const e=t.dataFormatDescriptor[0];return 1===e.colorPrimaries?2===e.transferFunction?hn:un:10===e.colorPrimaries?2===e.transferFunction?"display-p3":"display-p3-linear":(0===e.colorPrimaries||console.warn(`THREE.KTX2Loader: Unsupported color primaries, "${e.colorPrimaries}"`),An)}const BE=new nu,SE=new gi,bE=new gi,ME=new pi,TE={X:new gi(1,0,0),Y:new gi(0,1,0),Z:new gi(0,0,1)},QE={type:"change"},DE={type:"mouseDown",mode:null},RE={type:"mouseUp",mode:null},UE={type:"objectChange"};function PE(t){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:t.button};{const e=this.domElement.getBoundingClientRect();return{x:(t.clientX-e.left)/e.width*2-1,y:-(t.clientY-e.top)/e.height*2+1,button:t.button}}}function LE(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(t))}}function FE(t){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(t)),this.pointerDown(this._getPointer(t)))}function NE(t){this.enabled&&this.pointerMove(this._getPointer(t))}function kE(t){this.enabled&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(t)))}function OE(t,e,n){const i=e.intersectObject(t,!0);for(let t=0;t<i.length;t++)if(i[t].object.visible||n)return i[t];return!1}const zE=new Qs,GE=new gi(0,1,0),HE=new gi(0,0,0),VE=new Es,YE=new pi,qE=new pi,WE=new gi,JE=new Es,jE=new gi(1,0,0),XE=new gi(0,1,0),KE=new gi(0,0,1),ZE=new gi,$E=new gi,tv=new gi;class ev extends Js{constructor(t){super(),this.isTransformControlsRoot=!0,this.controls=t,this.visible=!1}updateMatrixWorld(t){const e=this.controls;void 0!==e.object&&(e.object.updateMatrixWorld(),null===e.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):e.object.parent.matrixWorld.decompose(e._parentPosition,e._parentQuaternion,e._parentScale),e.object.matrixWorld.decompose(e.worldPosition,e.worldQuaternion,e._worldScale),e._parentQuaternionInv.copy(e._parentQuaternion).invert(),e._worldQuaternionInv.copy(e.worldQuaternion).invert()),e.camera.updateMatrixWorld(),e.camera.matrixWorld.decompose(e.cameraPosition,e.cameraQuaternion,e._cameraScale),e.camera.isOrthographicCamera?e.camera.getWorldDirection(e.eye).negate():e.eye.copy(e.cameraPosition).sub(e.worldPosition).normalize(),super.updateMatrixWorld(t)}dispose(){this.traverse(function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}}class nv extends Js{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new mr({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new Wo({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=t.clone();n.opacity=.15;const i=e.clone();i.opacity=.5;const s=t.clone();s.color.setHex(16711680);const r=t.clone();r.color.setHex(65280);const a=t.clone();a.color.setHex(255);const o=t.clone();o.color.setHex(16711680),o.opacity=.5;const l=t.clone();l.color.setHex(65280),l.opacity=.5;const c=t.clone();c.color.setHex(255),c.opacity=.5;const A=t.clone();A.opacity=.25;const h=t.clone();h.color.setHex(16776960),h.opacity=.25;const u=t.clone();u.color.setHex(16776960);const d=t.clone();d.color.setHex(7895160),this.materialLib={xAxis:s,yAxis:r,zAxis:a,active:u,xAxisTransparent:o,yAxisTransparent:l,zAxisTransparent:c,activeTransparent:h};const p=new wl(0,.04,.1,12);p.translate(0,.05,0);const g=new ia(.08,.08,.08);g.translate(0,.04,0);const f=new Hr;f.setAttribute("position",new Pr([0,0,0,1,0,0],3));const m=new wl(.0075,.0075,.5,3);function y(t,e){const n=new zc(t,.0075,3,64,e*Math.PI*2);return n.rotateY(Math.PI/2),n.rotateX(Math.PI/2),n}m.translate(0,.25,0);const I={X:[[new ea(p,s),[.5,0,0],[0,0,-Math.PI/2]],[new ea(p,s),[-.5,0,0],[0,0,Math.PI/2]],[new ea(m,s),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new ea(p,r),[0,.5,0]],[new ea(p,r),[0,-.5,0],[Math.PI,0,0]],[new ea(m,r)]],Z:[[new ea(p,a),[0,0,.5],[Math.PI/2,0,0]],[new ea(p,a),[0,0,-.5],[-Math.PI/2,0,0]],[new ea(m,a),null,[Math.PI/2,0,0]]],XYZ:[[new ea(new Pc(.1,0),A),[0,0,0]]],XY:[[new ea(new ia(.15,.15,.01),c),[.15,.15,0]]],YZ:[[new ea(new ia(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ea(new ia(.15,.15,.01),l),[.15,0,.15],[-Math.PI/2,0,0]]]},C={X:[[new ea(new wl(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new ea(new wl(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ea(new wl(.2,0,.6,4),n),[0,.3,0]],[new ea(new wl(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ea(new wl(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new ea(new wl(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new ea(new Pc(.2,0),n)]],XY:[[new ea(new ia(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new ea(new ia(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ea(new ia(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},E={START:[[new ea(new Pc(.01,2),i),null,null,null,"helper"]],END:[[new ea(new Pc(.01,2),i),null,null,null,"helper"]],DELTA:[[new el(function(){const t=new Hr;return t.setAttribute("position",new Pr([0,0,0,1,1,1],3)),t}(),i),null,null,null,"helper"]],X:[[new el(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new el(f,i),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new el(f,i),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},v={XYZE:[[new ea(y(.5,1),d),null,[0,Math.PI/2,0]]],X:[[new ea(y(.5,.5),s)]],Y:[[new ea(y(.5,.5),r),null,[0,0,-Math.PI/2]]],Z:[[new ea(y(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new ea(y(.75,1),h),null,[0,Math.PI/2,0]]]},x={AXIS:[[new el(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]]},w={XYZE:[[new ea(new kc(.25,10,8),n)]],X:[[new ea(new zc(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ea(new zc(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ea(new zc(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ea(new zc(.75,.1,2,24),n)]]},_={X:[[new ea(g,s),[.5,0,0],[0,0,-Math.PI/2]],[new ea(m,s),[0,0,0],[0,0,-Math.PI/2]],[new ea(g,s),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new ea(g,r),[0,.5,0]],[new ea(m,r)],[new ea(g,r),[0,-.5,0],[0,0,Math.PI]]],Z:[[new ea(g,a),[0,0,.5],[Math.PI/2,0,0]],[new ea(m,a),[0,0,0],[Math.PI/2,0,0]],[new ea(g,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new ea(new ia(.15,.15,.01),c),[.15,.15,0]]],YZ:[[new ea(new ia(.15,.15,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ea(new ia(.15,.15,.01),l),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ea(new ia(.1,.1,.1),A)]]},B={X:[[new ea(new wl(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new ea(new wl(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ea(new wl(.2,0,.6,4),n),[0,.3,0]],[new ea(new wl(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ea(new wl(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new ea(new wl(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new ea(new ia(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new ea(new ia(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ea(new ia(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ea(new ia(.2,.2,.2),n),[0,0,0]]]},S={X:[[new el(f,i),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new el(f,i),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new el(f,i),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function b(t){const e=new Js;for(const n in t)for(let i=t[n].length;i--;){const s=t[n][i][0].clone(),r=t[n][i][1],a=t[n][i][2],o=t[n][i][3],l=t[n][i][4];s.name=n,s.tag=l,r&&s.position.set(r[0],r[1],r[2]),a&&s.rotation.set(a[0],a[1],a[2]),o&&s.scale.set(o[0],o[1],o[2]),s.updateMatrix();const c=s.geometry.clone();c.applyMatrix4(s.matrix),s.geometry=c,s.renderOrder=1/0,s.position.set(0,0,0),s.rotation.set(0,0,0),s.scale.set(1,1,1),e.add(s)}return e}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=b(I)),this.add(this.gizmo.rotate=b(v)),this.add(this.gizmo.scale=b(_)),this.add(this.picker.translate=b(C)),this.add(this.picker.rotate=b(w)),this.add(this.picker.scale=b(B)),this.add(this.helper.translate=b(E)),this.add(this.helper.rotate=b(x)),this.add(this.helper.scale=b(S)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const e="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:qE;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let t=0;t<n.length;t++){const i=n[t];let s;if(i.visible=!0,i.rotation.set(0,0,0),i.position.copy(this.worldPosition),s=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),i.scale.set(1,1,1).multiplyScalar(s*this.size/4),"helper"!==i.tag){if(i.quaternion.copy(e),"translate"===this.mode||"scale"===this.mode){const t=.99,n=.2;"X"===i.name&&Math.abs(GE.copy(jE).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"Y"===i.name&&Math.abs(GE.copy(XE).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"Z"===i.name&&Math.abs(GE.copy(KE).applyQuaternion(e).dot(this.eye))>t&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"XY"===i.name&&Math.abs(GE.copy(KE).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"YZ"===i.name&&Math.abs(GE.copy(jE).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1),"XZ"===i.name&&Math.abs(GE.copy(XE).applyQuaternion(e).dot(this.eye))<n&&(i.scale.set(1e-10,1e-10,1e-10),i.visible=!1)}else"rotate"===this.mode&&(YE.copy(e),GE.copy(this.eye).applyQuaternion(ME.copy(e).invert()),-1!==i.name.search("E")&&i.quaternion.setFromRotationMatrix(VE.lookAt(this.eye,HE,XE)),"X"===i.name&&(ME.setFromAxisAngle(jE,Math.atan2(-GE.y,GE.z)),ME.multiplyQuaternions(YE,ME),i.quaternion.copy(ME)),"Y"===i.name&&(ME.setFromAxisAngle(XE,Math.atan2(GE.x,GE.z)),ME.multiplyQuaternions(YE,ME),i.quaternion.copy(ME)),"Z"===i.name&&(ME.setFromAxisAngle(KE,Math.atan2(GE.y,GE.x)),ME.multiplyQuaternions(YE,ME),i.quaternion.copy(ME)));i.visible=i.visible&&(-1===i.name.indexOf("X")||this.showX),i.visible=i.visible&&(-1===i.name.indexOf("Y")||this.showY),i.visible=i.visible&&(-1===i.name.indexOf("Z")||this.showZ),i.visible=i.visible&&(-1===i.name.indexOf("E")||this.showX&&this.showY&&this.showZ),i.material._color=i.material._color||i.material.color.clone(),i.material._opacity=i.material._opacity||i.material.opacity,i.material.color.copy(i.material._color),i.material.opacity=i.material._opacity,this.enabled&&this.axis&&(i.name===this.axis||this.axis.split("").some(function(t){return i.name===t}))&&(i.material.color.copy(this.materialLib.active.color),i.material.opacity=1)}else i.visible=!1,"AXIS"===i.name?(i.visible=!!this.axis,"X"===this.axis&&(ME.setFromEuler(zE.set(0,0,0)),i.quaternion.copy(e).multiply(ME),Math.abs(GE.copy(jE).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"Y"===this.axis&&(ME.setFromEuler(zE.set(0,0,Math.PI/2)),i.quaternion.copy(e).multiply(ME),Math.abs(GE.copy(XE).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"Z"===this.axis&&(ME.setFromEuler(zE.set(0,Math.PI/2,0)),i.quaternion.copy(e).multiply(ME),Math.abs(GE.copy(KE).applyQuaternion(e).dot(this.eye))>.9&&(i.visible=!1)),"XYZE"===this.axis&&(ME.setFromEuler(zE.set(0,Math.PI/2,0)),GE.copy(this.rotationAxis),i.quaternion.setFromRotationMatrix(VE.lookAt(HE,GE,XE)),i.quaternion.multiply(ME),i.visible=this.dragging),"E"===this.axis&&(i.visible=!1)):"START"===i.name?(i.position.copy(this.worldPositionStart),i.visible=this.dragging):"END"===i.name?(i.position.copy(this.worldPosition),i.visible=this.dragging):"DELTA"===i.name?(i.position.copy(this.worldPositionStart),i.quaternion.copy(this.worldQuaternionStart),SE.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),SE.applyQuaternion(this.worldQuaternionStart.clone().invert()),i.scale.copy(SE),i.visible=this.dragging):(i.quaternion.copy(e),this.dragging?i.position.copy(this.worldPositionStart):i.position.copy(this.worldPosition),this.axis&&(i.visible=-1!==this.axis.search(i.name)))}super.updateMatrixWorld(t)}}class iv extends ea{constructor(){super(new Lc(1e5,1e5,2,2),new mr({visible:!1,wireframe:!0,side:M,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(e="local"),ZE.copy(jE).applyQuaternion("local"===e?this.worldQuaternion:qE),$E.copy(XE).applyQuaternion("local"===e?this.worldQuaternion:qE),tv.copy(KE).applyQuaternion("local"===e?this.worldQuaternion:qE),GE.copy($E),this.mode){case"translate":case"scale":switch(this.axis){case"X":GE.copy(this.eye).cross(ZE),WE.copy(ZE).cross(GE);break;case"Y":GE.copy(this.eye).cross($E),WE.copy($E).cross(GE);break;case"Z":GE.copy(this.eye).cross(tv),WE.copy(tv).cross(GE);break;case"XY":WE.copy(tv);break;case"YZ":WE.copy(ZE);break;case"XZ":GE.copy(tv),WE.copy($E);break;case"XYZ":case"E":WE.set(0,0,0)}break;default:WE.set(0,0,0)}0===WE.length()?this.quaternion.copy(this.cameraQuaternion):(JE.lookAt(SE.set(0,0,0),WE,GE),this.quaternion.setFromRotationMatrix(JE)),super.updateMatrixWorld(t)}}const sv="csm_DiffuseColor",rv="csm_Roughness",av="csm_Metalness",ov="csm_Emissive",lv="csm_AO",cv="csm_Bump",Av="csm_FragNormal",hv="csm_Clearcoat",uv="csm_ClearcoatRoughness",dv="csm_ClearcoatNormal",pv="csm_Transmission",gv="csm_Thickness",fv="csm_Iridescence",mv="csm_PointSize",yv="csm_FragColor",Iv="csm_DepthAlpha",Cv="csm_UnlitFac",Ev="csm_Position",vv="csm_PositionRaw",xv="csm_Normal",wv={[`${Ev}`]:"*",[`${vv}`]:"*",[`${xv}`]:"*",[`${Iv}`]:"*",[`${mv}`]:["PointsMaterial"],[`${sv}`]:"*",[`${yv}`]:"*",[`${Av}`]:"*",[`${Cv}`]:"*",[`${ov}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${rv}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${av}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${fv}`]:["MeshStandardMaterial","MeshPhysicalMaterial"],[`${lv}`]:["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"],[`${cv}`]:["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"],[`${hv}`]:["MeshPhysicalMaterial"],[`${uv}`]:["MeshPhysicalMaterial"],[`${dv}`]:["MeshPhysicalMaterial"],[`${pv}`]:["MeshPhysicalMaterial"],[`${gv}`]:["MeshPhysicalMaterial"]},_v={"*":{"#include <lights_physical_fragment>":id.lights_physical_fragment,"#include <transmission_fragment>":id.transmission_fragment},[`${xv}`]:{"#include <beginnormal_vertex>":`\n    vec3 objectNormal = ${xv};\n    #ifdef USE_TANGENT\n\t    vec3 objectTangent = vec3( tangent.xyz );\n    #endif\n    `},[`${Ev}`]:{"#include <begin_vertex>":`\n    vec3 transformed = ${Ev};\n  `},[`${vv}`]:{"#include <project_vertex>":`\n    #include <project_vertex>\n    gl_Position = ${vv};\n  `},[`${mv}`]:{"gl_PointSize = size;":`\n    gl_PointSize = ${mv};\n    `},[`${sv}`]:{"#include <color_fragment>":`\n    #include <color_fragment>\n    diffuseColor = ${sv};\n  `},[`${yv}`]:{"#include <opaque_fragment>":`\n    #include <opaque_fragment>\n    gl_FragColor = mix(gl_FragColor, ${yv}, ${Cv});\n  `},[`${ov}`]:{"vec3 totalEmissiveRadiance = emissive;":`\n    vec3 totalEmissiveRadiance = ${ov};\n    `},[`${rv}`]:{"#include <roughnessmap_fragment>":`\n    #include <roughnessmap_fragment>\n    roughnessFactor = ${rv};\n    `},[`${av}`]:{"#include <metalnessmap_fragment>":`\n    #include <metalnessmap_fragment>\n    metalnessFactor = ${av};\n    `},[`${lv}`]:{"#include <aomap_fragment>":`\n    #include <aomap_fragment>\n    reflectedLight.indirectDiffuse *= 1. - ${lv};\n    `},[`${cv}`]:{"#include <normal_fragment_maps>":`\n    #include <normal_fragment_maps>\n\n    vec3 csm_internal_orthogonal = ${cv} - (dot(${cv}, normal) * normal);\n    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;\n    normal = normalize(normal - csm_internal_projectedbump);\n    `},[`${Av}`]:{"#include <normal_fragment_maps>":`\n      #include <normal_fragment_maps>\n      normal = ${Av};\n    `},[`${Iv}`]:{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":`\n      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * 1.0 - ${Iv} );\n    `,"gl_FragColor = packDepthToRGBA( fragCoordZ );":`\n      if(${Iv} < 1.0) discard;\n      gl_FragColor = packDepthToRGBA( dist );\n    `,"gl_FragColor = packDepthToRGBA( dist );":`\n      if(${Iv} < 1.0) discard;\n      gl_FragColor = packDepthToRGBA( dist );\n    `},[`${hv}`]:{"material.clearcoat = clearcoat;":`material.clearcoat = ${hv};`},[`${uv}`]:{"material.clearcoatRoughness = clearcoatRoughness;":`material.clearcoatRoughness = ${uv};`},[`${dv}`]:{"#include <clearcoat_normal_fragment_begin>":"\n      vec3 csm_coat_internal_orthogonal = csm_ClearcoatNormal - (dot(csm_ClearcoatNormal, nonPerturbedNormal) * nonPerturbedNormal);\n      vec3 csm_coat_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_coat_internal_orthogonal;\n      vec3 clearcoatNormal = normalize(nonPerturbedNormal - csm_coat_internal_projectedbump);\n    "},[`${pv}`]:{"material.transmission = transmission;":`\n      material.transmission = ${pv};\n    `},[`${gv}`]:{"material.thickness = thickness;":`\n      material.thickness = ${gv};\n    `},[`${fv}`]:{"material.iridescence = iridescence;":`\n      material.iridescence = ${fv};\n    `}},Bv={clearcoat:[hv,dv,uv],transmission:[pv],iridescence:[fv]};function Sv(t){return t.replace(/\/\*[\s\S]*?\*\/|\/\/.*/g,"")}const bv="row",Mv="row-reverse",Tv="column",Qv="column-reverse";function Dv(t,e,n,i){let s=n,r="getWidth",a="x",o="y";0===e.indexOf(Tv)&&(r="getHeight",a="y",o="x");for(let e=0;e<t.childrenBoxes.length;e++){const n=t.childrenBoxes[e],l=n.id,c=n[r](),A=n.margin||0;s+=A*i,t.childrenPos[l]={[a]:s+c/2*i,[o]:0},s+=i*(c+A)}}const Rv="start",Uv="center",Pv="end",Lv="stretch";function Fv(t,e){const n=t.getAlignItems();-1===kv.indexOf(n)&&console.warn(`alignItems === '${n}' is not supported`);let i="getWidth",s="x";0===e.indexOf(bv)&&(i="getHeight",s="y");const r=t[i]()/2-(t.padding||0);t.childrenBoxes.forEach(a=>{let o;switch(n){case Pv:case"right":case"bottom":o=0===e.indexOf(bv)?-r+a[i]()/2+(a.margin||0):r-a[i]()/2-(a.margin||0);break;case Rv:case"left":case"top":o=0===e.indexOf(bv)?r-a[i]()/2-(a.margin||0):-r+a[i]()/2+(a.margin||0)}t.childrenPos[a.id][s]=o||0})}function Nv(t){-1!==Ov.indexOf(t)&&console.warn(`alignItems === '${t}' is deprecated and will be remove in 7.x.x. Fallback are 'start'|'end'`)}const kv=[Rv,Uv,Pv,Lv,"top","right","bottom","left"],Ov=["top","right","bottom","left"],zv="start",Gv="center",Hv="end",Vv="space-around",Yv="space-between",qv="space-evenly";function Wv(t,e,n,i){const s=t.getJustifyContent();-1===Jv.indexOf(s)&&console.warn(`justifyContent === '${s}' is not supported`);const r=0===e.indexOf("row")?"width":"height",a=t.getChildrenSideSum(r),o=("width"===r?t.getInnerWidth():t.getInnerHeight())-a,l=function(t,e){switch(t){case Hv:return e;case Gv:return e/2}return 0}(s,2*n-a*Math.sign(n)),c=function(t,e,n,i){const s=Array(t.length).fill(0);if(e>0)switch(n){case Yv:if(t.length>1){const n=e/(t.length-1)*i;s[0]=0;for(let e=1;e<t.length;e++)s[e]=n*e}break;case qv:if(t.length>1){const n=e/(t.length+1)*i;for(let e=0;e<t.length;e++)s[e]=n*(e+1)}break;case Vv:if(t.length>1){const n=e/t.length*i,r=n/2;s[0]=r;for(let e=1;e<t.length;e++)s[e]=r+n*e}}return s}(t.childrenBoxes,o,s,i),A=0===e.indexOf("row")?"x":"y";t.childrenBoxes.forEach((e,n)=>{t.childrenPos[e.id][A]-=l-c[n]})}const Jv=[zv,Gv,Hv,Vv,Yv,qv];function jv(t){return class extends t{constructor(t){super(t),this.isBoxComponent=!0,this.childrenPos={}}getInnerWidth(){const t=this.getContentDirection();switch(t){case"row":case"row-reverse":return this.width-(2*this.padding||0)||this.getChildrenSideSum("width");case"column":case"column-reverse":return this.getHighestChildSizeOn("width");default:console.error(`Invalid contentDirection : ${t}`)}}getInnerHeight(){const t=this.getContentDirection();switch(t){case"row":case"row-reverse":return this.getHighestChildSizeOn("height");case"column":case"column-reverse":return this.height-(2*this.padding||0)||this.getChildrenSideSum("height");default:console.error(`Invalid contentDirection : ${t}`)}}getChildrenSideSum(t){return this.childrenBoxes.reduce((e,n)=>{const i=2*n.margin||0;return e+("width"===t?n.getWidth()+i:n.getHeight()+i)},0)}setPosFromParentRecords(){this.parentUI&&this.parentUI.childrenPos[this.id]&&(this.position.x=this.parentUI.childrenPos[this.id].x,this.position.y=this.parentUI.childrenPos[this.id].y)}computeChildrenPosition(){if(this.children.length>0){const t=this.getContentDirection();let e;switch(t){case bv:e=-this.getInnerWidth()/2;break;case Mv:e=this.getInnerWidth()/2;break;case Tv:e=this.getInnerHeight()/2;break;case Qv:e=-this.getInnerHeight()/2}const n=-Math.sign(e);Dv(this,t,e,n),Wv(this,t,e,n),Fv(this,t)}}getHighestChildSizeOn(t){return this.childrenBoxes.reduce((e,n)=>{const i=n.margin||0,s="width"===t?n.getWidth()+2*i:n.getHeight()+2*i;return Math.max(e,s)},0)}getWidth(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("column")?this.parentUI.getWidth()-(2*this.parentUI.padding||0):this.width||this.getInnerWidth()+(2*this.padding||0)}getHeight(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("row")?this.parentUI.getHeight()-(2*this.parentUI.padding||0):this.height||this.getInnerHeight()+(2*this.padding||0)}}}const Xv={"\t":"\t","\n":"\n","\r":"\r"," ":" "},Kv="normal",Zv="nowrap",$v="pre",tx="pre-line",ex="pre-wrap",nx=function(t,e){switch(e){case Zv:case Kv:t=t.replace(/\n/g," ");case tx:t=t.replace(/[ ]{2,}/g," ")}return t},ix=function(t){switch(t){case $v:case ex:case tx:return"mandatory"}},sx=function(t,e,n,i){const s=t[e];switch(i.WHITESPACE){case Kv:case tx:case ex:if("mandatory"===s.lineBreak)return!0;const r=s.kerning?s.kerning:0,a=s.xoffset?s.xoffset:0;if(n+(s.xadvance?s.xadvance:s.width)+a+r>i.INNER_WIDTH)return!0;const o=lx(t,e,i);return function(t,e,n,i){return!(!t||!t.glyph)&&!(e+n<i.INNER_WIDTH)&&i.BREAKON.indexOf(t.glyph)>-1}(t[e-1],n,o,i);case $v:return"mandatory"===s.lineBreak;default:return!1}},rx=function(t,e){const n=t[0],i=t[t.length-1];switch(e){case ex:n.glyph&&"\n"===n.glyph&&t.length>1&&ox([n],t[1]),i.glyph&&"\n"===i.glyph&&t.length>1&&ax([i],t[t.length-2]);break;case tx:case Zv:case Kv:let s,r=[];for(let e=0;e<t.length;e++){const n=t[e];if(!(n.glyph&&Xv[n.glyph]&&t.length>e))break;r.push(n),s=t[e+1]}ox(r,s),r=[],s=null;for(let e=t.length-1;e>0;e--){const n=t[e];if(!(n.glyph&&Xv[n.glyph]&&e>0))break;r.push(n),s=t[e-1]}ax(r,s);break;case $v:break;default:return console.warn(`whiteSpace: '${e}' is not valid`),0}return n.offsetX};function ax(t,e){if(e)for(let n=0;n<t.length;n++){const i=t[n];i.width=0,i.height=0,i.offsetX=e.offsetX+e.width}}function ox(t,e){if(e)for(let n=0;n<t.length;n++){const i=t[n];i.width=0,i.height=0,i.offsetX=e.offsetX}}function lx(t,e,n,i){if(i=i||0,!t[e])return i;const s=t[e],r=s.kerning?s.kerning:0,a=s.xoffset?s.xoffset:0,o=s.xadvance?s.xadvance:s.width;return s.lineBreak?i+o:lx(t,e+1,n,i+o+n.LETTERSPACING+a+r)}const cx="left",Ax="right",hx="center",ux="justify",dx="justify-left",px="justify-right",gx="justify-center";function fx(t,e,n){for(let i=0;i<t.length;i++){const s=t[i],r=mx(s,e,n,i===t.length-1);for(let t=0;t<s.length;t++)s[t].offsetX+=r;s.x=r}if(0===e.indexOf(ux))for(let i=0;i<t.length;i++){const s=t[i];if(-1!==e.indexOf("-")&&i===t.length-1)return;const r=n-s.width;if(r<=0)return;let a=0;for(let t=1;t<s.length-1;t++)a+=" "===s[t].glyph?1:0;const o=r/a;let l=1;e===px&&(s.reverse(),l=-1);let c=0;for(let t=1;t<=s.length-1;t++){const e=s[t];e.offsetX+=c*l,c+=" "===e.glyph?o:0}e===px&&s.reverse()}}const mx=(t,e,n,i)=>{switch(e){case dx:case ux:case cx:return-n/2;case px:case Ax:return-t.width+n/2;case hx:return-t.width/2;case gx:return i?-t.width/2:-n/2;default:console.warn(`textAlign: '${e}' is not valid`)}};function yx(t){return class extends t{computeInlinesPosition(){const t=this.getWidth()-(2*this.padding||0),e=this.getHeight()-(2*this.padding||0),n=this.getJustifyContent(),i=this.getTextAlign(),s=this.getInterLine(),r=this.computeLines();r.interLine=s;const a=Math.abs(r.height),o=(()=>{switch(n){case"start":return e/2;case"end":return a-e/2;case"center":return a/2;default:console.warn(`justifyContent: '${n}' is not valid`)}})();r.forEach(t=>{t.y+=o,t.forEach(t=>{t.offsetY+=o})}),fx(r,i,t),this.lines=r}calculateBestFit(t){if(0!==this.childrenInlines.length)switch(t){case"grow":this.calculateGrowFit();break;case"shrink":this.calculateShrinkFit();break;case"auto":this.calculateAutoFit()}}calculateGrowFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,s=1,r=2,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t){if(a<=s){this.childrenInlines.forEach(t=>{t.isInlineBlock||(t._fitFontSize=t.getFontSize())});break}r=a,a-=(r-s)/2}else{if(Math.abs(t-i)<.075)break;Math.abs(a-r)<5e-10&&(r*=2),s=a,a+=(r-s)/2}}while(++e<=10)}calculateShrinkFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,s=0,r=1,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t)r=a,a-=(r-s)/2;else{if(a>=r){this.childrenInlines.forEach(t=>{t.isInlineBlock||(t._fitFontSize=t.getFontSize())});break}if(Math.abs(t-i)<.075)break;s=a,a+=(r-s)/2}}while(++e<=10)}calculateAutoFit(){const t=this.getHeight()-(2*this.padding||0);let e=1;const n=this.childrenInlines.find(t=>t.isText);let i,s=0,r=2,a=n._fitFontSize?n._fitFontSize/n.getFontSize():1;do{if(i=this.calculateHeight(a),i>t)r=a,a-=(r-s)/2;else{if(Math.abs(t-i)<.075)break;Math.abs(a-r)<5e-10&&(r*=2),s=a,a+=(r-s)/2}}while(++e<=10)}computeLines(){const t=this.getWidth()-(2*this.padding||0),e=[[]];e.height=0;const n=this.getInterLine();this.childrenInlines.reduce((n,i)=>{if(!i.inlines)return;const s=i._fitFontSize||i.getFontSize(),r=i.isText?i.getLetterSpacing()*s:0,a=i.getWhiteSpace(),o=i.getBreakOn(),l={WHITESPACE:a,LETTERSPACING:r,BREAKON:o,INNER_WIDTH:t},c=i.inlines.reduce((t,n,i,s)=>{const a=n.kerning?n.kerning:0,o=n.xoffset?n.xoffset:0,c=n.xadvance?n.xadvance:n.width;return sx(s,i,t,l)?(e.push([n]),n.offsetX=o,0===n.width?0:c+r):(e[e.length-1].push(n),n.offsetX=t+o+a,t+c+a+r)},n);return c},0);let i=0,s=0,r=-n/2;return e.forEach(t=>{if(t.lineHeight=t.reduce((t,e)=>{const n=void 0!==e.lineHeight?e.lineHeight:e.height;return Math.max(t,n)},0),t.lineBase=t.reduce((t,e)=>{const n=void 0!==e.lineBase?e.lineBase:e.height;return Math.max(t,n)},0),t.width=0,t.height=t.lineHeight,t[0]){const e=this.getWhiteSpace(),a=rx(t,e);t.forEach(t=>{t.offsetX-=a}),t.width=this.computeLineWidth(t),t.width>i&&(i=t.width),t.forEach(e=>{e.offsetY=r-e.height-e.anchor,e.lineHeight<t.lineHeight&&(e.offsetY-=t.lineBase-e.lineBase)}),t.y=r,s+=t.lineHeight+n,r-=t.lineHeight+n}}),e.height=s,e.width=i,e}calculateHeight(t){this.childrenInlines.forEach(e=>{e.isInlineBlock||(e._fitFontSize=e.getFontSize()*t,e.calculateInlines(e._fitFontSize))});const e=this.computeLines();return Math.abs(e.height)}computeLineWidth(t){const e=t[0],n=t[t.length-1];return n.offsetX+n.width+e.offsetX}}}const Ix=new QA,Cx=[],Ex={},vx=new NA,xx=[],wx={},_x={};function Bx(t){if(t._kernings)return;const e={};for(let n=0;n<t.kernings.length;n++){const i=t.kernings[n];0!==i.amount&&(e[String.fromCharCode(i.first,i.second)]=i.amount)}t._kernings=e}const Sx={setFontFamily:function(t,e){"string"==typeof e?function(t,e){-1===Cx.indexOf(e)&&(Cx.push(e),Ix.load(e,t=>{const n=JSON.parse(t);Bx(n),Ex[e]=n;for(const t of Object.keys(_x))e===_x[t].jsonURL&&_x[t].component._updateFontFamily(n)})),_x[t.id]||(_x[t.id]={component:t}),_x[t.id].jsonURL=e,Ex[e]&&t._updateFontFamily(Ex[e])}(t,e):(_x[t.id]||(_x[t.id]={component:t}),Bx(e),_x[t.id].json=e,t._updateFontFamily(e))},setFontTexture:function(t,e){-1===xx.indexOf(e)&&(xx.push(e),vx.load(e,t=>{t.generateMipmaps=!1,t.minFilter=Ft,t.magFilter=Ft,wx[e]=t;for(const n of Object.keys(_x))e===_x[n].textureURL&&_x[n].component._updateFontTexture(t)})),_x[t.id]||(_x[t.id]={component:t}),_x[t.id].textureURL=e,wx[e]&&t._updateFontTexture(wx[e])},getFontOf:function t(e){const n=_x[e.id];return!n&&e.parentUI?t(e.parentUI):n},addFont:function(t,e,n){n.generateMipmaps=!1,n.minFilter=Ft,n.magFilter=Ft,Cx.push(t),Ex[t]=e,Bx(e),n&&(xx.push(t),wx[t]=n)}};class bx{static requestUpdate(t,e,n,i){t.traverse(t=>{t.isUI&&(this.requestedUpdates[t.id]?(e&&(this.requestedUpdates[t.id].updateParsing=!0),n&&(this.requestedUpdates[t.id].updateLayout=!0),i&&(this.requestedUpdates[t.id].updateInner=!0)):this.requestedUpdates[t.id]={updateParsing:e,updateLayout:n,updateInner:i,needCallback:e||n||i})})}static register(t){this.components.includes(t)||this.components.push(t)}static disposeOf(t){const e=this.components.indexOf(t);e>-1&&this.components.splice(e,1)}static update(){if(Object.keys(this.requestedUpdates).length>0){const t=this.components.filter(t=>!t.parentUI);t.forEach(t=>this.traverseParsing(t)),t.forEach(t=>this.traverseUpdates(t))}}static traverseParsing(t){const e=this.requestedUpdates[t.id];e&&e.updateParsing&&(t.parseParams(),e.updateParsing=!1),t.childrenUIs.forEach(t=>this.traverseParsing(t))}static traverseUpdates(t){const e=this.requestedUpdates[t.id];delete this.requestedUpdates[t.id],e&&e.updateLayout&&(e.updateLayout=!1,t.updateLayout()),e&&e.updateInner&&(e.updateInner=!1,t.updateInner()),t.childrenUIs.forEach(t=>{this.traverseUpdates(t)}),e&&e.needCallback&&t.onAfterUpdate()}}bx.components=[],bx.requestedUpdates={};const Mx={container:null,fontFamily:null,fontSize:.05,fontKerning:"normal",bestFit:"none",offset:.01,interLine:.01,breakOn:"- ,.:?!\n",whiteSpace:tx,contentDirection:Tv,alignItems:Uv,justifyContent:zv,textAlign:hx,textType:"MSDF",fontColor:new dr(16777215),fontOpacity:1,fontPXRange:4,fontSupersampling:!0,borderRadius:.01,borderWidth:0,borderColor:new dr("black"),borderOpacity:1,backgroundSize:"cover",backgroundColor:new dr(2236962),backgroundWhiteColor:new dr(16777215),backgroundOpacity:.8,backgroundOpaqueOpacity:1,getDefaultTexture:function(){if(!Tx){const t=document.createElement("canvas").getContext("2d");t.canvas.width=1,t.canvas.height=1,t.fillStyle="#ffffff",t.fillRect(0,0,1,1),Tx=new Cl(t.canvas),Tx.isDefault=!0}return Tx},hiddenOverflow:!1,letterSpacing:0};let Tx;function Qx(t){return class extends t{constructor(t){super(t),this.states={},this.currentState=void 0,this.isUI=!0,this.autoLayout=!0,this.childrenUIs=[],this.childrenBoxes=[],this.childrenTexts=[],this.childrenInlines=[],this.parentUI=null,this.addEventListener("added",this._rebuildParentUI),this.addEventListener("removed",this._rebuildParentUI)}getClippingPlanes(){const t=[];if(this.parentUI){if(this.isBlock&&this.parentUI.getHiddenOverflow()){const e=this.parentUI.getHeight()/2-(this.parentUI.padding||0),n=this.parentUI.getWidth()/2-(this.parentUI.padding||0),i=[new Co(new gi(0,1,0),e),new Co(new gi(0,-1,0),e),new Co(new gi(1,0,0),n),new Co(new gi(-1,0,0),n)];i.forEach(t=>{t.applyMatrix4(this.parent.matrixWorld)}),t.push(...i)}this.parentUI.parentUI&&t.push(...this.parentUI.getClippingPlanes())}return t}getHighestParent(){return this.parentUI?this.parent.getHighestParent():this}_getProperty(t){return void 0===this[t]&&this.parentUI?this.parent._getProperty(t):void 0!==this[t]?this[t]:Mx[t]}getFontSize(){return this._getProperty("fontSize")}getFontKerning(){return this._getProperty("fontKerning")}getLetterSpacing(){return this._getProperty("letterSpacing")}getFontTexture(){return void 0===this.fontTexture&&this.parentUI?this.parent._getProperty("fontTexture"):void 0!==this.fontTexture?this.fontTexture:Mx.getDefaultTexture()}getFontFamily(){return this._getProperty("fontFamily")}getBreakOn(){return this._getProperty("breakOn")}getWhiteSpace(){return this._getProperty("whiteSpace")}getTextAlign(){return this._getProperty("textAlign")}getTextType(){return this._getProperty("textType")}getFontColor(){return this._getProperty("fontColor")}getFontSupersampling(){return this._getProperty("fontSupersampling")}getFontOpacity(){return this._getProperty("fontOpacity")}getFontPXRange(){return this._getProperty("fontPXRange")}getBorderRadius(){return this._getProperty("borderRadius")}getBorderWidth(){return this._getProperty("borderWidth")}getBorderColor(){return this._getProperty("borderColor")}getBorderOpacity(){return this._getProperty("borderOpacity")}getContainer(){return!this.threeOBJ&&this.parent?this.parent.getContainer():this.threeOBJ?this:Mx.container}getParentsNumber(t){return t=t||0,this.parentUI?this.parentUI.getParentsNumber(t+1):t}getBackgroundOpacity(){return this.backgroundOpacity||0===this.backgroundOpacity?this.backgroundOpacity:Mx.backgroundOpacity}getBackgroundColor(){return this.backgroundColor||Mx.backgroundColor}getBackgroundTexture(){return this.backgroundTexture||Mx.getDefaultTexture()}getAlignContent(){return this.alignContent||Mx.alignContent}getAlignItems(){return this.alignItems||Mx.alignItems}getContentDirection(){return this.contentDirection||Mx.contentDirection}getJustifyContent(){return this.justifyContent||Mx.justifyContent}getInterLine(){return void 0===this.interLine?Mx.interLine:this.interLine}getOffset(){return void 0===this.offset?Mx.offset:this.offset}getBackgroundSize(){return void 0===this.backgroundSize?Mx.backgroundSize:this.backgroundSize}getHiddenOverflow(){return void 0===this.hiddenOverflow?Mx.hiddenOverflow:this.hiddenOverflow}getBestFit(){return void 0===this.bestFit?Mx.bestFit:this.bestFit}_rebuildChildrenLists(){this.childrenUIs=this.children.filter(t=>t.isUI),this.childrenBoxes=this.children.filter(t=>t.isBoxComponent),this.childrenInlines=this.children.filter(t=>t.isInline),this.childrenTexts=this.children.filter(t=>t.isText)}_rebuildParentUI=()=>{this.parent&&this.parent.isUI?this.parentUI=this.parent:this.parentUI=null};add(){for(const t of Object.keys(arguments))arguments[t].isInline&&this.update(null,!0);const t=super.add(...arguments);return this._rebuildChildrenLists(),t}remove(){for(const t of Object.keys(arguments))arguments[t].isInline&&this.update(null,!0);const t=super.remove(...arguments);return this._rebuildChildrenLists(),t}update(t,e,n){bx.requestUpdate(this,t,e,n)}onAfterUpdate(){}_updateFontFamily(t){this.fontFamily=t,this.traverse(t=>{t.isUI&&t.update(!0,!0,!1)}),this.getHighestParent().update(!1,!0,!1)}_updateFontTexture(t){this.fontTexture=t,this.getHighestParent().update(!1,!0,!1)}set(t){let e,n,i;if(bx.register(this),t&&JSON.stringify(t)!==JSON.stringify({})){t.alignContent&&(t.alignItems=t.alignContent,t.textAlign||(t.textAlign=t.alignContent),console.warn("`alignContent` property has been deprecated, please rely on `alignItems` and `textAlign` instead."),delete t.alignContent),t.alignItems&&Nv(t.alignItems);for(const s of Object.keys(t))if(this[s]!=t[s])switch(s){case"content":case"fontSize":case"fontKerning":case"breakOn":case"whiteSpace":this.isText&&(e=!0),n=!0,this[s]=t[s];break;case"bestFit":this.isBlock&&(e=!0,n=!0),this[s]=t[s];break;case"width":case"height":case"padding":(this.isInlineBlock||this.isBlock&&"none"!=this.getBestFit())&&(e=!0),n=!0,this[s]=t[s];break;case"letterSpacing":case"interLine":this.isBlock&&"none"!=this.getBestFit()&&(e=!0),n=!0,this[s]=t[s];break;case"margin":case"contentDirection":case"justifyContent":case"alignContent":case"alignItems":case"textAlign":case"textType":n=!0,this[s]=t[s];break;case"fontColor":case"fontOpacity":case"fontSupersampling":case"offset":case"backgroundColor":case"backgroundOpacity":case"backgroundTexture":case"backgroundSize":case"borderRadius":case"borderWidth":case"borderColor":case"borderOpacity":i=!0,this[s]=t[s];break;case"hiddenOverflow":this[s]=t[s]}t.fontFamily&&Sx.setFontFamily(this,t.fontFamily),t.fontTexture&&Sx.setFontTexture(this,t.fontTexture),this.parentUI&&"none"!=this.parentUI.getBestFit()&&this.parentUI.update(!0,!0,!1),this.update(e,n,i),n&&this.getHighestParent().update(!1,!0,!1)}}setupState(t){this.states[t.state]={attributes:t.attributes,onSet:t.onSet}}setState(t){const e=this.states[t];e?t!==this.currentState&&(this.currentState=t,e.onSet&&e.onSet(),e.attributes&&this.set(e.attributes)):console.warn(`state "${t}" does not exist within this component:`,this.name)}clear(){this.traverse(t=>{bx.disposeOf(t),t.material&&t.material.dispose(),t.geometry&&t.geometry.dispose()})}}}function Dx(t){return class extends t{constructor(t){super(t),this.textUniforms={u_texture:{value:this.getFontTexture()},u_color:{value:this.getFontColor()},u_opacity:{value:this.getFontOpacity()},u_pxRange:{value:this.getFontPXRange()},u_useRGSS:{value:this.getFontSupersampling()}},this.backgroundUniforms={u_texture:{value:this.getBackgroundTexture()},u_color:{value:this.getBackgroundColor()},u_opacity:{value:this.getBackgroundOpacity()},u_backgroundMapping:{value:this.getBackgroundSize()},u_borderWidth:{value:this.getBorderWidth()},u_borderColor:{value:this.getBorderColor()},u_borderRadiusTopLeft:{value:this.getBorderRadius()},u_borderRadiusTopRight:{value:this.getBorderRadius()},u_borderRadiusBottomRight:{value:this.getBorderRadius()},u_borderRadiusBottomLeft:{value:this.getBorderRadius()},u_borderOpacity:{value:this.getBorderOpacity()},u_size:{value:new di(1,1)},u_tSize:{value:new di(1,1)}}}updateBackgroundMaterial(){this.backgroundUniforms.u_texture.value=this.getBackgroundTexture(),this.backgroundUniforms.u_tSize.value.set(this.backgroundUniforms.u_texture.value.image.width,this.backgroundUniforms.u_texture.value.image.height),this.size&&this.backgroundUniforms.u_size.value.copy(this.size),this.backgroundUniforms.u_texture.value.isDefault?(this.backgroundUniforms.u_color.value=this.getBackgroundColor(),this.backgroundUniforms.u_opacity.value=this.getBackgroundOpacity()):(this.backgroundUniforms.u_color.value=this.backgroundColor||Mx.backgroundWhiteColor,this.backgroundUniforms.u_opacity.value=this.backgroundOpacity||0===this.backgroundOpacity?this.backgroundOpacity:Mx.backgroundOpaqueOpacity),this.backgroundUniforms.u_backgroundMapping.value=(()=>{switch(this.getBackgroundSize()){case"stretch":return 0;case"contain":return 1;case"cover":return 2}})();const t=this.getBorderRadius();this.backgroundUniforms.u_borderWidth.value=this.getBorderWidth(),this.backgroundUniforms.u_borderColor.value=this.getBorderColor(),this.backgroundUniforms.u_borderOpacity.value=this.getBorderOpacity(),Array.isArray(t)?(this.backgroundUniforms.u_borderRadiusTopLeft.value=t[0],this.backgroundUniforms.u_borderRadiusTopRight.value=t[1],this.backgroundUniforms.u_borderRadiusBottomRight.value=t[2],this.backgroundUniforms.u_borderRadiusBottomLeft.value=t[3]):(this.backgroundUniforms.u_borderRadiusTopLeft.value=t,this.backgroundUniforms.u_borderRadiusTopRight.value=t,this.backgroundUniforms.u_borderRadiusBottomRight.value=t,this.backgroundUniforms.u_borderRadiusBottomLeft.value=t)}updateTextMaterial(){this.textUniforms.u_texture.value=this.getFontTexture(),this.textUniforms.u_color.value=this.getFontColor(),this.textUniforms.u_opacity.value=this.getFontOpacity(),this.textUniforms.u_pxRange.value=this.getFontPXRange(),this.textUniforms.u_useRGSS.value=this.getFontSupersampling()}getBackgroundMaterial(){return this.backgroundMaterial&&this.backgroundUniforms||(this.backgroundMaterial=this._makeBackgroundMaterial()),this.backgroundMaterial}getFontMaterial(){return this.fontMaterial&&this.textUniforms||(this.fontMaterial=this._makeTextMaterial()),this.fontMaterial}_makeTextMaterial(){return new la({uniforms:this.textUniforms,transparent:!0,clipping:!0,vertexShader:Rx,fragmentShader:Ux,extensions:{derivatives:!0}})}_makeBackgroundMaterial(){return new la({uniforms:this.backgroundUniforms,transparent:!0,clipping:!0,vertexShader:Px,fragmentShader:Lx,extensions:{derivatives:!0}})}updateClippingPlanes(t){const e=void 0!==t?t:this.getClippingPlanes();JSON.stringify(e)!==JSON.stringify(this.clippingPlanes)&&(this.clippingPlanes=e,this.fontMaterial&&(this.fontMaterial.clippingPlanes=this.clippingPlanes),this.backgroundMaterial&&(this.backgroundMaterial.clippingPlanes=this.clippingPlanes))}}}const Rx="\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\tgl_Position.z -= 0.00001;\n\n\t#include <clipping_planes_vertex>\n\n}\n",Ux="\n\nuniform sampler2D u_texture;\nuniform vec3 u_color;\nuniform float u_opacity;\nuniform float u_pxRange;\nuniform bool u_useRGSS;\n\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_fragment>\n\n// functions from the original msdf repo:\n// https://github.com/Chlumsky/msdfgen#using-a-multi-channel-distance-field\n\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\n\nfloat screenPxRange() {\n\tvec2 unitRange = vec2(u_pxRange)/vec2(textureSize(u_texture, 0));\n\tvec2 screenTexSize = vec2(1.0)/fwidth(vUv);\n\treturn max(0.5*dot(unitRange, screenTexSize), 1.0);\n}\n\nfloat tap(vec2 offsetUV) {\n\tvec3 msd = texture( u_texture, offsetUV ).rgb;\n\tfloat sd = median(msd.r, msd.g, msd.b);\n\tfloat screenPxDistance = screenPxRange() * (sd - 0.5);\n\tfloat alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\treturn alpha;\n}\n\nvoid main() {\n\n\tfloat alpha;\n\n\tif ( u_useRGSS ) {\n\n\t\t// shader-based supersampling based on https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec\n\t\t// per pixel partial derivatives\n\t\tvec2 dx = dFdx(vUv);\n\t\tvec2 dy = dFdy(vUv);\n\n\t\t// rotated grid uv offsets\n\t\tvec2 uvOffsets = vec2(0.125, 0.375);\n\t\tvec2 offsetUV = vec2(0.0, 0.0);\n\n\t\t// supersampled using 2x2 rotated grid\n\t\talpha = 0.0;\n\t\toffsetUV.xy = vUv + uvOffsets.x * dx + uvOffsets.y * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv - uvOffsets.x * dx - uvOffsets.y * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv + uvOffsets.y * dx - uvOffsets.x * dy;\n\t\talpha += tap(offsetUV);\n\t\toffsetUV.xy = vUv - uvOffsets.y * dx + uvOffsets.x * dy;\n\t\talpha += tap(offsetUV);\n\t\talpha *= 0.25;\n\n\t} else {\n\n\t\talpha = tap( vUv );\n\n\t}\n\n\n\t// apply the opacity\n\talpha *= u_opacity;\n\n\t// this is useful to avoid z-fighting when quads overlap because of kerning\n\tif ( alpha < 0.02) discard;\n\n\n\tgl_FragColor = vec4( u_color, alpha );\n\n\t#include <clipping_planes_fragment>\n\n}\n",Px="\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <clipping_planes_vertex>\n\n}\n",Lx="\n\nuniform sampler2D u_texture;\nuniform vec3 u_color;\nuniform float u_opacity;\n\nuniform float u_borderRadiusTopLeft;\nuniform float u_borderRadiusTopRight;\nuniform float u_borderRadiusBottomLeft;\nuniform float u_borderRadiusBottomRight;\nuniform float u_borderWidth;\nuniform vec3 u_borderColor;\nuniform float u_borderOpacity;\nuniform vec2 u_size;\nuniform vec2 u_tSize;\nuniform int u_backgroundMapping;\n\nvarying vec2 vUv;\n\n#include <clipping_planes_pars_fragment>\n\nfloat getEdgeDist() {\n\tvec2 ndc = vec2( vUv.x * 2.0 - 1.0, vUv.y * 2.0 - 1.0 );\n\tvec2 planeSpaceCoord = vec2( u_size.x * 0.5 * ndc.x, u_size.y * 0.5 * ndc.y );\n\tvec2 corner = u_size * 0.5;\n\tvec2 offsetCorner = corner - abs( planeSpaceCoord );\n\tfloat innerRadDist = min( offsetCorner.x, offsetCorner.y ) * -1.0;\n\tif (vUv.x < 0.5 && vUv.y >= 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopLeft, 0.0 ) ) - u_borderRadiusTopLeft;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopLeft );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x >= 0.5 && vUv.y >= 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopRight, 0.0 ) ) - u_borderRadiusTopRight;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopRight );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x >= 0.5 && vUv.y < 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomRight, 0.0 ) ) - u_borderRadiusBottomRight;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomRight );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n\tif (vUv.x < 0.5 && vUv.y < 0.5) {\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomLeft, 0.0 ) ) - u_borderRadiusBottomLeft;\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomLeft );\n\t\treturn mix( innerRadDist, roundedDist, s );\n\t}\n}\n\nvec4 sampleTexture() {\n\tfloat textureRatio = u_tSize.x / u_tSize.y;\n\tfloat panelRatio = u_size.x / u_size.y;\n\tvec2 uv = vUv;\n\tif ( u_backgroundMapping == 1 ) { // contain\n\t\tif ( textureRatio < panelRatio ) { // repeat on X\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\n\t\t\tuv.x = newX;\n\t\t} else { // repeat on Y\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\n\t\t\tuv.y = newY;\n\t\t}\n\t} else if ( u_backgroundMapping == 2 ) { // cover\n\t\tif ( textureRatio < panelRatio ) { // stretch on Y\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\n\t\t\tuv.y = newY;\n\t\t} else { // stretch on X\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\n\t\t\tuv.x = newX;\n\t\t}\n\t}\n\treturn texture2D( u_texture, uv ).rgba;\n}\n\nvoid main() {\n\n\tfloat edgeDist = getEdgeDist();\n\tfloat change = fwidth( edgeDist );\n\n\tvec4 textureSample = sampleTexture();\n\tvec3 blendedColor = textureSample.rgb * u_color;\n\n\tfloat alpha = smoothstep( change, 0.0, edgeDist );\n\tfloat blendedOpacity = u_opacity * textureSample.a * alpha;\n\n\tvec4 frameColor = vec4( blendedColor, blendedOpacity );\n\n\tif ( u_borderWidth <= 0.0 ) {\n\t\tgl_FragColor = frameColor;\n\t} else {\n\t\tvec4 borderColor = vec4( u_borderColor, u_borderOpacity * alpha );\n\t\tfloat stp = smoothstep( edgeDist + change, edgeDist, u_borderWidth * -1.0 );\n\t\tgl_FragColor = mix( frameColor, borderColor, stp );\n\t}\n\n\t#include <clipping_planes_fragment>\n}\n";class Fx extends ea{constructor(t){super(new Lc,t),this.castShadow=!0,this.receiveShadow=!0,this.name="MeshUI-Frame"}}let Nx=null;function kx(...t){if(!Nx)throw new Error("Cannot use mixins with Base null");let e=Nx;Nx=null;let n,i=t.length;for(;--i>=0;)n=t[i],e=n(e);return e}kx.withBase=t=>(Nx=t,kx);class Ox extends(kx.withBase(Js)(jv,yx,Dx,Qx)){constructor(t){super(t),this.isBlock=!0,this.size=new di(1,1),this.frame=new Fx(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){const t=this.getBestFit();"none"!=t&&this.childrenTexts.length?this.calculateBestFit(t):this.childrenTexts.forEach(t=>{t._fitFontSize=void 0})}updateLayout(){const t=this.getWidth(),e=this.getHeight();t&&e?(this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.autoLayout&&this.setPosFromParentRecords(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.parentUI&&(this.position.z=this.getOffset())):console.warn("Block got no dimension from its parameters or from children parameters")}updateInner(){this.parentUI&&(this.position.z=this.getOffset()),this.frame&&this.updateBackgroundMaterial()}}function zx(t){return class extends t{constructor(t){super(t),this.isInline=!0}}}class Gx extends Lc{constructor(t,e){const n=t.glyph,i=t.fontSize;super(t.width,t.height),null===n.match(/\s/g)?(-1===e.info.charset.indexOf(n)&&console.error(`The character '${n}' is not included in the font characters set.`),this.mapUVs(e,n),this.transformGeometry(t)):(this.nullifyUVs(),this.scale(0,0,1),this.translate(0,i/2,0))}mapUVs(t,e){const n=t.chars.find(t=>t.char===e),i=t.common,s=n.x/i.scaleW,r=(n.x+n.width)/i.scaleW,a=1-(n.y+n.height)/i.scaleH,o=1-n.y/i.scaleH,l=this.attributes.uv;for(let t=0;t<l.count;t++){let e=l.getX(t),n=l.getY(t);[e,n]=(()=>{switch(t){case 0:return[s,o];case 1:return[r,o];case 2:return[s,a];case 3:return[r,a]}})(),l.setXY(t,e,n)}}nullifyUVs(){const t=this.attributes.uv;for(let e=0;e<t.count;e++)t.setXY(e,0,0)}transformGeometry(t){this.translate(t.width/2,t.height/2,0)}}const Hx={getGlyphDimensions:function(t){const e=t.font,n=t.fontSize,i=t.glyph,s=n/e.info.size,r=e.chars.find(t=>t.char===i);let a=r?r.width*s:n/3,o=r?r.height*s:0;0===a&&(a=r?r.xadvance*s:n),0===o&&(o=.7*n),"\n"===i&&(a=0);const l=r?r.xadvance*s:a,c=r?r.xoffset*s:0;return{width:a,height:o,anchor:r?r.yoffset*s:0,xadvance:l,xoffset:c}},getGlyphPairKerning:function(t,e){const n=t._kernings;return n[e]?n[e]:0},buildText:function(){const t=[];this.inlines.forEach((e,n)=>{t[n]=new Gx(e,this.getFontFamily()),t[n].translate(e.offsetX,e.offsetY,0)});const e=nm(t);return new ea(e,this.getFontMaterial())}};function Vx(t){return class extends t{createText(){const t=this,e=(()=>{if("MSDF"===this.getTextType())return Hx.buildText.call(this);console.warn(`'${this.getTextType()}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)})();return e.renderOrder=1/0,e.onBeforeRender=function(){t.updateClippingPlanes&&t.updateClippingPlanes()},e}getGlyphDimensions(t){if("MSDF"===t.textType)return Hx.getGlyphDimensions(t);console.warn(`'${t.textType}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)}getGlyphPairKerning(t,e,n){if("MSDF"===t)return Hx.getGlyphPairKerning(e,n);console.warn(`'${t}' is not a supported text type.\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type`)}}}const Yx=function t(e){e.children.forEach(n=>{n.children.length>0&&t(n),e.remove(n),bx.disposeOf(n),n.material&&n.material.dispose(),n.geometry&&n.geometry.dispose()}),e.children=[]};class qx extends(kx.withBase(Js)(zx,Vx,Dx,Qx)){constructor(t){super(t),this.isText=!0,this.set(t)}parseParams(){this.calculateInlines(this._fitFontSize||this.getFontSize())}updateLayout(){Yx(this),this.inlines&&(this.textContent=this.createText(),this.updateTextMaterial(),this.add(this.textContent)),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.textContent&&this.updateTextMaterial()}calculateInlines(t){const e=this.content,n=this.getFontFamily(),i=this.getBreakOn(),s=this.getTextType(),r=this.getWhiteSpace();if(!n||"string"==typeof n)return void(Sx.getFontOf(this)||console.warn("no font was found"));if(!this.content)return void(this.inlines=null);if(!s)return void console.error("You must provide a 'textType' attribute so three-mesh-ui knows how to render your text.\n See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type");const a=nx(e,r),o=Array.from?Array.from(a):String(a).split(""),l=t/n.info.size,c=n.common.lineHeight*l,A=n.common.base*l,h=o.map(e=>{const a=this.getGlyphDimensions({textType:s,glyph:e,font:n,fontSize:t});let o=null;return r!==Zv&&(i.includes(e)||e.match(/\s/g))&&(o="possible"),e.match(/\n/g)&&(o=ix(r)),{height:a.height,width:a.width,anchor:a.anchor,xadvance:a.xadvance,xoffset:a.xoffset,lineBreak:o,glyph:e,fontSize:t,lineHeight:c,lineBase:A}});if("none"!==this.getFontKerning())for(let e=1;e<h.length;e++){const i=h[e],r=h[e-1].glyph+h[e].glyph,a=this.getGlyphPairKerning(s,n,r);i.kerning=a*(t/n.info.size)}this.inlines=h}}class Wx extends(kx.withBase(Js)(zx,jv,yx,Dx,Qx)){constructor(t){super(t),this.isInlineBlock=!0,this.size=new di(1,1),this.frame=new Fx(this.getBackgroundMaterial()),this.frame.onBeforeRender=()=>{this.updateClippingPlanes&&this.updateClippingPlanes()},this.add(this.frame),this.set(t)}parseParams(){this.width||console.warn("inlineBlock has no width. Set to 0.3 by default"),this.height||console.warn("inlineBlock has no height. Set to 0.3 by default"),this.inlines=[{height:this.height||.3,width:this.width||.3,anchor:0,lineBreak:"possible"}]}updateLayout(){const t=this.getWidth(),e=this.getHeight();if(this.inlines){const t=this.inlines[0];this.position.set(t.width/2,t.height/2,0),this.position.x+=t.offsetX,this.position.y+=t.offsetY}this.size.set(t,e),this.frame.scale.set(t,e,1),this.frame&&this.updateBackgroundMaterial(),this.frame.renderOrder=this.getParentsNumber(),this.childrenInlines.length&&this.computeInlinesPosition(),this.computeChildrenPosition(),this.position.z=this.getOffset()}updateInner(){this.position.z=this.getOffset(),this.frame&&this.updateBackgroundMaterial()}}const Jx=[[[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]}],[{width:.2,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],jx=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Xx=[[[{width:1/12,chars:[{lowerCase:"й",upperCase:"Й"},{lowerCase:"q",upperCase:"Q"}]},{width:1/12,chars:[{lowerCase:"ц",upperCase:"Ц"},{lowerCase:"w",upperCase:"W"}]},{width:1/12,chars:[{lowerCase:"у",upperCase:"У"},{lowerCase:"e",upperCase:"E"}]},{width:1/12,chars:[{lowerCase:"к",upperCase:"К"},{lowerCase:"r",upperCase:"R"}]},{width:1/12,chars:[{lowerCase:"е",upperCase:"Е"},{lowerCase:"t",upperCase:"T"}]},{width:1/12,chars:[{lowerCase:"н",upperCase:"Н"},{lowerCase:"y",upperCase:"Y"}]},{width:1/12,chars:[{lowerCase:"г",upperCase:"Г"},{lowerCase:"u",upperCase:"U"}]},{width:1/12,chars:[{lowerCase:"ш",upperCase:"Ш"},{lowerCase:"i",upperCase:"I"}]},{width:1/12,chars:[{lowerCase:"щ",upperCase:"Щ"},{lowerCase:"o",upperCase:"O"}]},{width:1/12,chars:[{lowerCase:"з",upperCase:"З"},{lowerCase:"p",upperCase:"P"}]},{width:1/12,chars:[{lowerCase:"х",upperCase:"Х"},{lowerCase:"{",upperCase:"["}]},{width:1/12,chars:[{lowerCase:"ъ",upperCase:"Ъ"},{lowerCase:"}",upperCase:"]"}]}],[{width:1/12,chars:[{lowerCase:"ф",upperCase:"Ф"},{lowerCase:"a",upperCase:"A"}]},{width:1/12,chars:[{lowerCase:"ы",upperCase:"Ы"},{lowerCase:"s",upperCase:"S"}]},{width:1/12,chars:[{lowerCase:"в",upperCase:"В"},{lowerCase:"d",upperCase:"D"}]},{width:1/12,chars:[{lowerCase:"а",upperCase:"А"},{lowerCase:"f",upperCase:"F"}]},{width:1/12,chars:[{lowerCase:"п",upperCase:"П"},{lowerCase:"g",upperCase:"G"}]},{width:1/12,chars:[{lowerCase:"р",upperCase:"Р"},{lowerCase:"h",upperCase:"H"}]},{width:1/12,chars:[{lowerCase:"о",upperCase:"О"},{lowerCase:"j",upperCase:"J"}]},{width:1/12,chars:[{lowerCase:"л",upperCase:"Л"},{lowerCase:"k",upperCase:"K"}]},{width:1/12,chars:[{lowerCase:"д",upperCase:"Д"},{lowerCase:"l",upperCase:"L"}]},{width:1/12,chars:[{lowerCase:"ж",upperCase:"Ж"},{lowerCase:":",upperCase:";"}]},{width:1/12,chars:[{lowerCase:"э",upperCase:"Э"},{lowerCase:'"',upperCase:"'"}]},{width:1/12,chars:[{lowerCase:"ё",upperCase:"Ё"},{lowerCase:"|",upperCase:"\\"}]}],[{width:.125,command:"shift",chars:[{icon:"shift"}]},{width:1/12,chars:[{lowerCase:"я",upperCase:"Я"},{lowerCase:"z",upperCase:"Z"}]},{width:1/12,chars:[{lowerCase:"ч",upperCase:"Ч"},{lowerCase:"x",upperCase:"X"}]},{width:1/12,chars:[{lowerCase:"с",upperCase:"С"},{lowerCase:"c",upperCase:"C"}]},{width:1/12,chars:[{lowerCase:"м",upperCase:"М"},{lowerCase:"v",upperCase:"V"}]},{width:1/12,chars:[{lowerCase:"и",upperCase:"И"},{lowerCase:"b",upperCase:"B"}]},{width:1/12,chars:[{lowerCase:"т",upperCase:"Т"},{lowerCase:"n",upperCase:"N"}]},{width:1/12,chars:[{lowerCase:"ь",upperCase:"Ь"},{lowerCase:"m",upperCase:"M"}]},{width:1/12,chars:[{lowerCase:"б",upperCase:"Б"},{lowerCase:",",upperCase:""}]},{width:1/12,chars:[{lowerCase:"ю",upperCase:"Ю"},{lowerCase:".",upperCase:""}]},{width:.125,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.3,command:"switch",chars:[{lowerCase:"АБВ"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Kx=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"ü",upperCase:"Ü"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"ö",upperCase:"Ö"}]},{width:1/11,chars:[{lowerCase:"ä",upperCase:"Ä"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Zx=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"ñ",upperCase:"Ñ"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],$x=[[[{width:.1,chars:[{lowerCase:";",upperCase:":"},{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"ς",upperCase:"ς"},{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"ε",upperCase:"Ε"},{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"ρ",upperCase:"Ρ"},{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"τ",upperCase:"Τ"},{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"υ",upperCase:"Υ"},{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"θ",upperCase:"Θ"},{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"ι",upperCase:"Ι"},{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"ο",upperCase:"Ο"},{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"π",upperCase:"Π"},{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"α",upperCase:"Α"},{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"σ",upperCase:"Σ"},{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"δ",upperCase:"Δ"},{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"φ",upperCase:"Φ"},{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"γ",upperCase:"Γ"},{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"η",upperCase:"Η"},{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"ξ",upperCase:"Ξ"},{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"κ",upperCase:"Κ"},{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"λ",upperCase:"Λ"},{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"ζ",upperCase:"Ζ"},{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"χ",upperCase:"Χ"},{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"ψ",upperCase:"Ψ"},{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"ω",upperCase:"Ω"},{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"β",upperCase:"Β"},{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"ν",upperCase:"Ν"},{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"μ",upperCase:"Μ"},{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],tw=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"å",upperCase:"Å"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"æ",upperCase:"Æ"}]},{width:1/11,chars:[{lowerCase:"ø",upperCase:"Ø"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],ew=new NA;class nw extends(kx.withBase(Js)(jv,Qx)){constructor(t){let e;if(t||(t={}),t.width||(t.width=1),t.height||(t.height=.4),t.margin||(t.margin=.003),t.padding||(t.padding=.01),super(t),this.currentPanel=0,this.isLowerCase=!0,this.charsetCount=1,t.language||navigator.language)switch(t.language||navigator.language){case"fr":case"fr-CH":case"fr-CA":e=Jx;break;case"ru":this.charsetCount=2,e=Xx;break;case"de":case"de-DE":case"de-AT":case"de-LI":case"de-CH":e=Kx;break;case"es":case"es-419":case"es-AR":case"es-CL":case"es-CO":case"es-ES":case"es-CR":case"es-US":case"es-HN":case"es-MX":case"es-PE":case"es-UY":case"es-VE":e=Zx;break;case"el":this.charsetCount=2,e=$x;break;case"nord":e=tw;break;default:e=jx}else e=jx;this.keys=[],this.panels=e.map(e=>{const n=t.height/e.length-2*t.margin,i=new Ox({width:t.width+2*t.padding,height:t.height+2*t.padding,offset:0,padding:t.padding,fontFamily:t.fontFamily,fontTexture:t.fontTexture,backgroundColor:t.backgroundColor,backgroundOpacity:t.backgroundOpacity});return i.charset=0,i.add(...e.map(e=>{const s=new Ox({width:t.width,height:n,margin:t.margin,contentDirection:"row",justifyContent:"center"});s.frame.visible=!1;const r=[];return e.forEach(e=>{const s=new Ox({width:t.width*e.width-2*t.margin,height:n,margin:t.margin,justifyContent:"center",offset:0}),a=e.chars[i.charset].lowerCase||e.chars[i.charset].icon||"undif";if("enter"===a&&t.enterTexture||"shift"===a&&t.shiftTexture||"backspace"===a&&t.backspaceTexture){const e=(()=>{switch(a){case"backspace":return t.backspaceTexture;case"enter":return t.enterTexture;case"shift":return t.shiftTexture;default:console.warn("There is no icon image for this key")}})();ew.load(e,t=>{s.add(new Wx({width:.65*s.width,height:.65*s.height,backgroundSize:"contain",backgroundTexture:t}))})}else s.add(new qx({content:a,offset:0}));s.type="Key",s.info=e,s.info.input=a,s.panel=i,r.push(s),this.keys.push(s)}),s.add(...r),s})),i}),this.add(this.panels[0]),this.set(t)}setNextPanel(){this.panels.forEach(t=>{this.remove(t)}),this.currentPanel=(this.currentPanel+1)%this.panels.length,this.add(this.panels[this.currentPanel]),this.update(!0,!0,!0)}setNextCharset(){this.panels[this.currentPanel].charset=(this.panels[this.currentPanel].charset+1)%this.charsetCount,this.keys.forEach(t=>{if(!this.panels[this.currentPanel].getObjectById(t.id))return;const e=t.info.chars[t.panel.charset]||t.info.chars[0],n=this.isLowerCase||!e.upperCase?e.lowerCase:e.upperCase;if(!t.childrenTexts.length)return;const i=t.childrenTexts[0];t.info.input=n,i.set({content:n}),i.update(!0,!0,!0)})}toggleCase(){this.isLowerCase=!this.isLowerCase,this.keys.forEach(t=>{const e=t.info.chars[t.panel.charset]||t.info.chars[0],n=this.isLowerCase||!e.upperCase?e.lowerCase:e.upperCase;if(!t.childrenTexts.length)return;const i=t.childrenTexts[0];t.info.input=n,i.set({content:n}),i.update(!0,!0,!0)})}parseParams(){}updateLayout(){}updateInner(){}}const iw={Block:Ox,Text:qx,InlineBlock:Wx,Keyboard:nw,FontLibrary:Sx,update:()=>bx.update(),TextAlign:A,Whitespace:c,JustifyContent:l,AlignItems:o,ContentDirection:a};void 0!==n.g&&(n.g.ThreeMeshUI=iw);const sw=iw;function rw(t,e,n){return null===t?null:(t.point.applyMatrix4(e.matrixWorld),t.distance=t.point.distanceTo(n.ray.origin),t.object=e,t)}const aw=0,ow=1,lw=2,cw=0,Aw=1,hw=2,uw=1.25,dw=1,pw=32,gw=65535,fw=Math.pow(2,-24),mw=Symbol("SKIP_GENERATION");function yw(t){return t.index?t.index.count:t.attributes.position.count}function Iw(t){return yw(t)/3}function Cw(t,e=ArrayBuffer){return t>65535?new Uint32Array(new e(4*t)):new Uint16Array(new e(2*t))}function Ew(t,e){const n=Iw(t),i=e||t.drawRange,s=i.start/3,r=(i.start+i.count)/3,a=Math.max(0,s),o=Math.min(n,r)-a;return[{offset:Math.floor(a),count:Math.floor(o)}]}function vw(t,e){if(!t.groups||!t.groups.length)return Ew(t,e);const n=[],i=new Set,s=e||t.drawRange,r=s.start/3,a=(s.start+s.count)/3;for(const e of t.groups){const t=e.start/3,n=(e.start+e.count)/3;i.add(Math.max(r,t)),i.add(Math.min(a,n))}const o=Array.from(i.values()).sort((t,e)=>t-e);for(let t=0;t<o.length-1;t++){const e=o[t],i=o[t+1];n.push({offset:Math.floor(e),count:Math.floor(i-e)})}return n}function xw(t,e,n,i,s){let r=1/0,a=1/0,o=1/0,l=-1/0,c=-1/0,A=-1/0,h=1/0,u=1/0,d=1/0,p=-1/0,g=-1/0,f=-1/0;for(let i=6*e,s=6*(e+n);i<s;i+=6){const e=t[i+0],n=t[i+1],s=e-n,m=e+n;s<r&&(r=s),m>l&&(l=m),e<h&&(h=e),e>p&&(p=e);const y=t[i+2],I=t[i+3],C=y-I,E=y+I;C<a&&(a=C),E>c&&(c=E),y<u&&(u=y),y>g&&(g=y);const v=t[i+4],x=t[i+5],w=v-x,_=v+x;w<o&&(o=w),_>A&&(A=_),v<d&&(d=v),v>f&&(f=v)}i[0]=r,i[1]=a,i[2]=o,i[3]=l,i[4]=c,i[5]=A,s[0]=h,s[1]=u,s[2]=d,s[3]=p,s[4]=g,s[5]=f}function ww(t,e,n){return n.min.x=e[t],n.min.y=e[t+1],n.min.z=e[t+2],n.max.x=e[t+3],n.max.y=e[t+4],n.max.z=e[t+5],n}function _w(t){let e=-1,n=-1/0;for(let i=0;i<3;i++){const s=t[i+3]-t[i];s>n&&(n=s,e=i)}return e}function Bw(t,e){e.set(t)}function Sw(t,e,n){let i,s;for(let r=0;r<3;r++){const a=r+3;i=t[r],s=e[r],n[r]=i<s?i:s,i=t[a],s=e[a],n[a]=i>s?i:s}}function bw(t,e,n){for(let i=0;i<3;i++){const s=e[t+2*i],r=e[t+2*i+1],a=s-r,o=s+r;a<n[i]&&(n[i]=a),o>n[i+3]&&(n[i+3]=o)}}function Mw(t){const e=t[3]-t[0],n=t[4]-t[1],i=t[5]-t[2];return 2*(e*n+n*i+i*e)}const Tw=(t,e)=>t.candidate-e.candidate,Qw=new Array(32).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Dw=new Float32Array(6);class Rw{constructor(){this.boundingData=new Float32Array(6)}}function Uw(t,e,n,i,s,r){let a=i,o=i+s-1;const l=r.pos,c=2*r.axis;for(;;){for(;a<=o&&n[6*a+c]<l;)a++;for(;a<=o&&n[6*o+c]>=l;)o--;if(!(a<o))return a;for(let t=0;t<3;t++){let n=e[3*a+t];e[3*a+t]=e[3*o+t],e[3*o+t]=n}for(let t=0;t<6;t++){let e=n[6*a+t];n[6*a+t]=n[6*o+t],n[6*o+t]=e}a++,o--}}function Pw(t,e,n,i,s,r){let a=i,o=i+s-1;const l=r.pos,c=2*r.axis;for(;;){for(;a<=o&&n[6*a+c]<l;)a++;for(;a<=o&&n[6*o+c]>=l;)o--;if(!(a<o))return a;{let e=t[a];t[a]=t[o],t[o]=e;for(let t=0;t<6;t++){let e=n[6*a+t];n[6*a+t]=n[6*o+t],n[6*o+t]=e}a++,o--}}}function Lw(t,e){return 65535===e[t+15]}function Fw(t,e){return e[t+6]}function Nw(t,e){return e[t+14]}function kw(t){return t+8}function Ow(t,e){return e[t+6]}function zw(t,e){return e[t+7]}function Gw(t){return t}let Hw,Vw,Yw,qw;const Ww=Math.pow(2,32);function Jw(t){return"count"in t?1:1+Jw(t.left)+Jw(t.right)}function jw(t,e,n){return Hw=new Float32Array(n),Vw=new Uint32Array(n),Yw=new Uint16Array(n),qw=new Uint8Array(n),Xw(t,e)}function Xw(t,e){const n=t/4,i=t/2,s="count"in e,r=e.boundingData;for(let t=0;t<6;t++)Hw[n+t]=r[t];if(s){if(e.buffer){const i=e.buffer;qw.set(new Uint8Array(i),t);for(let e=t,s=t+i.byteLength;e<s;e+=pw)Lw(e/2,Yw)||(Vw[e/4+6]+=n);return t+i.byteLength}{const s=e.offset,r=e.count;return Vw[n+6]=s,Yw[i+14]=r,Yw[i+15]=gw,t+pw}}{const i=e.left,s=e.right,r=e.splitAxis;let a;if(a=Xw(t+pw,i),a/4>Ww)throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return Vw[n+6]=a/4,a=Xw(a,s),Vw[n+7]=r,a}}function Kw(t,e){const n=t.geometry;e.indirect&&(t._indirectBuffer=function(t,e){const n=(t.index?t.index.count:t.attributes.position.count)/3,i=n>65536,s=i?4:2,r=e?new SharedArrayBuffer(n*s):new ArrayBuffer(n*s),a=i?new Uint32Array(r):new Uint16Array(r);for(let t=0,e=a.length;t<e;t++)a[t]=t;return a}(n,e.useSharedArrayBuffer),function(t,e){const n=Iw(t),i=vw(t,e).sort((t,e)=>t.offset-e.offset),s=i[i.length-1];s.count=Math.min(n-s.offset,s.count);let r=0;return i.forEach(({count:t})=>r+=t),n!==r}(n,e.range)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups or a range that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),t._indirectBuffer||function(t,e){if(!t.index){const n=t.attributes.position.count,i=Cw(n,e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer);t.setIndex(new Br(i,1));for(let t=0;t<n;t++)i[t]=t}}(n,e);const i=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,s=function(t,e=null,n=null,i=null){const s=t.attributes.position,r=t.index?t.index.array:null,a=Iw(t),o=s.normalized;let l;null===e?(l=new Float32Array(6*a),n=0,i=a):(l=e,n=n||0,i=i||a);const c=s.array,A=s.offset||0;let h=3;s.isInterleavedBufferAttribute&&(h=s.data.stride);const u=["getX","getY","getZ"];for(let t=n;t<n+i;t++){const e=3*t,n=6*t;let i=e+0,a=e+1,d=e+2;r&&(i=r[i],a=r[a],d=r[d]),o||(i=i*h+A,a=a*h+A,d=d*h+A);for(let t=0;t<3;t++){let e,r,A;o?(e=s[u[t]](i),r=s[u[t]](a),A=s[u[t]](d)):(e=c[i+t],r=c[a+t],A=c[d+t]);let h=e;r<h&&(h=r),A<h&&(h=A);let p=e;r>p&&(p=r),A>p&&(p=A);const g=(p-h)/2,f=2*t;l[n+f+0]=h+g,l[n+f+1]=g+(Math.abs(h)+g)*fw}}return l}(n),r=e.indirect?Ew(n,e.range):vw(n,e.range);t._roots=r.map(n=>{const r=function(t,e,n,i,s){const{maxDepth:r,verbose:a,maxLeafTris:o,strategy:l,onProgress:c,indirect:A}=s,h=t._indirectBuffer,u=t.geometry,d=u.index?u.index.array:null,p=A?Pw:Uw,g=Iw(u),f=new Float32Array(6);let m=!1;const y=new Rw;return xw(e,n,i,y.boundingData,f),function t(n,i,s,c=null,A=0){if(!m&&A>=r&&(m=!0,a&&(console.warn(`MeshBVH: Max depth of ${r} reached when generating BVH. Consider increasing maxDepth.`),console.warn(u))),s<=o||A>=r)return I(i+s),n.offset=i,n.count=s,n;const g=function(t,e,n,i,s,r){let a=-1,o=0;if(r===aw)a=_w(e),-1!==a&&(o=(e[a]+e[a+3])/2);else if(r===ow)a=_w(t),-1!==a&&(o=function(t,e,n,i){let s=0;for(let r=e,a=e+n;r<a;r++)s+=t[6*r+2*i];return s/n}(n,i,s,a));else if(r===lw){const r=Mw(t);let l=uw*s;const c=6*i,A=6*(i+s);for(let t=0;t<3;t++){const i=e[t],h=(e[t+3]-i)/32;if(s<8){const e=[...Qw];e.length=s;let i=0;for(let s=c;s<A;s+=6,i++){const r=e[i];r.candidate=n[s+2*t],r.count=0;const{bounds:a,leftCacheBounds:o,rightCacheBounds:l}=r;for(let t=0;t<3;t++)l[t]=1/0,l[t+3]=-1/0,o[t]=1/0,o[t+3]=-1/0,a[t]=1/0,a[t+3]=-1/0;bw(s,n,a)}e.sort(Tw);let h=s;for(let t=0;t<h;t++){const n=e[t];for(;t+1<h&&e[t+1].candidate===n.candidate;)e.splice(t+1,1),h--}for(let i=c;i<A;i+=6){const s=n[i+2*t];for(let t=0;t<h;t++){const r=e[t];s>=r.candidate?bw(i,n,r.rightCacheBounds):(bw(i,n,r.leftCacheBounds),r.count++)}}for(let n=0;n<h;n++){const i=e[n],c=i.count,A=s-i.count,h=i.leftCacheBounds,u=i.rightCacheBounds;let d=0;0!==c&&(d=Mw(h)/r);let p=0;0!==A&&(p=Mw(u)/r);const g=dw+uw*(d*c+p*A);g<l&&(a=t,l=g,o=i.candidate)}}else{for(let t=0;t<32;t++){const e=Qw[t];e.count=0,e.candidate=i+h+t*h;const n=e.bounds;for(let t=0;t<3;t++)n[t]=1/0,n[t+3]=-1/0}for(let e=c;e<A;e+=6){let s=~~((n[e+2*t]-i)/h);s>=32&&(s=31);const r=Qw[s];r.count++,bw(e,n,r.bounds)}const e=Qw[31];Bw(e.bounds,e.rightCacheBounds);for(let t=30;t>=0;t--){const e=Qw[t],n=Qw[t+1];Sw(e.bounds,n.rightCacheBounds,e.rightCacheBounds)}let u=0;for(let e=0;e<31;e++){const n=Qw[e],i=n.count,c=n.bounds,A=Qw[e+1].rightCacheBounds;0!==i&&(0===u?Bw(c,Dw):Sw(c,Dw,Dw)),u+=i;let h=0,d=0;0!==u&&(h=Mw(Dw)/r);const p=s-u;0!==p&&(d=Mw(A)/r);const g=dw+uw*(h*u+d*p);g<l&&(a=t,l=g,o=n.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${r} used.`);return{axis:a,pos:o}}(n.boundingData,c,e,i,s,l);if(-1===g.axis)return I(i+s),n.offset=i,n.count=s,n;const y=p(h,d,e,i,s,g);if(y===i||y===i+s)I(i+s),n.offset=i,n.count=s;else{n.splitAxis=g.axis;const r=new Rw,a=i,o=y-i;n.left=r,xw(e,a,o,r.boundingData,f),t(r,a,o,f,A+1);const l=new Rw,c=y,h=s-o;n.right=l,xw(e,c,h,l.boundingData,f),t(l,c,h,f,A+1)}return n}(y,n,i,f),y;function I(t){c&&c(t/g)}}(t,s,n.offset,n.count,e),a=Jw(r),o=new i(pw*a);return jw(0,r,o),o})}class Zw{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let n=1/0,i=-1/0;for(let s=0,r=t.length;s<r;s++){const r=t[s][e];n=r<n?r:n,i=r>i?r:i}this.min=n,this.max=i}setFromPoints(t,e){let n=1/0,i=-1/0;for(let s=0,r=e.length;s<r;s++){const r=e[s],a=t.dot(r);n=a<n?a:n,i=a>i?a:i}this.min=n,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}Zw.prototype.setFromBox=function(){const t=new gi;return function(e,n){const i=n.min,s=n.max;let r=1/0,a=-1/0;for(let n=0;n<=1;n++)for(let o=0;o<=1;o++)for(let l=0;l<=1;l++){t.x=i.x*n+s.x*(1-n),t.y=i.y*o+s.y*(1-o),t.z=i.z*l+s.z*(1-l);const c=e.dot(t);r=Math.min(c,r),a=Math.max(c,a)}this.min=r,this.max=a}}(),new Zw;const $w=function(){const t=new gi,e=new gi,n=new gi;return function(i,s,r){const a=i.start,o=t,l=s.start,c=e;n.subVectors(a,l),t.subVectors(i.end,i.start),e.subVectors(s.end,s.start);const A=n.dot(c),h=c.dot(o),u=c.dot(c),d=n.dot(o),p=o.dot(o)*u-h*h;let g,f;g=0!==p?(A*h-d*u)/p:0,f=(A+g*h)/u,r.x=g,r.y=f}}(),t_=function(){const t=new di,e=new gi,n=new gi;return function(i,s,r,a){$w(i,s,t);let o=t.x,l=t.y;if(o>=0&&o<=1&&l>=0&&l<=1)return i.at(o,r),void s.at(l,a);if(o>=0&&o<=1)return l<0?s.at(0,a):s.at(1,a),void i.closestPointToPoint(a,!0,r);if(l>=0&&l<=1)return o<0?i.at(0,r):i.at(1,r),void s.closestPointToPoint(r,!0,a);{let t,c;t=o<0?i.start:i.end,c=l<0?s.start:s.end;const A=e,h=n;return i.closestPointToPoint(c,!0,e),s.closestPointToPoint(t,!0,n),A.distanceToSquared(c)<=h.distanceToSquared(t)?(r.copy(A),void a.copy(c)):(r.copy(t),void a.copy(h))}}}(),e_=function(){const t=new gi,e=new gi,n=new Co,i=new Iu;return function(s,r){const{radius:a,center:o}=s,{a:l,b:c,c:A}=r;if(i.start=l,i.end=c,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;if(i.start=l,i.end=A,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;if(i.start=c,i.end=A,i.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;const h=r.getPlane(n);if(Math.abs(h.distanceToPoint(o))<=a){const t=h.projectPoint(o,e);if(r.containsPoint(t))return!0}return!1}}();function n_(t){return Math.abs(t)<1e-15}class i_ extends lr{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new gi),this.satBounds=new Array(4).fill().map(()=>new Zw),this.points=[this.a,this.b,this.c],this.sphere=new us,this.plane=new Co,this.needsUpdate=!0}intersectsSphere(t){return e_(t,this)}update(){const t=this.a,e=this.b,n=this.c,i=this.points,s=this.satAxes,r=this.satBounds,a=s[0],o=r[0];this.getNormal(a),o.setFromPoints(a,i);const l=s[1],c=r[1];l.subVectors(t,e),c.setFromPoints(l,i);const A=s[2],h=r[2];A.subVectors(e,n),h.setFromPoints(A,i);const u=s[3],d=r[3];u.subVectors(n,t),d.setFromPoints(u,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}i_.prototype.closestPointToSegment=function(){const t=new gi,e=new gi,n=new Iu;return function(i,s=null,r=null){const{start:a,end:o}=i,l=this.points;let c,A=1/0;for(let a=0;a<3;a++){const o=(a+1)%3;n.start.copy(l[a]),n.end.copy(l[o]),t_(n,i,t,e),c=t.distanceToSquared(e),c<A&&(A=c,s&&s.copy(t),r&&r.copy(e))}return this.closestPointToPoint(a,t),c=a.distanceToSquared(t),c<A&&(A=c,s&&s.copy(t),r&&r.copy(a)),this.closestPointToPoint(o,t),c=o.distanceToSquared(t),c<A&&(A=c,s&&s.copy(t),r&&r.copy(o)),Math.sqrt(A)}}(),i_.prototype.intersectsTriangle=function(){const t=new i_,e=new Array(3),n=new Array(3),i=new Zw,s=new Zw,r=new gi,a=new gi,o=new gi,l=new gi,c=new gi,A=new Iu,h=new Iu,u=new Iu,d=new gi;function p(t,e,n){const i=t.points;let s=0,r=-1;for(let t=0;t<3;t++){const{start:o,end:l}=A;o.copy(i[t]),l.copy(i[(t+1)%3]),A.delta(a);const c=n_(e.distanceToPoint(o));if(n_(e.normal.dot(a))&&c){n.copy(A),s=2;break}const h=e.intersectLine(A,d);if(!h&&c&&d.copy(o),(h||c)&&!n_(d.distanceTo(l))){if(s<=1)(1===s?n.start:n.end).copy(d),c&&(r=s);else if(s>=2){(1===r?n.start:n.end).copy(d),s=2;break}if(s++,2===s&&-1===r)break}}return s}return function(a,A=null,d=!1){this.needsUpdate&&this.update(),a.isExtendedTriangle?a.needsUpdate&&a.update():(t.copy(a),t.update(),a=t);const g=this.plane,f=a.plane;if(Math.abs(g.normal.dot(f.normal))>1-1e-10){const t=this.satBounds,o=this.satAxes;n[0]=a.a,n[1]=a.b,n[2]=a.c;for(let e=0;e<4;e++){const s=t[e],r=o[e];if(i.setFromPoints(r,n),s.isSeparated(i))return!1}const l=a.satBounds,c=a.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let t=0;t<4;t++){const n=l[t],s=c[t];if(i.setFromPoints(s,e),n.isSeparated(i))return!1}for(let t=0;t<4;t++){const a=o[t];for(let t=0;t<4;t++){const o=c[t];if(r.crossVectors(a,o),i.setFromPoints(r,e),s.setFromPoints(r,n),i.isSeparated(s))return!1}}return A&&(d||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),A.start.set(0,0,0),A.end.set(0,0,0)),!0}{const t=p(this,f,h);if(1===t&&a.containsPoint(h.end))return A&&(A.start.copy(h.end),A.end.copy(h.end)),!0;if(2!==t)return!1;const e=p(a,g,u);if(1===e&&this.containsPoint(u.end))return A&&(A.start.copy(u.end),A.end.copy(u.end)),!0;if(2!==e)return!1;if(h.delta(o),u.delta(l),o.dot(l)<0){let t=u.start;u.start=u.end,u.end=t}const n=h.start.dot(o),i=h.end.dot(o),s=u.start.dot(o),r=u.end.dot(o);return(n===r||s===i||i<s!=n<r)&&(A&&(c.subVectors(h.start,u.start),c.dot(o)>0?A.start.copy(h.start):A.start.copy(u.start),c.subVectors(h.end,u.end),c.dot(o)<0?A.end.copy(h.end):A.end.copy(u.end)),!0)}}}(),i_.prototype.distanceToPoint=function(){const t=new gi;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),i_.prototype.distanceToTriangle=function(){const t=new gi,e=new gi,n=["a","b","c"],i=new Iu,s=new Iu;return function(r,a=null,o=null){const l=a||o?i:null;if(this.intersectsTriangle(r,l))return(a||o)&&(a&&l.getCenter(a),o&&l.getCenter(o)),0;let c=1/0;for(let e=0;e<3;e++){let i;const s=n[e],l=r[s];this.closestPointToPoint(l,t),i=l.distanceToSquared(t),i<c&&(c=i,a&&a.copy(t),o&&o.copy(l));const A=this[s];r.closestPointToPoint(A,t),i=A.distanceToSquared(t),i<c&&(c=i,a&&a.copy(A),o&&o.copy(t))}for(let l=0;l<3;l++){const A=n[l],h=n[(l+1)%3];i.set(this[A],this[h]);for(let l=0;l<3;l++){const A=n[l],h=n[(l+1)%3];s.set(r[A],r[h]),t_(i,s,t,e);const u=t.distanceToSquared(e);u<c&&(c=u,a&&a.copy(t),o&&o.copy(e))}}return Math.sqrt(c)}}();class s_{constructor(t,e,n){this.isOrientedBox=!0,this.min=new gi,this.max=new gi,this.matrix=new Es,this.invMatrix=new Es,this.points=new Array(8).fill().map(()=>new gi),this.satAxes=new Array(3).fill().map(()=>new gi),this.satBounds=new Array(3).fill().map(()=>new Zw),this.alignedSatBounds=new Array(3).fill().map(()=>new Zw),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),n&&this.matrix.copy(n)}set(t,e,n){this.min.copy(t),this.max.copy(e),this.matrix.copy(n),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}s_.prototype.update=function(){const t=this.matrix,e=this.min,n=this.max,i=this.points;for(let s=0;s<=1;s++)for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){const o=i[1*s|2*r|4*a];o.x=s?n.x:e.x,o.y=r?n.y:e.y,o.z=a?n.z:e.z,o.applyMatrix4(t)}const s=this.satBounds,r=this.satAxes,a=i[0];for(let t=0;t<3;t++){const e=r[t],n=s[t],o=i[1<<t];e.subVectors(a,o),n.setFromPoints(e,i)}const o=this.alignedSatBounds;o[0].setFromPointsField(i,"x"),o[1].setFromPointsField(i,"y"),o[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1},s_.prototype.intersectsBox=function(){const t=new Zw;return function(e){this.needsUpdate&&this.update();const n=e.min,i=e.max,s=this.satBounds,r=this.satAxes,a=this.alignedSatBounds;if(t.min=n.x,t.max=i.x,a[0].isSeparated(t))return!1;if(t.min=n.y,t.max=i.y,a[1].isSeparated(t))return!1;if(t.min=n.z,t.max=i.z,a[2].isSeparated(t))return!1;for(let n=0;n<3;n++){const i=r[n],a=s[n];if(t.setFromBox(i,e),a.isSeparated(t))return!1}return!0}}(),s_.prototype.intersectsTriangle=function(){const t=new i_,e=new Array(3),n=new Zw,i=new Zw,s=new gi;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(t.copy(r),t.update(),r=t);const a=this.satBounds,o=this.satAxes;e[0]=r.a,e[1]=r.b,e[2]=r.c;for(let t=0;t<3;t++){const i=a[t],s=o[t];if(n.setFromPoints(s,e),i.isSeparated(n))return!1}const l=r.satBounds,c=r.satAxes,A=this.points;for(let t=0;t<3;t++){const e=l[t],i=c[t];if(n.setFromPoints(i,A),e.isSeparated(n))return!1}for(let t=0;t<3;t++){const r=o[t];for(let t=0;t<4;t++){const a=c[t];if(s.crossVectors(r,a),n.setFromPoints(s,e),i.setFromPoints(s,A),n.isSeparated(i))return!1}}return!0}}(),s_.prototype.closestPointToPoint=function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e},s_.prototype.distanceToPoint=function(){const t=new gi;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),s_.prototype.distanceToBox=function(){const t=["x","y","z"],e=new Array(12).fill().map(()=>new Iu),n=new Array(12).fill().map(()=>new Iu),i=new gi,s=new gi;return function(r,a=0,o=null,l=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(o||l)&&(r.getCenter(s),this.closestPointToPoint(s,i),r.closestPointToPoint(i,s),o&&o.copy(i),l&&l.copy(s)),0;const c=a*a,A=r.min,h=r.max,u=this.points;let d=1/0;for(let t=0;t<8;t++){const e=u[t];s.copy(e).clamp(A,h);const n=e.distanceToSquared(s);if(n<d&&(d=n,o&&o.copy(e),l&&l.copy(s),n<c))return Math.sqrt(n)}let p=0;for(let i=0;i<3;i++)for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){const a=(i+1)%3,o=(i+2)%3,l=1<<i|s<<a|r<<o,c=u[s<<a|r<<o],d=u[l];e[p].set(c,d);const g=t[i],f=t[a],m=t[o],y=n[p],I=y.start,C=y.end;I[g]=A[g],I[f]=s?A[f]:h[f],I[m]=r?A[m]:h[f],C[g]=h[g],C[f]=s?A[f]:h[f],C[m]=r?A[m]:h[f],p++}for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){s.x=t?h.x:A.x,s.y=e?h.y:A.y,s.z=n?h.z:A.z,this.closestPointToPoint(s,i);const r=s.distanceToSquared(i);if(r<d&&(d=r,o&&o.copy(i),l&&l.copy(s),r<c))return Math.sqrt(r)}for(let t=0;t<12;t++){const r=e[t];for(let t=0;t<12;t++){const e=n[t];t_(r,e,i,s);const a=i.distanceToSquared(s);if(a<d&&(d=a,o&&o.copy(i),l&&l.copy(s),a<c))return Math.sqrt(a)}}return Math.sqrt(d)}}();class r_{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return 0===t.length?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class a_ extends r_{constructor(){super(()=>new i_)}}const o_=new a_,l_=new class{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let e=null;this.setBuffer=n=>{e&&t.push(e),e=n,this.float32Array=new Float32Array(n),this.uint16Array=new Uint16Array(n),this.uint32Array=new Uint32Array(n)},this.clearBuffer=()=>{e=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,0!==t.length&&this.setBuffer(t.pop())}}};let c_,A_;const h_=[],u_=new r_(()=>new Ji);function d_(t,e,n,i,s,r){c_=u_.getPrimitive(),A_=u_.getPrimitive(),h_.push(c_,A_),l_.setBuffer(t._roots[e]);const a=p_(0,t.geometry,n,i,s,r);l_.clearBuffer(),u_.releasePrimitive(c_),u_.releasePrimitive(A_),h_.pop(),h_.pop();const o=h_.length;return o>0&&(A_=h_[o-1],c_=h_[o-2]),a}function p_(t,e,n,i,s=null,r=0,a=0){const{float32Array:o,uint16Array:l,uint32Array:c}=l_;let A=2*t;if(Lw(A,l)){const h=Fw(t,c),u=Nw(A,l);return ww(t,o,c_),i(h,u,!1,a,r+t,c_)}{const d=kw(t),p=Ow(t,c);let g,f,m,y,I=d,C=p;if(s&&(m=c_,y=A_,ww(I,o,m),ww(C,o,y),g=s(m),f=s(y),f<g)){I=p,C=d;const S=g;g=f,f=S,m=y}m||(m=c_,ww(I,o,m));const E=n(m,Lw(2*I,l),g,a+1,r+I);let v;if(E===hw){const b=_(I);v=i(b,B(I)-b,!0,a+1,r+I,m)}else v=E&&p_(I,e,n,i,s,r,a+1);if(v)return!0;y=A_,ww(C,o,y);const x=n(y,Lw(2*C,l),f,a+1,r+C);let w;if(x===hw){const M=_(C);w=i(M,B(C)-M,!0,a+1,r+C,y)}else w=x&&p_(C,e,n,i,s,r,a+1);return!!w;function _(t){const{uint16Array:e,uint32Array:n}=l_;let i=2*t;for(;!Lw(i,e);)i=2*(t=kw(t));return Fw(t,n)}function B(t){const{uint16Array:e,uint32Array:n}=l_;let i=2*t;for(;!Lw(i,e);)i=2*(t=Ow(t,n));return Fw(t,n)+Nw(i,e)}}}const g_=new gi,f_=new gi,m_=parseInt(f)>=169,y_=new gi,I_=new gi,C_=new gi,E_=new di,v_=new di,x_=new di,w_=new gi,__=new gi,B_=new gi,S_=new gi;function b_(t,e,n,i,s,r,a){const o=3*i;let l=o+0,c=o+1,A=o+2;const h=t.index;t.index&&(l=h.getX(l),c=h.getX(c),A=h.getX(A));const{position:u,normal:d,uv:p,uv1:g}=t.attributes,f=function(t,e,n,i,s,r,a,o,l,c,A){y_.fromBufferAttribute(e,r),I_.fromBufferAttribute(e,a),C_.fromBufferAttribute(e,o);const h=function(t,e,n,i,s,r,a,o){let l;if(l=r===b?t.intersectTriangle(i,n,e,!0,s):t.intersectTriangle(e,n,i,r!==M,s),null===l)return null;const c=t.origin.distanceTo(s);return c<a||c>o?null:{distance:c,point:s.clone()}}(t,y_,I_,C_,S_,l,c,A);if(h){const e=new gi;lr.getBarycoord(S_,y_,I_,C_,e),i&&(E_.fromBufferAttribute(i,r),v_.fromBufferAttribute(i,a),x_.fromBufferAttribute(i,o),h.uv=lr.getInterpolation(S_,y_,I_,C_,E_,v_,x_,new di)),s&&(E_.fromBufferAttribute(s,r),v_.fromBufferAttribute(s,a),x_.fromBufferAttribute(s,o),h.uv1=lr.getInterpolation(S_,y_,I_,C_,E_,v_,x_,new di)),n&&(w_.fromBufferAttribute(n,r),__.fromBufferAttribute(n,a),B_.fromBufferAttribute(n,o),h.normal=lr.getInterpolation(S_,y_,I_,C_,w_,__,B_,new gi),h.normal.dot(t.direction)>0&&h.normal.multiplyScalar(-1));const l={a:r,b:a,c:o,normal:new gi,materialIndex:0};lr.getNormal(y_,I_,C_,l.normal),h.face=l,h.faceIndex=r,m_&&(h.barycoord=e)}return h}(n,u,d,p,g,l,c,A,e,r,a);return f?(f.faceIndex=i,s&&s.push(f),f):null}function M_(t,e,n,i){const s=t.a,r=t.b,a=t.c;let o=e,l=e+1,c=e+2;n&&(o=n.getX(o),l=n.getX(l),c=n.getX(c)),s.x=i.getX(o),s.y=i.getY(o),s.z=i.getZ(o),r.x=i.getX(l),r.y=i.getY(l),r.z=i.getZ(l),a.x=i.getX(c),a.y=i.getY(c),a.z=i.getZ(c)}const T_=new gi,Q_=new gi,D_=new gi,R_=new di,U_=new di,P_=new di;function L_(t,e,n,i){const s=e.getIndex().array,r=e.getAttribute("position"),a=e.getAttribute("uv"),o=s[3*n],l=s[3*n+1],c=s[3*n+2];T_.fromBufferAttribute(r,o),Q_.fromBufferAttribute(r,l),D_.fromBufferAttribute(r,c);let A=0;const h=e.groups,u=3*n;for(let t=0,e=h.length;t<e;t++){const e=h[t],{start:n,count:i}=e;if(u>=n&&u<n+i){A=e.materialIndex;break}}const d=i&&i.barycoord?i.barycoord:new gi;lr.getBarycoord(t,T_,Q_,D_,d);let p=null;return a&&(R_.fromBufferAttribute(a,o),U_.fromBufferAttribute(a,l),P_.fromBufferAttribute(a,c),p=i&&i.uv?i.uv:new di,lr.getInterpolation(t,T_,Q_,D_,R_,U_,P_,p)),i?(i.face||(i.face={}),i.face.a=o,i.face.b=l,i.face.c=c,i.face.materialIndex=A,i.face.normal||(i.face.normal=new gi),lr.getNormal(T_,Q_,D_,i.face.normal),p&&(i.uv=p),i.barycoord=d,i):{face:{a:o,b:l,c,materialIndex:A,normal:lr.getNormal(T_,Q_,D_,new gi)},uv:p,barycoord:d}}function F_(t,e,n,i,s,r,a){const{geometry:o}=n,{index:l}=o,c=o.attributes.position;for(let n=t,o=e+t;n<o;n++){let t;if(t=n,M_(a,3*t,l,c),a.needsUpdate=!0,i(a,t,s,r))return!0}return!1}function N_(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const n=t.geometry,i=n.index?n.index.array:null,s=n.attributes.position;let r,a,o,l,c=0;const A=t._roots;for(let t=0,e=A.length;t<e;t++)r=A[t],a=new Uint32Array(r),o=new Uint16Array(r),l=new Float32Array(r),h(0,c),c+=r.byteLength;function h(t,n,r=!1){const c=2*t;if(o[c+15]===gw){const e=a[t+6];let n=1/0,r=1/0,A=1/0,h=-1/0,u=-1/0,d=-1/0;for(let t=3*e,a=3*(e+o[c+14]);t<a;t++){let e=i[t];const a=s.getX(e),o=s.getY(e),l=s.getZ(e);a<n&&(n=a),a>h&&(h=a),o<r&&(r=o),o>u&&(u=o),l<A&&(A=l),l>d&&(d=l)}return(l[t+0]!==n||l[t+1]!==r||l[t+2]!==A||l[t+3]!==h||l[t+4]!==u||l[t+5]!==d)&&(l[t+0]=n,l[t+1]=r,l[t+2]=A,l[t+3]=h,l[t+4]=u,l[t+5]=d,!0)}{const i=t+8,s=a[t+6],o=i+n,c=s+n;let A=r,u=!1,d=!1;e?A||(u=e.has(o),d=e.has(c),A=!u&&!d):(u=!0,d=!0);const p=A||d;let g=!1;(A||u)&&(g=h(i,n,A));let f=!1;p&&(f=h(s,n,A));const m=g||f;if(m)for(let e=0;e<3;e++){const n=i+e,r=s+e,a=l[n],o=l[n+3],c=l[r],A=l[r+3];l[t+e]=a<c?a:c,l[t+e+3]=o>A?o:A}return m}}}function k_(t,e,n,i,s){let r,a,o,l,c,A;const h=1/n.direction.x,u=1/n.direction.y,d=1/n.direction.z,p=n.origin.x,g=n.origin.y,f=n.origin.z;let m=e[t],y=e[t+3],I=e[t+1],C=e[t+3+1],E=e[t+2],v=e[t+3+2];return h>=0?(r=(m-p)*h,a=(y-p)*h):(r=(y-p)*h,a=(m-p)*h),u>=0?(o=(I-g)*u,l=(C-g)*u):(o=(C-g)*u,l=(I-g)*u),!(r>l||o>a)&&((o>r||isNaN(r))&&(r=o),(l<a||isNaN(a))&&(a=l),d>=0?(c=(E-f)*d,A=(v-f)*d):(c=(v-f)*d,A=(E-f)*d),!(r>A||c>a)&&((c>r||r!=r)&&(r=c),(A<a||a!=a)&&(a=A),r<=s&&a>=i))}function O_(t,e,n,i,s,r,a){l_.setBuffer(t._roots[e]),z_(0,t,n,i,s,r,a),l_.clearBuffer()}function z_(t,e,n,i,s,r,a){const{float32Array:o,uint16Array:l,uint32Array:c}=l_,A=2*t;if(Lw(A,l))!function(t,e,n,i,s,r,a,o){const{geometry:l,_indirectBuffer:c}=t;for(let t=i,c=i+s;t<c;t++)b_(l,e,n,t,r,a,o)}(e,n,i,Fw(t,c),Nw(A,l),s,r,a);else{const l=kw(t);k_(l,o,i,r,a)&&z_(l,e,n,i,s,r,a);const A=Ow(t,c);k_(A,o,i,r,a)&&z_(A,e,n,i,s,r,a)}}const G_=["x","y","z"];function H_(t,e,n,i,s,r){l_.setBuffer(t._roots[e]);const a=V_(0,t,n,i,s,r);return l_.clearBuffer(),a}function V_(t,e,n,i,s,r){const{float32Array:a,uint16Array:o,uint32Array:l}=l_;let c=2*t;if(Lw(c,o))return function(t,e,n,i,s,r,a){const{geometry:o,_indirectBuffer:l}=t;let c=1/0,A=null;for(let t=i,l=i+s;t<l;t++){let i;i=b_(o,e,n,t,null,r,a),i&&i.distance<c&&(A=i,c=i.distance)}return A}(e,n,i,Fw(t,l),Nw(c,o),s,r);{const o=zw(t,l),c=G_[o],A=i.direction[c]>=0;let h,u;A?(h=kw(t),u=Ow(t,l)):(h=Ow(t,l),u=kw(t));const d=k_(h,a,i,s,r)?V_(h,e,n,i,s,r):null;if(d){const t=d.point[c];if(A?t<=a[u+o]:t>=a[u+o+3])return d}const p=k_(u,a,i,s,r)?V_(u,e,n,i,s,r):null;return d&&p?d.distance<=p.distance?d:p:d||p||null}}const Y_=new Ji,q_=new i_,W_=new i_,J_=new Es,j_=new s_,X_=new s_;function K_(t,e,n,i){l_.setBuffer(t._roots[e]);const s=Z_(0,t,n,i);return l_.clearBuffer(),s}function Z_(t,e,n,i,s=null){const{float32Array:r,uint16Array:a,uint32Array:o}=l_;let l=2*t;if(null===s&&(n.boundingBox||n.computeBoundingBox(),j_.set(n.boundingBox.min,n.boundingBox.max,i),s=j_),!Lw(l,a)){const a=t+8,l=o[t+6];return ww(a,r,Y_),s.intersectsBox(Y_)&&Z_(a,e,n,i,s)?!0:(ww(l,r,Y_),!(!s.intersectsBox(Y_)||!Z_(l,e,n,i,s)))}{const s=e.geometry,c=s.index,A=s.attributes.position,h=n.index,u=n.attributes.position,d=Fw(t,o),p=Nw(l,a);if(J_.copy(i).invert(),n.boundsTree){ww(t,r,X_),X_.matrix.copy(J_),X_.needsUpdate=!0;const e=n.boundsTree.shapecast({intersectsBounds:t=>X_.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(i),t.b.applyMatrix4(i),t.c.applyMatrix4(i),t.needsUpdate=!0;for(let e=3*d,n=3*(p+d);e<n;e+=3)if(M_(W_,e,c,A),W_.needsUpdate=!0,t.intersectsTriangle(W_))return!0;return!1}});return e}for(let t=3*d,e=3*(p+d);t<e;t+=3){M_(q_,t,c,A),q_.a.applyMatrix4(J_),q_.b.applyMatrix4(J_),q_.c.applyMatrix4(J_),q_.needsUpdate=!0;for(let t=0,e=h.count;t<e;t+=3)if(M_(W_,t,h,u),W_.needsUpdate=!0,q_.intersectsTriangle(W_))return!0}}}const $_=new Es,tB=new s_,eB=new s_,nB=new gi,iB=new gi,sB=new gi,rB=new gi;function aB(t,e,n,i={},s={},r=0,a=1/0){e.boundingBox||e.computeBoundingBox(),tB.set(e.boundingBox.min,e.boundingBox.max,n),tB.needsUpdate=!0;const o=t.geometry,l=o.attributes.position,c=o.index,A=e.attributes.position,h=e.index,u=o_.getPrimitive(),d=o_.getPrimitive();let p=nB,g=iB,f=null,m=null;s&&(f=sB,m=rB);let y=1/0,I=null,C=null;return $_.copy(n).invert(),eB.matrix.copy($_),t.shapecast({boundsTraverseOrder:t=>tB.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a&&(e&&(eB.min.copy(t.min),eB.max.copy(t.max),eB.needsUpdate=!0),!0),intersectsRange:(t,i)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:t=>eB.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a,intersectsRange:(e,s)=>{for(let a=e,o=e+s;a<o;a++){M_(d,3*a,h,A),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=t,n=t+i;e<n;e++){M_(u,3*e,c,l),u.needsUpdate=!0;const t=u.distanceToTriangle(d,p,f);if(t<y&&(g.copy(p),m&&m.copy(f),y=t,I=e,C=a),t<r)return!0}}}});for(let s=0,a=Iw(e);s<a;s++){M_(d,3*s,h,A),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=t,n=t+i;e<n;e++){M_(u,3*e,c,l),u.needsUpdate=!0;const t=u.distanceToTriangle(d,p,f);if(t<y&&(g.copy(p),m&&m.copy(f),y=t,I=e,C=s),t<r)return!0}}}}),o_.releasePrimitive(u),o_.releasePrimitive(d),y===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=y,i.faceIndex=I,s&&(s.point?s.point.copy(m):s.point=m.clone(),s.point.applyMatrix4($_),g.applyMatrix4($_),s.distance=g.sub(s.point).length(),s.faceIndex=C),i)}function oB(t,e,n,i,s,r,a){const{geometry:o}=n,{index:l}=o,c=o.attributes.position;for(let o=t,A=e+t;o<A;o++){let t;if(t=n.resolveTriangleIndex(o),M_(a,3*t,l,c),a.needsUpdate=!0,i(a,t,s,r))return!0}return!1}function lB(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const n=t.geometry,i=n.index?n.index.array:null,s=n.attributes.position;let r,a,o,l,c=0;const A=t._roots;for(let t=0,e=A.length;t<e;t++)r=A[t],a=new Uint32Array(r),o=new Uint16Array(r),l=new Float32Array(r),h(0,c),c+=r.byteLength;function h(n,r,c=!1){const A=2*n;if(o[A+15]===gw){const e=a[n+6];let r=1/0,c=1/0,h=1/0,u=-1/0,d=-1/0,p=-1/0;for(let n=e,a=e+o[A+14];n<a;n++){const e=3*t.resolveTriangleIndex(n);for(let t=0;t<3;t++){let n=e+t;n=i?i[n]:n;const a=s.getX(n),o=s.getY(n),l=s.getZ(n);a<r&&(r=a),a>u&&(u=a),o<c&&(c=o),o>d&&(d=o),l<h&&(h=l),l>p&&(p=l)}}return(l[n+0]!==r||l[n+1]!==c||l[n+2]!==h||l[n+3]!==u||l[n+4]!==d||l[n+5]!==p)&&(l[n+0]=r,l[n+1]=c,l[n+2]=h,l[n+3]=u,l[n+4]=d,l[n+5]=p,!0)}{const t=n+8,i=a[n+6],s=t+r,o=i+r;let A=c,u=!1,d=!1;e?A||(u=e.has(s),d=e.has(o),A=!u&&!d):(u=!0,d=!0);const p=A||d;let g=!1;(A||u)&&(g=h(t,r,A));let f=!1;p&&(f=h(i,r,A));const m=g||f;if(m)for(let e=0;e<3;e++){const s=t+e,r=i+e,a=l[s],o=l[s+3],c=l[r],A=l[r+3];l[n+e]=a<c?a:c,l[n+e+3]=o>A?o:A}return m}}}function cB(t,e,n,i,s,r,a){l_.setBuffer(t._roots[e]),AB(0,t,n,i,s,r,a),l_.clearBuffer()}function AB(t,e,n,i,s,r,a){const{float32Array:o,uint16Array:l,uint32Array:c}=l_,A=2*t;if(Lw(A,l))!function(t,e,n,i,s,r,a,o){const{geometry:l,_indirectBuffer:c}=t;for(let t=i,A=i+s;t<A;t++)b_(l,e,n,c?c[t]:t,r,a,o)}(e,n,i,Fw(t,c),Nw(A,l),s,r,a);else{const l=kw(t);k_(l,o,i,r,a)&&AB(l,e,n,i,s,r,a);const A=Ow(t,c);k_(A,o,i,r,a)&&AB(A,e,n,i,s,r,a)}}const hB=["x","y","z"];function uB(t,e,n,i,s,r){l_.setBuffer(t._roots[e]);const a=dB(0,t,n,i,s,r);return l_.clearBuffer(),a}function dB(t,e,n,i,s,r){const{float32Array:a,uint16Array:o,uint32Array:l}=l_;let c=2*t;if(Lw(c,o))return function(t,e,n,i,s,r,a){const{geometry:o,_indirectBuffer:l}=t;let c=1/0,A=null;for(let t=i,h=i+s;t<h;t++){let i;i=b_(o,e,n,l?l[t]:t,null,r,a),i&&i.distance<c&&(A=i,c=i.distance)}return A}(e,n,i,Fw(t,l),Nw(c,o),s,r);{const o=zw(t,l),c=hB[o],A=i.direction[c]>=0;let h,u;A?(h=kw(t),u=Ow(t,l)):(h=Ow(t,l),u=kw(t));const d=k_(h,a,i,s,r)?dB(h,e,n,i,s,r):null;if(d){const t=d.point[c];if(A?t<=a[u+o]:t>=a[u+o+3])return d}const p=k_(u,a,i,s,r)?dB(u,e,n,i,s,r):null;return d&&p?d.distance<=p.distance?d:p:d||p||null}}const pB=new Ji,gB=new i_,fB=new i_,mB=new Es,yB=new s_,IB=new s_;function CB(t,e,n,i){l_.setBuffer(t._roots[e]);const s=EB(0,t,n,i);return l_.clearBuffer(),s}function EB(t,e,n,i,s=null){const{float32Array:r,uint16Array:a,uint32Array:o}=l_;let l=2*t;if(null===s&&(n.boundingBox||n.computeBoundingBox(),yB.set(n.boundingBox.min,n.boundingBox.max,i),s=yB),!Lw(l,a)){const a=t+8,l=o[t+6];return ww(a,r,pB),s.intersectsBox(pB)&&EB(a,e,n,i,s)?!0:(ww(l,r,pB),!(!s.intersectsBox(pB)||!EB(l,e,n,i,s)))}{const s=e.geometry,c=s.index,A=s.attributes.position,h=n.index,u=n.attributes.position,d=Fw(t,o),p=Nw(l,a);if(mB.copy(i).invert(),n.boundsTree){ww(t,r,IB),IB.matrix.copy(mB),IB.needsUpdate=!0;const s=n.boundsTree.shapecast({intersectsBounds:t=>IB.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(i),t.b.applyMatrix4(i),t.c.applyMatrix4(i),t.needsUpdate=!0;for(let n=d,i=p+d;n<i;n++)if(M_(fB,3*e.resolveTriangleIndex(n),c,A),fB.needsUpdate=!0,t.intersectsTriangle(fB))return!0;return!1}});return s}for(let t=d,n=p+d;t<n;t++){const n=e.resolveTriangleIndex(t);M_(gB,3*n,c,A),gB.a.applyMatrix4(mB),gB.b.applyMatrix4(mB),gB.c.applyMatrix4(mB),gB.needsUpdate=!0;for(let t=0,e=h.count;t<e;t+=3)if(M_(fB,t,h,u),fB.needsUpdate=!0,gB.intersectsTriangle(fB))return!0}}}const vB=new Es,xB=new s_,wB=new s_,_B=new gi,BB=new gi,SB=new gi,bB=new gi;function MB(t,e,n,i={},s={},r=0,a=1/0){e.boundingBox||e.computeBoundingBox(),xB.set(e.boundingBox.min,e.boundingBox.max,n),xB.needsUpdate=!0;const o=t.geometry,l=o.attributes.position,c=o.index,A=e.attributes.position,h=e.index,u=o_.getPrimitive(),d=o_.getPrimitive();let p=_B,g=BB,f=null,m=null;s&&(f=SB,m=bB);let y=1/0,I=null,C=null;return vB.copy(n).invert(),wB.matrix.copy(vB),t.shapecast({boundsTraverseOrder:t=>xB.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a&&(e&&(wB.min.copy(t.min),wB.max.copy(t.max),wB.needsUpdate=!0),!0),intersectsRange:(i,s)=>{if(e.boundsTree){const o=e.boundsTree;return o.shapecast({boundsTraverseOrder:t=>wB.distanceToBox(t),intersectsBounds:(t,e,n)=>n<y&&n<a,intersectsRange:(e,a)=>{for(let E=e,v=e+a;E<v;E++){const e=o.resolveTriangleIndex(E);M_(d,3*e,h,A),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=i,n=i+s;e<n;e++){const n=t.resolveTriangleIndex(e);M_(u,3*n,c,l),u.needsUpdate=!0;const i=u.distanceToTriangle(d,p,f);if(i<y&&(g.copy(p),m&&m.copy(f),y=i,I=e,C=E),i<r)return!0}}}})}for(let a=0,o=Iw(e);a<o;a++){M_(d,3*a,h,A),d.a.applyMatrix4(n),d.b.applyMatrix4(n),d.c.applyMatrix4(n),d.needsUpdate=!0;for(let e=i,n=i+s;e<n;e++){const n=t.resolveTriangleIndex(e);M_(u,3*n,c,l),u.needsUpdate=!0;const i=u.distanceToTriangle(d,p,f);if(i<y&&(g.copy(p),m&&m.copy(f),y=i,I=e,C=a),i<r)return!0}}}}),o_.releasePrimitive(u),o_.releasePrimitive(d),y===1/0?null:(i.point?i.point.copy(g):i.point=g.clone(),i.distance=y,i.faceIndex=I,s&&(s.point?s.point.copy(m):s.point=m.clone(),s.point.applyMatrix4(vB),g.applyMatrix4(vB),s.distance=g.sub(s.point).length(),s.faceIndex=C),i)}function TB(){return"undefined"!=typeof SharedArrayBuffer}const QB=new l_.constructor,DB=new l_.constructor,RB=new r_(()=>new Ji),UB=new Ji,PB=new Ji,LB=new Ji,FB=new Ji;let NB=!1;function kB(t,e,n,i,s,r=0,a=0,o=0,l=0,c=null,A=!1){let h,u;A?(h=DB,u=QB):(h=QB,u=DB);const d=h.float32Array,p=h.uint32Array,g=h.uint16Array,f=u.float32Array,m=u.uint32Array,y=u.uint16Array,I=2*e,C=Lw(2*t,g),E=Lw(I,y);let v=!1;if(E&&C)v=A?s(Fw(e,m),Nw(2*e,y),Fw(t,p),Nw(2*t,g),l,a+e,o,r+t):s(Fw(t,p),Nw(2*t,g),Fw(e,m),Nw(2*e,y),o,r+t,l,a+e);else if(E){const c=RB.getPrimitive();ww(e,f,c),c.applyMatrix4(n);const h=kw(t),u=Ow(t,p);ww(h,d,UB),ww(u,d,PB);const g=c.intersectsBox(UB),m=c.intersectsBox(PB);v=g&&kB(e,h,i,n,s,a,r,l,o+1,c,!A)||m&&kB(e,u,i,n,s,a,r,l,o+1,c,!A),RB.releasePrimitive(c)}else{const h=kw(e),u=Ow(e,m);ww(h,f,LB),ww(u,f,FB);const g=c.intersectsBox(LB),y=c.intersectsBox(FB);if(g&&y)v=kB(t,h,n,i,s,r,a,o,l+1,c,A)||kB(t,u,n,i,s,r,a,o,l+1,c,A);else if(g)if(C)v=kB(t,h,n,i,s,r,a,o,l+1,c,A);else{const e=RB.getPrimitive();e.copy(LB).applyMatrix4(n);const c=kw(t),u=Ow(t,p);ww(c,d,UB),ww(u,d,PB);const g=e.intersectsBox(UB),f=e.intersectsBox(PB);v=g&&kB(h,c,i,n,s,a,r,l,o+1,e,!A)||f&&kB(h,u,i,n,s,a,r,l,o+1,e,!A),RB.releasePrimitive(e)}else if(y)if(C)v=kB(t,u,n,i,s,r,a,o,l+1,c,A);else{const e=RB.getPrimitive();e.copy(FB).applyMatrix4(n);const c=kw(t),h=Ow(t,p);ww(c,d,UB),ww(h,d,PB);const g=e.intersectsBox(UB),f=e.intersectsBox(PB);v=g&&kB(u,c,i,n,s,a,r,l,o+1,e,!A)||f&&kB(u,h,i,n,s,a,r,l,o+1,e,!A),RB.releasePrimitive(e)}}return v}const OB=new s_,zB=new Ji,GB={strategy:aw,maxDepth:40,maxLeafTris:10,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,verbose:!0,range:null};class HB{static serialize(t,e={}){e={cloneBuffers:!0,...e};const n=t.geometry,i=t._roots,s=t._indirectBuffer,r=n.getIndex();let a;return a=e.cloneBuffers?{roots:i.map(t=>t.slice()),index:r?r.array.slice():null,indirectBuffer:s?s.slice():null}:{roots:i,index:r?r.array:null,indirectBuffer:s},a}static deserialize(t,e,n={}){n={setIndex:!0,indirect:Boolean(t.indirectBuffer),...n};const{index:i,roots:s,indirectBuffer:r}=t,a=new HB(e,{...n,[mw]:!0});if(a._roots=s,a._indirectBuffer=r||null,n.setIndex){const n=e.getIndex();if(null===n){const n=new Br(t.index,1,!1);e.setIndex(n)}else n.array!==i&&(n.array.set(i),n.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(t,e={}){if(!t.isBufferGeometry)throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.");if((e=Object.assign({...GB,[mw]:!1},e)).useSharedArrayBuffer&&!TB())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,e[mw]||(Kw(this,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new Ji))),this.resolveTriangleIndex=e.indirect?t=>this._indirectBuffer[t]:t=>t}refit(t=null){return(this.indirect?lB:N_)(this,t)}traverse(t,e=0){const n=this._roots[e],i=new Uint32Array(n),s=new Uint16Array(n);!function e(r,a=0){const o=2*r,l=s[o+15]===gw;if(l){const e=i[r+6],c=s[o+14];t(a,l,new Float32Array(n,4*r,6),e,c)}else{const s=r+8,o=i[r+6],c=i[r+7];t(a,l,new Float32Array(n,4*r,6),c)||(e(s,a+1),e(o,a+1))}}(0)}raycast(t,e=S,n=0,i=1/0){const s=this._roots,r=this.geometry,a=[],o=e.isMaterial,l=Array.isArray(e),c=r.groups,A=o?e.side:e,h=this.indirect?cB:O_;for(let r=0,o=s.length;r<o;r++){const s=l?e[c[r].materialIndex].side:A,o=a.length;if(h(this,r,s,t,a,n,i),l){const t=c[r].materialIndex;for(let e=o,n=a.length;e<n;e++)a[e].face.materialIndex=t}}return a}raycastFirst(t,e=S,n=0,i=1/0){const s=this._roots,r=this.geometry,a=e.isMaterial,o=Array.isArray(e);let l=null;const c=r.groups,A=a?e.side:e,h=this.indirect?uB:H_;for(let r=0,a=s.length;r<a;r++){const s=h(this,r,o?e[c[r].materialIndex].side:A,t,n,i);null!=s&&(null==l||s.distance<l.distance)&&(l=s,o&&(s.face.materialIndex=c[r].materialIndex))}return l}intersectsGeometry(t,e){let n=!1;const i=this._roots,s=this.indirect?CB:K_;for(let r=0,a=i.length;r<a&&(n=s(this,r,t,e),!n);r++);return n}shapecast(t){const e=o_.getPrimitive(),n=this.indirect?oB:F_;let{boundsTraverseOrder:i,intersectsBounds:s,intersectsRange:r,intersectsTriangle:a}=t;if(r&&a){const t=r;r=(i,s,r,o,l)=>!!t(i,s,r,o,l)||n(i,s,this,a,r,o,e)}else r||(r=a?(t,i,s,r)=>n(t,i,this,a,s,r,e):(t,e,n)=>n);let o=!1,l=0;const c=this._roots;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(o=d_(this,t,s,r,i,l),o)break;l+=e.byteLength}return o_.releasePrimitive(e),o}bvhcast(t,e,n){let{intersectsRanges:i,intersectsTriangles:s}=n;const r=o_.getPrimitive(),a=this.geometry.index,o=this.geometry.attributes.position,l=this.indirect?t=>{const e=this.resolveTriangleIndex(t);M_(r,3*e,a,o)}:t=>{M_(r,3*t,a,o)},c=o_.getPrimitive(),A=t.geometry.index,h=t.geometry.attributes.position,u=t.indirect?e=>{const n=t.resolveTriangleIndex(e);M_(c,3*n,A,h)}:t=>{M_(c,3*t,A,h)};if(s){const t=(t,n,i,a,o,A,h,d)=>{for(let p=i,g=i+a;p<g;p++){u(p),c.a.applyMatrix4(e),c.b.applyMatrix4(e),c.c.applyMatrix4(e),c.needsUpdate=!0;for(let e=t,i=t+n;e<i;e++)if(l(e),r.needsUpdate=!0,s(r,c,e,p,o,A,h,d))return!0}return!1};if(i){const e=i;i=function(n,i,s,r,a,o,l,c){return!!e(n,i,s,r,a,o,l,c)||t(n,i,s,r,a,o,l,c)}}else i=t}return function(t,e,n,i){if(NB)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");NB=!0;const s=t._roots,r=e._roots;let a,o=0,l=0;const c=(new Es).copy(n).invert();for(let t=0,e=s.length;t<e;t++){QB.setBuffer(s[t]),l=0;const e=RB.getPrimitive();ww(Gw(0),QB.float32Array,e),e.applyMatrix4(c);for(let t=0,s=r.length;t<s&&(DB.setBuffer(r[t]),a=kB(0,0,n,c,i,o,l,0,0,e),DB.clearBuffer(),l+=r[t].length,!a);t++);if(RB.releasePrimitive(e),QB.clearBuffer(),o+=s[t].length,a)break}return NB=!1,a}(this,t,e,i)}intersectsBox(t,e){return OB.set(t.min,t.max,e),OB.needsUpdate=!0,this.shapecast({intersectsBounds:t=>OB.intersectsBox(t),intersectsTriangle:t=>OB.intersectsTriangle(t)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,n={},i={},s=0,r=1/0){return(this.indirect?MB:aB)(this,t,e,n,i,s,r)}closestPointToPoint(t,e={},n=0,i=1/0){return function(t,e,n={},i=0,s=1/0){const r=i*i,a=s*s;let o=1/0,l=null;if(t.shapecast({boundsTraverseOrder:t=>(g_.copy(e).clamp(t.min,t.max),g_.distanceToSquared(e)),intersectsBounds:(t,e,n)=>n<o&&n<a,intersectsTriangle:(t,n)=>{t.closestPointToPoint(e,g_);const i=e.distanceToSquared(g_);return i<o&&(f_.copy(g_),o=i,l=n),i<r}}),o===1/0)return null;const c=Math.sqrt(o);return n.point?n.point.copy(f_):n.point=f_.clone(),n.distance=c,n.faceIndex=l,n}(this,t,e,n,i)}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(e=>{ww(0,new Float32Array(e),zB),t.union(zB)}),t}}const VB=parseInt(f)>=166,YB=new Cs,qB=new gi,WB=new Es,JB=ea.prototype.raycast,jB=qo.prototype.raycast,XB=new gi,KB=new ea,ZB=[];function $B(t,e){this.isBatchedMesh?tS.call(this,t,e):eS.call(this,t,e)}function tS(t,e){if(this.boundsTrees){const n=this.boundsTrees,i=this._drawInfo||this._instanceInfo,s=this._drawRanges||this._geometryInfo,r=this.matrixWorld;KB.material=this.material,KB.geometry=this.geometry;const a=KB.geometry.boundsTree,o=KB.geometry.drawRange;null===KB.geometry.boundingSphere&&(KB.geometry.boundingSphere=new us);for(let a=0,o=i.length;a<o;a++){if(!this.getVisibleAt(a))continue;const o=i[a].geometryIndex;if(KB.geometry.boundsTree=n[o],this.getMatrixAt(a,KB.matrixWorld).premultiply(r),!KB.geometry.boundsTree){this.getBoundingBoxAt(o,KB.geometry.boundingBox),this.getBoundingSphereAt(o,KB.geometry.boundingSphere);const t=s[o];KB.geometry.setDrawRange(t.start,t.count)}KB.raycast(t,ZB);for(let t=0,n=ZB.length;t<n;t++){const n=ZB[t];n.object=this,n.batchId=a,e.push(n)}ZB.length=0}KB.geometry.boundsTree=a,KB.geometry.drawRange=o,KB.material=null,KB.geometry=null}else jB.call(this,t,e)}function eS(t,e){if(this.geometry.boundsTree){if(void 0===this.material)return;WB.copy(this.matrixWorld).invert(),YB.copy(t.ray).applyMatrix4(WB),XB.setFromMatrixScale(this.matrixWorld),qB.copy(YB.direction).multiply(XB);const n=qB.length(),i=t.near/n,s=t.far/n,r=this.geometry.boundsTree;if(!0===t.firstHitOnly){const n=rw(r.raycastFirst(YB,this.material,i,s),this,t);n&&e.push(n)}else{const n=r.raycast(YB,this.material,i,s);for(let i=0,s=n.length;i<s;i++){const s=rw(n[i],this,t);s&&e.push(s)}}}else JB.call(this,t,e)}function nS(t={}){return this.boundsTree=new HB(this,t),this.boundsTree}function iS(){this.boundsTree=null}function sS(t=-1,e={}){if(!VB)throw new Error("BatchedMesh: Three r166+ is required to compute bounds trees.");e.indirect&&console.warn('"Indirect" is set to false because it is not supported for BatchedMesh.'),e={...e,indirect:!1,range:null};const n=this._drawRanges||this._geometryInfo,i=this._geometryCount;this.boundsTrees||(this.boundsTrees=new Array(i).fill(null));const s=this.boundsTrees;for(;s.length<i;)s.push(null);if(t<0){for(let t=0;t<i;t++)e.range=n[t],s[t]=new HB(this.geometry,e);return s}return t<n.length&&(e.range=n[t],s[t]=new HB(this.geometry,e)),s[t]||null}function rS(t=-1){t<0?this.boundsTrees.fill(null):t<this.boundsTree.length&&(this.boundsTrees[t]=null)}const aS=new Ji,oS=new Es;class lS extends Js{get isMesh(){return!this.displayEdges}get isLineSegments(){return this.displayEdges}get isLine(){return this.displayEdges}getVertexPosition(...t){return ea.prototype.getVertexPosition.call(this,...t)}constructor(t,e,n=10,i=0){super(),this.material=e,this.geometry=new Hr,this.name="MeshBVHRootHelper",this.depth=n,this.displayParents=!1,this.bvh=t,this.displayEdges=!0,this._group=i}raycast(){}update(){const t=this.geometry,e=this.bvh,n=this._group;if(t.dispose(),this.visible=!1,e){const i=this.depth-1,s=this.displayParents;let r=0;e.traverse((t,e)=>{if(t>=i||e)return r++,!0;s&&r++},n);let a=0;const o=new Float32Array(24*r);let l,c;e.traverse((t,e,n)=>{const r=t>=i||e;if(r||s){ww(0,n,aS);const{min:t,max:e}=aS;for(let n=-1;n<=1;n+=2){const i=n<0?t.x:e.x;for(let n=-1;n<=1;n+=2){const s=n<0?t.y:e.y;for(let n=-1;n<=1;n+=2){const r=n<0?t.z:e.z;o[a+0]=i,o[a+1]=s,o[a+2]=r,a+=3}}}return r}},n),c=this.displayEdges?new Uint8Array([0,4,1,5,2,6,3,7,0,2,1,3,4,6,5,7,0,1,2,3,4,5,6,7]):new Uint8Array([0,1,2,2,1,3,4,6,5,6,7,5,1,4,5,0,4,1,2,3,6,3,7,6,0,2,4,2,6,4,1,5,3,3,5,7]),l=o.length>65535?new Uint32Array(c.length*r):new Uint16Array(c.length*r);const A=c.length;for(let t=0;t<r;t++){const e=8*t,n=t*A;for(let t=0;t<A;t++)l[n+t]=e+c[t]}t.setIndex(new Br(l,1,!1)),t.setAttribute("position",new Br(o,3,!1)),this.visible=!0}}}class cS extends ya{get color(){return this.edgeMaterial.color}get opacity(){return this.edgeMaterial.opacity}set opacity(t){this.edgeMaterial.opacity=t,this.meshMaterial.opacity=t}constructor(t=null,e=null,n=10){t instanceof HB&&(n=e||10,e=t,t=null),"number"==typeof e&&(n=e,e=null),super(),this.name="MeshBVHHelper",this.depth=n,this.mesh=t,this.bvh=e,this.displayParents=!1,this.displayEdges=!0,this.objectIndex=0,this._roots=[];const i=new Wo({color:65416,transparent:!0,opacity:.3,depthWrite:!1}),s=new mr({color:65416,transparent:!0,opacity:.3,depthWrite:!1});s.color=i.color,this.edgeMaterial=i,this.meshMaterial=s,this.update()}update(){const t=this.mesh;let e=this.bvh||t.geometry.boundsTree||null;if(t.isBatchedMesh&&t.boundsTrees&&!e){const n=t._drawInfo[this.objectIndex];n&&(e=t.boundsTrees[n.geometryIndex]||e)}const n=e?e._roots.length:0;for(;this._roots.length>n;){const t=this._roots.pop();t.geometry.dispose(),this.remove(t)}for(let t=0;t<n;t++){const{depth:n,edgeMaterial:i,meshMaterial:s,displayParents:r,displayEdges:a}=this;if(t>=this._roots.length){const s=new lS(e,i,n,t);this.add(s),this._roots.push(s)}const o=this._roots[t];o.bvh=e,o.depth=n,o.displayParents=r,o.displayEdges=a,o.material=a?i:s,o.update()}}updateMatrixWorld(...t){const e=this.mesh,n=this.parent;null!==e&&(e.updateWorldMatrix(!0,!1),n?this.matrix.copy(n.matrixWorld).invert().multiply(e.matrixWorld):this.matrix.copy(e.matrixWorld),(e.isInstancedMesh||e.isBatchedMesh)&&(e.getMatrixAt(this.objectIndex,oS),this.matrix.multiply(oS)),this.matrix.decompose(this.position,this.quaternion,this.scale)),super.updateMatrixWorld(...t)}copy(t){this.depth=t.depth,this.mesh=t.mesh,this.bvh=t.bvh,this.opacity=t.opacity,this.color.copy(t.color)}clone(){return new cS(this.mesh,this.bvh,this.depth)}dispose(){this.edgeMaterial.dispose(),this.meshMaterial.dispose();const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].geometry.dispose()}}const AS=new Ji,hS=new Ji,uS=new gi;function dS(t){switch(typeof t){case"number":return 8;case"string":return 2*t.length;case"boolean":return 4;default:return 0}}function pS(t){return/(Uint|Int|Float)(8|16|32)Array/.test(t.constructor.name)}function gS(t){return t._roots.map((e,n)=>function(t,e){const n={nodeCount:0,leafNodeCount:0,depth:{min:1/0,max:-1/0},tris:{min:1/0,max:-1/0},splits:[0,0,0],surfaceAreaScore:0};return t.traverse((t,e,i,s,r)=>{const a=i[3]-i[0],o=i[4]-i[1],l=i[5]-i[2],c=2*(a*o+o*l+l*a);n.nodeCount++,e?(n.leafNodeCount++,n.depth.min=Math.min(t,n.depth.min),n.depth.max=Math.max(t,n.depth.max),n.tris.min=Math.min(r,n.tris.min),n.tris.max=Math.max(r,n.tris.max),n.surfaceAreaScore+=c*uw*r):(n.splits[s]++,n.surfaceAreaScore+=c*dw)},e),n.tris.min===1/0&&(n.tris.min=0,n.tris.max=0),n.depth.min===1/0&&(n.depth.min=0,n.depth.max=0),n}(t,n))}function fS(t){const e=new Set,n=[t];let i=0;for(;n.length;){const t=n.pop();if(!e.has(t)){e.add(t);for(let e in t){if(!Object.hasOwn(t,e))continue;i+=dS(e);const s=t[e];!s||"object"!=typeof s&&"function"!=typeof s?i+=dS(s):pS(s)||TB()&&s instanceof SharedArrayBuffer||s instanceof ArrayBuffer?i+=s.byteLength:n.push(s)}}}return i}function mS(t){const e=t.geometry,n=[],i=e.index,s=e.getAttribute("position");let r=!0;return t.traverse((e,a,o,l,c)=>{const A={depth:e,isLeaf:a,boundingData:o,offset:l,count:c};n[e]=A,ww(0,o,AS);const h=n[e-1];if(a)for(let e=l,n=l+c;e<n;e++){const n=t.resolveTriangleIndex(e);let a,o=3*n,l=3*n+1,c=3*n+2;i&&(o=i.getX(o),l=i.getX(l),c=i.getX(c)),uS.fromBufferAttribute(s,o),a=AS.containsPoint(uS),uS.fromBufferAttribute(s,l),a=a&&AS.containsPoint(uS),uS.fromBufferAttribute(s,c),a=a&&AS.containsPoint(uS),console.assert(a,"Leaf bounds does not fully contain triangle."),r=r&&a}if(h){ww(0,o,hS);const t=hS.containsBox(AS);console.assert(t,"Parent bounds does not fully contain child."),r=r&&t}}),r}function yS(t){const e=[];return t.traverse((t,n,i,s,r)=>{const a={bounds:ww(0,i,new Ji)};n?(a.count=r,a.offset=s):(a.left=null,a.right=null),e[t]=a;const o=e[t-1];o&&(null===o.left?o.left=a:o.right=a)}),e[0]}function IS(t){switch(t){case 1:return ae;case 2:return le;case 3:case 4:return Ae}}class CS extends io{constructor(){super(),this.minFilter=Dt,this.magFilter=Dt,this.generateMipmaps=!1,this.overrideItemSize=null,this._forcedType=null}updateFrom(t){const e=this.overrideItemSize,n=t.itemSize,i=t.count;if(null!==e){if(n*i%e!==0)throw new Error("VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.");t.itemSize=e,t.count=i*n/e}const s=t.itemSize,r=t.count,a=t.normalized,o=t.array.constructor,l=o.BYTES_PER_ELEMENT;let c,A,h,u,d=this._forcedType,p=s;if(null===d)switch(o){case Float32Array:d=Jt;break;case Uint8Array:case Uint16Array:case Uint32Array:d=Wt;break;case Int8Array:case Int16Array:case Int32Array:d=qt}let g=function(t){switch(t){case 1:return"R";case 2:return"RG";case 3:case 4:return"RGBA"}throw new Error}(s);switch(d){case Jt:h=1,A=function(t){switch(t){case 1:return re;case 2:return oe;case 3:case 4:return ne}}(s),a&&1===l?(u=o,g+="8",o===Uint8Array?c=Gt:(c=Ht,g+="_SNORM")):(u=Float32Array,g+="32F",c=Jt);break;case qt:g+=8*l+"I",h=a?Math.pow(2,8*o.BYTES_PER_ELEMENT-1):1,A=IS(s),1===l?(u=Int8Array,c=Ht):2===l?(u=Int16Array,c=Vt):(u=Int32Array,c=qt);break;case Wt:g+=8*l+"UI",h=a?Math.pow(2,8*o.BYTES_PER_ELEMENT-1):1,A=IS(s),1===l?(u=Uint8Array,c=Gt):2===l?(u=Uint16Array,c=Yt):(u=Uint32Array,c=Wt)}3!==p||A!==ne&&A!==Ae||(p=4);const f=Math.ceil(Math.sqrt(r))||1,m=new u(p*f*f),y=t.normalized;t.normalized=!1;for(let e=0;e<r;e++){const n=p*e;m[n]=t.getX(e)/h,s>=2&&(m[n+1]=t.getY(e)/h),s>=3&&(m[n+2]=t.getZ(e)/h,4===p&&(m[n+3]=1)),s>=4&&(m[n+3]=t.getW(e)/h)}t.normalized=y,this.internalFormat=g,this.format=A,this.type=c,this.image.width=f,this.image.height=f,this.image.data=m,this.needsUpdate=!0,this.dispose(),t.itemSize=n,t.count=i}}class ES extends CS{constructor(){super(),this._forcedType=Wt}}class vS extends CS{constructor(){super(),this._forcedType=qt}}class xS extends CS{constructor(){super(),this._forcedType=Jt}}class wS{constructor(){this.index=new ES,this.position=new xS,this.bvhBounds=new io,this.bvhContents=new io,this._cachedIndexAttr=null,this.index.overrideItemSize=3}updateFrom(t){const{geometry:e}=t;if(function(t,e,n){const i=t._roots;if(1!==i.length)throw new Error("MeshBVHUniformStruct: Multi-root BVHs not supported.");const s=i[0],r=new Uint16Array(s),a=new Uint32Array(s),o=new Float32Array(s),l=s.byteLength/pw,c=2*Math.ceil(Math.sqrt(l/2)),A=new Float32Array(4*c*c),h=Math.ceil(Math.sqrt(l)),u=new Uint32Array(2*h*h);for(let t=0;t<l;t++){const e=t*pw/4,n=2*e,i=Gw(e);for(let e=0;e<3;e++)A[8*t+0+e]=o[i+0+e],A[8*t+4+e]=o[i+3+e];if(Lw(n,r)){const i=Nw(n,r),s=Fw(e,a),o=4294901760|i;u[2*t+0]=o,u[2*t+1]=s}else{const n=4*Ow(e,a)/pw,i=zw(e,a);u[2*t+0]=i,u[2*t+1]=n}}e.image.data=A,e.image.width=c,e.image.height=c,e.format=ne,e.type=Jt,e.internalFormat="RGBA32F",e.minFilter=Dt,e.magFilter=Dt,e.generateMipmaps=!1,e.needsUpdate=!0,e.dispose(),n.image.data=u,n.image.width=h,n.image.height=h,n.format=le,n.type=Wt,n.internalFormat="RG32UI",n.minFilter=Dt,n.magFilter=Dt,n.generateMipmaps=!1,n.needsUpdate=!0,n.dispose()}(t,this.bvhBounds,this.bvhContents),this.position.updateFrom(e.attributes.position),t.indirect){const n=t._indirectBuffer;if(null===this._cachedIndexAttr||this._cachedIndexAttr.count!==n.length)if(e.index)this._cachedIndexAttr=e.index.clone();else{const t=Cw(yw(e));this._cachedIndexAttr=new Br(t,1,!1)}!function(t,e,n){const i=n.array,s=t.index?t.index.array:null;for(let t=0,n=e.length;t<n;t++){const n=3*t,r=3*e[t];for(let t=0;t<3;t++)i[n+t]=s?s[r+t]:r+t}}(e,n,this._cachedIndexAttr),this.index.updateFrom(this._cachedIndexAttr)}else this.index.updateFrom(e.index)}dispose(){const{index:t,position:e,bvhBounds:n,bvhContents:i}=this;t&&t.dispose(),e&&e.dispose(),n&&n.dispose(),i&&i.dispose()}}const _S=new gi,BS=new gi,SS=new gi,bS=new zi,MS=new gi,TS=new gi,QS=new zi,DS=new zi,RS=new Es,US=new Es;function PS(t,e){if(!t&&!e)return;const n=t.count===e.count,i=t.normalized===e.normalized,s=t.array.constructor===e.array.constructor,r=t.itemSize===e.itemSize;if(!(n&&i&&s&&r))throw new Error}function LS(t,e=null){const n=t.array.constructor,i=t.normalized,s=t.itemSize,r=null===e?t.count:e;return new Br(new n(s*r),s,i)}function FS(t,e,n=0){if(t.isInterleavedBufferAttribute){const i=t.itemSize;for(let s=0,r=t.count;s<r;s++){const r=s+n;e.setX(r,t.getX(s)),i>=2&&e.setY(r,t.getY(s)),i>=3&&e.setZ(r,t.getZ(s)),i>=4&&e.setW(r,t.getW(s))}}else{const i=e.array,s=i.constructor,r=i.BYTES_PER_ELEMENT*t.itemSize*n;new s(i.buffer,r,t.array.length).set(t.array)}}function NS(t,e,n){const i=t.elements,s=e.elements;for(let t=0,e=s.length;t<e;t++)i[t]+=s[t]*n}function kS(t,e,n){const i=t.skeleton,s=t.geometry,r=i.bones,a=i.boneInverses;QS.fromBufferAttribute(s.attributes.skinIndex,e),DS.fromBufferAttribute(s.attributes.skinWeight,e),RS.elements.fill(0);for(let t=0;t<4;t++){const e=DS.getComponent(t);if(0!==e){const n=QS.getComponent(t);US.multiplyMatrices(r[n].matrixWorld,a[n]),NS(RS,US,e)}}return RS.multiply(t.bindMatrix).premultiply(t.bindMatrixInverse),n.transformDirection(RS),n}function OS(t,e,n,i,s){MS.set(0,0,0);for(let r=0,a=t.length;r<a;r++){const a=e[r],o=t[r];0!==a&&(TS.fromBufferAttribute(o,i),n?MS.addScaledVector(TS,a):MS.addScaledVector(TS.sub(s),a))}s.add(MS)}class zS{constructor(t){this.matrixWorld=new Es,this.geometryHash=null,this.boneMatrices=null,this.primitiveCount=-1,this.mesh=t,this.update()}update(){const t=this.mesh,e=t.geometry,n=t.skeleton,i=(e.index?e.index.count:e.attributes.position.count)/3;if(this.matrixWorld.copy(t.matrixWorld),this.geometryHash=e.attributes.position.version,this.primitiveCount=i,n){n.boneTexture||n.computeBoneTexture(),n.update();const t=n.boneMatrices;this.boneMatrices&&this.boneMatrices.length===t.length?this.boneMatrices.set(t):this.boneMatrices=t.slice()}else this.boneMatrices=null}didChange(){const t=this.mesh,e=t.geometry,n=(e.index?e.index.count:e.attributes.position.count)/3,i=this.matrixWorld.equals(t.matrixWorld)&&this.geometryHash===e.attributes.position.version&&function(t,e){if(null===t||null===e)return t===e;if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}(t.skeleton&&t.skeleton.boneMatrices||null,this.boneMatrices)&&this.primitiveCount===n;return!i}}class GS{constructor(t){Array.isArray(t)||(t=[t]);const e=[];t.forEach(t=>{t.traverseVisible(t=>{t.isMesh&&e.push(t)})}),this.meshes=e,this.useGroups=!0,this.applyWorldTransforms=!0,this.attributes=["position","normal","color","tangent","uv","uv2"],this._intermediateGeometry=new Array(e.length).fill().map(()=>new Hr),this._diffMap=new WeakMap}getMaterials(){const t=[];return this.meshes.forEach(e=>{Array.isArray(e.material)?t.push(...e.material):t.push(e.material)}),t}generate(t=new Hr){let e=[];const{meshes:n,useGroups:i,_intermediateGeometry:s,_diffMap:r}=this;for(let t=0,i=n.length;t<i;t++){const i=n[t],a=s[t],o=r.get(i);!o||o.didChange(i)?(this._convertToStaticGeometry(i,a),e.push(!1),o?o.update():r.set(i,new zS(i))):e.push(!0)}if(0===s.length){t.setIndex(null);const e=t.attributes;for(const n in e)t.deleteAttribute(n);for(const e in this.attributes)t.setAttribute(this.attributes[e],new Br(new Float32Array(0),4,!1))}else!function(t,e={useGroups:!1,updateIndex:!1,skipAttributes:[]},n=new Hr){const i=null!==t[0].index,{useGroups:s=!1,updateIndex:r=!1,skipAttributes:a=[]}=e,o=new Set(Object.keys(t[0].attributes)),l={};let c=0;n.clearGroups();for(let e=0;e<t.length;++e){const r=t[e];let a=0;if(i!==(null!==r.index))throw new Error("StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.");for(const t in r.attributes){if(!o.has(t))throw new Error('StaticGeometryGenerator: All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.');void 0===l[t]&&(l[t]=[]),l[t].push(r.attributes[t]),a++}if(a!==o.size)throw new Error("StaticGeometryGenerator: Make sure all geometries have the same number of attributes.");if(s){let t;if(i)t=r.index.count;else{if(void 0===r.attributes.position)throw new Error("StaticGeometryGenerator: The geometry must have either an index or a position attribute");t=r.attributes.position.count}n.addGroup(c,t,e),c+=t}}if(i){let e=!1;if(!n.index){let i=0;for(let e=0;e<t.length;++e)i+=t[e].index.count;n.setIndex(new Br(new Uint32Array(i),1,!1)),e=!0}if(r||e){const e=n.index;let i=0,s=0;for(let n=0;n<t.length;++n){const r=t[n],o=r.index;if(!0!==a[n])for(let t=0;t<o.count;++t)e.setX(i,o.getX(t)+s),i++;s+=r.attributes.position.count}}}for(const t in l){const e=l[t];if(!(t in n.attributes)){let i=0;for(const t in e)i+=e[t].count;n.setAttribute(t,LS(l[t][0],i))}const i=n.attributes[t];let s=0;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0!==a[t]&&FS(n,i,s),s+=n.count}}}(s,{useGroups:i,skipAttributes:e},t);for(const e in t.attributes)t.attributes[e].needsUpdate=!0;return t}_convertToStaticGeometry(t,e=new Hr){const n=t.geometry,i=this.applyWorldTransforms,s=this.attributes.includes("normal"),r=this.attributes.includes("tangent"),a=n.attributes,o=e.attributes;!e.index&&n.index&&(e.index=n.index.clone()),o.position||e.setAttribute("position",LS(a.position)),s&&!o.normal&&a.normal&&e.setAttribute("normal",LS(a.normal)),r&&!o.tangent&&a.tangent&&e.setAttribute("tangent",LS(a.tangent)),PS(n.index,e.index),PS(a.position,o.position),s&&PS(a.normal,o.normal),r&&PS(a.tangent,o.tangent);const l=a.position,c=s?a.normal:null,A=r?a.tangent:null,h=n.morphAttributes.position,u=n.morphAttributes.normal,d=n.morphAttributes.tangent,p=n.morphTargetsRelative,g=t.morphTargetInfluences,f=new yi;f.getNormalMatrix(t.matrixWorld),n.index&&e.index.array.set(n.index.array);for(let e=0,n=a.position.count;e<n;e++)_S.fromBufferAttribute(l,e),c&&BS.fromBufferAttribute(c,e),A&&(bS.fromBufferAttribute(A,e),SS.fromBufferAttribute(A,e)),g&&(h&&OS(h,g,p,e,_S),u&&OS(u,g,p,e,BS),d&&OS(d,g,p,e,SS)),t.isSkinnedMesh&&(t.applyBoneTransform(e,_S),c&&kS(t,e,BS),A&&kS(t,e,SS)),i&&_S.applyMatrix4(t.matrixWorld),o.position.setXYZ(e,_S.x,_S.y,_S.z),c&&(i&&BS.applyNormalMatrix(f),o.normal.setXYZ(e,BS.x,BS.y,BS.z)),A&&(i&&SS.transformDirection(t.matrixWorld),o.tangent.setXYZW(e,SS.x,SS.y,SS.z,bS.w));for(const t in this.attributes){const n=this.attributes[t];"position"!==n&&"tangent"!==n&&"normal"!==n&&n in a&&(o[n]||e.setAttribute(n,LS(a[n])),PS(a[n],o[n]),FS(a[n],o[n]))}return t.matrixWorld.determinant()<0&&function(t){const{index:e,attributes:n}=t;if(e)for(let t=0,n=e.count;t<n;t+=3){const n=e.getX(t),i=e.getX(t+2);e.setX(t,i),e.setX(t+2,n)}else for(const t in n){const e=n[t],i=e.itemSize;for(let t=0,n=e.count;t<n;t+=3)for(let n=0;n<i;n++){const i=e.getComponent(t,n),s=e.getComponent(t+2,n);e.setComponent(t,n,s),e.setComponent(t+2,n,i)}}}(e),e}}const HS="\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n",VS="\n\nfloat dot2( vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// point and cut off range\n\tvec3 point, float closestDistanceSquared,\n\n\t// outputs\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord, inout float side, inout vec3 outPoint\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, sampler2D bvhBounds, uint currNodeIndex ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\tbvhClosestPointToPoint(\t\tbvh,\t\tpoint, maxDistance, faceIndices, faceNormal, barycoord, side, outPoint\t)\t_bvhClosestPointToPoint(\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\t\tpoint, maxDistance, faceIndices, faceNormal, barycoord, side, outPoint\t)\n\nfloat _bvhClosestPointToPoint(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// point to check\n\tvec3 point, float maxDistance,\n\n\t// output variables\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat closestDistanceSquared = maxDistance * maxDistance;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count, point, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n",YS="\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\tbvhIntersectFirstHit(\t\tbvh,\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\t)\t_bvhIntersectFirstHit(\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n",qS="\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n",WS=qS,JS=VS,jS=`\n\t${HS}\n\t${YS}\n`;function XS(t){if(!t)return null;const e=t.replace(/[a-z]+:\/\/[^/]+/i,"").replace(/\?.*$/i,"").replace(/.*\//g,""),n=e.lastIndexOf(".");return-1===n?null:e.substring(n+1)||null}class KS{get unloadPriorityCallback(){return this._unloadPriorityCallback}set unloadPriorityCallback(t){1===t.length?(console.warn('LRUCache: "unloadPriorityCallback" function has been changed to take two arguments.'),this._unloadPriorityCallback=(e,n)=>{const i=t(e),s=t(n);return i<s?-1:i>s?1:0}):this._unloadPriorityCallback=t}constructor(){this.minSize=6e3,this.maxSize=8e3,this.minBytesSize=322122547.2,this.maxBytesSize=429496729.6,this.unloadPercent=.05,this.autoMarkUnused=!0,this.itemSet=new Map,this.itemList=[],this.usedSet=new Set,this.callbacks=new Map,this.unloadingHandle=-1,this.cachedBytes=0,this.bytesMap=new Map,this.loadedSet=new Set,this._unloadPriorityCallback=null;const t=this.itemSet;this.defaultPriorityCallback=e=>t.get(e)}isFull(){return this.itemSet.size>=this.maxSize||this.cachedBytes>=this.maxBytesSize}getMemoryUsage(t){return this.bytesMap.get(t)||0}setMemoryUsage(t,e){const{bytesMap:n,itemSet:i}=this;i.has(t)&&(this.cachedBytes-=n.get(t)||0,n.set(t,e),this.cachedBytes+=e)}add(t,e){const n=this.itemSet;if(n.has(t))return!1;if(this.isFull())return!1;const i=this.usedSet,s=this.itemList,r=this.callbacks;return s.push(t),i.add(t),n.set(t,Date.now()),r.set(t,e),!0}has(t){return this.itemSet.has(t)}remove(t){const e=this.usedSet,n=this.itemSet,i=this.itemList,s=this.bytesMap,r=this.callbacks,a=this.loadedSet;if(n.has(t)){this.cachedBytes-=s.get(t)||0,s.delete(t),r.get(t)(t);const o=i.indexOf(t);return i.splice(o,1),e.delete(t),n.delete(t),r.delete(t),a.delete(t),!0}return!1}setLoaded(t,e){const{itemSet:n,loadedSet:i}=this;n.has(t)&&(!0===e?i.add(t):i.delete(t))}markUsed(t){const e=this.itemSet,n=this.usedSet;e.has(t)&&!n.has(t)&&(e.set(t,Date.now()),n.add(t))}markUnused(t){this.usedSet.delete(t)}markAllUnused(){this.usedSet.clear()}unloadUnusedContent(){const{unloadPercent:t,minSize:e,maxSize:n,itemList:i,itemSet:s,usedSet:r,loadedSet:a,callbacks:o,bytesMap:l,minBytesSize:c,maxBytesSize:A}=this,h=i.length-r.size,u=i.length-a.size,d=Math.max(Math.min(i.length-e,h),0),p=this.cachedBytes-c,g=this.unloadPriorityCallback||this.defaultPriorityCallback;let f=!1;const m=d>0&&h>0||u&&i.length>n;if(h&&this.cachedBytes>c||u&&this.cachedBytes>A||m){i.sort((t,e)=>{const n=r.has(t);if(n===r.has(e)){const n=a.has(t);return n===a.has(e)?-g(t,e):n?1:-1}return n?1:-1});const u=Math.max(e*t,d*t),m=Math.ceil(Math.min(u,h,d)),y=Math.max(t*p,t*c),I=Math.min(y,p);let C=0,E=0;for(;this.cachedBytes-E>A||i.length-C>n;){const t=i[C],e=l.get(t)||0;if(r.has(t)&&a.has(t)||this.cachedBytes-E-e<A&&i.length-C<=n)break;E+=e,C++}for(;E<I||C<m;){const t=i[C],e=l.get(t)||0;if(r.has(t)||this.cachedBytes-E-e<c&&C>=m)break;E+=e,C++}i.splice(0,C).forEach(t=>{this.cachedBytes-=l.get(t)||0,o.get(t)(t),l.delete(t),s.delete(t),o.delete(t),a.delete(t),r.delete(t)}),f=C<d||E<p&&C<h,f=f&&C>0}f&&(this.unloadingHandle=requestAnimationFrame(()=>this.scheduleUnload()))}scheduleUnload(){cancelAnimationFrame(this.unloadingHandle),this.scheduled||(this.scheduled=!0,queueMicrotask(()=>{this.scheduled=!1,this.unloadUnusedContent()}))}}class ZS{get running(){return 0!==this.items.length||0!==this.currJobs}constructor(){this.maxJobs=6,this.items=[],this.callbacks=new Map,this.currJobs=0,this.scheduled=!1,this.autoUpdate=!0,this.priorityCallback=null,this.schedulingCallback=t=>{requestAnimationFrame(t)},this._runjobs=()=>{this.scheduled=!1,this.tryRunJobs()}}sort(){const t=this.priorityCallback,e=this.items;null!==t&&e.sort(t)}has(t){return this.callbacks.has(t)}add(t,e){const n={callback:e,reject:null,resolve:null,promise:null};return n.promise=new Promise((e,i)=>{const s=this.items,r=this.callbacks;n.resolve=e,n.reject=i,s.unshift(t),r.set(t,n),this.autoUpdate&&this.scheduleJobRun()}),n.promise}remove(t){const e=this.items,n=this.callbacks,i=e.indexOf(t);if(-1!==i){const s=n.get(t);s.promise.catch(()=>{}),s.reject(new Error("PriorityQueue: Item removed.")),e.splice(i,1),n.delete(t)}}removeByFilter(t){const{items:e}=this;for(let n=0;n<e.length;n++){const i=e[n];t(i)&&this.remove(i)}}tryRunJobs(){this.sort();const t=this.items,e=this.callbacks,n=this.maxJobs;let i=0;const s=()=>{this.currJobs--,this.autoUpdate&&this.scheduleJobRun()};for(;n>this.currJobs&&t.length>0&&i<n;){this.currJobs++,i++;const n=t.pop(),{callback:r,resolve:a,reject:o}=e.get(n);let l;e.delete(n);try{l=r(n)}catch(t){o(t),s()}l instanceof Promise?l.then(a).catch(o).finally(s):(a(l),s())}}scheduleJobRun(){this.scheduled||(this.schedulingCallback(this._runjobs),this.scheduled=!0)}}const $S=-1,tb=0,eb=1,nb=2,ib=3,sb=6378137,rb=1/298.257223563,ab=-(rb*sb-sb),ob={inView:!1,error:1/0,distanceFromCamera:1/0};function lb(t){return t===ib||t===$S}function cb(t,e){return t.__lastFrameVisited===e&&t.__used}function Ab(t){return t.__childrenProcessed===t.children.length}function hb(t,e){t.__lastFrameVisited!==e.frameCount&&(t.__lastFrameVisited=e.frameCount,t.__used=!1,t.__inFrustum=!1,t.__isLeaf=!1,t.__visible=!1,t.__active=!1,t.__error=1/0,t.__distanceFromCamera=1/0,t.__allChildrenLoaded=!1,e.calculateTileViewError(t,ob),t.__inFrustum=ob.inView,t.__error=ob.error,t.__distanceFromCamera=ob.distanceFromCamera)}function ub(t,e){if(e.ensureChildrenArePreprocessed(t),hb(t,e),pb(t,e),t.__hasUnrenderableContent&&Ab(t)){const n=t.children;for(let t=0,i=n.length;t<i;t++)ub(n[t],e)}}function db(t,e){if(e.ensureChildrenArePreprocessed(t),cb(t,e.frameCount)&&(t.__hasContent&&e.queueTileForDownload(t),Ab(t))){const n=t.children;for(let t=0,i=n.length;t<i;t++)db(n[t],e)}}function pb(t,e){t.__used||(t.__used=!0,e.markTileUsed(t),e.stats.used++,!0===t.__inFrustum&&e.stats.inFrustum++)}function gb(t,e){if(e.ensureChildrenArePreprocessed(t),hb(t,e),!t.__inFrustum)return;if(!function(t,e){return!(t.__error<=e.errorTarget&&!t.__hasUnrenderableContent||e.maxDepth>0&&t.__depth+1>=e.maxDepth||!Ab(t))}(t,e))return void pb(t,e);let n=!1,i=!1;const s=t.children;for(let t=0,r=s.length;t<r;t++){const r=s[t];gb(r,e),n=n||cb(r,e.frameCount),i=i||r.__inFrustum}if(pb(t,e),n&&"REPLACE"===t.refine&&(t.__depth,1))for(let t=0,n=s.length;t<n;t++)ub(s[t],e)}function fb(t,e){const n=e.frameCount;if(!cb(t,n))return;const i=t.children;let s=!1;for(let t=0,e=i.length;t<e;t++){const e=i[t];s=s||cb(e,n)}if(s){let s=!0;for(let t=0,r=i.length;t<r;t++){const r=i[t];if(fb(r,e),cb(r,n)){const t=r.__allChildrenLoaded||!r.__hasContent||r.__hasRenderableContent&&lb(r.__loadingState)||r.__hasUnrenderableContent&&r.__loadingState===$S;s=s&&t}}t.__allChildrenLoaded=s}else t.__isLeaf=!0}function mb(t,e){const n=e.stats;if(!cb(t,e.frameCount))return;if(t.__isLeaf)return void(t.__loadingState===ib?(t.__inFrustum&&(t.__visible=!0,n.visible++),t.__active=!0,n.active++):t.__hasContent&&e.queueTileForDownload(t));const i=t.children,s=t.__hasContent,r=lb(t.__loadingState)&&s,a=(e.errorTarget+1)*e.errorThreshold,o=t.__error<=a,l="ADD"===t.refine,c=t.__allChildrenLoaded||0===t.__depth&&!1;if(s&&(o||l)&&e.queueTileForDownload(t),(o&&r&&!c||r&&l)&&(t.__inFrustum&&(t.__visible=!0,n.visible++),t.__active=!0,n.active++),l||!o||c)for(let t=0,n=i.length;t<n;t++)mb(i[t],e);else for(let t=0,n=i.length;t<n;t++){const n=i[t];cb(n,e.frameCount)&&db(n,e)}}function yb(t,e){const n=cb(t,e.frameCount);if(n||t.__usedLastFrame){let i=!1,s=!1;n?(i=t.__active,s=e.displayActiveTiles&&t.__active||t.__visible):hb(t,e),t.__hasRenderableContent&&t.__loadingState===ib&&(t.__wasSetActive!==i&&e.invokeOnePlugin(e=>e.setTileActive&&e.setTileActive(t,i)),t.__wasSetVisible!==s&&e.invokeOnePlugin(e=>e.setTileVisible&&e.setTileVisible(t,s))),t.__wasSetActive=i,t.__wasSetVisible=s,t.__usedLastFrame=n;const r=t.children;for(let t=0,n=r.length;t<n;t++)yb(r[t],e)}}const Ib=Symbol("PLUGIN_REGISTERED"),Cb=(t,e)=>{const n=t.priority||0,i=e.priority||0;return n!==i?n>i?1:-1:t.__used!==e.__used?t.__used?1:-1:t.__error!==e.__error?t.__error>e.__error?1:-1:t.__distanceFromCamera!==e.__distanceFromCamera?t.__distanceFromCamera>e.__distanceFromCamera?-1:1:t.__depthFromRenderedParent!==e.__depthFromRenderedParent?t.__depthFromRenderedParent>e.__depthFromRenderedParent?-1:1:0},Eb=(t,e)=>{const n=t.priority||0,i=e.priority||0;return n!==i?n>i?1:-1:t.__lastFrameVisited!==e.__lastFrameVisited?t.__lastFrameVisited>e.__lastFrameVisited?-1:1:t.__depthFromRenderedParent!==e.__depthFromRenderedParent?t.__depthFromRenderedParent>e.__depthFromRenderedParent?1:-1:t.__loadingState!==e.__loadingState?t.__loadingState>e.__loadingState?-1:1:t.__hasUnrenderableContent!==e.__hasUnrenderableContent?t.__hasUnrenderableContent?-1:1:t.__error!==e.__error?t.__error>e.__error?-1:1:0};class vb{get root(){const t=this.rootTileSet;return t?t.root:null}get loadProgress(){const{stats:t,isLoading:e}=this,n=t.downloading+t.parsing,i=t.inCacheSinceLoad+(e?1:0);return 0===i?1:1-n/i}get errorThreshold(){return this._errorThreshold}set errorThreshold(t){console.warn('TilesRenderer: The "errorThreshold" option has been deprecated.'),this._errorThreshold=t}constructor(t=null){this.rootLoadingState=tb,this.rootTileSet=null,this.rootURL=t,this.fetchOptions={},this.plugins=[],this.queuedTiles=[],this.cachedSinceLoadComplete=new Set,this.isLoading=!1;const e=new KS;e.unloadPriorityCallback=Eb;const n=new ZS;n.maxJobs=25,n.priorityCallback=Cb;const i=new ZS;i.maxJobs=5,i.priorityCallback=Cb;const s=new ZS;s.maxJobs=25,this.processedTiles=new WeakSet,this.visibleTiles=new Set,this.activeTiles=new Set,this.usedSet=new Set,this.lruCache=e,this.downloadQueue=n,this.parseQueue=i,this.processNodeQueue=s,this.stats={inCacheSinceLoad:0,inCache:0,parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0,this._dispatchNeedsUpdateEvent=function(t){let e=null;return()=>{null===e&&(e=requestAnimationFrame(()=>{e=null,t()}))}}(()=>{this.dispatchEvent({type:"needs-update"})}),this.errorTarget=16,this._errorThreshold=1/0,this.displayActiveTiles=!1,this.maxDepth=1/0}registerPlugin(t){if(!0===t[Ib])throw new Error("TilesRendererBase: A plugin can only be registered to a single tile set");const e=this.plugins,n=t.priority||0;let i=e.length;for(let t=0;t<e.length;t++)if((e[t].priority||0)>n){i=t;break}e.splice(i,0,t),t[Ib]=!0,t.init&&t.init(this)}unregisterPlugin(t){const e=this.plugins;if("string"==typeof t&&(t=this.getPluginByName(name)),e.includes(t)){const n=e.indexOf(t);return e.splice(n,1),t.dispose&&t.dispose(),!0}return!1}getPluginByName(t){return this.plugins.find(e=>e.name===t)||null}traverse(t,e,n=!0){this.root&&function(t,e=null,n=null){const i=[];for(i.push(t),i.push(null),i.push(0);i.length>0;){const t=i.pop(),s=i.pop(),r=i.pop();if(e&&e(r,s,t))return void(n&&n(r,s,t));const a=r.children;if(a)for(let e=a.length-1;e>=0;e--)i.push(a[e]),i.push(r),i.push(t+1);n&&n(r,s,t)}}(this.root,(e,...i)=>(n&&this.ensureChildrenArePreprocessed(e,!0),!!t&&t(e,...i)),e)}queueTileForDownload(t){t.__loadingState!==tb||this.lruCache.isFull()||this.queuedTiles.push(t)}markTileUsed(t){this.usedSet.add(t),this.lruCache.markUsed(t)}update(){const{lruCache:t,usedSet:e,stats:n,root:i,downloadQueue:s,parseQueue:r,processNodeQueue:a}=this;if(this.rootLoadingState===tb&&(this.rootLoadingState=eb,this.invokeOnePlugin(t=>t.loadRootTileSet&&t.loadRootTileSet()).then(t=>{let e=this.rootURL;null!==e&&this.invokeAllPlugins(t=>e=t.preprocessURL?t.preprocessURL(e,null):e),this.rootLoadingState=ib,this.rootTileSet=t,this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),this.dispatchEvent({type:"load-tile-set",tileSet:t,url:e})}).catch(t=>{this.rootLoadingState=$S,console.error(t),this.rootTileSet=null,this.dispatchEvent({type:"load-error",tile:null,error:t,url:this.rootURL})})),!i)return;n.inFrustum=0,n.used=0,n.active=0,n.visible=0,this.frameCount++,e.forEach(e=>t.markUnused(e)),e.clear(),gb(i,this),fb(i,this),mb(i,this),yb(i,this);const o=this.queuedTiles;o.sort(t.unloadPriorityCallback);for(let e=0,n=o.length;e<n&&!t.isFull();e++)this.requestTileContents(o[e]);o.length=0,t.scheduleUnload(),!1===(s.running||r.running||a.running)&&!0===this.isLoading&&(this.cachedSinceLoadComplete.clear(),n.inCacheSinceLoad=0,this.dispatchEvent({type:"tiles-load-end"}),this.isLoading=!1)}resetFailedTiles(){this.rootLoadingState===$S&&(this.rootLoadingState=tb);const t=this.stats;0!==t.failed&&(this.traverse(t=>{t.__loadingState===$S&&(t.__loadingState=tb)},null,!1),t.failed=0)}dispose(){[...this.plugins].forEach(t=>{this.unregisterPlugin(t)});const t=this.lruCache,e=[];this.traverse(t=>(e.push(t),!1),null,!1);for(let n=0,i=e.length;n<i;n++)t.remove(e[n]);this.stats={parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0}calculateBytesUsed(t,e){return 0}dispatchEvent(t){}fetchData(t,e){return fetch(t,e)}parseTile(t,e,n){return null}disposeTile(t){t.__visible&&(this.invokeOnePlugin(e=>e.setTileVisible&&e.setTileVisible(t,!1)),t.__visible=!1),t.__active&&(this.invokeOnePlugin(e=>e.setTileActive&&e.setTileActive(t,!1)),t.__active=!1)}preprocessNode(t,e,n=null){if(this.processedTiles.add(t),t.content&&(!("uri"in t.content)&&"url"in t.content&&(t.content.uri=t.content.url,delete t.content.url),t.content.boundingVolume&&!("box"in t.content.boundingVolume||"sphere"in t.content.boundingVolume||"region"in t.content.boundingVolume)&&delete t.content.boundingVolume),t.parent=n,t.children=t.children||[],t.content?.uri){const e=XS(t.content.uri);t.__hasContent=!0,t.__hasUnrenderableContent=Boolean(e&&/json$/.test(e)),t.__hasRenderableContent=!t.__hasUnrenderableContent}else t.__hasContent=!1,t.__hasUnrenderableContent=!1,t.__hasRenderableContent=!1;t.__childrenProcessed=0,n&&n.__childrenProcessed++,t.__distanceFromCamera=1/0,t.__error=1/0,t.__inFrustum=!1,t.__isLeaf=!1,t.__usedLastFrame=!1,t.__used=!1,t.__wasSetVisible=!1,t.__visible=!1,t.__allChildrenLoaded=!1,t.__wasSetActive=!1,t.__active=!1,t.__loadingState=tb,null===n?(t.__depth=0,t.__depthFromRenderedParent=t.__hasRenderableContent?1:0,t.refine=t.refine||"REPLACE"):(t.__depth=n.__depth+1,t.__depthFromRenderedParent=n.__depthFromRenderedParent+(t.__hasRenderableContent?1:0),t.refine=t.refine||n.refine),t.__basePath=e,t.__lastFrameVisited=-1,this.invokeAllPlugins(i=>{i!==this&&i.preprocessNode&&i.preprocessNode(t,e,n)})}setTileActive(t,e){e?this.activeTiles.add(t):this.activeTiles.delete(t)}setTileVisible(t,e){e?this.visibleTiles.add(t):this.visibleTiles.delete(t)}calculateTileViewError(t,e){}ensureChildrenArePreprocessed(t,e=!1){const n=t.children;for(let i=0,s=n.length;i<s;i++){const s=n[i];if("__depth"in s)break;e?(this.processNodeQueue.remove(s),this.preprocessNode(s,t.__basePath,t)):this.processNodeQueue.has(s)||this.processNodeQueue.add(s,e=>{this.preprocessNode(e,t.__basePath,t),this._dispatchNeedsUpdateEvent()})}}getBytesUsed(t){let e=0;return this.invokeAllPlugins(n=>{n.calculateBytesUsed&&(e+=n.calculateBytesUsed(t,t.cached.scene)||0)}),e}recalculateBytesUsed(t=null){const{lruCache:e,processedTiles:n}=this;null===t?e.itemSet.forEach(t=>{n.has(t)&&e.setMemoryUsage(t,this.getBytesUsed(t))}):e.setMemoryUsage(t,this.getBytesUsed(t))}preprocessTileSet(t,e,n=null){const i=t.asset.version,[s,r]=i.split(".").map(t=>parseInt(t));console.assert(s<=1,"TilesRenderer: asset.version is expected to be a 1.x or a compatible version."),1===s&&r>0&&console.warn("TilesRenderer: tiles versions at 1.1 or higher have limited support. Some new extensions and features may not be supported.");let a=e.replace(/\/[^/]*$/,"");a=new URL(a,window.location.href).toString(),this.preprocessNode(t.root,a,n)}loadRootTileSet(){let t=this.rootURL;return this.invokeAllPlugins(e=>t=e.preprocessURL?e.preprocessURL(t,null):t),this.invokeOnePlugin(e=>e.fetchData&&e.fetchData(t,this.fetchOptions)).then(e=>{if(e instanceof Response){if(e.ok)return e.json();throw new Error(`TilesRenderer: Failed to load tileset "${t}" with status ${e.status} : ${e.statusText}`)}return e}).then(e=>(this.preprocessTileSet(e,t),e))}requestTileContents(t){if(t.__loadingState!==tb)return;let e=!1,n=null,i=new URL(t.content.uri,t.__basePath+"/").toString();this.invokeAllPlugins(e=>i=e.preprocessURL?e.preprocessURL(i,t):i);const s=this.stats,r=this.lruCache,a=this.downloadQueue,o=this.parseQueue,l=XS(i),c=new AbortController,A=c.signal;return r.add(t,n=>{c.abort(),e?(n.children.length=0,n.__childrenProcessed=0):this.invokeAllPlugins(t=>{t.disposeTile&&t.disposeTile(n)}),s.inCache--,this.cachedSinceLoadComplete.has(t)&&(this.cachedSinceLoadComplete.delete(t),s.inCacheSinceLoad--),n.__loadingState===eb?s.downloading--:n.__loadingState===nb&&s.parsing--,n.__loadingState=tb,o.remove(n),a.remove(n)})?(this.isLoading||(this.isLoading=!0,this.dispatchEvent({type:"tiles-load-start"})),r.setMemoryUsage(t,this.getBytesUsed(t)),this.cachedSinceLoadComplete.add(t),s.inCacheSinceLoad++,s.inCache++,s.downloading++,t.__loadingState=eb,a.add(t,e=>{if(A.aborted)return Promise.resolve();const n=this.invokeOnePlugin(t=>t.fetchData&&t.fetchData(i,{...this.fetchOptions,signal:A}));return this.dispatchEvent({type:"tile-download-start",tile:t}),n}).then(t=>{if(!A.aborted){if(t instanceof Response){if(t.ok)return"json"===l?t.json():t.arrayBuffer();throw new Error(`Failed to load model with error code ${t.status}`)}return t}}).then(r=>{if(!A.aborted)return s.downloading--,s.parsing++,t.__loadingState=nb,o.add(t,s=>A.aborted?Promise.resolve():"json"===l&&r.root?(this.preprocessTileSet(r,i,t),t.children.push(r.root),n=r,e=!0,Promise.resolve()):this.invokeOnePlugin(t=>t.parseTile&&t.parseTile(r,s,l,i,A)))}).then(()=>{if(A.aborted)return;s.parsing--,t.__loadingState=ib,r.setLoaded(t,!0);const a=this.getBytesUsed(t);0===r.getMemoryUsage(t)&&a>0&&r.isFull()?r.remove(t):(r.setMemoryUsage(t,a),this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),e&&this.dispatchEvent({type:"load-tile-set",tileSet:n,url:i}),t.cached.scene&&this.dispatchEvent({type:"load-model",scene:t.cached.scene,tile:t}))}).catch(e=>{A.aborted||("AbortError"!==e.name?(o.remove(t),a.remove(t),t.__loadingState===nb?s.parsing--:t.__loadingState===eb&&s.downloading--,s.failed++,console.error(`TilesRenderer : Failed to load tile at url "${t.content.uri}".`),console.error(e),t.__loadingState=$S,r.setLoaded(t,!0),this.dispatchEvent({type:"load-error",tile:t,error:e,url:i})):r.remove(t))})):void 0}getAttributions(t=[]){return this.invokeAllPlugins(e=>e!==this&&e.getAttributions&&e.getAttributions(t)),t}invokeOnePlugin(t){const e=[...this.plugins,this];for(let n=0;n<e.length;n++){const i=t(e[n]);if(i)return i}return null}invokeAllPlugins(t){const e=[...this.plugins,this],n=[];for(let i=0;i<e.length;i++){const s=t(e[i]);s&&n.push(s)}return 0===n.length?null:Promise.all(n)}}class xb{constructor(){this.fetchOptions={},this.workingPath=""}load(...t){return console.warn('Loader: "load" function has been deprecated in favor of "loadAsync".'),this.loadAsync(...t)}loadAsync(t){return fetch(t,this.fetchOptions).then(e=>{if(!e.ok)throw new Error(`Failed to load file "${t}" with status ${e.status} : ${e.statusText}`);return e.arrayBuffer()}).then(e=>(""===this.workingPath&&(this.workingPath=this.workingPathForURL(t)),this.parse(e)))}resolveExternalURL(t){return/^[^\\/]/.test(t)&&!/^http/.test(t)?this.workingPath+"/"+t:t}workingPathForURL(t){const e=t.split(/[\\/]/g);return e.pop(),e.join("/")+"/"}parse(t){throw new Error("LoaderBase: Parse not implemented.")}}const wb=new TextDecoder;function _b(t){return wb.decode(t)}function Bb(t,e,n,i,s,r){let a,o;switch(i){case"SCALAR":a=1;break;case"VEC2":a=2;break;case"VEC3":a=3;break;case"VEC4":a=4;break;default:throw new Error(`FeatureTable : Feature type not provided for "${r}".`)}const l=n*a;switch(s){case"BYTE":o=new Int8Array(t,e,l);break;case"UNSIGNED_BYTE":o=new Uint8Array(t,e,l);break;case"SHORT":o=new Int16Array(t,e,l);break;case"UNSIGNED_SHORT":o=new Uint16Array(t,e,l);break;case"INT":o=new Int32Array(t,e,l);break;case"UNSIGNED_INT":o=new Uint32Array(t,e,l);break;case"FLOAT":o=new Float32Array(t,e,l);break;case"DOUBLE":o=new Float64Array(t,e,l);break;default:throw new Error(`FeatureTable : Feature component type not provided for "${r}".`)}return o}class Sb{constructor(t,e,n,i){this.buffer=t,this.binOffset=e+n,this.binLength=i;let s=null;if(0!==n){const i=new Uint8Array(t,e,n);s=JSON.parse(_b(i))}else s={};this.header=s}getKeys(){return Object.keys(this.header)}getData(t,e,n=null,i=null){const s=this.header;if(!(t in s))return null;const r=s[t];if(r instanceof Object){if(Array.isArray(r))return r;{const{buffer:s,binOffset:a,binLength:o}=this,l=r.byteOffset||0,c=r.type||i,A=r.componentType||n;if("type"in r&&i&&r.type!==i)throw new Error("FeatureTable: Specified type does not match expected type.");const h=a+l,u=Bb(s,h,e,c,A,t);if(h+u.byteLength>a+o)throw new Error("FeatureTable: Feature data read outside binary body length.");return u}}return r}getBuffer(t,e){const{buffer:n,binOffset:i}=this;return n.slice(i+t,i+t+e)}}class bb{constructor(t){this.batchTable=t;const e=t.header.extensions["3DTILES_batch_table_hierarchy"];this.classes=e.classes;for(const t of this.classes){const e=t.instances;for(const n in e)t.instances[n]=this._parseProperty(e[n],t.length,n)}if(this.instancesLength=e.instancesLength,this.classIds=this._parseProperty(e.classIds,this.instancesLength,"classIds"),e.parentCounts?this.parentCounts=this._parseProperty(e.parentCounts,this.instancesLength,"parentCounts"):this.parentCounts=new Array(this.instancesLength).fill(1),e.parentIds){const t=this.parentCounts.reduce((t,e)=>t+e,0);this.parentIds=this._parseProperty(e.parentIds,t,"parentIds")}else this.parentIds=null;this.instancesIds=[];const n={};for(const t of this.classIds)n[t]=n[t]??0,this.instancesIds.push(n[t]),n[t]++}_parseProperty(t,e,n){if(Array.isArray(t))return t;{const{buffer:i,binOffset:s}=this.batchTable;return Bb(i,s+t.byteOffset,e,"SCALAR",t.componentType||"UNSIGNED_SHORT",n)}}getDataFromId(t,e={}){const n=this.parentCounts[t];if(this.parentIds&&n>0){let i=0;for(let e=0;e<t;e++)i+=this.parentCounts[e];for(let s=0;s<n;s++){const n=this.parentIds[i+s];n!==t&&this.getDataFromId(n,e)}}const i=this.classIds[t],s=this.classes[i].instances,r=this.classes[i].name,a=this.instancesIds[t];for(const t in s)e[r]=e[r]||{},e[r][t]=s[t][a];return e}}class Mb extends Sb{get batchSize(){return console.warn("BatchTable.batchSize has been deprecated and replaced with BatchTable.count."),this.count}constructor(t,e,n,i,s){super(t,n,i,s),this.count=e,this.extensions={};const r=this.header.extensions;r&&r["3DTILES_batch_table_hierarchy"]&&(this.extensions["3DTILES_batch_table_hierarchy"]=new bb(this))}getData(t,e=null,n=null){return console.warn("BatchTable: BatchTable.getData is deprecated. Use BatchTable.getDataFromId to get allproperties for an id or BatchTable.getPropertyArray for getting an array of value for a property."),super.getData(t,this.count,e,n)}getDataFromId(t,e={}){if(t<0||t>=this.count)throw new Error(`BatchTable: id value "${t}" out of bounds for "${this.count}" features number.`);for(const n of this.getKeys())"extensions"!==n&&(e[n]=super.getData(n,this.count)[t]);for(const n in this.extensions){const i=this.extensions[n];i.getDataFromId instanceof Function&&(e[n]=e[n]||{},i.getDataFromId(t,e[n]))}return e}getPropertyArray(t){return super.getData(t,this.count)}}function Tb(t){if(null===t||t.byteLength<4)return"";let e;if(e=t instanceof DataView?t:new DataView(t),"{"===String.fromCharCode(e.getUint8(0)))return null;let n="";for(let t=0;t<4;t++)n+=String.fromCharCode(e.getUint8(t));return n}class Qb extends xb{parse(t){const e=new DataView(t),n=Tb(e);console.assert("b3dm"===n);const i=e.getUint32(4,!0);console.assert(1===i);const s=e.getUint32(8,!0);console.assert(s===t.byteLength);const r=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=t.slice(28,28+r+a),A=new Sb(c,0,r,a),h=28+r+a,u=t.slice(h,h+o+l),d=new Mb(u,A.getData("BATCH_LENGTH"),0,o,l),p=h+o+l;return{version:i,featureTable:A,batchTable:d,glbBytes:new Uint8Array(t,p,s-p)}}}class Db extends xb{parse(t){const e=new DataView(t),n=Tb(e);console.assert("i3dm"===n);const i=e.getUint32(4,!0);console.assert(1===i);const s=e.getUint32(8,!0);console.assert(s===t.byteLength);const r=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=e.getUint32(28,!0),A=t.slice(32,32+r+a),h=new Sb(A,0,r,a),u=32+r+a,d=t.slice(u,u+o+l),p=new Mb(d,h.getData("INSTANCES_LENGTH"),0,o,l),g=u+o+l,f=new Uint8Array(t,g,s-g);let m=null,y=null,I=null;if(c)m=f,y=Promise.resolve();else{const t=this.resolveExternalURL(_b(f)),e=t.split(/[\\/]/g);e.pop(),I=e.join("/"),y=fetch(t,this.fetchOptions).then(e=>{if(!e.ok)throw new Error(`I3DMLoaderBase : Failed to load file "${t}" with status ${e.status} : ${e.statusText}`);return e.arrayBuffer()}).then(t=>{m=new Uint8Array(t)})}return y.then(()=>({version:i,featureTable:h,batchTable:p,glbBytes:m,gltfWorkingPath:I}))}}class Rb extends xb{parse(t){const e=new DataView(t),n=Tb(e);console.assert("pnts"===n);const i=e.getUint32(4,!0);console.assert(1===i);const s=e.getUint32(8,!0);console.assert(s===t.byteLength);const r=e.getUint32(12,!0),a=e.getUint32(16,!0),o=e.getUint32(20,!0),l=e.getUint32(24,!0),c=t.slice(28,28+r+a),A=new Sb(c,0,r,a),h=28+r+a,u=t.slice(h,h+o+l),d=new Mb(u,A.getData("BATCH_LENGTH")||A.getData("POINTS_LENGTH"),0,o,l);return Promise.resolve({version:i,featureTable:A,batchTable:d})}}class Ub extends xb{parse(t){const e=new DataView(t),n=Tb(e);console.assert("cmpt"===n,'CMPTLoader: The magic bytes equal "cmpt".');const i=e.getUint32(4,!0);console.assert(1===i,'CMPTLoader: The version listed in the header is "1".');const s=e.getUint32(8,!0);console.assert(s===t.byteLength,"CMPTLoader: The contents buffer length listed in the header matches the file.");const r=e.getUint32(12,!0),a=[];let o=16;for(let e=0;e<r;e++){const e=new DataView(t,o,12),n=Tb(e),i=e.getUint32(4,!0),s=e.getUint32(8,!0),r=new Uint8Array(t,o,s);a.push({type:n,buffer:r,version:i}),o+=s}return{version:i,tiles:a}}}class Pb extends Qb{constructor(t=SA){super(),this.manager=t,this.adjustmentTransform=new Es}parse(t){const e=super.parse(t),n=e.glbBytes.slice().buffer;return new Promise((t,i)=>{const s=this.manager,r=this.fetchOptions,a=s.getHandler("path.gltf")||new am(s);"include"===r.credentials&&"cors"===r.mode&&a.setCrossOrigin("use-credentials"),"credentials"in r&&a.setWithCredentials("include"===r.credentials),r.headers&&a.setRequestHeader(r.headers);let o=this.workingPath;!/[\\/]$/.test(o)&&o.length&&(o+="/");const l=this.adjustmentTransform;a.parse(n,o,n=>{const{batchTable:i,featureTable:s}=e,{scene:r}=n,a=s.getData("RTC_CENTER",1,"FLOAT","VEC3");a&&(r.position.x+=a[0],r.position.y+=a[1],r.position.z+=a[2]),n.scene.updateMatrix(),n.scene.matrix.multiply(l),n.scene.matrix.decompose(n.scene.position,n.scene.quaternion,n.scene.scale),n.batchTable=i,n.featureTable=s,r.batchTable=i,r.featureTable=s,t(n)},i)})}}function Lb(t){const e=t>>11,n=t>>5&63,i=31&t;return[Math.round(e/31*255),Math.round(n/63*255),Math.round(i/31*255)]}const Fb=new di;function Nb(t,e,n=new gi){Fb.set(t,e).divideScalar(256).multiplyScalar(2).subScalar(1),n.set(Fb.x,Fb.y,1-Math.abs(Fb.x)-Math.abs(Fb.y));const i=ui.clamp(-n.z,0,1);return n.x>=0?n.setX(n.x-i):n.setX(n.x+i),n.y>=0?n.setY(n.y-i):n.setY(n.y+i),n.normalize(),n}const kb={RGB:"color",POSITION:"position"};class Ob extends Rb{constructor(t=SA){super(),this.manager=t}parse(t){return super.parse(t).then(async t=>{const{featureTable:e,batchTable:n}=t,i=new ol,s=e.header.extensions,r=new gi;let a;if(s&&s["3DTILES_draco_point_compression"]){const{byteOffset:t,byteLength:n,properties:r}=s["3DTILES_draco_point_compression"],o=this.manager.getHandler("draco.drc");if(null==o)throw new Error("PNTSLoader: dracoLoader not available.");const l={};for(const t in r)t in kb&&t in r&&(l[kb[t]]=r[t]);const c={attributeIDs:l,attributeTypes:{position:"Float32Array",color:"Uint8Array"},useUniqueIDs:!0},A=e.getBuffer(t,n);a=await o.decodeGeometry(A,c),a.attributes.color&&(i.vertexColors=!0)}else{const t=e.getData("POINTS_LENGTH"),n=e.getData("POSITION",t,"FLOAT","VEC3"),s=e.getData("NORMAL",t,"FLOAT","VEC3"),o=e.getData("NORMAL",t,"UNSIGNED_BYTE","VEC2"),l=e.getData("RGB",t,"UNSIGNED_BYTE","VEC3"),c=e.getData("RGBA",t,"UNSIGNED_BYTE","VEC4"),A=e.getData("RGB565",t,"UNSIGNED_SHORT","SCALAR"),h=e.getData("CONSTANT_RGBA",t,"UNSIGNED_BYTE","VEC4"),u=e.getData("POSITION_QUANTIZED",t,"UNSIGNED_SHORT","VEC3"),d=e.getData("QUANTIZED_VOLUME_SCALE",t,"FLOAT","VEC3"),p=e.getData("QUANTIZED_VOLUME_OFFSET",t,"FLOAT","VEC3");if(a=new Hr,u){const e=new Float32Array(3*t);for(let n=0;n<t;n++)for(let t=0;t<3;t++){const i=3*n+t;e[i]=u[i]/65535*d[t]}r.x=p[0],r.y=p[1],r.z=p[2],a.setAttribute("position",new Br(e,3,!1))}else a.setAttribute("position",new Br(n,3,!1));if(null!==s)a.setAttribute("normal",new Br(s,3,!1));else if(null!==o){const e=new Float32Array(3*t),n=new gi;for(let i=0;i<t;i++){const t=Nb(o[2*i],o[2*i+1],n);e[3*i]=t.x,e[3*i+1]=t.y,e[3*i+2]=t.z}a.setAttribute("normal",new Br(e,3,!1))}if(null!==c)a.setAttribute("color",new Br(c,4,!0)),i.vertexColors=!0,i.transparent=!0,i.depthWrite=!1;else if(null!==l)a.setAttribute("color",new Br(l,3,!0)),i.vertexColors=!0;else if(null!==A){const e=new Uint8Array(3*t);for(let n=0;n<t;n++){const t=Lb(A[n]);for(let i=0;i<3;i++)e[3*n+i]=t[i]}a.setAttribute("color",new Br(e,3,!0)),i.vertexColors=!0}else if(null!==h){const t=new dr(h[0],h[1],h[2]);i.color=t;const e=h[3]/255;e<1&&(i.opacity=e,i.transparent=!0,i.depthWrite=!1)}}const o=new ul(a,i);o.position.copy(r),t.scene=o,t.scene.featureTable=e,t.scene.batchTable=n;const l=e.getData("RTC_CENTER",1,"FLOAT","VEC3");return l&&(t.scene.position.x+=l[0],t.scene.position.y+=l[1],t.scene.position.z+=l[2]),t})}}const zb=new ou,Gb=new gi,Hb={};function Vb(t){const{x:e,y:n,z:i}=t;t.x=i,t.y=e,t.z=n}function Yb(t){const{x:e,y:n,z:i}=t;t.z=e,t.x=n,t.y=i}function qb(t){return-(t-Math.PI/2)}function Wb(t){return-t+Math.PI/2}function Jb(t,e="E",n="W"){const i=t<0?n:e,s=~~(t=Math.abs(t)),r=60*(t-s),a=~~r;return`${s}° ${a}' ${~~(60*(r-a))}" ${i}`}function jb(t,e,n=!1){const i=function(t,e,n={}){return zb.theta=e,zb.phi=Wb(t),Gb.setFromSpherical(zb),zb.setFromVector3(Gb),n.lat=qb(zb.phi),n.lon=zb.theta,n}(t,e,Hb);let s,r;return n?(s=`${(ui.RAD2DEG*i.lat).toFixed(4)}°`,r=`${(ui.RAD2DEG*i.lon).toFixed(4)}°`):(s=Jb(ui.RAD2DEG*i.lat,"N","S"),r=Jb(ui.RAD2DEG*i.lon,"E","W")),`${s} ${r}`}const Xb=new ou,Kb=new gi,Zb=new gi,$b=new gi,tM=new Es,eM=new Es,nM=new Es,iM=new us,sM=new Qs,rM=new gi,aM=new gi,oM=new gi,lM=new gi,cM=new Cs,AM=0,hM=1,uM=2;class dM{constructor(t=1,e=1,n=1){this.name="",this.radius=new gi(t,e,n)}intersectRay(t,e){return tM.makeScale(...this.radius).invert(),iM.center.set(0,0,0),iM.radius=1,cM.copy(t).applyMatrix4(tM),cM.intersectSphere(iM,e)?(tM.makeScale(...this.radius),e.applyMatrix4(tM),e):null}getEastNorthUpFrame(t,e,n,i){return n.isMatrix4&&(i=n,n=0,console.warn('Ellipsoid: The signature for "getEastNorthUpFrame" has changed.')),this.getEastNorthUpAxes(t,e,rM,aM,oM),this.getCartographicToPosition(t,e,n,lM),i.makeBasis(rM,aM,oM).setPosition(lM)}getOrientedEastNorthUpFrame(t,e,n,i,s,r,a){return this.getObjectFrame(t,e,n,i,s,r,a,AM)}getObjectFrame(t,e,n,i,s,r,a,o=uM){return this.getEastNorthUpFrame(t,e,n,tM),sM.set(s,r,-i,"ZXY"),a.makeRotationFromEuler(sM).premultiply(tM),o===hM?(sM.set(Math.PI/2,0,0,"XYZ"),eM.makeRotationFromEuler(sM),a.multiply(eM)):o===uM&&(sM.set(-Math.PI/2,0,Math.PI,"XYZ"),eM.makeRotationFromEuler(sM),a.multiply(eM)),a}getCartographicFromObjectFrame(t,e,n=uM){return n===hM?(sM.set(-Math.PI/2,0,0,"XYZ"),eM.makeRotationFromEuler(sM).premultiply(t)):n===uM?(sM.set(-Math.PI/2,0,Math.PI,"XYZ"),eM.makeRotationFromEuler(sM).premultiply(t)):eM.copy(t),lM.setFromMatrixPosition(eM),this.getPositionToCartographic(lM,e),this.getEastNorthUpFrame(e.lat,e.lon,0,tM).invert(),eM.premultiply(tM),sM.setFromRotationMatrix(eM,"ZXY"),e.azimuth=-sM.z,e.elevation=sM.x,e.roll=sM.y,e}getEastNorthUpAxes(t,e,n,i,s,r=lM){this.getCartographicToPosition(t,e,0,r),this.getCartographicToNormal(t,e,s),n.set(-r.y,r.x,0).normalize(),i.crossVectors(s,n).normalize()}getAzElRollFromRotationMatrix(t,e,n,i,s=AM){return console.warn('Ellipsoid: "getAzElRollFromRotationMatrix" is deprecated. Use "getCartographicFromObjectFrame", instead.'),this.getCartographicToPosition(t,e,0,lM),nM.copy(n).setPosition(lM),this.getCartographicFromObjectFrame(nM,i,s),delete i.height,delete i.lat,delete i.lon,i}getRotationMatrixFromAzElRoll(t,e,n,i,s,r,a=AM){return console.warn('Ellipsoid: "getRotationMatrixFromAzElRoll" function has been deprecated. Use "getObjectFrame", instead.'),this.getObjectFrame(t,e,0,n,i,s,r,a),r.setPosition(0,0,0),r}getFrame(t,e,n,i,s,r,a,o=AM){return console.warn('Ellipsoid: "getFrame" function has been deprecated. Use "getObjectFrame", instead.'),this.getObjectFrame(t,e,r,n,i,s,a,o)}getCartographicToPosition(t,e,n,i){this.getCartographicToNormal(t,e,Kb);const s=this.radius;Zb.copy(Kb),Zb.x*=s.x**2,Zb.y*=s.y**2,Zb.z*=s.z**2;const r=Math.sqrt(Kb.dot(Zb));return Zb.divideScalar(r),i.copy(Zb).addScaledVector(Kb,n)}getPositionToCartographic(t,e){this.getPositionToSurfacePoint(t,Zb),this.getPositionToNormal(t,Kb);const n=$b.subVectors(t,Zb);return e.lon=Math.atan2(Kb.y,Kb.x),e.lat=Math.asin(Kb.z),e.height=Math.sign(n.dot(t))*n.length(),e}getCartographicToNormal(t,e,n){return Xb.set(1,Wb(t),e),n.setFromSpherical(Xb).normalize(),Vb(n),n}getPositionToNormal(t,e){const n=this.radius;return e.copy(t),e.x/=n.x**2,e.y/=n.y**2,e.z/=n.z**2,e.normalize(),e}getPositionToSurfacePoint(t,e){const n=this.radius,i=1/n.x**2,s=1/n.y**2,r=1/n.z**2,a=t.x*t.x*i,o=t.y*t.y*s,l=t.z*t.z*r,c=a+o+l,A=Math.sqrt(1/c),h=Zb.copy(t).multiplyScalar(A);if(c<.1)return isFinite(A)?e.copy(h):null;const u=$b.set(h.x*i*2,h.y*s*2,h.z*r*2);let d,p,g,f,m,y,I,C,E,v,x,w=(1-A)*t.length()/(.5*u.length()),_=0;do{w-=_,g=1/(1+w*i),f=1/(1+w*s),m=1/(1+w*r),y=g*g,I=f*f,C=m*m,E=y*g,v=I*f,x=C*m,d=a*y+o*I+l*C-1,p=a*E*i+o*v*s+l*x*r,_=d/(-2*p)}while(Math.abs(d)>1e-12);return e.set(t.x*g,t.y*f,t.z*m)}calculateHorizonDistance(t,e){const n=this.calculateEffectiveRadius(t);return Math.sqrt(2*n*e+e**2)}calculateEffectiveRadius(t){const e=this.radius.x,n=1-this.radius.z**2/e**2,i=t*ui.DEG2RAD,s=Math.sin(i)**2;return e/Math.sqrt(1-n*s)}getPositionElevation(t){this.getPositionToSurfacePoint(t,Zb);const e=$b.subVectors(t,Zb);return Math.sign(e.dot(t))*e.length()}copy(t){return this.radius.copy(t.radius),this}clone(){return(new this.constructor).copy(this)}}const pM=new dM(sb,sb,ab);pM.name="WGS84 Earth";const gM=new gi,fM=new gi,mM=new gi,yM=new gi,IM=new pi,CM=new gi,EM=new Es,vM=new Es,xM=new gi,wM=new Es,_M=new pi,BM={};class SM extends Db{constructor(t=SA){super(),this.manager=t,this.adjustmentTransform=new Es,this.ellipsoid=pM.clone()}resolveExternalURL(t){return this.manager.resolveURL(super.resolveExternalURL(t))}parse(t){return super.parse(t).then(t=>{const{featureTable:e,batchTable:n}=t,i=t.glbBytes.slice().buffer;return new Promise((s,r)=>{const a=this.fetchOptions,o=this.manager,l=o.getHandler("path.gltf")||new am(o);"include"===a.credentials&&"cors"===a.mode&&l.setCrossOrigin("use-credentials"),"credentials"in a&&l.setWithCredentials("include"===a.credentials),a.headers&&l.setRequestHeader(a.headers);let c=t.gltfWorkingPath??this.workingPath;/[\\/]$/.test(c)||(c+="/");const A=this.adjustmentTransform;l.parse(i,c,t=>{const i=e.getData("INSTANCES_LENGTH"),r=e.getData("POSITION",i,"FLOAT","VEC3"),a=e.getData("NORMAL_UP",i,"FLOAT","VEC3"),o=e.getData("NORMAL_RIGHT",i,"FLOAT","VEC3"),l=e.getData("SCALE_NON_UNIFORM",i,"FLOAT","VEC3"),c=e.getData("SCALE",i,"FLOAT","SCALAR"),h=e.getData("RTC_CENTER",1,"FLOAT","VEC3"),u=e.getData("EAST_NORTH_UP");["QUANTIZED_VOLUME_OFFSET","QUANTIZED_VOLUME_SCALE","POSITION_QUANTIZED","NORMAL_UP_OCT32P","NORMAL_RIGHT_OCT32P"].forEach(t=>{t in e.header&&console.warn(`I3DMLoader: Unsupported FeatureTable feature "${t}" detected.`)});const d=new gi;for(let t=0;t<i;t++)d.x+=r[3*t+0]/i,d.y+=r[3*t+1]/i,d.z+=r[3*t+2]/i;const p=[],g=[];t.scene.updateMatrixWorld(),t.scene.traverse(t=>{if(t.isMesh){g.push(t);const{geometry:e,material:n}=t,s=new fo(e,n,i);s.position.copy(d),h&&(s.position.x+=h[0],s.position.y+=h[1],s.position.z+=h[2]),p.push(s)}});for(let t=0;t<i;t++){yM.set(r[3*t+0]-d.x,r[3*t+1]-d.y,r[3*t+2]-d.z),IM.identity(),a&&(fM.set(a[3*t+0],a[3*t+1],a[3*t+2]),mM.set(o[3*t+0],o[3*t+1],o[3*t+2]),gM.crossVectors(mM,fM).normalize(),EM.makeBasis(mM,fM,gM),IM.setFromRotationMatrix(EM)),CM.set(1,1,1),l&&CM.set(l[3*t+0],l[3*t+1],l[3*t+2]),c&&CM.multiplyScalar(c[t]);for(let e=0,n=p.length;e<n;e++){const n=p[e];_M.copy(IM),u&&(n.updateMatrixWorld(),xM.copy(yM).applyMatrix4(n.matrixWorld),this.ellipsoid.getPositionToCartographic(xM,BM),this.ellipsoid.getEastNorthUpFrame(BM.lat,BM.lon,wM),_M.setFromRotationMatrix(wM)),EM.compose(yM,_M,CM).multiply(A);const i=g[e];vM.multiplyMatrices(EM,i.matrixWorld),n.setMatrixAt(t,vM)}}t.scene.clear(),t.scene.add(...p),t.batchTable=n,t.featureTable=e,t.scene.batchTable=n,t.scene.featureTable=e,s(t)},r)})})}}class bM extends Ub{constructor(t=SA){super(),this.manager=t,this.adjustmentTransform=new Es,this.ellipsoid=pM.clone()}parse(t){const e=super.parse(t),{manager:n,ellipsoid:i,adjustmentTransform:s}=this,r=[];for(const t in e.tiles){const{type:a,buffer:o}=e.tiles[t];switch(a){case"b3dm":{const t=o.slice(),e=new Pb(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.adjustmentTransform.copy(s);const i=e.parse(t.buffer);r.push(i);break}case"pnts":{const t=o.slice(),e=new Ob(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions;const i=e.parse(t.buffer);r.push(i);break}case"i3dm":{const t=o.slice(),e=new SM(n);e.workingPath=this.workingPath,e.fetchOptions=this.fetchOptions,e.ellipsoid.copy(i),e.adjustmentTransform.copy(s);const a=e.parse(t.buffer);r.push(a);break}}}return Promise.all(r).then(t=>{const e=new ya;return t.forEach(t=>{e.add(t.scene)}),{tiles:t,scene:e}})}}const MM=new Es;class TM extends ya{constructor(t){super(),this.isTilesGroup=!0,this.name="TilesRenderer.TilesGroup",this.tilesRenderer=t,this.matrixWorldInverse=new Es}raycast(t,e){return!this.tilesRenderer.optimizeRaycast||(this.tilesRenderer.raycast(t,e),!1)}updateMatrixWorld(t){if(this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldNeedsUpdate||t){null===this.parent?MM.copy(this.matrix):MM.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1;const t=MM.elements,e=this.matrixWorld.elements;let n=!1;for(let i=0;i<16;i++){const s=t[i],r=e[i];if(Math.abs(s-r)>Number.EPSILON){n=!0;break}}if(n){this.matrixWorld.copy(MM),this.matrixWorldInverse.copy(MM).invert();const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateMatrixWorld()}}}updateWorldMatrix(t,e){this.parent&&t&&this.parent.updateWorldMatrix(t,!1),this.updateMatrixWorld(!0)}}const QM=new Cs,DM=new gi,RM=[];function UM(t,e){return t.distance-e.distance}function PM(t,e,n,i){const{scene:s}=t.cached;n.invokeOnePlugin(n=>n.raycastTile&&n.raycastTile(t,s,e,i))||e.intersectObject(s,!0,i)}function LM(t){return"__used"in t}function FM(t,e,n,i=null){const{group:s,activeTiles:r}=t;null===i&&(i=QM).copy(n.ray).applyMatrix4(s.matrixWorldInverse);const a=[],o=e.children;for(let t=0,e=o.length;t<e;t++){const e=o[t];LM(e)&&e.__used&&(null!==e.cached.boundingVolume.intersectRay(i,DM)&&(DM.applyMatrix4(s.matrixWorld),a.push({distance:DM.distanceToSquared(n.ray.origin),tile:e})))}a.sort(UM);let l=null,c=1/0;if(r.has(e)){const i=function(t,e,n){PM(t,e,n,RM),RM.sort(UM);const i=RM[0]||null;return RM.length=0,i}(e,n,t);i&&(l=i,c=i.distance*i.distance)}for(let e=0,s=a.length;e<s;e++){const s=a[e],r=s.distance,o=s.tile;if(r>c)break;const A=FM(t,o,n,i);if(A){const t=A.distance*A.distance;t<c&&(l=A,c=t)}}return l}function NM(t,e,n,i,s=null){if(!LM(e))return;const{group:r,activeTiles:a}=t,{boundingVolume:o}=e.cached;if(null===s&&(s=QM).copy(n.ray).applyMatrix4(r.matrixWorldInverse),!e.__used||!o.intersectsRay(s))return;a.has(e)&&PM(e,n,t,i);const l=e.children;for(let e=0,r=l.length;e<r;e++)NM(t,l[e],n,i,s)}const kM=new gi,OM=new gi,zM=new gi,GM=new Cs;class HM{constructor(t=new Ji,e=new Es){this.box=t.clone(),this.transform=e.clone(),this.inverseTransform=new Es,this.points=new Array(8).fill().map(()=>new gi),this.planes=new Array(6).fill().map(()=>new Co)}copy(t){return this.box.copy(t.box),this.transform.copy(t.transform),this.update(),this}clone(){return(new this.constructor).copy(this)}clampPoint(t,e){return e.copy(t).applyMatrix4(this.inverseTransform).clamp(this.box.min,this.box.max).applyMatrix4(this.transform)}distanceToPoint(t){return this.clampPoint(t,zM).distanceTo(t)}containsPoint(t){return zM.copy(t).applyMatrix4(this.inverseTransform),this.box.containsPoint(zM)}intersectsRay(t){return GM.copy(t).applyMatrix4(this.inverseTransform),GM.intersectsBox(this.box)}intersectRay(t,e){return GM.copy(t).applyMatrix4(this.inverseTransform),GM.intersectBox(this.box,e)?(e.applyMatrix4(this.transform),e):null}update(){const{points:t,inverseTransform:e,transform:n,box:i}=this;e.copy(n).invert();const{min:s,max:r}=i;let a=0;for(let e=-1;e<=1;e+=2)for(let i=-1;i<=1;i+=2)for(let o=-1;o<=1;o+=2)t[a].set(e<0?s.x:r.x,i<0?s.y:r.y,o<0?s.z:r.z).applyMatrix4(n),a++;this.updatePlanes()}updatePlanes(){kM.copy(this.box.min).applyMatrix4(this.transform),OM.copy(this.box.max).applyMatrix4(this.transform),zM.set(0,0,1).transformDirection(this.transform),this.planes[0].setFromNormalAndCoplanarPoint(zM,kM),this.planes[1].setFromNormalAndCoplanarPoint(zM,OM).negate(),zM.set(0,1,0).transformDirection(this.transform),this.planes[2].setFromNormalAndCoplanarPoint(zM,kM),this.planes[3].setFromNormalAndCoplanarPoint(zM,OM).negate(),zM.set(1,0,0).transformDirection(this.transform),this.planes[4].setFromNormalAndCoplanarPoint(zM,kM),this.planes[5].setFromNormalAndCoplanarPoint(zM,OM).negate()}intersectsSphere(t){return this.clampPoint(t.center,zM),zM.distanceToSquared(t.center)<=t.radius*t.radius}intersectsFrustum(t){return this._intersectsPlaneShape(t.planes,t.points)}intersectsOBB(t){return this._intersectsPlaneShape(t.planes,t.points)}_intersectsPlaneShape(t,e){const n=this.points,i=this.planes;for(let e=0;e<6;e++){const i=t[e];let s=-1/0;for(let t=0;t<8;t++){const e=n[t],r=i.distanceToPoint(e);s=s<r?r:s}if(s<0)return!1}for(let t=0;t<6;t++){const n=i[t];let s=-1/0;for(let t=0;t<8;t++){const i=e[t],r=n.distanceToPoint(i);s=s<r?r:s}if(s<0)return!1}return!0}}const VM=Math.PI,YM=VM/2,qM=new gi,WM=new gi,JM=new gi,jM=new Es;let XM=0;const KM=[];function ZM(t=!1){return t?(KM[XM]||(KM[XM]=new gi),XM++,KM[XM-1]):new gi}function $M(){XM=0}class tT extends dM{constructor(t,e,n,i=-YM,s=YM,r=0,a=2*VM,o=0,l=0){super(t,e,n),this.latStart=i,this.latEnd=s,this.lonStart=r,this.lonEnd=a,this.heightStart=o,this.heightEnd=l}_getPoints(t=!1){const{latStart:e,latEnd:n,lonStart:i,lonEnd:s,heightStart:r,heightEnd:a}=this,o=ui.mapLinear(.5,0,1,e,n),l=ui.mapLinear(.5,0,1,i,s),c=Math.floor(i/YM)*YM,A=[[-VM/2,0],[VM/2,0],[0,c],[0,c+VM/2],[0,c+VM],[0,c+3*VM/2],[e,s],[n,s],[e,i],[n,i],[0,i],[0,s],[o,l],[e,l],[n,l],[o,i],[o,s]],h=[],u=A.length;for(let o=0;o<=1;o++){const l=ui.mapLinear(o,0,1,r,a);for(let r=0,a=u;r<a;r++){const[a,o]=A[r];if(a>=e&&a<=n&&o>=i&&o<=s){const e=ZM(t);h.push(e),this.getCartographicToPosition(a,o,l,e)}}}return h}getBoundingBox(t,e){$M();const{latStart:n,latEnd:i,lonStart:s,lonEnd:r}=this;if(i-n<VM/2){const t=ui.mapLinear(.5,0,1,n,i),a=ui.mapLinear(.5,0,1,s,r);this.getCartographicToNormal(t,a,JM),WM.set(0,0,1),qM.crossVectors(WM,JM),WM.crossVectors(qM,JM),e.makeBasis(qM,WM,JM)}else qM.set(1,0,0),WM.set(0,1,0),JM.set(0,0,1),e.makeBasis(qM,WM,JM);jM.copy(e).invert();const a=this._getPoints(!0);for(let t=0,e=a.length;t<e;t++)a[t].applyMatrix4(jM);t.makeEmpty(),t.setFromPoints(a)}getBoundingSphere(t,e){$M();const n=this._getPoints(!0);t.makeEmpty(),t.setFromPoints(n,e)}}const eT=new gi,nT=new gi,iT=new gi,sT=new gi,rT=new gi;class aT{constructor(){this.sphere=null,this.obb=null,this.region=null,this.regionObb=null}intersectsRay(t){const e=this.sphere,n=this.obb||this.regionObb;return!(e&&!t.intersectsSphere(e)||n&&!n.intersectsRay(t))}intersectRay(t,e=null){const n=this.sphere,i=this.obb||this.regionObb;let s=-1/0,r=-1/0;n&&t.intersectSphere(n,sT)&&(s=n.containsPoint(t.origin)?0:t.origin.distanceToSquared(sT)),i&&i.intersectRay(t,rT)&&(r=i.containsPoint(t.origin)?0:t.origin.distanceToSquared(rT));const a=Math.max(s,r);return a===-1/0?null:(t.at(Math.sqrt(a),e),e)}distanceToPoint(t){const e=this.sphere,n=this.obb||this.regionObb;let i=-1/0,s=-1/0;return e&&(i=Math.max(e.distanceToPoint(t),0)),n&&(s=n.distanceToPoint(t)),i>s?i:s}intersectsFrustum(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!t.intersectsSphere(n))&&!(e&&!e.intersectsFrustum(t))&&Boolean(n||e)}intersectsSphere(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!n.intersectsSphere(t))&&!(e&&!e.intersectsSphere(t))&&Boolean(n||e)}intersectsOBB(t){const e=this.obb||this.regionObb,n=this.sphere;return!(n&&!t.intersectsSphere(n))&&!(e&&!e.intersectsOBB(t))&&Boolean(n||e)}getOBB(t,e){const n=this.obb||this.regionObb;n?(t.copy(n.box),e.copy(n.transform)):(this.getAABB(t),e.identity())}getAABB(t){if(this.sphere)this.sphere.getBoundingBox(t);else{const e=this.obb||this.regionObb;t.copy(e.box).applyMatrix4(e.transform)}}getSphere(t){if(this.sphere)t.copy(this.sphere);else if(this.region)this.region.getBoundingSphere(t);else{const e=this.obb||this.regionObb;e.box.getBoundingSphere(t),t.applyMatrix4(e.transform)}}setObbData(t,e){const n=new HM;eT.set(t[3],t[4],t[5]),nT.set(t[6],t[7],t[8]),iT.set(t[9],t[10],t[11]);const i=eT.length(),s=nT.length(),r=iT.length();eT.normalize(),nT.normalize(),iT.normalize(),0===i&&eT.crossVectors(nT,iT),0===s&&nT.crossVectors(eT,iT),0===r&&iT.crossVectors(eT,nT),n.transform.set(eT.x,nT.x,iT.x,t[0],eT.y,nT.y,iT.y,t[1],eT.z,nT.z,iT.z,t[2],0,0,0,1).premultiply(e),n.box.min.set(-i,-s,-r),n.box.max.set(i,s,r),n.update(),this.obb=n}setSphereData(t,e,n,i,s){const r=new us;r.center.set(t,e,n),r.radius=i,r.applyMatrix4(s),this.sphere=r}setRegionData(t,e,n,i,s,r,a){const o=new tT(...t.radius,n,s,e,i,r,a),l=new HM;o.getBoundingBox(l.box,l.transform),l.update(),this.region=o,this.regionObb=l}}const oT=new yi;class lT extends wo{constructor(){super(),this.points=Array(8).fill().map(()=>new gi)}setFromProjectionMatrix(t,e){return super.setFromProjectionMatrix(t,e),this.calculateFrustumPoints(),this}calculateFrustumPoints(){const{planes:t,points:e}=this;[[t[0],t[3],t[4]],[t[1],t[3],t[4]],[t[0],t[2],t[4]],[t[1],t[2],t[4]],[t[0],t[3],t[5]],[t[1],t[3],t[5]],[t[0],t[2],t[5]],[t[1],t[2],t[5]]].forEach((t,n)=>{!function(t,e,n,i){const s=oT.set(t.normal.x,t.normal.y,t.normal.z,e.normal.x,e.normal.y,e.normal.z,n.normal.x,n.normal.y,n.normal.z);i.set(-t.constant,-e.constant,-n.constant),i.applyMatrix3(s.invert())}(t[0],t[1],t[2],e[n])})}}function cT(t){const{TextureUtils:e}=i;if(!e||!t)return 0;const{format:n,type:s,image:r}=t,{width:a,height:o}=r;let l=e.getByteLength(a,o,n,s);return l*=t.generateMipmaps?4/3:1,l}const AT=new Es,hT=new Qs,uT=Symbol("INITIAL_FRUSTUM_CULLED"),dT=new Es,pT=new gi,gT=new di,fT={inView:!1,error:1/0},mT=new gi(1,0,0),yT=new gi(0,1,0);function IT(t,e){t.traverse(t=>{t.frustumCulled=t[uT]&&e})}class CT extends vb{get autoDisableRendererCulling(){return this._autoDisableRendererCulling}set autoDisableRendererCulling(t){this._autoDisableRendererCulling!==t&&(super._autoDisableRendererCulling=t,this.forEachLoadedModel(e=>{IT(e,!t)}))}get optimizeRaycast(){return this._optimizeRaycast}set optimizeRaycast(t){console.warn('TilesRenderer: The "optimizeRaycast" option has been deprecated.'),this._optimizeRaycast=t}constructor(...t){super(...t),this.group=new TM(this),this.ellipsoid=pM.clone(),this.cameras=[],this.cameraMap=new Map,this.cameraInfo=[],this._optimizeRaycast=!0,this._upRotationMatrix=new Es,this._bytesUsed=new WeakMap,this._autoDisableRendererCulling=!0;const e=new BA;e.setURLModifier(t=>this.preprocessURL?this.preprocessURL(t):t),this.manager=e,this._listeners={}}addEventListener(...t){ei.prototype.addEventListener.call(this,...t)}hasEventListener(...t){ei.prototype.hasEventListener.call(this,...t)}removeEventListener(...t){ei.prototype.removeEventListener.call(this,...t)}dispatchEvent(...t){ei.prototype.dispatchEvent.call(this,...t)}getBoundingBox(t){if(!this.root)return!1;const e=this.root.cached.boundingVolume;return!!e&&(e.getAABB(t),!0)}getOrientedBoundingBox(t,e){if(!this.root)return!1;const n=this.root.cached.boundingVolume;return!!n&&(n.getOBB(t,e),!0)}getBoundingSphere(t){if(!this.root)return!1;const e=this.root.cached.boundingVolume;return!!e&&(e.getSphere(t),!0)}forEachLoadedModel(t){this.traverse(e=>{const n=e.cached&&e.cached.scene;n&&t(n,e)},null,!1)}raycast(t,e){if(this.root)if(t.firstHitOnly){const n=FM(this,this.root,t);n&&e.push(n)}else NM(this,this.root,t,e)}hasCamera(t){return this.cameraMap.has(t)}setCamera(t){const e=this.cameras,n=this.cameraMap;return!n.has(t)&&(n.set(t,new di),e.push(t),this.dispatchEvent({type:"add-camera",camera:t}),!0)}setResolution(t,e,n){const i=this.cameraMap;if(!i.has(t))return!1;const s=e.isVector2?e.x:e,r=e.isVector2?e.y:n,a=i.get(t);return a.width===s&&a.height===r||(a.set(s,r),this.dispatchEvent({type:"camera-resolution-change"})),!0}setResolutionFromRenderer(t,e){return e.getSize(gT),this.setResolution(t,gT.x,gT.y)}deleteCamera(t){const e=this.cameras,n=this.cameraMap;if(n.has(t)){const i=e.indexOf(t);return e.splice(i,1),n.delete(t),this.dispatchEvent({type:"delete-camera",camera:t}),!0}return!1}loadRootTileSet(...t){return super.loadRootTileSet(...t).then(t=>{const{asset:e,extensions:n={}}=t;switch((e&&e.gltfUpAxis||"y").toLowerCase()){case"x":this._upRotationMatrix.makeRotationAxis(yT,-Math.PI/2);break;case"y":this._upRotationMatrix.makeRotationAxis(mT,Math.PI/2)}if("3DTILES_ellipsoid"in n){const t=n["3DTILES_ellipsoid"],{ellipsoid:e}=this;e.name=t.body,t.radii?e.radius.set(...t.radii):e.radius.set(1,1,1)}return t})}update(){let t=null;if(this.invokeAllPlugins(e=>{if(e.doTilesNeedUpdate){const n=e.doTilesNeedUpdate();t=null===t?n:Boolean(t||n)}}),!1===t)return this.dispatchEvent({type:"update-before"}),void this.dispatchEvent({type:"update-after"});this.dispatchEvent({type:"update-before"});const e=this.group,n=this.cameras,i=this.cameraMap,s=this.cameraInfo;for(;s.length>n.length;)s.pop();for(;s.length<n.length;)s.push({frustum:new lT,isOrthographic:!1,sseDenominator:-1,position:new gi,invScale:-1,pixelSize:0});pT.setFromMatrixScale(e.matrixWorldInverse),Math.abs(Math.max(pT.x-pT.y,pT.x-pT.z))>1e-6&&console.warn("ThreeTilesRenderer : Non uniform scale used for tile which may cause issues when calculating screen space error.");for(let t=0,r=s.length;t<r;t++){const r=n[t],a=s[t],o=a.frustum,l=a.position,c=i.get(r);0!==c.width&&0!==c.height||console.warn("TilesRenderer: resolution for camera error calculation is not set.");const A=r.projectionMatrix.elements;if(a.isOrthographic=1===A[15],a.isOrthographic){const t=2/A[0],e=2/A[5];a.pixelSize=Math.max(e/c.height,t/c.width)}else a.sseDenominator=2/A[5]/c.height;dT.copy(e.matrixWorld),dT.premultiply(r.matrixWorldInverse),dT.premultiply(r.projectionMatrix),o.setFromProjectionMatrix(dT),l.set(0,0,0),l.applyMatrix4(r.matrixWorld),l.applyMatrix4(e.matrixWorldInverse)}if(super.update(),this.dispatchEvent({type:"update-after"}),0===n.length&&this.root){let t=!1;this.invokeAllPlugins(e=>t=t||Boolean(e!==this&&e.calculateTileViewError)),!1===t&&console.warn("TilesRenderer: no cameras defined. Cannot update 3d tiles.")}}preprocessNode(t,e,n=null){super.preprocessNode(t,e,n);const i=new Es;if(t.transform){const e=t.transform;for(let t=0;t<16;t++)i.elements[t]=e[t]}n&&i.premultiply(n.cached.transform);const s=(new Es).copy(i).invert(),r=new aT;"sphere"in t.boundingVolume&&r.setSphereData(...t.boundingVolume.sphere,i),"box"in t.boundingVolume&&r.setObbData(t.boundingVolume.box,i),"region"in t.boundingVolume&&r.setRegionData(this.ellipsoid,...t.boundingVolume.region),t.cached={transform:i,transformInverse:s,active:!1,boundingVolume:r,metadata:null,scene:null,geometry:null,materials:null,textures:null}}async parseTile(t,e,n,i,s){const r=e.cached,a=i.split(/[\\/]/g);a.pop();const o=a.join("/"),l=this.fetchOptions,c=this.manager;let A=null;const h=r.transform,u=this._upRotationMatrix,d=(Tb(t)||n).toLowerCase();switch(d){case"b3dm":{const e=new Pb(c);e.workingPath=o,e.fetchOptions=l,e.adjustmentTransform.copy(u),A=e.parse(t);break}case"pnts":{const e=new Ob(c);e.workingPath=o,e.fetchOptions=l,A=e.parse(t);break}case"i3dm":{const e=new SM(c);e.workingPath=o,e.fetchOptions=l,e.adjustmentTransform.copy(u),e.ellipsoid.copy(this.ellipsoid),A=e.parse(t);break}case"cmpt":{const e=new bM(c);e.workingPath=o,e.fetchOptions=l,e.adjustmentTransform.copy(u),e.ellipsoid.copy(this.ellipsoid),A=e.parse(t).then(t=>t.scene);break}case"gltf":case"glb":{const e=c.getHandler("path.gltf")||c.getHandler("path.glb")||new am(c);e.setWithCredentials("include"===l.credentials),e.setRequestHeader(l.headers||{}),"include"===l.credentials&&"cors"===l.mode&&e.setCrossOrigin("use-credentials");let n=e.resourcePath||e.path||o;!/[\\/]$/.test(n)&&n.length&&(n+="/"),A=e.parseAsync(t,n).then(t=>{t.scene=t.scene||new ya;const{scene:e}=t;return e.updateMatrix(),e.matrix.multiply(u).decompose(e.position,e.quaternion,e.scale),t});break}default:A=this.invokeOnePlugin(r=>r.parseToMesh&&r.parseToMesh(t,e,n,i,s))}const p=await A;if(null===p)throw new Error(`TilesRenderer: Content type "${d}" not supported.`);let g,f;p.isObject3D?(g=p,f=null):(g=p.scene,f=p),g.updateMatrix(),g.matrix.premultiply(h),g.matrix.decompose(g.position,g.quaternion,g.scale),await this.invokeAllPlugins(t=>t.processTileModel&&t.processTileModel(g,e)),g.traverse(t=>{t[uT]=t.frustumCulled}),IT(g,!this.autoDisableRendererCulling);const m=[],y=[],I=[];if(g.traverse(t=>{if(t.geometry&&y.push(t.geometry),t.material){const e=t.material;m.push(t.material);for(const t in e){const n=e[t];n&&n.isTexture&&I.push(n)}}}),s.aborted)for(let t=0,e=I.length;t<e;t++){const e=I[t];e.image instanceof ImageBitmap&&e.image.close(),e.dispose()}else r.materials=m,r.geometry=y,r.textures=I,r.scene=g,r.metadata=f}disposeTile(t){super.disposeTile(t);const e=t.cached;if(e.scene){const n=e.materials,i=e.geometry,s=e.textures,r=e.scene.parent;e.scene.traverse(t=>{t.userData.meshFeatures&&t.userData.meshFeatures.dispose(),t.userData.structuralMetadata&&t.userData.structuralMetadata.dispose()});for(let t=0,e=i.length;t<e;t++)i[t].dispose();for(let t=0,e=n.length;t<e;t++)n[t].dispose();for(let t=0,e=s.length;t<e;t++){const e=s[t];e.image instanceof ImageBitmap&&e.image.close(),e.dispose()}r&&r.remove(e.scene),this.dispatchEvent({type:"dispose-model",scene:e.scene,tile:t}),e.scene=null,e.materials=null,e.textures=null,e.geometry=null,e.metadata=null}}setTileVisible(t,e){const n=t.cached.scene,i=this.group;e?n&&(i.add(n),n.updateMatrixWorld(!0)):n&&i.remove(n),super.setTileVisible(t,e),this.dispatchEvent({type:"tile-visibility-change",scene:n,tile:t,visible:e})}calculateBytesUsed(t,e){const n=this._bytesUsed;return!n.has(t)&&e&&n.set(t,function(t){const e=new Set;let n=0;return t.traverse(t=>{if(t.geometry&&!e.has(t.geometry)&&(n+=sm(t.geometry),e.add(t.geometry)),t.material){const i=t.material;for(const t in i){const s=i[t];s&&s.isTexture&&!e.has(s)&&(n+=cT(s),e.add(s))}}}),n}(e)),n.get(t)??null}calculateTileViewError(t,e){const n=t.cached,i=this.cameras,s=this.cameraInfo,r=n.boundingVolume;let a=!1,o=-1/0,l=1/0,c=-1/0,A=1/0;for(let e=0,n=i.length;e<n;e++){const n=s[e];let i,h;if(n.isOrthographic){const e=n.pixelSize;i=t.geometricError/e,h=1/0}else{const e=n.sseDenominator;h=r.distanceToPoint(n.position),i=0===h?1/0:t.geometricError/(h*e)}const u=s[e].frustum;r.intersectsFrustum(u)&&(a=!0,o=Math.max(o,i),l=Math.min(l,h)),c=Math.max(c,i),A=Math.min(A,h)}this.invokeAllPlugins(e=>{e!==this&&e.calculateTileViewError&&(e.calculateTileViewError(t,fT),fT.inView&&(a=!0,o=Math.max(o,fT.error)),c=Math.max(c,fT.error))}),a?(e.inView=!0,e.error=o,e.distanceFromCamera=l):(e.inView=!1,e.error=c,e.distanceFromCamera=A)}setLatLonToYUp(t,e){console.warn("TilesRenderer: setLatLonToYUp is deprecated. Use the ReorientationPlugin, instead.");const{ellipsoid:n,group:i}=this;hT.set(Math.PI/2,Math.PI/2,0),AT.makeRotationFromEuler(hT),n.getEastNorthUpFrame(t,e,0,i.matrix).multiply(AT).invert().decompose(i.position,i.quaternion,i.scale),i.updateMatrixWorld(!0)}dispose(){super.dispose(),this.group.removeFromParent()}}class ET extends ea{constructor(){super(new Lc(0,0),new vT),this.renderOrder=1/0}onBeforeRender(t){const e=this.material.uniforms;t.getSize(e.resolution.value)}updateMatrixWorld(){this.matrixWorld.makeTranslation(this.position)}dispose(){this.geometry.dispose(),this.material.dispose()}}class vT extends la{constructor(){super({depthWrite:!1,depthTest:!1,transparent:!0,uniforms:{resolution:{value:new di},size:{value:15},thickness:{value:2},opacity:{value:1}},vertexShader:"\n\n\t\t\t\tuniform float pixelRatio;\n\t\t\t\tuniform float size;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform vec2 resolution;\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\t\t\t\t\tvec2 offset = uv * 2.0 - vec2( 1.0 );\n\t\t\t\t\toffset.y *= aspect;\n\n\t\t\t\t\tvec4 screenPoint = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t\tscreenPoint.xy += offset * ( size + thickness ) * screenPoint.w / resolution.x;\n\n\t\t\t\t\tgl_Position = screenPoint;\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform float size;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform float opacity;\n\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tfloat ht = 0.5 * thickness;\n\t\t\t\t\tfloat planeDim = size + thickness;\n\t\t\t\t\tfloat offset = ( planeDim - ht - 2.0 ) / planeDim;\n\t\t\t\t\tfloat texelThickness = ht / planeDim;\n\n\t\t\t\t\tvec2 vec = vUv * 2.0 - vec2( 1.0 );\n\t\t\t\t\tfloat dist = abs( length( vec ) - offset );\n\t\t\t\t\tfloat fw = fwidth( dist ) * 0.5;\n\t\t\t\t\tfloat a = smoothstep( texelThickness - fw, texelThickness + fw, dist );\n\n\t\t\t\t\tgl_FragColor = vec4( 1, 1, 1, opacity * ( 1.0 - a ) );\n\n\t\t\t\t}\n\t\t\t"})}}const xT=new di,wT=new di;class _T{constructor(){this.domElement=null,this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new di,this.hoverSet=!1}reset(){this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new di,this.hoverSet=!1}updateFrame(){const{previousPositions:t,pointerPositions:e}=this;for(const n in e)t[n].copy(e[n])}setHoverEvent(t){"mouse"!==t.pointerType&&"wheel"!==t.type||(this.getAdjustedPointer(t,this.hoverPosition),this.hoverSet=!0)}getLatestPoint(t){return null!==this.pointerType?(this.getCenterPoint(t),t):this.hoverSet?(t.copy(this.hoverPosition),t):null}getAdjustedPointer(t,e){const n=(this.domElement?this.domElement:t.target).getBoundingClientRect(),i=t.clientX-n.left,s=t.clientY-n.top;e.set(i,s)}addPointer(t){const e=t.pointerId,n=new di;this.getAdjustedPointer(t,n),this.pointerOrder.push(e),this.pointerPositions[e]=n,this.previousPositions[e]=n.clone(),this.startPositions[e]=n.clone(),1===this.getPointerCount()&&(this.pointerType=t.pointerType,this.buttons=t.buttons)}updatePointer(t){const e=t.pointerId;return e in this.pointerPositions&&(this.getAdjustedPointer(t,this.pointerPositions[e]),!0)}deletePointer(t){const e=t.pointerId,n=this.pointerOrder;n.splice(n.indexOf(e),1),delete this.pointerPositions[e],delete this.previousPositions[e],delete this.startPositions[e],0===this.getPointerCount.length&&(this.buttons=0,this.pointerType=null)}getPointerCount(){return this.pointerOrder.length}getCenterPoint(t,e=this.pointerPositions){const n=this.pointerOrder;if(1===this.getPointerCount()||"mouse"===this.getPointerType()){const i=n[0];return t.copy(e[i]),t}if(2===this.getPointerCount()){const n=this.pointerOrder[0],i=this.pointerOrder[1],s=e[n],r=e[i];return t.addVectors(s,r).multiplyScalar(.5),t}return null}getPreviousCenterPoint(t){return this.getCenterPoint(t,this.previousPositions)}getStartCenterPoint(t){return this.getCenterPoint(t,this.startPositions)}getMoveDistance(){return this.getCenterPoint(xT),this.getPreviousCenterPoint(wT),xT.sub(wT).length()}getTouchPointerDistance(t=this.pointerPositions){if(this.getPointerCount()<=1||"mouse"===this.getPointerType())return 0;const{pointerOrder:e}=this,n=e[0],i=e[1],s=t[n],r=t[i];return s.distanceTo(r)}getPreviousTouchPointerDistance(){return this.getTouchPointerDistance(this.previousPositions)}getStartTouchPointerDistance(){return this.getTouchPointerDistance(this.startPositions)}getPointerType(){return this.pointerType}isPointerTouch(){return"touch"===this.getPointerType()}getPointerButtons(){return this.buttons}isLeftClicked(){return Boolean(1&this.buttons)}isRightClicked(){return Boolean(2&this.buttons)}}const BT=new Es,ST=new Cs,bT=new gi;function MT(t,e,n){return n.makeTranslation(-t.x,-t.y,-t.z),BT.makeRotationFromQuaternion(e),n.premultiply(BT),BT.makeTranslation(t.x,t.y,t.z),n.premultiply(BT),n}function TT(t,e,n,i){i.x=(t-n.offsetLeft)/n.clientWidth*2-1,i.y=-(e-n.offsetTop)/n.clientHeight*2+1,i.isVector3&&(i.z=0)}function QT(t,e,n){return e.intersectRay(t,n)?n:(BT.makeScale(...e.radius).invert(),ST.copy(t).applyMatrix4(BT),bT.set(0,0,0),ST.closestPointToPoint(bT,n).normalize(),BT.makeScale(...e.radius),n.applyMatrix4(BT))}function DT(t,e,n){const i=t instanceof Cs?t:t.ray,{origin:s,direction:r}=i;s.set(e.x,e.y,-1).unproject(n),r.set(e.x,e.y,1).unproject(n).sub(s),t.isRay||(t.near=0,t.far=r.length(),t.camera=n),r.normalize()}const RT=.05,UT=.025,PT=new Es,LT=new Es,FT=new gi,NT=new gi,kT=new gi,OT=new gi,zT=new gi,GT=new gi,HT=new gi,VT=new gi,YT=new pi,qT=new Co,WT=new gi,JT=new gi,jT=new gi,XT=new pi,KT=new Cs,ZT=new di,$T=new di,tQ=new di,eQ=new di,nQ=new di,iQ=new di,sQ={type:"change"},rQ={type:"start"},aQ={type:"end"};class oQ extends ei{get enabled(){return this._enabled}set enabled(t){t!==this.enabled&&(this._enabled=t,this.resetState(),this.pointerTracker.reset(),this.enabled||(this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0)))}constructor(t=null,e=null,n=null,i=null){super(),this.isEnvironmentControls=!0,this.domElement=null,this.camera=null,this.scene=null,this.tilesRenderer=null,this._enabled=!0,this.cameraRadius=5,this.rotationSpeed=1,this.minAltitude=0,this.maxAltitude=.45*Math.PI,this.minDistance=10,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.zoomSpeed=1,this.adjustHeight=!0,this.enableDamping=!1,this.dampingFactor=.15,this.fallbackPlane=new Co(new gi(0,1,0),0),this.useFallbackPlane=!0,this.scaleZoomOrientationAtEdges=!1,this.autoAdjustCameraRotation=!0,this.state=0,this.pointerTracker=new _T,this.needsUpdate=!1,this.actionHeightOffset=0,this.pivotPoint=new gi,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.zoomDirection=new gi,this.zoomPoint=new gi,this.zoomDelta=0,this.rotationInertiaPivot=new gi,this.rotationInertia=new di,this.dragInertia=new gi,this.inertiaTargetDistance=1/0,this.inertiaStableFrames=0,this.pivotMesh=new ET,this.pivotMesh.raycast=()=>{},this.pivotMesh.scale.setScalar(.25),this.raycaster=new nu,this.raycaster.firstHitOnly=!0,this.up=new gi(0,1,0),this.clock=new xh,this._detachCallback=null,this._upInitialized=!1,this._lastUsedState=0,this._zoomPointWasSet=!1,this._tilesOnChangeCallback=()=>this.zoomPointSet=!1,n&&this.attach(n),e&&this.setCamera(e),t&&this.setScene(t),i&&this.setTilesRenderer(i)}setScene(t){this.scene=t}setCamera(t){this.camera=t,this._upInitialized=!1,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.needsUpdate=!0,this.raycaster.camera=t,this.resetState()}setTilesRenderer(t){console.warn('EnvironmentControls: "setTilesRenderer" has been deprecated. Use "setScene" and "setEllipsoid", instead.'),this.tilesRenderer=t,null!==this.tilesRenderer&&this.setScene(this.tilesRenderer.group)}attach(t){if(this.domElement)throw new Error("EnvironmentControls: Controls already attached to element");this.domElement=t,this.pointerTracker.domElement=t,t.style.touchAction="none";const e=t=>{this.enabled&&t.preventDefault()},n=t=>{if(!this.enabled)return;t.preventDefault();const{camera:e,raycaster:n,domElement:i,up:s,pivotMesh:r,pointerTracker:a,scene:o,pivotPoint:l,enabled:c}=this;if(a.addPointer(t),this.needsUpdate=!0,a.isPointerTouch())if(r.visible=!1,0===a.getPointerCount())i.setPointerCapture(t.pointerId);else if(a.getPointerCount()>2)return void this.resetState();a.getCenterPoint($T),TT($T.x,$T.y,i,$T),DT(n,$T,e);const A=Math.abs(n.ray.direction.dot(s));if(A<RT||A<UT)return;const h=this._raycast(n);h&&(2===a.getPointerCount()||a.isRightClicked()||a.isLeftClicked()&&t.shiftKey?(this.setState(a.isPointerTouch()?4:2),l.copy(h.point),r.position.copy(h.point),r.visible=!a.isPointerTouch()&&c,r.updateMatrixWorld(),o.add(r)):a.isLeftClicked()&&(this.setState(1),l.copy(h.point),r.position.copy(h.point),r.updateMatrixWorld(),o.add(r)))};let i=!1;const s=t=>{const{pointerTracker:e}=this;if(!this.enabled)return;t.preventDefault();const{pivotMesh:n,enabled:s}=this;this.zoomDirectionSet=!1,this.zoomPointSet=!1,0!==this.state&&(this.needsUpdate=!0),e.setHoverEvent(t),e.updatePointer(t)&&(e.isPointerTouch()&&2===e.getPointerCount()&&(i||(i=!0,queueMicrotask(()=>{i=!1,e.getCenterPoint(nQ);const t=e.getStartTouchPointerDistance(),r=e.getTouchPointerDistance(),a=r-t;if(0===this.state||4===this.state){e.getCenterPoint(nQ),e.getStartCenterPoint(iQ);const t=2*window.devicePixelRatio,n=nQ.distanceTo(iQ);(Math.abs(a)>t||n>t)&&(Math.abs(a)>n?(this.setState(3),this.zoomDirectionSet=!1):this.setState(2))}if(3===this.state){const t=e.getPreviousTouchPointerDistance();this.zoomDelta+=r-t,n.visible=!1}else 2===this.state&&(n.visible=s)}))),this.dispatchEvent(sQ))},r=e=>{const{pointerTracker:n}=this;this.enabled&&0!==n.getPointerCount()&&(n.deletePointer(e),"touch"===n.getPointerType()&&0===n.getPointerCount()&&t.releasePointerCapture(e.pointerId),this.resetState(),this.needsUpdate=!0)},a=t=>{if(!this.enabled)return;t.preventDefault();const{pointerTracker:e}=this;let n;switch(e.setHoverEvent(t),e.updatePointer(t),this.dispatchEvent(rQ),t.deltaMode){case 2:n=800*t.deltaY;break;case 1:n=40*t.deltaY;break;case 0:n=t.deltaY}const i=Math.sign(n),s=Math.abs(n);this.zoomDelta-=.25*i*s,this.needsUpdate=!0,this._lastUsedState=3,this.dispatchEvent(aQ)},o=t=>{this.enabled&&this.resetState()};t.addEventListener("contextmenu",e),t.addEventListener("pointerdown",n),t.addEventListener("wheel",a,{passive:!1});const l=t.getRootNode();l.addEventListener("pointermove",s),l.addEventListener("pointerup",r),l.addEventListener("pointerleave",o),this._detachCallback=()=>{t.removeEventListener("contextmenu",e),t.removeEventListener("pointerdown",n),t.removeEventListener("wheel",a),l.removeEventListener("pointermove",s),l.removeEventListener("pointerup",r),l.removeEventListener("pointerleave",o)}}detach(){this.domElement=null,this._detachCallback&&(this._detachCallback(),this._detachCallback=null,this.pointerTracker.reset())}getUpDirection(t,e){e.copy(this.up)}getCameraUpDirection(t){this.getUpDirection(this.camera.position,t)}getPivotPoint(t){let e=null;3===this._lastUsedState?this._zoomPointWasSet&&(e=t.copy(this.zoomPoint)):2!==this._lastUsedState&&1!==this._lastUsedState||(e=t.copy(this.pivotPoint));const{camera:n,raycaster:i}=this;null!==e&&(NT.copy(e).project(n),(NT.x<-1||NT.x>1||NT.y<-1||NT.y>1)&&(e=null)),DT(i,{x:0,y:0},n);const s=this._raycast(i);return s&&(null===e||s.distance<e.distanceTo(i.ray.origin))&&(e=t.copy(s.point)),e}resetState(){0!==this.state&&this.dispatchEvent(aQ),this.state=0,this.pivotMesh.removeFromParent(),this.pivotMesh.visible=this.enabled,this.actionHeightOffset=0,this.pointerTracker.reset()}setState(t=this.state,e=!0){this.state!==t&&(0===this.state&&e&&this.dispatchEvent(rQ),this.pivotMesh.visible=this.enabled,this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0),this.inertiaStableFrames=0,this.state=t,0!==t&&4!==t&&(this._lastUsedState=t))}update(t=Math.min(this.clock.getDelta(),.064)){if(!this.enabled||!this.camera||0===t)return;const{camera:e,cameraRadius:n,pivotPoint:i,up:s,state:r,adjustHeight:a,autoAdjustCameraRotation:o}=this;e.updateMatrixWorld(),this.getCameraUpDirection(WT),this._upInitialized||(this._upInitialized=!0,this.up.copy(WT)),this.zoomPointSet=!1;const l=this._inertiaNeedsUpdate(),c=this.needsUpdate||l;if(this.needsUpdate||l){const n=this.zoomDelta;this._updateZoom(),this._updatePosition(t),this._updateRotation(t),1===r||2===r?(zT.set(0,0,-1).transformDirection(e.matrixWorld),this.inertiaTargetDistance=NT.copy(i).sub(e.position).dot(zT)):0===r&&this._updateInertia(t),(0!==r||0!==n||l)&&this.dispatchEvent(sQ),this.needsUpdate=!1}const A=e.isOrthographicCamera?null:a&&this._getPointBelowCamera()||null;if(this.getCameraUpDirection(WT),this._setFrame(WT),(1===this.state||2===this.state)&&0!==this.actionHeightOffset){const{actionHeightOffset:t}=this;e.position.addScaledVector(s,-t),i.addScaledVector(s,-t),A&&(A.distance-=t)}if(this.actionHeightOffset=0,A){const t=A.distance;if(t<n){const r=n-t;e.position.addScaledVector(s,r),i.addScaledVector(s,r),this.actionHeightOffset=r}}this.pointerTracker.updateFrame(),c&&o&&(this.getCameraUpDirection(WT),this._alignCameraUp(WT,1),this.getCameraUpDirection(WT),this._clampRotation(WT))}adjustCamera(t){const{adjustHeight:e,cameraRadius:n}=this;if(t.isPerspectiveCamera){this.getUpDirection(t.position,WT);const i=e&&this._getPointBelowCamera(t.position,WT)||null;if(i){const e=i.distance;e<n&&t.position.addScaledVector(WT,n-e)}}}dispose(){this.detach()}_updateInertia(t){const{rotationInertia:e,pivotPoint:n,dragInertia:i,enableDamping:s,dampingFactor:r,camera:a,cameraRadius:o,minDistance:l,inertiaTargetDistance:c}=this;if(!this.enableDamping||this.inertiaStableFrames>1)return i.set(0,0,0),void e.set(0,0,0);const A=Math.pow(2,-t/r),h=Math.max(a.near,o,l,c),u=25e-5;if(e.lengthSq()>0){DT(KT,NT.set(0,0,-1),a),KT.applyMatrix4(a.matrixWorldInverse),KT.direction.normalize(),KT.recast(-KT.direction.dot(KT.origin)).at(h/KT.direction.z,NT),NT.applyMatrix4(a.matrixWorld),DT(KT,FT.set(u,u,-1),a),KT.applyMatrix4(a.matrixWorldInverse),KT.direction.normalize(),KT.recast(-KT.direction.dot(KT.origin)).at(h/KT.direction.z,FT),FT.applyMatrix4(a.matrixWorld),NT.sub(n).normalize(),FT.sub(n).normalize();const i=NT.angleTo(FT)/t;e.multiplyScalar(A),(e.lengthSq()<i**2||!s)&&e.set(0,0)}if(i.lengthSq()>0){DT(KT,NT.set(0,0,-1),a),KT.applyMatrix4(a.matrixWorldInverse),KT.direction.normalize(),KT.recast(-KT.direction.dot(KT.origin)).at(h/KT.direction.z,NT),NT.applyMatrix4(a.matrixWorld),DT(KT,FT.set(u,u,-1),a),KT.applyMatrix4(a.matrixWorldInverse),KT.direction.normalize(),KT.recast(-KT.direction.dot(KT.origin)).at(h/KT.direction.z,FT),FT.applyMatrix4(a.matrixWorld);const e=NT.distanceTo(FT)/t;i.multiplyScalar(A),(i.lengthSq()<e**2||!s)&&i.set(0,0,0)}e.lengthSq()>0&&this._applyRotation(e.x*t,e.y*t,n),i.lengthSq()>0&&(a.position.addScaledVector(i,t),a.updateMatrixWorld())}_inertiaNeedsUpdate(){const{rotationInertia:t,dragInertia:e}=this;return 0!==t.lengthSq()||0!==e.lengthSq()}_updateZoom(){const{zoomPoint:t,zoomDirection:e,camera:n,minDistance:i,maxDistance:s,pointerTracker:r,domElement:a,minZoom:o,maxZoom:l,zoomSpeed:c,state:A}=this;let h=this.zoomDelta;if(this.zoomDelta=0,r.getLatestPoint($T)&&(0!==h||3===A))if(this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),n.isOrthographicCamera){this._updateZoomDirection();const t=this.zoomPointSet||this._updateZoomPoint();JT.unproject(n);const e=Math.pow(.95,Math.abs(.05*h));let i=h>0?1/Math.abs(e):e;i*=c,i>1?l<n.zoom*i&&(i=1):o>n.zoom*i&&(i=1),n.zoom*=i,n.updateProjectionMatrix(),t&&(TT($T.x,$T.y,a,jT),jT.unproject(n),n.position.sub(jT).add(JT),n.updateMatrixWorld())}else{this._updateZoomDirection();const r=NT.copy(e);if(this.zoomPointSet||this._updateZoomPoint()){const r=t.distanceTo(n.position);if(h<0){const t=Math.min(0,r-s);h=h*r*c*.0025,h=Math.max(h,t)}else{const t=Math.max(0,r-i);h=h*Math.max(r-i,0)*c*.0025,h=Math.min(h,t)}n.position.addScaledVector(e,h),n.updateMatrixWorld()}else{const t=this._getPointBelowCamera();if(t){const e=t.distance;r.set(0,0,-1).transformDirection(n.matrixWorld),n.position.addScaledVector(r,h*e*.01),n.updateMatrixWorld()}}}}_updateZoomDirection(){if(this.zoomDirectionSet)return;const{domElement:t,raycaster:e,camera:n,zoomDirection:i,pointerTracker:s}=this;s.getLatestPoint($T),TT($T.x,$T.y,t,JT),DT(e,JT,n),i.copy(e.ray.direction).normalize(),this.zoomDirectionSet=!0}_updateZoomPoint(){const{camera:t,zoomDirectionSet:e,zoomDirection:n,raycaster:i,zoomPoint:s,pointerTracker:r,domElement:a}=this;if(this._zoomPointWasSet=!1,!e)return!1;t.isOrthographicCamera&&r.getLatestPoint(ZT)?(TT(ZT.x,ZT.y,a,ZT),DT(i,ZT,t)):(i.ray.origin.copy(t.position),i.ray.direction.copy(n),i.near=0,i.far=1/0);const o=this._raycast(i);return!!o&&(s.copy(o.point),this.zoomPointSet=!0,this._zoomPointWasSet=!0,!0)}_getPointBelowCamera(t=this.camera.position,e=this.up){const{raycaster:n}=this;n.ray.direction.copy(e).multiplyScalar(-1),n.ray.origin.copy(t).addScaledVector(e,1e5),n.near=0,n.far=1/0;const i=this._raycast(n);return i&&(i.distance-=1e5),i}_updatePosition(t){const{raycaster:e,camera:n,pivotPoint:i,up:s,pointerTracker:r,domElement:a,state:o,dragInertia:l}=this;if(1===o){if(r.getCenterPoint($T),TT($T.x,$T.y,a,$T),qT.setFromNormalAndCoplanarPoint(s,i),DT(e,$T,n),Math.abs(e.ray.direction.dot(s))<RT){const t=Math.acos(RT);VT.crossVectors(e.ray.direction,s).normalize(),e.ray.direction.copy(s).applyAxisAngle(VT,t).multiplyScalar(-1)}if(this.getUpDirection(i,WT),Math.abs(e.ray.direction.dot(WT))<UT){const t=Math.acos(UT);VT.crossVectors(e.ray.direction,WT).normalize(),e.ray.direction.copy(WT).applyAxisAngle(VT,t).multiplyScalar(-1)}e.ray.intersectPlane(qT,NT)&&(FT.subVectors(i,NT),n.position.add(FT),n.updateMatrixWorld(),FT.multiplyScalar(1/t),r.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(l.copy(FT),this.inertiaStableFrames=0))}}_updateRotation(t){const{pivotPoint:e,pointerTracker:n,domElement:i,state:s,rotationInertia:r}=this;2===s&&(n.getCenterPoint($T),n.getPreviousCenterPoint(tQ),eQ.subVectors($T,tQ).multiplyScalar(2*Math.PI/i.clientHeight),this._applyRotation(eQ.x,eQ.y,e),eQ.multiplyScalar(1/t),n.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(r.copy(eQ),this.inertiaStableFrames=0))}_applyRotation(t,e,n){if(0===t&&0===e)return;const{camera:i,minAltitude:s,maxAltitude:r,rotationSpeed:a}=this,o=-t*a;let l,c=e*a;zT.set(0,0,1).transformDirection(i.matrixWorld),GT.set(1,0,0).transformDirection(i.matrixWorld),this.getUpDirection(n,WT),WT.dot(zT)>1-1e-10?l=0:(NT.crossVectors(WT,zT).normalize(),l=Math.sign(NT.dot(GT))*WT.angleTo(zT)),c>0?(c=Math.min(l-s,c),c=Math.max(0,c)):(c=Math.max(l-r,c),c=Math.min(0,c)),YT.setFromAxisAngle(WT,o),MT(n,YT,PT),i.matrixWorld.premultiply(PT),GT.set(1,0,0).transformDirection(i.matrixWorld),YT.setFromAxisAngle(GT,-c),MT(n,YT,PT),i.matrixWorld.premultiply(PT),i.matrixWorld.decompose(i.position,i.quaternion,NT)}_setFrame(t){const{up:e,camera:n,zoomPoint:i,zoomDirectionSet:s,zoomPointSet:r,scaleZoomOrientationAtEdges:a}=this;if(s&&(r||this._updateZoomPoint())){if(YT.setFromUnitVectors(e,t),a){this.getUpDirection(i,NT);let t=Math.max(NT.dot(e)-.6,0)/.4;t=ui.mapLinear(t,0,.5,0,1),t=Math.min(t,1),n.isOrthographicCamera&&(t*=.1),YT.slerp(XT,1-t)}MT(i,YT,PT),n.updateMatrixWorld(),n.matrixWorld.premultiply(PT),n.matrixWorld.decompose(n.position,n.quaternion,NT),this.zoomDirectionSet=!1,this._updateZoomDirection()}e.copy(t),n.updateMatrixWorld()}_raycast(t){const{scene:e,useFallbackPlane:n,fallbackPlane:i}=this,s=t.intersectObject(e)[0]||null;if(s)return s;if(n){const e=i;if(t.ray.intersectPlane(e,NT))return{point:NT.clone(),distance:t.ray.origin.distanceTo(NT)}}return null}_alignCameraUp(t,e=1){const{camera:n,state:i,pivotPoint:s,zoomPoint:r,zoomPointSet:a}=this;n.updateMatrixWorld(),zT.set(0,0,-1).transformDirection(n.matrixWorld),GT.set(-1,0,0).transformDirection(n.matrixWorld);let o=ui.mapLinear(1-Math.abs(zT.dot(t)),0,.2,0,1);o=ui.clamp(o,0,1),e*=o,HT.crossVectors(t,zT),HT.lerp(GT,1-e).normalize(),YT.setFromUnitVectors(GT,HT),n.quaternion.premultiply(YT);let l=null;1===i||2===i?l=kT.copy(s):a&&(l=kT.copy(r)),l&&(LT.copy(n.matrixWorld).invert(),NT.copy(l).applyMatrix4(LT),n.updateMatrixWorld(),NT.applyMatrix4(n.matrixWorld),OT.subVectors(l,NT),n.position.add(OT)),n.updateMatrixWorld()}_clampRotation(t){const{camera:e,minAltitude:n,maxAltitude:i,state:s,pivotPoint:r,zoomPoint:a,zoomPointSet:o}=this;let l,c;if(e.updateMatrixWorld(),zT.set(0,0,1).transformDirection(e.matrixWorld),GT.set(1,0,0).transformDirection(e.matrixWorld),t.dot(zT)>1-1e-10?l=0:(NT.crossVectors(t,zT),l=Math.sign(NT.dot(GT))*t.angleTo(zT)),l>i)c=i;else{if(!(l<n))return;c=n}zT.copy(t),YT.setFromAxisAngle(GT,c),zT.applyQuaternion(YT).normalize(),NT.crossVectors(zT,GT).normalize(),PT.makeBasis(GT,NT,zT),e.quaternion.setFromRotationMatrix(PT);let A=null;1===s||2===s?A=kT.copy(r):o&&(A=kT.copy(a)),A&&(LT.copy(e.matrixWorld).invert(),NT.copy(A).applyMatrix4(LT),e.updateMatrixWorld(),NT.applyMatrix4(e.matrixWorld),OT.subVectors(A,NT),e.position.add(OT)),e.updateMatrixWorld()}}const lQ=new Es,cQ=new Es,AQ=new gi,hQ=new gi,uQ=new gi,dQ=new gi,pQ=new gi,gQ=new gi,fQ=new pi,mQ=new gi,yQ=new gi,IQ=new Cs,CQ=new dM,EQ=new di,vQ={};class xQ extends oQ{get tilesGroup(){return console.warn('GlobeControls: "tilesGroup" has been deprecated. Use "ellipsoidGroup", instead.'),this.ellipsoidFrame}get ellipsoidFrame(){return this.ellipsoidGroup.matrixWorld}get ellipsoidFrameInverse(){const{ellipsoidGroup:t,ellipsoidFrame:e,_ellipsoidFrameInverse:n}=this;return t.matrixWorldInverse?t.matrixWorldInverse:n.copy(e).invert()}constructor(t=null,e=null,n=null,i=null){super(t,e,n),this.isGlobeControls=!0,this._dragMode=0,this._rotationMode=0,this.maxZoom=.01,this.nearMargin=.25,this.farMargin=0,this.useFallbackPlane=!1,this.autoAdjustCameraRotation=!1,this.globeInertia=new pi,this.globeInertiaFactor=0,this.ellipsoid=pM.clone(),this.ellipsoidGroup=new ya,this._ellipsoidFrameInverse=new Es,null!==i&&this.setTilesRenderer(i)}setTilesRenderer(t){super.setTilesRenderer(t),null!==t&&this.setEllipsoid(t.ellipsoid,t.group)}setEllipsoid(t,e){this.ellipsoid=t||pM.clone(),this.ellipsoidGroup=e||new ya}getPivotPoint(t){const{camera:e,ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:s}=this;return dQ.set(0,0,-1).transformDirection(e.matrixWorld),IQ.origin.copy(e.position),IQ.direction.copy(dQ),IQ.applyMatrix4(i),QT(IQ,s,hQ),hQ.applyMatrix4(n),(null===super.getPivotPoint(t)||AQ.subVectors(t,IQ.origin).dot(IQ.direction)>AQ.subVectors(hQ,IQ.origin).dot(IQ.direction))&&t.copy(hQ),t}getVectorToCenter(t){const{ellipsoidFrame:e,camera:n}=this;return t.setFromMatrixPosition(e).sub(n.position)}getDistanceToCenter(){return this.getVectorToCenter(hQ).length()}getUpDirection(t,e){const{ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:s}=this;hQ.copy(t).applyMatrix4(i),s.getPositionToNormal(hQ,e),e.transformDirection(n)}getCameraUpDirection(t){const{ellipsoidFrame:e,ellipsoidFrameInverse:n,ellipsoid:i,camera:s}=this;s.isOrthographicCamera?(this._getVirtualOrthoCameraPosition(hQ),hQ.applyMatrix4(n),i.getPositionToNormal(hQ,t),t.transformDirection(e)):this.getUpDirection(s.position,t)}update(t=Math.min(this.clock.getDelta(),.064)){if(!this.enabled||!this.camera||0===t)return;const{camera:e,pivotMesh:n}=this;this._isNearControls()?this.scaleZoomOrientationAtEdges=this.zoomDelta<0:(0!==this.state&&1!==this._dragMode&&1!==this._rotationMode&&(n.visible=!1),this.scaleZoomOrientationAtEdges=!1);const i=this.needsUpdate||this._inertiaNeedsUpdate();super.update(t),this.adjustCamera(e),i&&this._isNearControls()&&(this.getCameraUpDirection(gQ),this._alignCameraUp(gQ,1),this.getCameraUpDirection(gQ),this._clampRotation(gQ))}adjustCamera(t){super.adjustCamera(t);const{ellipsoidFrame:e,ellipsoidFrameInverse:n,ellipsoid:i,nearMargin:s,farMargin:r}=this,a=Math.max(...i.radius);if(t.isPerspectiveCamera){const o=hQ.setFromMatrixPosition(e).sub(t.position).length(),l=s*a,c=ui.clamp((o-a)/l,0,1),A=ui.lerp(1,1e3,c);t.near=Math.max(A,o-a-l),AQ.copy(t.position).applyMatrix4(n),i.getPositionToCartographic(AQ,vQ);const h=Math.max(i.getPositionElevation(AQ),2550),u=i.calculateHorizonDistance(vQ.lat,h);t.far=u+.1+a*r,t.updateProjectionMatrix()}else{this._getVirtualOrthoCameraPosition(t.position,t),t.updateMatrixWorld(),lQ.copy(t.matrixWorld).invert(),hQ.setFromMatrixPosition(e).applyMatrix4(lQ);const n=-hQ.z;t.near=n-a*(1+s),t.far=n+.1+a*r,t.position.addScaledVector(dQ,t.near),t.far-=t.near,t.near=0,t.updateProjectionMatrix(),t.updateMatrixWorld()}}setState(...t){super.setState(...t),this._dragMode=0,this._rotationMode=0}_updateInertia(t){super._updateInertia(t);const{globeInertia:e,enableDamping:n,dampingFactor:i,camera:s,cameraRadius:r,minDistance:a,inertiaTargetDistance:o,ellipsoidFrame:l}=this;if(!this.enableDamping||this.inertiaStableFrames>1)return this.globeInertiaFactor=0,void this.globeInertia.identity();const c=Math.pow(2,-t/i),A=Math.max(s.near,r,a,o),h=25e-5;if(uQ.setFromMatrixPosition(l),0!==this.globeInertiaFactor){DT(IQ,hQ.set(0,0,-1),s),IQ.applyMatrix4(s.matrixWorldInverse),IQ.direction.normalize(),IQ.recast(-IQ.direction.dot(IQ.origin)).at(A/IQ.direction.z,hQ),hQ.applyMatrix4(s.matrixWorld),DT(IQ,AQ.set(h,h,-1),s),IQ.applyMatrix4(s.matrixWorldInverse),IQ.direction.normalize(),IQ.recast(-IQ.direction.dot(IQ.origin)).at(A/IQ.direction.z,AQ),AQ.applyMatrix4(s.matrixWorld),hQ.sub(uQ).normalize(),AQ.sub(uQ).normalize(),this.globeInertiaFactor*=c;const i=hQ.angleTo(AQ)/t;(2*Math.acos(e.w)*this.globeInertiaFactor<i||!n)&&(this.globeInertiaFactor=0,e.identity())}0!==this.globeInertiaFactor&&(1!==e.w||0===e.x&&0===e.y&&0===e.z||(e.w=Math.min(e.w,1-1e-9)),uQ.setFromMatrixPosition(l),fQ.identity().slerp(e,this.globeInertiaFactor*t),MT(uQ,fQ,cQ),s.matrixWorld.premultiply(cQ),s.matrixWorld.decompose(s.position,s.quaternion,hQ))}_inertiaNeedsUpdate(){return super._inertiaNeedsUpdate()||0!==this.globeInertiaFactor}_updatePosition(t){if(1===this.state){0===this._dragMode&&(this._dragMode=this._isNearControls()?1:-1);const{raycaster:e,camera:n,pivotPoint:i,pointerTracker:s,domElement:r,ellipsoidFrame:a,ellipsoidFrameInverse:o}=this,l=AQ,c=pQ;s.getCenterPoint(EQ),TT(EQ.x,EQ.y,r,EQ),DT(e,EQ,n),e.ray.applyMatrix4(o);const A=hQ.copy(i).applyMatrix4(o).length();if(CQ.radius.setScalar(A),!CQ.intersectRay(e.ray,hQ))return this.resetState(),void this._updateInertia(t);hQ.applyMatrix4(a),uQ.setFromMatrixPosition(a),l.subVectors(i,uQ).normalize(),c.subVectors(hQ,uQ).normalize(),fQ.setFromUnitVectors(c,l),MT(uQ,fQ,cQ),n.matrixWorld.premultiply(cQ),n.matrixWorld.decompose(n.position,n.quaternion,hQ),s.getMoveDistance()/t<2*window.devicePixelRatio?this.inertiaStableFrames++:(this.globeInertia.copy(fQ),this.globeInertiaFactor=1/t,this.inertiaStableFrames=0)}}_updateRotation(...t){1===this._rotationMode||this._isNearControls()?(this._rotationMode=1,super._updateRotation(...t)):(this.pivotMesh.visible=!1,this._rotationMode=-1)}_updateZoom(){const{zoomDelta:t,ellipsoid:e,zoomSpeed:n,zoomPoint:i,camera:s,maxZoom:r,state:a}=this;if(3!==a&&0===t)return;this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),this.globeInertia.identity(),this.globeInertiaFactor=0;const o=ui.clamp(ui.mapLinear(Math.abs(t),0,20,0,1),0,1);if(this._isNearControls()||t>0){if(this._updateZoomDirection(),t<0&&(this.zoomPointSet||this._updateZoomPoint())){dQ.set(0,0,-1).transformDirection(s.matrixWorld).normalize(),yQ.copy(this.up).multiplyScalar(-1),this.getUpDirection(i,mQ);const t=ui.clamp(ui.mapLinear(-mQ.dot(yQ),1,.95,0,1),0,1),e=1-dQ.dot(yQ),n=s.isOrthographicCamera?.05:1,r=ui.clamp(3*o,0,1),a=Math.min(t*e*n*r,.1);yQ.lerpVectors(dQ,yQ,a).normalize(),fQ.setFromUnitVectors(dQ,yQ),MT(i,fQ,cQ),s.matrixWorld.premultiply(cQ),s.matrixWorld.decompose(s.position,s.quaternion,yQ),this.zoomDirection.subVectors(i,s.position).normalize()}super._updateZoom()}else if(s.isPerspectiveCamera){const i=this._getPerspectiveTransitionDistance(),s=this._getMaxPerspectiveDistance(),r=ui.mapLinear(this.getDistanceToCenter(),i,s,0,1);this._tiltTowardsCenter(ui.lerp(0,.4,r*o)),this._alignCameraUpToNorth(ui.lerp(0,.2,r*o));const a=t*(this.getDistanceToCenter()-e.radius.x)*n*.0025,l=Math.max(a,Math.min(this.getDistanceToCenter()-s,0));this.getVectorToCenter(hQ).normalize(),this.camera.position.addScaledVector(hQ,l),this.camera.updateMatrixWorld(),this.zoomDelta=0}else{const t=this._getOrthographicTransitionZoom(),e=this._getMinOrthographicZoom(),i=ui.mapLinear(s.zoom,t,e,0,1);this._tiltTowardsCenter(ui.lerp(0,.4,i*o)),this._alignCameraUpToNorth(ui.lerp(0,.2,i*o));const a=this.zoomDelta,l=Math.pow(.95,Math.abs(.05*a)),c=a>0?1/Math.abs(l):l,A=e/s.zoom,h=Math.max(c*n,Math.min(A,1));s.zoom=Math.min(r,s.zoom*h),s.updateProjectionMatrix(),this.zoomDelta=0,this.zoomDirectionSet=!1}}_alignCameraUpToNorth(t){const{ellipsoidFrame:e}=this;gQ.set(0,0,1).transformDirection(e),this._alignCameraUp(gQ,t)}_tiltTowardsCenter(t){const{camera:e,ellipsoidFrame:n}=this;dQ.set(0,0,-1).transformDirection(e.matrixWorld).normalize(),hQ.setFromMatrixPosition(n).sub(e.position).normalize(),hQ.lerp(dQ,1-t).normalize(),fQ.setFromUnitVectors(dQ,hQ),e.quaternion.premultiply(fQ),e.updateMatrixWorld()}_getPerspectiveTransitionDistance(){const{camera:t,ellipsoid:e}=this;if(!t.isPerspectiveCamera)throw new Error;const n=Math.max(...e.radius),i=2*Math.atan(Math.tan(ui.DEG2RAD*t.fov*.5)*t.aspect),s=n/Math.tan(ui.DEG2RAD*t.fov*.5),r=n/Math.tan(.5*i);return Math.max(s,r)}_getMaxPerspectiveDistance(){const{camera:t,ellipsoid:e}=this;if(!t.isPerspectiveCamera)throw new Error;const n=Math.max(...e.radius),i=2*Math.atan(Math.tan(ui.DEG2RAD*t.fov*.5)*t.aspect),s=n/Math.tan(ui.DEG2RAD*t.fov*.5),r=n/Math.tan(.5*i);return 2*Math.max(s,r)}_getOrthographicTransitionZoom(){const{camera:t,ellipsoid:e}=this;if(!t.isOrthographicCamera)throw new Error;const n=t.top-t.bottom,i=t.right-t.left;return 2*Math.max(n,i)/(2*Math.max(...e.radius))}_getMinOrthographicZoom(){const{camera:t,ellipsoid:e}=this;if(!t.isOrthographicCamera)throw new Error;const n=t.top-t.bottom,i=t.right-t.left;return.7*Math.min(n,i)/(2*Math.max(...e.radius))}_getVirtualOrthoCameraPosition(t,e=this.camera){const{ellipsoidFrame:n,ellipsoidFrameInverse:i,ellipsoid:s}=this;if(!e.isOrthographicCamera)throw new Error;IQ.origin.copy(e.position),IQ.direction.set(0,0,-1).transformDirection(e.matrixWorld),IQ.applyMatrix4(i),QT(IQ,s,AQ),AQ.applyMatrix4(n);const r=e.top-e.bottom,a=e.right-e.left,o=Math.max(r,a)/e.zoom;dQ.set(0,0,-1).transformDirection(e.matrixWorld);const l=AQ.sub(e.position).dot(dQ);t.copy(e.position).addScaledVector(dQ,l-4*o)}_isNearControls(){const{camera:t}=this;return t.isPerspectiveCamera?this.getDistanceToCenter()<this._getPerspectiveTransitionDistance():t.zoom>this._getOrthographicTransitionZoom()}_raycast(t){const e=super._raycast(t);if(null===e){const{ellipsoid:e,ellipsoidFrame:n,ellipsoidFrameInverse:i}=this;IQ.copy(t.ray).applyMatrix4(i);const s=e.intersectRay(IQ,hQ);return null!==s?{point:s.clone().applyMatrix4(n)}:null}return e}}const wQ=new gi,_Q=new gi,BQ=new ZA,SQ=new gi,bQ=new gi,MQ=new gi,TQ=new pi,QQ=new pi;class DQ extends ei{get animating(){return 0!==this._alpha&&1!==this._alpha}get alpha(){return 0===this._target?1-this._alpha:this._alpha}get camera(){return 0===this._alpha?this.perspectiveCamera:1===this._alpha?this.orthographicCamera:this.transitionCamera}get mode(){return 0===this._target?"perspective":"orthographic"}set mode(t){if(t===this.mode)return;const e=this.camera;"perspective"===t?(this._target=0,this._alpha=0):(this._target=1,this._alpha=1),this.dispatchEvent({type:"camera-change",camera:this.camera,prevCamera:e})}constructor(t=new da,e=new ZA){super(),this.perspectiveCamera=t,this.orthographicCamera=e,this.transitionCamera=new da,this.orthographicPositionalZoom=!0,this.orthographicOffset=50,this.fixedPoint=new gi,this.duration=200,this.autoSync=!0,this.easeFunction=t=>t,this._target=0,this._alpha=0,this._clock=new xh}toggle(){this._target=1===this._target?0:1,this._clock.getDelta(),this.dispatchEvent({type:"toggle"})}update(t=Math.min(this._clock.getDelta(),.064)){this.autoSync&&this.syncCameras();const{perspectiveCamera:e,orthographicCamera:n,transitionCamera:i,camera:s}=this,r=1e3*t;if(this._alpha!==this._target){const t=Math.sign(this._target-this._alpha)*r/this.duration;this._alpha=ui.clamp(this._alpha+t,0,1),this.dispatchEvent({type:"change",alpha:this.alpha})}const a=s;let o=null;0===this._alpha?o=e:1===this._alpha?o=n:(o=i,this._updateTransitionCamera()),a!==o&&(o===i&&this.dispatchEvent({type:"transition-start"}),this.dispatchEvent({type:"camera-change",camera:o,prevCamera:a}),a===i&&this.dispatchEvent({type:"transition-end"}))}syncCameras(){const t=this._getFromCamera(),{perspectiveCamera:e,orthographicCamera:n,transitionCamera:i,fixedPoint:s}=this;if(wQ.set(0,0,-1).transformDirection(t.matrixWorld).normalize(),t.isPerspectiveCamera){if(this.orthographicPositionalZoom)n.position.copy(e.position).addScaledVector(wQ,-this.orthographicOffset),n.rotation.copy(e.rotation),n.updateMatrixWorld();else{const t=_Q.subVectors(s,n.position).dot(wQ),i=_Q.subVectors(s,e.position).dot(wQ);_Q.copy(e.position).addScaledVector(wQ,i),n.rotation.copy(e.rotation),n.position.copy(_Q).addScaledVector(wQ,-t),n.updateMatrixWorld()}const t=Math.abs(_Q.subVectors(e.position,s).dot(wQ)),i=2*Math.tan(ui.DEG2RAD*e.fov*.5)*t,r=n.top-n.bottom;n.zoom=r/i,n.updateProjectionMatrix()}else{const t=Math.abs(_Q.subVectors(n.position,s).dot(wQ)),i=(n.top-n.bottom)/n.zoom*.5/Math.tan(ui.DEG2RAD*e.fov*.5);e.rotation.copy(n.rotation),e.position.copy(n.position).addScaledVector(wQ,t).addScaledVector(wQ,-i),e.updateMatrixWorld(),this.orthographicPositionalZoom&&(n.position.copy(e.position).addScaledVector(wQ,-this.orthographicOffset),n.updateMatrixWorld())}i.position.copy(e.position),i.rotation.copy(e.rotation)}_getTransitionDirection(){return Math.sign(this._target-this._alpha)}_getToCamera(){const t=this._getTransitionDirection();return 0===t?0===this._target?this.perspectiveCamera:this.orthographicCamera:t>0?this.orthographicCamera:this.perspectiveCamera}_getFromCamera(){const t=this._getTransitionDirection();return 0===t?0===this._target?this.perspectiveCamera:this.orthographicCamera:t>0?this.perspectiveCamera:this.orthographicCamera}_updateTransitionCamera(){const{perspectiveCamera:t,orthographicCamera:e,transitionCamera:n,fixedPoint:i}=this,s=this.easeFunction(this._alpha);wQ.set(0,0,-1).transformDirection(e.matrixWorld).normalize(),BQ.copy(e),BQ.position.addScaledVector(wQ,e.near),e.far-=e.near,e.near=0,wQ.set(0,0,-1).transformDirection(t.matrixWorld).normalize();const r=Math.abs(_Q.subVectors(t.position,i).dot(wQ)),a=2*Math.tan(ui.DEG2RAD*t.fov*.5)*r,o=QQ.slerpQuaternions(t.quaternion,BQ.quaternion,s),l=ui.lerp(t.fov,1,s),c=.5*a/Math.tan(ui.DEG2RAD*l*.5),A=MQ.copy(BQ.position).sub(i).applyQuaternion(TQ.copy(BQ.quaternion).invert()),h=bQ.copy(t.position).sub(i).applyQuaternion(TQ.copy(t.quaternion).invert()),u=SQ.lerpVectors(h,A,s);u.z-=Math.abs(u.z)-c;const d=-(h.z-u.z),p=-(A.z-u.z),g=ui.lerp(d+t.near,p+BQ.near,s),f=ui.lerp(d+t.far,p+BQ.far,s),m=Math.max(f,0)-Math.max(g,0);n.aspect=t.aspect,n.fov=l,n.near=Math.max(g,1e-5*m),n.far=f,n.position.copy(u).applyQuaternion(o).add(i),n.quaternion.copy(o),n.updateProjectionMatrix(),n.updateMatrixWorld()}}const{clamp:RQ}=ui;class UQ{constructor(){this.duration=250,this.fadeCount=0,this._lastTick=-1,this._fadeState=new Map,this.onFadeComplete=null,this.onFadeStart=null,this.onFadeSetComplete=null,this.onFadeSetStart=null}deleteObject(t){t&&this.completeFade(t)}guaranteeState(t){const e=this._fadeState;return!e.has(t)&&(e.set(t,{fadeInTarget:0,fadeOutTarget:0,fadeIn:0,fadeOut:0}),!0)}completeFade(t){const e=this._fadeState;if(!e.has(t))return;const n=0===e.get(t).fadeOutTarget;e.delete(t),this.fadeCount--,this.onFadeComplete&&this.onFadeComplete(t,n),0===this.fadeCount&&this.onFadeSetComplete&&this.onFadeSetComplete()}completeAllFades(){this._fadeState.forEach((t,e)=>{this.completeFade(e)})}forEachObject(t){this._fadeState.forEach((e,n)=>{t(n,e)})}fadeIn(t){const e=this.guaranteeState(t),n=this._fadeState.get(t);n.fadeInTarget=1,n.fadeOutTarget=0,n.fadeOut=0,e&&(this.fadeCount++,1===this.fadeCount&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(t))}fadeOut(t){const e=this.guaranteeState(t),n=this._fadeState.get(t);n.fadeOutTarget=1,e&&(n.fadeInTarget=1,n.fadeIn=1,this.fadeCount++,1===this.fadeCount&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(t))}isFading(t){return this._fadeState.has(t)}isFadingOut(t){const e=this._fadeState.get(t);return e&&1===e.fadeOutTarget}update(){const t=window.performance.now();-1===this._lastTick&&(this._lastTick=t);const e=RQ((t-this._lastTick)/this.duration,0,1);this._lastTick=t,this._fadeState.forEach((t,n)=>{const{fadeOutTarget:i,fadeInTarget:s}=t;let{fadeOut:r,fadeIn:a}=t;const o=Math.sign(s-a);a=RQ(a+o*e,0,1);const l=Math.sign(i-r);r=RQ(r+l*e,0,1),t.fadeIn=a,t.fadeOut=r,((1===r||0===r)&&(1===a||0===a)||r>=a)&&this.completeFade(n)})}}const PQ=Symbol("FADE_PARAMS");function LQ(t,e){if(t[PQ])return t[PQ];const n={fadeIn:{value:0},fadeOut:{value:0},fadeTexture:{value:null}};return t[PQ]=n,t.defines={...t.defines||{},FEATURE_FADE:0},t.onBeforeCompile=t=>{e&&e(t),t.uniforms={...t.uniforms,...n},t.vertexShader=t.vertexShader.replace(/void\s+main\(\)\s+{/,t=>`\n\t\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t\tvarying float vBatchId;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t${t}\n\n\t\t\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t\t\t// add 0.5 to the value to avoid floating error that may cause flickering\n\t\t\t\t\t\tvBatchId = getIndirectIndex( gl_DrawID ) + 0.5;\n\n\t\t\t\t\t\t#endif\n\t\t\t\t`),t.fragmentShader=t.fragmentShader.replace(/void main\(/,t=>`\n\t\t\t\t#if FEATURE_FADE\n\n\t\t\t\t// adapted from https://www.shadertoy.com/view/Mlt3z8\n\t\t\t\tfloat bayerDither2x2( vec2 v ) {\n\n\t\t\t\t\treturn mod( 3.0 * v.y + 2.0 * v.x, 4.0 );\n\n\t\t\t\t}\n\n\t\t\t\tfloat bayerDither4x4( vec2 v ) {\n\n\t\t\t\t\tvec2 P1 = mod( v, 2.0 );\n\t\t\t\t\tvec2 P2 = floor( 0.5 * mod( v, 4.0 ) );\n\t\t\t\t\treturn 4.0 * bayerDither2x2( P1 ) + bayerDither2x2( P2 );\n\n\t\t\t\t}\n\n\t\t\t\t// the USE_BATCHING define is not available in fragment shaders\n\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\t// functions for reading the fade state of a given batch id\n\t\t\t\tuniform sampler2D fadeTexture;\n\t\t\t\tvarying float vBatchId;\n\t\t\t\tvec2 getFadeValues( const in float i ) {\n\n\t\t\t\t\tint size = textureSize( fadeTexture, 0 ).x;\n\t\t\t\t\tint j = int( i );\n\t\t\t\t\tint x = j % size;\n\t\t\t\t\tint y = j / size;\n\t\t\t\t\treturn texelFetch( fadeTexture, ivec2( x, y ), 0 ).rg;\n\n\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\tuniform float fadeIn;\n\t\t\t\tuniform float fadeOut;\n\n\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t\t${t}\n\t\t\t`).replace(/#include <dithering_fragment>/,t=>`\n\n\t\t\t\t${t}\n\n\t\t\t\t#if FEATURE_FADE\n\n\t\t\t\t#ifdef USE_BATCHING_FRAG\n\n\t\t\t\tvec2 fadeValues = getFadeValues( vBatchId );\n\t\t\t\tfloat fadeIn = fadeValues.r;\n\t\t\t\tfloat fadeOut = fadeValues.g;\n\n\t\t\t\t#endif\n\n\t\t\t\tfloat bayerValue = bayerDither4x4( floor( mod( gl_FragCoord.xy, 4.0 ) ) );\n\t\t\t\tfloat bayerBins = 16.0;\n\t\t\t\tfloat dither = ( 0.5 + bayerValue ) / bayerBins;\n\t\t\t\tif ( dither >= fadeIn ) {\n\n\t\t\t\t\tdiscard;\n\n\t\t\t\t}\n\n\t\t\t\tif ( dither < fadeOut ) {\n\n\t\t\t\t\tdiscard;\n\n\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t`)},n}class FQ{constructor(){this._fadeParams=new WeakMap,this.fading=0}setFade(t,e,n){if(!t)return;const i=this._fadeParams;t.traverse(t=>{const s=t.material;if(s&&i.has(s)){const t=i.get(s);t.fadeIn.value=e,t.fadeOut.value=n;const r=Number(!(0===e||1===e)||!(0===n||1===n));s.defines.FEATURE_FADE!==r&&(this.fading+=1===r?1:-1,s.defines.FEATURE_FADE=r,s.needsUpdate=!0)}})}prepareScene(t){t.traverse(t=>{t.material&&this.prepareMaterial(t.material)})}deleteScene(t){if(!t)return;this.setFade(t,1,0);const e=this._fadeParams;t.traverse(t=>{const n=t.material;n&&e.delete(n)})}prepareMaterial(t){const e=this._fadeParams;e.has(t)||e.set(t,LQ(t,t.onBeforeCompile))}}class NQ{constructor(t,e=new mr){this.other=t,this.material=e,this.visible=!0,this.parent=null,this._instanceInfo=[],this._visibilityChanged=!0;const n=new Proxy(this,{get(e,i){if(i in e)return e[i];{const s=t[i];return s instanceof Function?(...t)=>(e.syncInstances(),s.call(n,...t)):t[i]}},set:(e,n,i)=>(n in e?e[n]=i:t[n]=i,!0),deleteProperty:(e,n)=>n in e?delete e[n]:delete t[n]});return n}syncInstances(){const t=this._instanceInfo,e=this.other._instanceInfo;for(;e.length>t.length;){const n=t.length;t.push(new Proxy({visible:!1},{get:(t,i)=>i in t?t[i]:e[n][i],set:(t,i,s)=>(i in t?t[i]=s:e[n][i]=s,!0)}))}}}class kQ extends NQ{constructor(...t){super(...t);const e=this.material,n=LQ(e,e.onBeforeCompile);e.defines.FEATURE_FADE=1,e.defines.USE_BATCHING_FRAG=1,e.needsUpdate=!0,this.fadeTexture=null,this._fadeParams=n}setFadeAt(t,e,n){this._initFadeTexture(),this.fadeTexture.setValueAt(t,255*e,255*n)}_initFadeTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=t*t*2,n=this.fadeTexture;if(!n||n.image.data.length!==e){const i=new Uint8Array(e),s=new OQ(i,t,t,oe,Gt);if(n){n.dispose();const t=n.image.data,e=this.fadeTexture.image.data,i=Math.min(t.length,e.length);e.set(new t.constructor(t.buffer,0,i))}this.fadeTexture=s,this._fadeParams.fadeTexture.value=s,s.needsUpdate=!0}}dispose(){this.fadeTexture&&this.fadeTexture.dispose()}}class OQ extends io{setValueAt(t,...e){const{data:n,width:i,height:s}=this.image,r=Math.floor(n.length/(i*s));let a=!1;for(let i=0;i<r;i++){const s=t*r+i,o=n[s],l=e[i]||0;o!==l&&(n[s]=l,a=!0)}a&&(this.needsUpdate=!0)}}const zQ=Symbol("HAS_POPPED_IN"),GQ=new gi,HQ=new gi,VQ=new pi,YQ=new pi,qQ=new gi;function WQ(){const t=this._fadeManager,e=this.tiles;this._fadingBefore=t.fadeCount,this._displayActiveTiles=e.displayActiveTiles,e.displayActiveTiles=!0}function JQ(){const t=this._fadeManager,e=this._fadeMaterialManager,n=this._displayActiveTiles,i=this._fadingBefore,s=this._prevCameraTransforms,{tiles:r,maximumFadeOutTiles:a,batchedMesh:o}=this,{cameras:l}=r;r.displayActiveTiles=n,t.update();const c=t.fadeCount;if(0!==i&&0!==c&&(r.dispatchEvent({type:"fade-change"}),r.dispatchEvent({type:"needs-render"})),n||r.visibleTiles.forEach(t=>{const e=t.cached.scene;e&&(e.visible=t.__inFrustum),this.forEachBatchIds(t,(e,n,i)=>{n.setVisibleAt(e,t.__inFrustum),i.batchedMesh.setVisibleAt(e,t.__inFrustum)})}),a<this._fadingOutCount){let e=!0;l.forEach(t=>{if(!s.has(t))return;const n=t.matrixWorld,i=s.get(t);n.decompose(HQ,YQ,qQ),i.decompose(GQ,VQ,qQ);const r=YQ.angleTo(VQ),a=HQ.distanceTo(GQ);e=e&&(r>.25||a>.1)}),e&&t.completeAllFades()}if(l.forEach(t=>{s.get(t).copy(t.matrixWorld)}),t.forEachObject((n,{fadeIn:i,fadeOut:s})=>{const a=n.cached.scene,o=t.isFadingOut(n);r.markTileUsed(n),a&&(e.setFade(a,i,s),o&&(a.visible=!0)),this.forEachBatchIds(n,(t,e,n)=>{e.setFadeAt(t,i,s),e.setVisibleAt(t,!0),n.batchedMesh.setVisibleAt(t,!1)})}),o){const t=r.getPluginByName("BATCHED_TILES_PLUGIN").batchedMesh.material;o.material.map=t.map}}function jQ(t){return"OCTREE"===t.__implicitRoot.implicitTiling.subdivisionScheme}function XQ(t){return jQ(t)?8:4}class KQ{constructor(t,e){this.parent=t,this.children=[],this.__level=t.__level+1,this.__implicitRoot=t.__implicitRoot,this.__subtreeIdx=e,[this.__x,this.__y,this.__z]=function(t,e){return e?[2*e.__x+t.__subtreeIdx%2,2*e.__y+Math.floor(t.__subtreeIdx/2)%2,jQ(t)?2*e.__z+Math.floor(t.__subtreeIdx/4)%2:0]:[0,0,0]}(this,t)}static copy(t){const e={children:[]};return e.__level=t.__level,e.__implicitRoot=t.__implicitRoot,e.__subtreeIdx=t.__subtreeIdx,[e.__x,e.__y,e.__z]=[t.__x,t.__y,t.__z],e.boundingVolume=t.boundingVolume,e.geometricError=t.geometricError,e}}class ZQ extends xb{constructor(t){super(),this.tile=t,this.rootTile=t.__implicitRoot,this.workingPath=null}parseBuffer(t){const e=new DataView(t);let n=0;const i=Tb(e);console.assert("subt"===i,'SUBTREELoader: The magic bytes equal "subt".'),n+=4;const s=e.getUint32(n,!0);console.assert(1===s,'SUBTREELoader: The version listed in the header is "1".'),n+=4;const r=e.getUint32(n,!0);n+=8;const a=e.getUint32(n,!0);n+=8;const o=JSON.parse(_b(new Uint8Array(t,n,r)));return n+=r,{version:s,subtreeJson:o,subtreeByte:t.slice(n,n+a)}}async parse(t){const e=this.parseBuffer(t),n=e.subtreeJson;n.contentAvailabilityHeaders=[].concat(n.contentAvailability);const i=this.preprocessBuffers(n.buffers),s=this.preprocessBufferViews(n.bufferViews,i);this.markActiveBufferViews(n,s);const r=await this.requestActiveBuffers(i,e.subtreeByte),a=this.parseActiveBufferViews(s,r);this.parseAvailability(e,n,a),this.expandSubtree(this.tile,e)}markActiveBufferViews(t,e){let n;const i=t.tileAvailability;isNaN(i.bitstream)?isNaN(i.bufferView)||(n=e[i.bufferView]):n=e[i.bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0);const s=t.contentAvailabilityHeaders;for(let t=0;t<s.length;t++)n=void 0,isNaN(s[t].bitstream)?isNaN(s[t].bufferView)||(n=e[s[t].bufferView]):n=e[s[t].bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0);n=void 0;const r=t.childSubtreeAvailability;isNaN(r.bitstream)?isNaN(r.bufferView)||(n=e[r.bufferView]):n=e[r.bitstream],n&&(n.isActive=!0,n.bufferHeader.isActive=!0)}async requestActiveBuffers(t,e){const n=[];for(let i=0;i<t.length;i++){const s=t[i];if(s.isActive)if(s.isExternal){const t=this.parseImplicitURIBuffer(this.tile,this.rootTile.implicitTiling.subtrees.uri,s.uri),e=fetch(t,this.fetchOptions).then(t=>{if(!t.ok)throw new Error(`SUBTREELoader: Failed to load external buffer from ${s.uri} with error code ${t.status}.`);return t.arrayBuffer()}).then(t=>new Uint8Array(t));n.push(e)}else n.push(Promise.resolve(new Uint8Array(e)));else n.push(Promise.resolve())}const i=await Promise.all(n),s={};for(let t=0;t<i.length;t++){const e=i[t];e&&(s[t]=e)}return s}parseActiveBufferViews(t,e){const n={};for(let i=0;i<t.length;i++){const s=t[i];if(!s.isActive)continue;const r=s.byteOffset,a=r+s.byteLength,o=e[s.buffer];n[i]=o.slice(r,a)}return n}preprocessBuffers(t=[]){for(let e=0;e<t.length;e++){const n=t[e];n.isActive=!1,n.isExternal=!!n.uri}return t}preprocessBufferViews(t=[],e){for(let n=0;n<t.length;n++){const i=t[n];i.bufferHeader=e[i.buffer],i.isActive=!1,i.isExternal=i.bufferHeader.isExternal}return t}parseAvailability(t,e,n){const i=XQ(this.rootTile),s=this.rootTile.implicitTiling.subtreeLevels,r=(Math.pow(i,s)-1)/(i-1),a=Math.pow(i,s);t._tileAvailability=this.parseAvailabilityBitstream(e.tileAvailability,n,r),t._contentAvailabilityBitstreams=[];for(let i=0;i<e.contentAvailabilityHeaders.length;i++){const s=this.parseAvailabilityBitstream(e.contentAvailabilityHeaders[i],n,r);t._contentAvailabilityBitstreams.push(s)}t._childSubtreeAvailability=this.parseAvailabilityBitstream(e.childSubtreeAvailability,n,a)}parseAvailabilityBitstream(t,e,n){if(!isNaN(t.constant))return{constant:Boolean(t.constant),lengthBits:n};let i;return isNaN(t.bitstream)?isNaN(t.bufferView)||(i=e[t.bufferView]):i=e[t.bitstream],{bitstream:i,lengthBits:n}}expandSubtree(t,e){const n=KQ.copy(t);for(let i=0;e&&i<e._contentAvailabilityBitstreams.length;i++)if(e&&this.getBit(e._contentAvailabilityBitstreams[i],0)){n.content={uri:this.parseImplicitURI(t,this.rootTile.content.uri)};break}t.children.push(n);const i=this.transcodeSubtreeTiles(n,e),s=this.listChildSubtrees(e,i);for(let t=0;t<s.length;t++){const e=s[t],n=e.tile,i=this.deriveChildTile(null,n,null,e.childMortonIndex);i.content={uri:this.parseImplicitURI(i,this.rootTile.implicitTiling.subtrees.uri)},n.children.push(i)}}transcodeSubtreeTiles(t,e){let n=[t],i=[];for(let t=1;t<this.rootTile.implicitTiling.subtreeLevels;t++){const s=XQ(this.rootTile),r=(Math.pow(s,t)-1)/(s-1),a=s*n.length;for(let t=0;t<a;t++){const a=r+t,o=n[t>>Math.log2(s)];if(!this.getBit(e._tileAvailability,a)){i.push(void 0);continue}const l=this.deriveChildTile(e,o,a,t);o.children.push(l),i.push(l)}n=i,i=[]}return n}deriveChildTile(t,e,n,i){const s=new KQ(e,i);s.boundingVolume=this.getTileBoundingVolume(s),s.geometricError=this.getGeometricError(s);for(let e=0;t&&e<t._contentAvailabilityBitstreams.length;e++)if(t&&this.getBit(t._contentAvailabilityBitstreams[e],n)){s.content={uri:this.parseImplicitURI(s,this.rootTile.content.uri)};break}return s}getBit(t,e){if(e<0||e>=t.lengthBits)throw new Error("Bit index out of bounds.");if(void 0!==t.constant)return t.constant;const n=e>>3,i=e%8;return 1==(new Uint8Array(t.bitstream)[n]>>i&1)}getTileBoundingVolume(t){const e={};if(this.rootTile.boundingVolume.region){const n=[...this.rootTile.boundingVolume.region],i=n[0],s=n[2],r=n[1],a=n[3],o=(s-i)/Math.pow(2,t.__level),l=(a-r)/Math.pow(2,t.__level);n[0]=i+o*t.__x,n[2]=i+o*(t.__x+1),n[1]=r+l*t.__y,n[3]=r+l*(t.__y+1);for(let t=0;t<4;t++){const e=n[t];e<-Math.PI?n[t]+=2*Math.PI:e>Math.PI&&(n[t]-=2*Math.PI)}if(jQ(t)){const e=n[4],i=(n[5]-e)/Math.pow(2,t.__level);n[4]=e+i*t.__z,n[5]=e+i*(t.__z+1)}e.region=n}if(this.rootTile.boundingVolume.box){const n=[...this.rootTile.boundingVolume.box],i=2**t.__level-1,s=Math.pow(2,-t.__level),r=jQ(t)?3:2;for(let e=0;e<r;e++){n[3+3*e+0]*=s,n[3+3*e+1]*=s,n[3+3*e+2]*=s;const r=n[3+3*e+0],a=n[3+3*e+1],o=n[3+3*e+2],l=0===e?t.__x:1===e?t.__y:t.__z;n[0]+=2*r*(-.5*i+l),n[1]+=2*a*(-.5*i+l),n[2]+=2*o*(-.5*i+l)}e.box=n}return e}getGeometricError(t){return this.rootTile.geometricError/Math.pow(2,t.__level)}listChildSubtrees(t,e){const n=[],i=XQ(this.rootTile);for(let s=0;s<e.length;s++){const r=e[s];if(void 0!==r)for(let e=0;e<i;e++){const a=s*i+e;this.getBit(t._childSubtreeAvailability,a)&&n.push({tile:r,childMortonIndex:a})}}return n}parseImplicitURI(t,e){return(e=(e=(e=e.replace("{level}",t.__level)).replace("{x}",t.__x)).replace("{y}",t.__y)).replace("{z}",t.__z)}parseImplicitURIBuffer(t,e,n){const i=this.parseImplicitURI(t,e),s=new URL(i,this.workingPath+"/");return s.pathname=s.pathname.substring(0,s.pathname.lastIndexOf("/")),new URL(s.pathname+"/"+n,this.workingPath+"/").toString()}}const $Q=new di,tD=Symbol("TILE_X"),eD=Symbol("TILE_Y"),nD=Symbol("TILE_LEVEL");class iD{get tiling(){return this.imageSource.tiling}constructor(t={}){const{pixelSize:e=null,center:n=!1,useRecommendedSettings:i=!0,imageSource:s=null}=t;this.priority=-10,this.tiles=null,this.imageSource=s,this.pixelSize=e,this.center=n,this.useRecommendedSettings=i,null!==e&&console.warn('ImageFormatPlugin: "pixelSize" has been deprecated in favor of scaling the tiles root.')}init(t){this.useRecommendedSettings&&(t.errorTarget=1),this.tiles=t,this.imageSource.fetchOptions=t.fetchOptions,this.imageSource.fetchData=(e,n)=>(t.invokeAllPlugins(t=>e=t.preprocessURL?t.preprocessURL(e,null):e),t.invokeOnePlugin(t=>t!==this&&t.fetchData&&t.fetchData(e,n)))}async loadRootTileSet(){const{tiles:t,imageSource:e}=this;return e.url=e.url||t.rootURL,t.invokeAllPlugins(t=>e.url=t.preprocessURL?t.preprocessURL(e.url,null):e.url),await e.init(),t.rootURL=e.url,this.getTileset(e.url)}async parseToMesh(t,e,n,i,s){if(s.aborted)return null;const{imageSource:r}=this,a=e[tD],o=e[eD],l=e[nD],c=await r.processBufferToTexture(t);if(s.aborted)return c.dispose(),c.image.close(),null;r.setData(a,o,l,c);let A=1,h=1,u=0,d=0,p=0;const g=e.boundingVolume.box;g&&([u,d,p]=g,A=g[3],h=g[7]);const f=new Lc(2*A,2*h),m=new ea(f,new mr({map:c,transparent:!0}));m.position.set(u,d,p);const y=r.tiling.getTileContentUVBounds(a,o,l),{uv:I}=f.attributes;for(let t=0;t<I.count;t++)$Q.fromBufferAttribute(I,t),$Q.x=ui.mapLinear($Q.x,0,1,y[0],y[2]),$Q.y=ui.mapLinear($Q.y,0,1,y[1],y[3]),I.setXY(t,$Q.x,$Q.y);return m}preprocessNode(t){const{tiling:e}=this,n=e.maxLevel;t[nD]<n&&null!==t.parent&&this.expandChildren(t)}disposeTile(t){const e=t[tD],n=t[eD],i=t[nD],{imageSource:s}=this;s.has(e,n,i)&&s.release(e,n,i)}getTileset(t){const{tiling:e,tiles:n}=this,i=e.minLevel,{tileCountX:s,tileCountY:r}=e.getLevel(i),a=[];for(let t=0;t<s;t++)for(let e=0;e<r;e++){const n=this.createChild(t,e,i);null!==n&&a.push(n)}const o={asset:{version:"1.1"},geometricError:1e5,root:{refine:"REPLACE",geometricError:1e5,boundingVolume:this.createBoundingVolume(0,0,-1),children:a,[nD]:-1,[tD]:0,[eD]:0}};return n.preprocessTileSet(o,t),o}getUrl(t,e,n){return this.imageSource.getUrl(t,e,n)}createBoundingVolume(t,e,n){const{center:i,pixelSize:s,tiling:r}=this,{pixelWidth:a,pixelHeight:o}=r.getLevel(r.maxLevel),[l,c,A,h]=-1===n?r.getContentBounds(!0):r.getTileBounds(t,e,n,!0);let u=(A-l)/2,d=(h-c)/2,p=l+u,g=c+d;return i&&(p-=.5,g-=.5),s?(p*=a*s,u*=a*s,g*=o*s,d*=o*s):(p*=r.aspectRatio,u*=r.aspectRatio),{box:[p,g,0,u,0,0,0,d,0,0,0,0]}}createChild(t,e,n){const{pixelSize:i,tiling:s}=this;if(!s.getTileExists(t,e,n))return null;const{pixelWidth:r,pixelHeight:a}=s.getLevel(s.maxLevel),{pixelWidth:o,pixelHeight:l}=s.getLevel(n);let c=Math.max(1/o,1/l);return i&&(c*=i*Math.max(r,a)),{refine:"REPLACE",geometricError:c,boundingVolume:this.createBoundingVolume(t,e,n),content:{uri:this.getUrl(t,e,n)},children:[],[tD]:t,[eD]:e,[nD]:n}}expandChildren(t){const e=t[nD],n=t[tD],i=t[eD];for(let s=0;s<2;s++)for(let r=0;r<2;r++){const a=this.createChild(2*n+s,2*i+r,e+1);a&&t.children.push(a)}}}function sD(...t){return t.join("_")}class rD{constructor(){this.cache={},this.count=0,this.cachedBytes=0,this.active=0}fetchItem(){}disposeItem(){}getMemoryUsage(t){return 0}setData(...t){const{cache:e}=this,n=t.pop(),i=sD(...t);if(i in e)throw new Error(`DataCache: "${i}" is already present.`);return this.cache[i]={abortController:new AbortController,result:n,count:1,bytes:this.getMemoryUsage(n)},this.count++,this.cachedBytes+=this.cache[i].bytes,n}lock(...t){const{cache:e}=this,n=sD(...t);if(n in e)e[n].count++;else{const e=new AbortController,i={abortController:e,result:null,count:1,bytes:0};this.active++,i.result=this.fetchItem(t,e.signal),i.result instanceof Promise?i.result.then(t=>(i.result=t,i.bytes=this.getMemoryUsage(t),this.cachedBytes+=i.bytes,t)).finally(()=>{this.active--}).catch(t=>{}):(this.active--,i.bytes=this.getMemoryUsage(i.result),this.cachedBytes+=i.bytes),this.cache[n]=i,this.count++}return e[n].result}release(...t){const e=sD(...t);this.releaseViaFullKey(e)}get(...t){const{cache:e}=this,n=sD(...t);return n in e&&e[n].count>0?e[n].result:null}has(...t){const{cache:e}=this;return sD(...t)in e}dispose(){const{cache:t}=this;for(const e in t){const{abortController:n}=t[e];n.abort(),this.releaseViaFullKey(e,!0)}this.cache={}}releaseViaFullKey(t,e=!1){const{cache:n}=this;if(t in n&&n[t].count>0){const i=n[t];if(i.count--,0===i.count||e){const s=()=>{if(n[t]!==i)return;const{result:e,abortController:s}=i;s.abort(),e instanceof Promise?e.then(t=>{this.disposeItem(t),this.count--,this.cachedBytes-=i.bytes}).catch(()=>{}):(this.disposeItem(e),this.count--,this.cachedBytes-=i.bytes),delete n[t]};e?s():queueMicrotask(()=>{0===i.count&&s()})}return!0}throw new Error("DataCache: Attempting to release key that does not exist")}}class aD{get levelCount(){return this._levels.length}get maxLevel(){return this.levelCount-1}get minLevel(){const t=this._levels;for(let e=0;e<t.length;e++)if(null!==t[e])return e;return-1}get contentBounds(){return this._contentBounds??this.projection?.getBounds()??[0,0,1,1]}get aspectRatio(){const{pixelWidth:t,pixelHeight:e}=this.getLevel(this.maxLevel);return t/e}constructor(){this.flipY=!1,this.pixelOverlap=0,this._contentBounds=null,this.projection=null,this._levels=[]}setLevel(t,e={}){const n=this._levels;for(;n.length<t;)n.push(null);const{tilePixelWidth:i=256,tilePixelHeight:s=256,tileCountX:r=2**t,tileCountY:a=2**t,tileBounds:o=null}=e,{pixelWidth:l=i*r,pixelHeight:c=s*a}=e;n[t]={tilePixelWidth:i,tilePixelHeight:s,pixelWidth:l,pixelHeight:c,tileCountX:r,tileCountY:a,tileBounds:o}}generateLevels(t,e,n,i={}){const{minLevel:s=0,tilePixelWidth:r=256,tilePixelHeight:a=256}=i,o=t-1,{pixelWidth:l=r*e*2**o,pixelHeight:c=a*n*2**o}=i;for(let e=s;e<t;e++){const n=t-e-1,i=Math.ceil(l*2**-n),s=Math.ceil(c*2**-n),o=Math.ceil(i/r),A=Math.ceil(s/a);this.setLevel(e,{tilePixelWidth:r,tilePixelHeight:a,pixelWidth:i,pixelHeight:s,tileCountX:o,tileCountY:A})}}getLevel(t){return this._levels[t]}setContentBounds(t,e,n,i){this._contentBounds=[t,e,n,i]}setProjection(t){this.projection=t}getTileAtPoint(t,e,n,i=!1){const{flipY:s}=this,{tileCountX:r,tileCountY:a,tileBounds:o}=this.getLevel(n),l=1/r,c=1/a;if(i||([t,e]=this.toNormalizedPoint(t,e)),o){const n=this.toNormalizedRange(o);t=ui.mapLinear(t,n[0],n[2],0,1),e=ui.mapLinear(e,n[1],n[3],0,1)}const A=Math.floor(t/l);let h=Math.floor(e/c);return s&&(h=a-1-h),[A,h]}getTilesInRange(t,e,n,i,s,r=!1){[t,e,n,i]=this.clampToContentBounds([t,e,n,i],r);const a=this.getTileAtPoint(t,e,s,r),o=this.getTileAtPoint(n,i,s,r);this.flipY&&([a[1],o[1]]=[o[1],a[1]]);const{tileCountX:l,tileCountY:c}=this.getLevel(s),[A,h]=a,[u,d]=o;return u<0||d<0||A>=l||h>=c?[0,0,-1,-1]:[ui.clamp(A,0,l-1),ui.clamp(h,0,c-1),ui.clamp(u,0,l-1),ui.clamp(d,0,c-1)]}getTileExists(t,e,n){const[i,s,r,a]=this.contentBounds,[o,l,c,A]=this.getTileBounds(t,e,n);return!(o>=c||l>=A)&&o<=r&&l<=a&&c>=i&&A>=s}getContentBounds(t=!1){const{projection:e}=this,n=[...this.contentBounds];return e&&t&&(n[0]=e.convertLongitudeToProjection(n[0]),n[1]=e.convertLatitudeToProjection(n[1]),n[2]=e.convertLongitudeToProjection(n[2]),n[3]=e.convertLatitudeToProjection(n[3])),n}getTileContentUVBounds(t,e,n){const[i,s,r,a]=this.getTileBounds(t,e,n,!0,!0),[o,l,c,A]=this.getTileBounds(t,e,n,!0,!1);return[ui.mapLinear(i,o,c,0,1),ui.mapLinear(s,l,A,0,1),ui.mapLinear(r,o,c,0,1),ui.mapLinear(a,l,A,0,1)]}getTileBounds(t,e,n,i=!1,s=!0){const{flipY:r,pixelOverlap:a,projection:o}=this,{tilePixelWidth:l,tilePixelHeight:c,pixelWidth:A,pixelHeight:h,tileBounds:u}=this.getLevel(n);let d=l*t-a,p=c*e-a,g=d+l+2*a,f=p+c+2*a;if(d=Math.max(d,0),p=Math.max(p,0),g=Math.min(g,A),f=Math.min(f,h),d/=A,g/=A,p/=h,f/=h,r){const t=(f-p)/2,e=1-(p+f)/2;p=e-t,f=e+t}let m=[d,p,g,f];if(u){const t=this.toNormalizedRange(u);m[0]=ui.mapLinear(m[0],0,1,t[0],t[2]),m[2]=ui.mapLinear(m[2],0,1,t[0],t[2]),m[1]=ui.mapLinear(m[1],0,1,t[1],t[3]),m[3]=ui.mapLinear(m[3],0,1,t[1],t[3])}return s&&(m=this.clampToProjectionBounds(m,!0)),o&&!i&&(m[0]=o.convertProjectionToLongitude(m[0]),m[1]=o.convertProjectionToLatitude(m[1]),m[2]=o.convertProjectionToLongitude(m[2]),m[3]=o.convertProjectionToLatitude(m[3])),m}toNormalizedPoint(t,e){const{projection:n}=this,i=[t,e];return this.projection&&(i[0]=n.convertLongitudeToProjection(i[0]),i[1]=n.convertLatitudeToProjection(i[1])),i}toNormalizedRange(t){return[...this.toNormalizedPoint(t[0],t[1]),...this.toNormalizedPoint(t[2],t[3])]}toCartographicPoint(t,e){const{projection:n}=this,i=[t,e];if(!this.projection)throw new Error("TilingScheme: Projection not available.");return i[0]=n.convertProjectionToLongitude(i[0]),i[1]=n.convertProjectionToLatitude(i[1]),i}toCartographicRange(t){return[...this.toCartographicPoint(t[0],t[1]),...this.toCartographicPoint(t[2],t[3])]}clampToContentBounds(t,e=!1){const n=[...t],[i,s,r,a]=this.getContentBounds(e);return n[0]=ui.clamp(n[0],i,r),n[1]=ui.clamp(n[1],s,a),n[2]=ui.clamp(n[2],i,r),n[3]=ui.clamp(n[3],s,a),n}clampToProjectionBounds(t,e=!1){const n=[...t],{projection:i}=this;let s;s=e||!i?[0,0,1,1]:i.getBounds();const[r,a,o,l]=s;return n[0]=ui.clamp(n[0],r,o),n[1]=ui.clamp(n[1],a,l),n[2]=ui.clamp(n[2],r,o),n[3]=ui.clamp(n[3],a,l),n}}class oD extends rD{constructor(){super(),this.tiling=new aD,this.fetchOptions={},this.fetchData=(...t)=>fetch(...t)}init(){}async processBufferToTexture(t){const e=new Blob([t]),n=await createImageBitmap(e,{premultiplyAlpha:"none",colorSpaceConversion:"none",imageOrientation:"flipY"}),i=new Oi(n);return i.generateMipmaps=!1,i.colorSpace=hn,i.needsUpdate=!0,i}getMemoryUsage(t){const{TextureUtils:e}=i;if(!e)return 0;const{format:n,type:s,image:r,generateMipmaps:a}=t,{width:o,height:l}=r,c=e.getByteLength(o,l,n,s);return a?4*c/3:c}fetchItem(t,e){const n={...this.fetchOptions,signal:e},i=this.getUrl(...t);return this.fetchData(i,n).then(t=>t.arrayBuffer()).then(t=>this.processBufferToTexture(t))}disposeItem(t){t.dispose(),t.image instanceof ImageBitmap&&t.image.close()}getUrl(...t){}}class lD extends oD{constructor(t={}){const{url:e=null,...n}=t;super(n),this.url=e,this.format=null,this.stem=null}getUrl(t,e,n){return`${this.stem}_files/${n}/${t}_${e}.${this.format}`}init(){const{url:t}=this;return this.fetchData(t,this.fetchOptions).then(t=>t.text()).then(e=>{const n=(new DOMParser).parseFromString(e,"text/xml");if(n.querySelector("DisplayRects")||n.querySelector("Collection"))throw new Error("DeepZoomImagesPlugin: DisplayRect and Collection DZI files not supported.");const i=n.querySelector("Image"),s=i.querySelector("Size"),r=parseInt(s.getAttribute("Width")),a=parseInt(s.getAttribute("Height")),o=parseInt(i.getAttribute("TileSize")),l=parseInt(i.getAttribute("Overlap")),c=i.getAttribute("Format");this.format=c,this.stem=t.split(/\.[^.]+$/g)[0];const{tiling:A}=this,h=Math.ceil(Math.log2(Math.max(r,a)))+1;A.flipY=!0,A.pixelOverlap=l,A.generateLevels(h,1,1,{tilePixelWidth:o,tilePixelHeight:o,pixelWidth:r,pixelHeight:a})})}}const cD=new Es,AD=new ZA(-1,1,1,-1,0,1),hD=new class extends Hr{constructor(){super(),this.setAttribute("position",new Pr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Pr([0,2,0,0,2,0],2))}};class uD{constructor(t){this._mesh=new ea(hD,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,AD)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}var dD=Uint8Array,pD=Uint16Array,gD=Int32Array,fD=new dD([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),mD=new dD([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),yD=new dD([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ID=function(t,e){for(var n=new pD(31),i=0;i<31;++i)n[i]=e+=1<<t[i-1];var s=new gD(n[30]);for(i=1;i<30;++i)for(var r=n[i];r<n[i+1];++r)s[r]=r-n[i]<<5|i;return{b:n,r:s}},CD=ID(fD,2),ED=CD.b,vD=CD.r;ED[28]=258,vD[258]=28;for(var xD=ID(mD,0).b,wD=new pD(32768),_D=0;_D<32768;++_D){var BD=(43690&_D)>>1|(21845&_D)<<1;BD=(61680&(BD=(52428&BD)>>2|(13107&BD)<<2))>>4|(3855&BD)<<4,wD[_D]=((65280&BD)>>8|(255&BD)<<8)>>1}var SD=function(t,e,n){for(var i=t.length,s=0,r=new pD(e);s<i;++s)t[s]&&++r[t[s]-1];var a,o=new pD(e);for(s=1;s<e;++s)o[s]=o[s-1]+r[s-1]<<1;if(n){a=new pD(1<<e);var l=15-e;for(s=0;s<i;++s)if(t[s])for(var c=s<<4|t[s],A=e-t[s],h=o[t[s]-1]++<<A,u=h|(1<<A)-1;h<=u;++h)a[wD[h]>>l]=c}else for(a=new pD(i),s=0;s<i;++s)t[s]&&(a[s]=wD[o[t[s]-1]++]>>15-t[s]);return a},bD=new dD(288);for(_D=0;_D<144;++_D)bD[_D]=8;for(_D=144;_D<256;++_D)bD[_D]=9;for(_D=256;_D<280;++_D)bD[_D]=7;for(_D=280;_D<288;++_D)bD[_D]=8;var MD=new dD(32);for(_D=0;_D<32;++_D)MD[_D]=5;var TD=SD(bD,9,1),QD=SD(MD,5,1),DD=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},RD=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&n},UD=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(7&e)},PD=function(t){return(t+7)/8|0},LD=function(t,e,n){return(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length),new dD(t.subarray(e,n))},FD=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ND=function(t,e,n){var i=new Error(e||FD[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,ND),!n)throw i;return i},kD=function(t,e,n,i){var s=t.length,r=i?i.length:0;if(!s||e.f&&!e.l)return n||new dD(0);var a=!n,o=a||2!=e.i,l=e.i;a&&(n=new dD(3*s));var c=function(t){var e=n.length;if(t>e){var i=new dD(Math.max(2*e,t));i.set(n),n=i}},A=e.f||0,h=e.p||0,u=e.b||0,d=e.l,p=e.d,g=e.m,f=e.n,m=8*s;do{if(!d){A=RD(t,h,1);var y=RD(t,h+1,3);if(h+=3,!y){var I=t[(T=PD(h)+4)-4]|t[T-3]<<8,C=T+I;if(C>s){l&&ND(0);break}o&&c(u+I),n.set(t.subarray(T,C),u),e.b=u+=I,e.p=h=8*C,e.f=A;continue}if(1==y)d=TD,p=QD,g=9,f=5;else if(2==y){var E=RD(t,h,31)+257,v=RD(t,h+10,15)+4,x=E+RD(t,h+5,31)+1;h+=14;for(var w=new dD(x),_=new dD(19),B=0;B<v;++B)_[yD[B]]=RD(t,h+3*B,7);h+=3*v;var S=DD(_),b=(1<<S)-1,M=SD(_,S,1);for(B=0;B<x;){var T,Q=M[RD(t,h,b)];if(h+=15&Q,(T=Q>>4)<16)w[B++]=T;else{var D=0,R=0;for(16==T?(R=3+RD(t,h,3),h+=2,D=w[B-1]):17==T?(R=3+RD(t,h,7),h+=3):18==T&&(R=11+RD(t,h,127),h+=7);R--;)w[B++]=D}}var U=w.subarray(0,E),P=w.subarray(E);g=DD(U),f=DD(P),d=SD(U,g,1),p=SD(P,f,1)}else ND(1);if(h>m){l&&ND(0);break}}o&&c(u+131072);for(var L=(1<<g)-1,F=(1<<f)-1,N=h;;N=h){var k=(D=d[UD(t,h)&L])>>4;if((h+=15&D)>m){l&&ND(0);break}if(D||ND(2),k<256)n[u++]=k;else{if(256==k){N=h,d=null;break}var O=k-254;if(k>264){var z=fD[B=k-257];O=RD(t,h,(1<<z)-1)+ED[B],h+=z}var G=p[UD(t,h)&F],H=G>>4;if(G||ND(3),h+=15&G,P=xD[H],H>3&&(z=mD[H],P+=UD(t,h)&(1<<z)-1,h+=z),h>m){l&&ND(0);break}o&&c(u+131072);var V=u+O;if(u<P){var Y=r-P,q=Math.min(P,V);for(Y+u<0&&ND(3);u<q;++u)n[u]=i[Y+u]}for(;u<V;++u)n[u]=n[u-P]}}e.l=d,e.p=N,e.b=u,e.f=A,d&&(A=1,e.m=g,e.d=p,e.n=f)}while(!A);return u!=n.length&&a?LD(n,0,u):n.subarray(0,u)},OD=new dD(0),zD=function(t,e){return t[e]|t[e+1]<<8},GD=function(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},HD=function(t,e){return GD(t,e)+4294967296*GD(t,e+4)},VD=function(){function t(t,e){"function"==typeof t&&(e=t,t={}),this.ondata=e;var n=t&&t.dictionary&&t.dictionary.subarray(-32768);this.s={i:0,b:n?n.length:0},this.o=new dD(32768),this.p=new dD(0),n&&this.o.set(n)}return t.prototype.e=function(t){if(this.ondata||ND(5),this.d&&ND(4),this.p.length){if(t.length){var e=new dD(this.p.length+t.length);e.set(this.p),e.set(t,this.p.length),this.p=e}}else this.p=t},t.prototype.c=function(t){this.s.i=+(this.d=t||!1);var e=this.s.b,n=kD(this.p,this.s,this.o);this.ondata(LD(n,e,this.s.b),this.d),this.o=LD(n,this.s.b-32768),this.s.b=this.o.length,this.p=LD(this.p,this.s.p/8|0),this.s.p&=7},t.prototype.push=function(t,e){this.e(t),this.c(e)},t}();function YD(t,e){return kD(t,{i:2},e&&e.out,e&&e.dictionary)}var qD=function(){function t(t,e){this.v=1,this.r=0,VD.call(this,t,e)}return t.prototype.push=function(t,e){if(VD.prototype.e.call(this,t),this.r+=t.length,this.v){var n=this.p.subarray(this.v-1),i=n.length>3?function(t){31==t[0]&&139==t[1]&&8==t[2]||ND(6,"invalid gzip data");var e=t[3],n=10;4&e&&(n+=2+(t[10]|t[11]<<8));for(var i=(e>>3&1)+(e>>4&1);i>0;i-=!t[n++]);return n+(2&e)}(n):4;if(i>n.length){if(!e)return}else this.v>1&&this.onmember&&this.onmember(this.r-n.length);this.p=n.subarray(i),this.v=0}VD.prototype.c.call(this,e),!this.s.f||this.s.l||e||(this.v=PD(this.s.p)+9,this.s={i:0},this.o=new dD(0),this.push(new dD(0),e))},t}(),WD="undefined"!=typeof TextDecoder&&new TextDecoder;try{WD.decode(OD,{stream:!0})}catch(t){}var JD=function(t,e){return e+30+zD(t,e+26)+zD(t,e+28)},jD=function(t,e,n){var i=zD(t,e+28),s=function(t,e){if(e){for(var n="",i=0;i<t.length;i+=16384)n+=String.fromCharCode.apply(null,t.subarray(i,i+16384));return n}if(WD)return WD.decode(t);var s=function(t){for(var e="",n=0;;){var i=t[n++],s=(i>127)+(i>223)+(i>239);if(n+s>t.length)return{s:e,r:LD(t,n-1)};s?3==s?(i=((15&i)<<18|(63&t[n++])<<12|(63&t[n++])<<6|63&t[n++])-65536,e+=String.fromCharCode(55296|i>>10,56320|1023&i)):e+=1&s?String.fromCharCode((31&i)<<6|63&t[n++]):String.fromCharCode((15&i)<<12|(63&t[n++])<<6|63&t[n++]):e+=String.fromCharCode(i)}}(t),r=s.s;return(n=s.r).length&&ND(8),r}(t.subarray(e+46,e+46+i),!(2048&zD(t,e+8))),r=e+46+i,a=GD(t,e+20),o=n&&4294967295==a?XD(t,r):[a,GD(t,e+24),GD(t,e+42)],l=o[0],c=o[1],A=o[2];return[zD(t,e+10),l,c,s,r+zD(t,e+30)+zD(t,e+32),A]},XD=function(t,e){for(;1!=zD(t,e);e+=4+zD(t,e+2));return[HD(t,e+12),HD(t,e+4),HD(t,e+20)]};let KD;const ZD="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&ZD.decode();let $D=null;async function tR(t){if(void 0!==KD)return KD;void 0!==t&&(Object.getPrototypeOf(t)===Object.prototype?({module_or_path:t}=t):console.warn("using deprecated parameters for the initialization function; pass a single object instead")),void 0===t&&(t=new URL(n(825),n.b));const e=function(){const t={wbg:{}};return t.wbg.__wbg_buffer_609cc3eee51ed158=function(t){return t.buffer},t.wbg.__wbg_length_3b4f022188ae8db6=function(t){return t.length},t.wbg.__wbg_length_6ca527665d89694d=function(t){return t.length},t.wbg.__wbg_length_8cfd2c6409af88ad=function(t){return t.length},t.wbg.__wbg_new_9fee97a409b32b68=function(t){return new Uint16Array(t)},t.wbg.__wbg_new_e3b321dcfef89fc7=function(t){return new Uint32Array(t)},t.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(t,e,n){return new Float32Array(t,e>>>0,n>>>0)},t.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(t,e,n){return new Uint32Array(t,e>>>0,n>>>0)},t.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(t){return new Float32Array(t>>>0)},t.wbg.__wbg_set_10bad9bee0e9c58b=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_set_d23661d19148b229=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_set_f4f1f0daa30696fc=function(t,e,n){t.set(e,n>>>0)},t.wbg.__wbg_subarray_3aaeec89bb2544f0=function(t,e,n){return t.subarray(e>>>0,n>>>0)},t.wbg.__wbg_subarray_769e1e0f81bb259b=function(t,e,n){return t.subarray(e>>>0,n>>>0)},t.wbg.__wbindgen_init_externref_table=function(){const t=KD.__wbindgen_export_0,e=t.grow(4);t.set(0,void 0),t.set(e+0,void 0),t.set(e+1,null),t.set(e+2,!0),t.set(e+3,!1)},t.wbg.__wbindgen_memory=function(){return KD.memory},t.wbg.__wbindgen_throw=function(t,e){throw new Error((n=t,i=e,n>>>=0,ZD.decode((null!==$D&&0!==$D.byteLength||($D=new Uint8Array(KD.memory.buffer)),$D).subarray(n,n+i))));var n,i},t}();("string"==typeof t||"function"==typeof Request&&t instanceof Request||"function"==typeof URL&&t instanceof URL)&&(t=fetch(t));const{instance:i,module:s}=await async function(t,e){if("function"==typeof Response&&t instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(t,e)}catch(e){if("application/wasm"==t.headers.get("Content-Type"))throw e;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e)}const n=await t.arrayBuffer();return await WebAssembly.instantiate(n,e)}{const n=await WebAssembly.instantiate(t,e);return n instanceof WebAssembly.Instance?{instance:n,module:t}:n}}(await t,e);return function(t,e){return KD=t.exports,tR.__wbindgen_wasm_module=e,$D=null,KD.__wbindgen_start(),KD}(i,s)}const eR=-12,nR=9,iR=Math.exp(eR),sR=Math.exp(nR),rR=Math.exp(-30),aR=2048,oR=2048,lR=1,cR=aR-1,AR=oR-1,hR=Object.freeze(Object.defineProperty({__proto__:null,LN_SCALE_MAX:nR,LN_SCALE_MIN:eR,LN_SCALE_ZERO:-30,SCALE_MAX:sR,SCALE_MIN:iR,SCALE_ZERO:rR,SPLAT_TEX_DEPTH:2048,SPLAT_TEX_DEPTH_BITS:11,SPLAT_TEX_DEPTH_MASK:2047,SPLAT_TEX_HEIGHT:oR,SPLAT_TEX_HEIGHT_BITS:11,SPLAT_TEX_HEIGHT_MASK:AR,SPLAT_TEX_LAYER_BITS:22,SPLAT_TEX_MIN_HEIGHT:lR,SPLAT_TEX_WIDTH:aR,SPLAT_TEX_WIDTH_BITS:11,SPLAT_TEX_WIDTH_MASK:cR,WASM_SPLAT_SORT:!0},Symbol.toStringTag,{value:"Module"}));function uR(t){return"bool"===t||"bvec2"===t||"bvec3"===t||"bvec4"===t}function dR(t){return"int"===t||"uint"===t||"float"===t}function pR(t){return"int"===t||"ivec2"===t||"ivec3"===t||"ivec4"===t}function gR(t){return"uint"===t||"uvec2"===t||"uvec3"===t||"uvec4"===t}function fR(t){return"float"===t||"vec2"===t||"vec3"===t||"vec4"===t}function mR(t){return"mat2"===t||"mat2x2"===t||"mat2x3"===t||"mat2x4"===t||"mat3"===t||"mat3x2"===t||"mat3x3"===t||"mat3x4"===t||"mat4"===t||"mat4x2"===t||"mat4x3"===t||"mat4x4"===t}function yR(t){return fR(t)||mR(t)}function IR(t){return"vec2"===t||"ivec2"===t||"uvec2"===t}function CR(t){return"vec3"===t||"ivec3"===t||"uvec3"===t}function ER(t){return"vec4"===t||"ivec4"===t||"uvec4"===t}function vR(t){return"mat2"===t||"mat2x2"===t}function xR(t){return"mat3"===t||"mat3x3"===t}function wR(t){return"mat4"===t||"mat4x4"===t}function _R(t){switch(t){case"vec2":case"vec3":case"vec4":return"float";case"ivec2":case"ivec3":case"ivec4":return"int";case"uvec2":case"uvec3":case"uvec4":return"uint";default:throw new Error(`Invalid vector type: ${t}`)}}function BR(t){switch(t){case"vec2":case"ivec2":case"uvec2":return 2;case"vec3":case"ivec3":case"uvec3":return 3;case"vec4":case"ivec4":case"uvec4":return 4;default:throw new Error(`Invalid vector type: ${t}`)}}function SR(t){if(dR(t))return"uint";if(IR(t))return"uvec2";if(CR(t))return"uvec3";if(ER(t))return"uvec4";throw new Error(`Invalid vector type: ${t}`)}function bR(t){if("string"==typeof t)return t;if("object"==typeof t&&t.type)return t.type;throw new Error(`Invalid DynoType: ${String(t)}`)}function MR(t){return Math.trunc(t).toString()}function TR(t){return`${Math.max(0,Math.trunc(t)).toString()}u`}function QR(t){return t===Number.POSITIVE_INFINITY?"INFINITY":t===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(t)?t.toFixed(1):t.toString()}function DR(t){return t instanceof RR?t.type:t.dynoOut().type}class RR{constructor(t){this.__isDynoValue=!0,this.type=t}}class UR extends RR{constructor(t,e){super(t.outTypes[e]),this.dyno=t,this.key=e}}class PR extends RR{constructor(t,e){super(t),this.literal=e}getLiteral(){return this.literal}}function LR(t,e){return new PR(t,e)}class FR extends PR{constructor(t,e){super(t,""),this.value=e}getLiteral(){const{type:t,value:e}=this;switch(t){case"bool":return e?"true":"false";case"uint":return TR(e);case"int":return MR(e);case"float":return QR(e);case"bvec2":{const t=e;return`bvec2(${t[0]}, ${t[1]})`}case"uvec2":{if(e instanceof di)return`uvec2(${TR(e.x)}, ${TR(e.y)})`;const t=e;return`uvec2(${TR(t[0])}, ${TR(t[1])})`}case"ivec2":{if(e instanceof di)return`ivec2(${MR(e.x)}, ${MR(e.y)})`;const t=e;return`ivec2(${MR(t[0])}, ${MR(t[1])})`}case"vec2":{if(e instanceof di)return`vec2(${QR(e.x)}, ${QR(e.y)})`;const t=e;return`vec2(${QR(t[0])}, ${QR(t[1])})`}case"bvec3":{const t=e;return`bvec3(${t[0]}, ${t[1]}, ${t[2]})`}case"uvec3":{if(e instanceof gi)return`uvec3(${TR(e.x)}, ${TR(e.y)}, ${TR(e.z)})`;const t=e;return`uvec3(${TR(t[0])}, ${TR(t[1])}, ${TR(t[2])})`}case"ivec3":{if(e instanceof gi)return`ivec3(${MR(e.x)}, ${MR(e.y)}, ${MR(e.z)})`;const t=e;return`ivec3(${MR(t[0])}, ${MR(t[1])}, ${MR(t[2])})`}case"vec3":{if(e instanceof gi)return`vec3(${QR(e.x)}, ${QR(e.y)}, ${QR(e.z)})`;const t=e;return`vec3(${QR(t[0])}, ${QR(t[1])}, ${QR(t[2])})`}case"bvec4":{const t=e;return`bvec4(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}case"uvec4":{if(e instanceof zi)return`uvec4(${TR(e.x)}, ${TR(e.y)}, ${TR(e.z)}, ${TR(e.w)})`;const t=e;return`uvec4(${TR(t[0])}, ${TR(t[1])}, ${TR(t[2])}, ${TR(t[3])})`}case"ivec4":{if(e instanceof zi)return`ivec4(${MR(e.x)}, ${MR(e.y)}, ${MR(e.z)}, ${MR(e.w)})`;const t=e;return`ivec4(${MR(t[0])}, ${MR(t[1])}, ${MR(t[2])}, ${MR(t[3])})`}case"vec4":{if(e instanceof zi)return`vec4(${QR(e.x)}, ${QR(e.y)}, ${QR(e.z)}, ${QR(e.w)})`;if(e instanceof pi)return`vec4(${QR(e.x)}, ${QR(e.y)}, ${QR(e.z)}, ${QR(e.w)})`;const t=e;return`vec4(${QR(t[0])}, ${QR(t[1])}, ${QR(t[2])}, ${QR(t[3])})`}case"mat2":case"mat2x2":{const n=e instanceof cu?e.elements:e,i=new Array(4).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat2x3":{const n=e,i=new Array(6).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat2x4":{const n=e,i=new Array(8).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat3":case"mat3x3":{const n=e instanceof yi?e.elements:e,i=new Array(9).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat3x2":{const n=e,i=new Array(6).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat3x4":{const n=e,i=new Array(12).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat4":case"mat4x4":{const n=e instanceof Es?e.elements:e,i=new Array(16).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat4x2":{const n=e,i=new Array(8).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}case"mat4x3":{const n=e,i=new Array(12).fill(0).map((t,e)=>QR(n[e]));return`${t}(${i.join(", ")})`}default:throw new Error(`Type not implemented: ${String(t)}`)}}}function NR(t,e){return new FR(t,e)}function kR(t){const e=String(t);if(uR(t))return`${e}(false)`;if(yR(t))return`${e}(0.0)`;if(pR(t))return`${e}(0)`;if(gR(t))return`${e}(0u)`;throw new Error(`Type not implemented: ${e}`)}const OR="    ";class zR{constructor({indent:t}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=OR,this.indent=t??OR}nextSequence(){return this.sequence++}}class GR{constructor({inTypes:t,outTypes:e,inputs:n,update:i,globals:s,statements:r,generate:a}){this.inTypes=t??{},this.outTypes=e??{},this.inputs=n??{},this.update=i,this.globals=s,this.statements=r,this.generate=a??(({inputs:t,outputs:e,compile:n})=>{var i,s;return{globals:null==(i=this.globals)?void 0:i.call(this,{inputs:t,outputs:e,compile:n}),statements:null==(s=this.statements)?void 0:s.call(this,{inputs:t,outputs:e,compile:n})}})}get outputs(){const t={};for(const e in this.outTypes)t[e]=new UR(this,e);return t}apply(t){return Object.assign(this.inputs,t),this.outputs}compile({inputs:t,outputs:e,compile:n}){const i=[`// ${this.constructor.name}(${Object.values(t).join(", ")}) => (${Object.values(e).join(", ")})`],s=[];for(const t in e){const i=e[t];i&&!n.declares.has(i)&&(n.declares.add(i),s.push(t))}const{globals:r,statements:a,uniforms:o}=this.generate({inputs:t,outputs:e,compile:n});for(const t of r??[])n.globals.add(t);for(const t in o)n.uniforms[t]=o[t];this.update&&n.updaters.push(this.update);for(const t of s){const s=e[t];s&&(n.uniforms[s]||i.push(`${qR(s,this.outTypes[t])};`))}return(null==a?void 0:a.length)&&(i.push("{"),i.push(...a.map(t=>n.indent+t)),i.push("}")),i}}class HR extends GR{constructor({inTypes:t,outTypes:e,inputs:n,update:i,globals:s,construct:r}){super({inTypes:t,outTypes:e,inputs:n,update:i,globals:s,generate:t=>this.generateBlock(t)}),this.construct=r}generateBlock({inputs:t,outputs:e,compile:n}){var i,s;const r={},a={};for(const e in t)null!=t[e]&&(r[e]=new PR(this.inTypes[e],t[e]));for(const t in e)null!=e[t]&&(a[t]=new RR(this.outTypes[t]));const o={roots:[]},l=this.construct(r,a,o);for(const s of(null==(i=this.globals)?void 0:i.call(this,{inputs:t,outputs:e,compile:n}))??[])n.globals.add(s);const c=[],A=new Map;function h(t,e,i){let s=A.get(t);if(!s){s={sequence:n.nextSequence(),outNames:new Map,newOuts:new Set},A.set(t,s);for(const e in t.inputs){let n=t.inputs[e];for(;n;){if(n instanceof RR){n instanceof UR&&h(n.dyno,n.key);break}n=n.dynoOut()}}c.push(t)}e&&(i||s.newOuts.add(e),s.outNames.set(e,i??`${e}_${s.sequence}`))}for(const t of o.roots)h(t);for(const t in a){let n=(null==l?void 0:l[t])??a[t];for(;n;){if(n instanceof RR){n instanceof UR&&h(n.dyno,n.key,e[t]);break}n=n.dynoOut()}a[t]=n}const u=[];for(const t of c){const e={},i={};for(const n in t.inputs){let i=t.inputs[n];for(;i;){if(i instanceof RR){if(i instanceof PR)e[n]=i.getLiteral();else if(i instanceof UR){const t=null==(s=A.get(i.dyno))?void 0:s.outNames.get(i.key);if(!t)throw new Error(`Source not found for ${i.dyno.constructor.name}.${i.key}`);e[n]=t}break}i=i.dynoOut()}}const r=A.get(t)??{outNames:new Map};for(const[t,e]of r.outNames.entries())i[t]=e;const a=t.compile({inputs:e,outputs:i,compile:n});u.push(a)}const d=[];for(const t in e)a[t]instanceof PR&&d.push(`${e[t]} = ${a[t].getLiteral()};`);return d.length>0&&u.push(d),{statements:u.flatMap((t,e)=>0===e?t:["",...t])}}}function VR(t,e,n,{update:i,globals:s}={}){return new HR({inTypes:t,outTypes:e,construct:n,update:i,globals:s})}function YR({inTypes:t,outTypes:e,inputs:n,update:i,globals:s,statements:r,generate:a}){return new GR({inTypes:t,outTypes:e,inputs:n,update:i,globals:s,statements:r,generate:a})}function qR(t,e,n){const i="string"==typeof e?e:e.type;if(!i)throw new Error(`Invalid DynoType: ${String(e)}`);return`${i} ${t}${null!=n?`[${n}]`:""}`}function WR(t){var e;let n=!1;const i=t.split("\n").map(t=>{const e=t.trimEnd();return n?e:e.length>0?(n=!0,e):null}).filter(t=>null!=t);for(;i.length>0&&0===i[i.length-1].length;)i.pop();if(0===i.length)return[];const s=null==(e=i[0].match(/^\s*/))?void 0:e[0];if(!s)return i;const r=new RegExp(`^${s}`);return i.map(t=>t.replace(r,""))}function JR(t){return WR(t).join("\n")}class jR extends GR{constructor({a:t,outKey:e,outTypeFunc:n}){const i={a:DR(t)},s=n(DR(t));super({inTypes:i,outTypes:{[e]:s},inputs:{a:t}}),this.outKey=e}dynoOut(){return new UR(this,this.outKey)}}class XR extends GR{constructor({a:t,b:e,outKey:n,outTypeFunc:i}){const s={a:DR(t),b:DR(e)},r=i(DR(t),DR(e));super({inTypes:s,outTypes:{[n]:r},inputs:{a:t,b:e}}),this.outKey=n}dynoOut(){return new UR(this,this.outKey)}}class KR extends GR{constructor({a:t,b:e,c:n,outKey:i,outTypeFunc:s}){const r={a:DR(t),b:DR(e),c:DR(n)},a=s(DR(t),DR(e),DR(n));super({inTypes:r,outTypes:{[i]:a},inputs:{a:t,b:e,c:n}}),this.outKey=i}dynoOut(){return new UR(this,this.outKey)}}const ZR={type:"Gsplat"},$R={type:"PackedSplats"},tU=(t,e)=>new AU({packedSplats:t,index:e}),eU=(t,e,n,i)=>new hU({packedSplats:t,index:e,base:n,count:i}),nU=t=>new uU({gsplat:t}),iU=({gsplat:t,flags:e,index:n,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:l,x:c,y:A,z:h,r:u,g:d,b:p})=>new dU({gsplat:t,flags:e,index:n,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:l,x:c,y:A,z:h,r:u,g:d,b:p}),sU=t=>new gU({gsplat:t}),rU=(t,{scale:e,rotate:n,translate:i,recolor:s})=>new fU({gsplat:t,scale:e,rotate:n,translate:i,recolor:s}),aU=JR("\n  struct Gsplat {\n    vec3 center;\n    uint flags;\n    vec3 scales;\n    int index;\n    vec4 quaternion;\n    vec4 rgba;\n  };\n  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;\n\n  bool isGsplatActive(uint flags) {\n    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;\n  }\n"),oU=JR("\n  struct PackedSplats {\n    usampler2DArray texture;\n    int numSplats;\n    vec4 rgbMinMaxLnScaleMinMax;\n  };\n");class lU extends jR{constructor({packedSplats:t}){super({a:t,outKey:"numSplats",outTypeFunc:()=>"int"}),this.statements=({inputs:t,outputs:e})=>[`${e.numSplats} = ${t.a}.numSplats;`]}}const cU=JR("\n  bool readPackedSplat(usampler2DArray texture, int numSplats, vec4 rgbMinMaxLnScaleMinMax, int index, out Gsplat gsplat) {\n    if ((index >= 0) && (index < numSplats)) {\n      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);\n      unpackSplatEncoding(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba, rgbMinMaxLnScaleMinMax);\n      return true;\n    } else {\n      return false;\n    }\n  }\n");class AU extends GR{constructor({packedSplats:t,index:e}){super({inTypes:{packedSplats:$R,index:"int"},outTypes:{gsplat:ZR},inputs:{packedSplats:t,index:e},globals:()=>[aU,oU,cU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{packedSplats:i,index:s}=t;let r;return r=i&&s?WR(`\n            if (readPackedSplat(${i}.texture, ${i}.numSplats, ${i}.rgbMinMaxLnScaleMinMax, ${s}, ${n})) {\n              bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));\n              ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n            } else {\n              ${n}.flags = 0u;\n            }\n          `):[`${n}.flags = 0u;`],r.push(`${n}.index = ${s??"0"};`),r}})}dynoOut(){return new UR(this,"gsplat")}}class hU extends GR{constructor({packedSplats:t,index:e,base:n,count:i}){super({inTypes:{packedSplats:$R,index:"int",base:"int",count:"int"},outTypes:{gsplat:ZR},inputs:{packedSplats:t,index:e,base:n,count:i},globals:()=>[aU,oU,cU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{packedSplats:i,index:s,base:r,count:a}=t;let o;return o=i&&s&&r&&a?WR(`\n            ${n}.flags = 0u;\n            if ((${s} >= ${r}) && (${s} < (${r} + ${a}))) {\n              if (readPackedSplat(${i}.texture, ${i}.numSplats, ${i}.rgbMinMaxLnScaleMinMax, ${s}, ${n})) {\n                bool zeroSize = all(equal(${n}.scales, vec3(0.0, 0.0, 0.0)));\n                ${n}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;\n              }\n            }\n          `):[`${n}.flags = 0u;`],o.push(`${n}.index = ${s??"0"};`),o}})}dynoOut(){return new UR(this,"gsplat")}}class uU extends GR{constructor({gsplat:t}){super({inTypes:{gsplat:ZR},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:t},globals:()=>[aU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=t,{flags:i,active:s,index:r,center:a,scales:o,quaternion:l,rgba:c,rgb:A,opacity:h,x:u,y:d,z:p,r:g,g:f,b:m}=e;return[i?`${i} = ${n?`${n}.flags`:"0u"};`:null,s?`${s} = isGsplatActive(${n?`${n}.flags`:"0u"});`:null,r?`${r} = ${n?`${n}.index`:"0"};`:null,a?`${a} = ${n?`${n}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,o?`${o} = ${n?`${n}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,l?`${l} = ${n?`${n}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,c?`${c} = ${n?`${n}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,A?`${A} = ${n?`${n}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,h?`${h} = ${n?`${n}.rgba.a`:"0.0"};`:null,u?`${u} = ${n?`${n}.center.x`:"0.0"};`:null,d?`${d} = ${n?`${n}.center.y`:"0.0"};`:null,p?`${p} = ${n?`${n}.center.z`:"0.0"};`:null,g?`${g} = ${n?`${n}.rgba.r`:"0.0"};`:null,f?`${f} = ${n?`${n}.rgba.g`:"0.0"};`:null,m?`${m} = ${n?`${n}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class dU extends GR{constructor({gsplat:t,flags:e,index:n,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:l,x:c,y:A,z:h,r:u,g:d,b:p}){super({inTypes:{gsplat:ZR,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:ZR},inputs:{gsplat:t,flags:e,index:n,center:i,scales:s,quaternion:r,rgba:a,rgb:o,opacity:l,x:c,y:A,z:h,r:u,g:d,b:p},globals:()=>[aU],statements:({inputs:t,outputs:e})=>{const{gsplat:n}=e;if(!n)return[];const{gsplat:i,flags:s,index:r,center:a,scales:o,quaternion:l,rgba:c,rgb:A,opacity:h,x:u,y:d,z:p,r:g,g:f,b:m}=t;return[`${n}.flags = ${s??(i?`${i}.flags`:"0u")};`,`${n}.index = ${r??(i?`${i}.index`:"0")};`,`${n}.center = ${a??(i?`${i}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${n}.scales = ${o??(i?`${i}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${n}.quaternion = ${l??(i?`${i}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${n}.rgba = ${c??(i?`${i}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,A?`${n}.rgba.rgb = ${A};`:null,h?`${n}.rgba.a = ${h};`:null,u?`${n}.center.x = ${u};`:null,d?`${n}.center.y = ${d};`:null,p?`${n}.center.z = ${p};`:null,g?`${n}.rgba.r = ${g};`:null,f?`${n}.rgba.g = ${f};`:null,m?`${n}.rgba.b = ${m};`:null].filter(Boolean)}})}dynoOut(){return new UR(this,"gsplat")}}const pU=JR("\n  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {\n    float minScale = min(scales.x, min(scales.y, scales.z));\n    vec3 normal;\n    if (scales.z == minScale) {\n      normal = vec3(0.0, 0.0, 1.0);\n    } else if (scales.y == minScale) {\n      normal = vec3(0.0, 1.0, 0.0);\n    } else {\n      normal = vec3(1.0, 0.0, 0.0);\n    }\n    return quatVec(quaternion, normal);\n  }\n");class gU extends jR{constructor({gsplat:t}){super({a:t,outKey:"normal",outTypeFunc:()=>"vec3"}),this.globals=()=>[aU,pU],this.statements=({inputs:t,outputs:e})=>[`${e.normal} = gsplatNormal(${t.a}.scales, ${t.a}.quaternion);`]}}class fU extends GR{constructor({gsplat:t,scale:e,rotate:n,translate:i,recolor:s}){super({inTypes:{gsplat:ZR,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:ZR},inputs:{gsplat:t,scale:e,rotate:n,translate:i,recolor:s},globals:()=>[aU],statements:({inputs:t,outputs:e,compile:n})=>{const{gsplat:i}=e;if(!i||!t.gsplat)return[];const{scale:s,rotate:r,translate:a,recolor:o}=t,l=n.indent;return[`${i} = ${t.gsplat};`,`if (isGsplatActive(${i}.flags)) {`,s?`${l}${i}.center *= ${s};`:null,r?`${l}${i}.center = quatVec(${r}, ${i}.center);`:null,a?`${l}${i}.center += ${a};`:null,s?`${l}${i}.scales *= ${s};`:null,r?`${l}${i}.quaternion = quatQuat(${r}, ${i}.quaternion);`:null,o?`${l}${i}.rgba *= ${o};`:null,"}"].filter(Boolean)}})}dynoOut(){return new UR(this,"gsplat")}}const mU=(t,e)=>new yU({gsplat:t,rgbMinMaxLnScaleMinMax:e});class yU extends GR{constructor({gsplat:t,rgbMinMaxLnScaleMinMax:e}){super({inTypes:{gsplat:ZR,rgbMinMaxLnScaleMinMax:"vec4"},inputs:{gsplat:t,rgbMinMaxLnScaleMinMax:e},globals:()=>[aU],statements:({inputs:t,outputs:e})=>{const{output:n}=e;if(!n)return[];const{gsplat:i,rgbMinMaxLnScaleMinMax:s}=t;return i?WR(`\n            if (isGsplatActive(${i}.flags)) {\n              ${n} = packSplatEncoding(${i}.center, ${i}.scales, ${i}.quaternion, ${i}.rgba, ${s});\n            } else {\n              ${n} = uvec4(0u, 0u, 0u, 0u);\n            }\n          `):[`${n} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new UR(this,"output")}}class IU extends GR{constructor({rgba8:t}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:t},statements:({inputs:t,outputs:e})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new UR(this,"rgba8")}}const CU=(t=0,e)=>new BU({key:e,value:t}),EU=(t,e)=>new UU({key:e,value:t});class vU extends GR{constructor({key:t,type:e,count:n,value:i,update:s,globals:r}){t=t??"value",super({outTypes:{[t]:e},update:()=>{if(s){const t=s(this.value);void 0!==t&&(this.value=t)}this.uniform.value=this.value},generate:({inputs:i,outputs:s})=>{const a=(null==r?void 0:r({inputs:i,outputs:s}))??[],o={},l=s[t];return l&&(a.push(`uniform ${qR(l,e,n)};`),o[l]=this.uniform),{globals:a,uniforms:o}}}),this.type=e,this.count=n,this.value=i,this.uniform={value:i},this.outKey=t}dynoOut(){return new UR(this,this.outKey)}}class xU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"bool",value:e,update:n})}}class wU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"uint",value:e,update:n})}}class _U extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"int",value:e,update:n})}}class BU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"float",value:e,update:n})}}class SU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec2",value:e,update:n})}}class bU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec2",value:e,update:n})}}class MU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec2",value:e,update:n})}}class TU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec2",value:e,update:n})}}class QU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec3",value:e,update:n})}}class DU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec3",value:e,update:n})}}class RU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec3",value:e,update:n})}}class UU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec3",value:e,update:n})}}class PU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"bvec4",value:e,update:n})}}class LU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"uvec4",value:e,update:n})}}class FU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"ivec4",value:e,update:n})}}class NU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"vec4",value:e,update:n})}}class kU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2",value:e,update:n})}}class OU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x2",value:e,update:n})}}class zU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x3",value:e,update:n})}}class GU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat2x4",value:e,update:n})}}class HU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3",value:e,update:n})}}class VU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x2",value:e,update:n})}}class YU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x3",value:e,update:n})}}class qU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat3x4",value:e,update:n})}}class WU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4",value:e,update:n})}}class JU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x2",value:e,update:n})}}class jU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x3",value:e,update:n})}}class XU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"mat4x4",value:e,update:n})}}class KU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler2D",value:e,update:n})}}class ZU extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler2D",value:e,update:n})}}class $U extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2D",value:e,update:n})}}class tP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler2DArray",value:e,update:n})}}class eP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler2DArray",value:e,update:n})}}class nP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DArray",value:e,update:n})}}class iP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"usampler3D",value:e,update:n})}}class sP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"isampler3D",value:e,update:n})}}class rP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler3D",value:e,update:n})}}class aP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"usamplerCube",value:e,update:n})}}class oP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"isamplerCube",value:e,update:n})}}class lP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"samplerCube",value:e,update:n})}}class cP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DShadow",value:e,update:n})}}class AP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"sampler2DArrayShadow",value:e,update:n})}}class hP extends vU{constructor({key:t,value:e,update:n}){super({key:t,type:"samplerCubeShadow",value:e,update:n})}}const uP=new Float32Array(1),dP=new Uint32Array(uP.buffer);function pP(t){uP[0]=t;const e=dP[0],n=e>>23&255,i=8388607&e,s=(e>>31&1)<<15;if(255===n)return 0!==i?32767|s:31744|s;const r=n-127+15;return r>=31?31744|s:r<=0?r<-10?s:s|(8388608|i)>>1-r+13:s|r<<10|i>>13}function gP(t){const e=t>>15&1,n=t>>10&31,i=1023&t;let s;if(0===n)if(0===i)s=e<<31;else{let t=i,n=-14;for(;!(1024&t);)t<<=1,n--;t&=1023,s=e<<31|n+127<<23|t<<13}else s=31===n?0===i?e<<31|2139095040:e<<31|2143289344:e<<31|n-15+127<<23|i<<13;return dP[0]=s,uP[0]}function fP(t){return Math.max(0,Math.min(255,Math.round(255*t)))}function mP(t){return Math.max(-127,Math.min(127,Math.round(127*t)))}function yP(t){return t/255}function IP(t){return t/127}function CP(t){const e=[],n=new Set;return function t(i){i&&"object"==typeof i&&!n.has(i)&&(n.add(i),i instanceof ArrayBuffer?e.push(i):ArrayBuffer.isView(i)?e.push(i.buffer):Array.isArray(i)?i.forEach(t):Object.values(i).forEach(t))}(t),e}class EP{constructor({allocate:t,dispose:e,valid:n}){this.items=[],this.allocate=t,this.dispose=e,this.valid=n}alloc(t){for(;;){const e=this.items.pop();if(!e)break;if(this.valid(e,t))return e;this.dispose&&this.dispose(e)}return this.allocate(t)}free(t){this.items.push(t)}disposeAll(){let t;for(t=this.items.pop();t;)this.dispose&&this.dispose(t),t=this.items.pop()}}function vP(t,e,n,i,s,r,a,o,l,c,A,h,u,d,p,g,f){const m=(null==f?void 0:f.rgbMin)??0,y=((null==f?void 0:f.rgbMax)??1)-m,I=fP((d-m)/y),C=fP((p-m)/y),E=fP((g-m)/y),v=fP(u),x=NP(new pi(l,c,A,h)),w=255&x,_=x>>>8&255,B=x>>>16&255,S=(null==f?void 0:f.lnScaleMin)??eR,b=254/(((null==f?void 0:f.lnScaleMax)??nR)-S),M=r<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(r)-S)*b)+1)),T=a<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(a)-S)*b)+1)),Q=o<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(o)-S)*b)+1)),D=pP(n),R=pP(i),U=pP(s),P=4*e;t[P]=I|C<<8|E<<16|v<<24,t[P+1]=D|R<<16,t[P+2]=U|w<<16|_<<24,t[P+3]=M|T<<8|Q<<16|B<<24}const xP={center:new gi,scales:new gi,quaternion:new pi,color:new dr,opacity:0};function wP(t,e,n){const i=xP,s=4*e,r=t[s],a=t[s+1],o=t[s+2],l=t[s+3],c=(null==n?void 0:n.rgbMin)??0,A=((null==n?void 0:n.rgbMax)??1)-c;i.color.set(c+(255&r)/255*A,c+(r>>>8&255)/255*A,c+(r>>>16&255)/255*A),i.opacity=(r>>>24&255)/255,i.center.set(gP(65535&a),gP(a>>>16&65535),gP(65535&o));const h=(null==n?void 0:n.lnScaleMin)??eR,u=(((null==n?void 0:n.lnScaleMax)??nR)-h)/254,d=255&l;i.scales.x=0===d?0:Math.exp(h+(d-1)*u);const p=l>>>8&255;i.scales.y=0===p?0:Math.exp(h+(p-1)*u);const g=l>>>16&255;return i.scales.z=0===g?0:Math.exp(h+(g-1)*u),kP(o>>>16&65535|l>>>8&16711680,i.quaternion),i}function _P(t){const e=aR,n=Math.max(lR,Math.min(oR,Math.ceil(t/e))),i=Math.ceil(t/(e*n));return{width:e,height:n,depth:i,maxSplats:e*n*i}}function BP(){return navigator.maxTouchPoints>0||/Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile/.test(navigator.userAgent)}function SP(){return/Android/.test(navigator.userAgent)}function bP(){return/Oculus/.test(navigator.userAgent)}function MP(t,e,n){const i=new Uint8Array(4*e);for(let s=0;s<n/2;s++){const r=s*e*4,a=(n-1-s)*e*4;i.set(t.subarray(r,r+4*e)),t.set(t.subarray(a,a+4*e),r),t.set(i,a)}return t}function TP(t,e,n){const i=document.createElement("canvas");i.width=e,i.height=n;const s=i.getContext("2d");if(!s)throw new Error("Can't get 2d context");const r=s.createImageData(e,n);return r.data.set(t),s.putImageData(r,0,0),i.toDataURL("image/png")}function QP(t){const e=new xh(t.autoStart);return e.startTime=t.startTime,e.oldTime=t.oldTime,e.elapsedTime=t.elapsedTime,e.running=t.running,e}const DP=JR("\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n");function RP(t){const e=new gi;for(const n of t)e.add(n);return e.divideScalar(t.length)}function UP(t){if(0===t.length)return new pi;const e=t[0].clone();for(let n=1;n<t.length;n++)t[n].dot(t[0])<0?(e.x-=t[n].x,e.y-=t[n].y,e.z-=t[n].z,e.w-=t[n].w):(e.x+=t[n].x,e.y+=t[n].y,e.z+=t[n].z,e.w+=t[n].w);return e.normalize()}function PP(t,e){const n=new gi(0,0,0).applyMatrix4(t),i=new gi(0,0,0).applyMatrix4(e),s=new gi(0,0,-1).applyMatrix4(t).sub(n).normalize(),r=new gi(0,0,-1).applyMatrix4(e).sub(i).normalize();return{distance:n.distanceTo(i),coincidence:s.dot(r)}}function LP(t,e){const[n,i]=[new gi,new pi],[s,r]=[new gi,new pi];return t.decompose(n,i,new gi),e.decompose(s,r,new gi),{distance:n.distanceTo(s),coorient:Math.abs(i.dot(r))}}function FP({matrix1:t,matrix2:e,maxDistance:n,minCoorient:i}){const{distance:s,coorient:r}=LP(t,e);return s<=n&&(null==i||r>=i)}function NP(t){const e=t.clone().normalize();e.w<0&&e.set(-e.x,-e.y,-e.z,-e.w);const n=2*Math.acos(e.w),i=Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z),s=i<1e-6?new gi(1,0,0):new gi(e.x,e.y,e.z).divideScalar(i),r=Math.abs(s.x)+Math.abs(s.y)+Math.abs(s.z);let a=s.x/r,o=s.y/r;if(s.z<0){const t=a;a=(1-Math.abs(o))*(a>=0?1:-1),o=(1-Math.abs(t))*(o>=0?1:-1)}const l=.5*a+.5,c=.5*o+.5,A=Math.round(255*l),h=Math.round(255*c);return Math.round(n*(255/Math.PI))<<16|h<<8|A}function kP(t,e){const n=t>>>16&255;let i=2*((255&t)/255-.5),s=2*((t>>>8&255)/255-.5);const r=1-(Math.abs(i)+Math.abs(s)),a=Math.max(-r,0);i+=i>=0?-a:a,s+=s>=0?-a:a;const o=new gi(i,s,r).normalize(),l=n/255*Math.PI*.5,c=Math.sin(l),A=Math.cos(l);return e.set(o.x*c,o.y*c,o.z*c,A),e}function OP(t,e,n,i){return 255&Math.max(-127,Math.min(127,127*t))|(255&Math.max(-127,Math.min(127,127*e)))<<8|(255&Math.max(-127,Math.min(127,127*n)))<<16|(255&Math.max(-127,Math.min(127,127*i)))<<24}function zP(t,e){const n=[];let i=0,s=null;const r=new qD((t,r)=>{if(n.push(t),i+=t.length,r||i>=e){const t=new Uint8Array(i);let r=0;for(const e of n)t.set(e,r),r+=e.length;s=t.slice(0,e)}});let a=0;for(;null==s&&a<t.length;){const e=t.slice(a,a+1024);r.push(e,!1),a+=1024}if(null==s&&(r.push(new Uint8Array,!0),null==s))throw new Error("Failed to decompress partial gzip");return s}class GP{constructor({fileBytes:t,chunkBytes:e=65536}){this.fileBytes=t,this.chunkBytes=e,this.offset=0,this.chunks=[],this.totalBytes=0,this.gunzip=new qD((t,e)=>{this.chunks.push(t),this.totalBytes+=t.length})}read(t){for(;this.totalBytes<t&&this.offset<this.fileBytes.length;){const t=Math.min(this.offset+this.chunkBytes,this.fileBytes.length);this.gunzip.push(this.fileBytes.subarray(this.offset,t),!1),this.offset=t}if(this.totalBytes<t&&this.offset>=this.fileBytes.length&&this.gunzip.push(new Uint8Array(0),!0),this.totalBytes<t)throw new Error(`Unexpected EOF: needed ${t}, got ${this.totalBytes}`);const e=new Uint8Array(this.totalBytes);let n=0;for(const t of this.chunks)e.set(t,n),n+=t.length;const i=e.subarray(0,t);return this.chunks=[e.subarray(t)],this.totalBytes-=t,i}}const HP=Object.freeze(Object.defineProperty({__proto__:null,DataCache:class{constructor({asyncFetch:t,maxItems:e=5}){this.asyncFetch=t,this.maxItems=e,this.items=[]}async getFetch(t){const e=this.items.findIndex(e=>e.key===t);if(e>=0){const t=this.items.splice(e,1)[0];return this.items.push(t),t.data}const n=await this.asyncFetch(t);for(this.items.push({key:t,data:n});this.items.length>this.maxItems;)this.items.shift();return n}},FreeList:EP,GunzipReader:GP,IDENT_VERTEX_SHADER:DP,Sint8ToFloat:IP,Uint8ToFloat:yP,averagePositions:RP,averageQuaternions:UP,cloneClock:QP,coinciDist:PP,computeMaxSplats:function(t){const e=aR,n=Math.max(lR,Math.min(oR,Math.ceil(t/e)));return e*n*Math.ceil(t/(e*n))},coorientDist:LP,decodeQuatEulerXyz888:function(t,e){const n=(t>>>8&255)/255,i=(t>>>16&255)/255,s=(255&t)/255*(2*Math.PI)-Math.PI,r=n*(2*Math.PI)-Math.PI,a=i*(2*Math.PI)-Math.PI,o=Math.cos(.5*s),l=Math.sin(.5*s),c=Math.cos(.5*r),A=Math.sin(.5*r),h=Math.cos(.5*a),u=Math.sin(.5*a);return e.w=o*c*h+l*A*u,e.x=l*c*h-o*A*u,e.y=o*A*h+l*c*u,e.z=o*c*u-l*A*h,e.normalize(),e},decodeQuatOctXy88R8:kP,decodeQuatXyz888:function(t,e){const n=t<<24>>24,i=t<<16>>24,s=t<<8>>24;e.set(n/127,i/127,s/127,0);const r=e.x*e.x+e.y*e.y+e.z*e.z;return e.w=Math.sqrt(Math.max(0,1-r)),e},decompressPartialGzip:zP,encodeQuatEulerXyz888:function(t){const e=t.clone().normalize(),n=2*(e.w*e.x+e.y*e.z),i=1-2*(e.x*e.x+e.y*e.y),s=Math.atan2(n,i),r=2*(e.w*e.y-e.z*e.x),a=Math.abs(r)>=1?Math.sign(r)*(Math.PI/2):Math.asin(r),o=2*(e.w*e.z+e.x*e.y),l=1-2*(e.y*e.y+e.z*e.z),c=Math.atan2(o,l),A=(s+Math.PI)/(2*Math.PI),h=(a+Math.PI)/(2*Math.PI),u=(c+Math.PI)/(2*Math.PI),d=Math.round(255*A),p=Math.round(255*h);return Math.round(255*u)<<16|p<<8|d},encodeQuatOctXy88R8:NP,encodeQuatXyz888:function(t){const e=t.w<0;return 255&mP(e?-t.x:t.x)|(255&mP(e?-t.y:t.y))<<8|(255&mP(e?-t.z:t.z))<<16},encodeSh1Rgb:function(t,e,n,i){const s=(null==i?void 0:i.sh1Min)??-1,r=(null==i?void 0:i.sh1Max)??1,a=.5*(s+r),o=126/(r-s),l=2*e;for(let e=0;e<9;++e){const i=(n[e]-a)*o,s=127&Math.round(Math.max(-63,Math.min(63,i))),r=7*e,c=r+7,A=Math.floor(r/32),h=r-32*A,u=s<<h&4294967295;if(t[l+A]|=u,c>32*A+32){const e=s>>>32-h&4294967295;t[l+A+1]|=e}}},encodeSh2Rgb:function(t,e,n,i){const s=(null==i?void 0:i.sh2Min)??-1,r=(null==i?void 0:i.sh2Max)??1,a=.5*(s+r),o=2/(r-s);t[4*e+0]=OP((n[0]-a)*o,(n[1]-a)*o,(n[2]-a)*o,(n[3]-a)*o),t[4*e+1]=OP((n[4]-a)*o,(n[5]-a)*o,(n[6]-a)*o,(n[7]-a)*o),t[4*e+2]=OP((n[8]-a)*o,(n[9]-a)*o,(n[10]-a)*o,(n[11]-a)*o),t[4*e+3]=OP((n[12]-a)*o,(n[13]-a)*o,(n[14]-a)*o,0)},encodeSh3Rgb:function(t,e,n,i){const s=(null==i?void 0:i.sh3Min)??-1,r=(null==i?void 0:i.sh3Max)??1,a=.5*(s+r),o=62/(r-s),l=4*e;for(let e=0;e<21;++e){const i=(n[e]-a)*o,s=63&Math.round(Math.max(-31,Math.min(31,i))),r=6*e,c=r+6,A=Math.floor(r/32),h=r-32*A,u=s<<h&4294967295;if(t[l+A]|=u,c>32*A+32){const e=s>>>32-h&4294967295;t[l+A+1]|=e}}},epsilonSign:function(t,e=.001){return Math.abs(t)<e?0:Math.sign(t)},flipPixels:MP,floatBitsToUint:function(t){return uP[0]=t,dP[0]},floatToSint8:mP,floatToUint8:fP,fromHalf:gP,getArrayBuffers:CP,getTextureSize:_P,isAndroid:SP,isMobile:BP,isOculus:bP,mapFilterObject:function(t,e){const n=Object.entries(t).map(([t,n])=>[t,e(n,t)]).filter(([t,e])=>void 0!==e);return Object.fromEntries(n)},mapObject:function(t,e){const n=Object.entries(t).map(([t,n])=>[t,e(n,t)]);return Object.fromEntries(n)},newArray:function(t,e){return new Array(t).fill(null).map((t,n)=>e(n))},omitUndefined:function(t){return Object.fromEntries(Object.entries(t).filter(([t,e])=>void 0!==e))},pixelsToPngUrl:TP,setPackedSplat:vP,setPackedSplatCenter:function(t,e,n,i,s){const r=pP(n),a=pP(i),o=pP(s),l=4*e;t[l+1]=r|a<<16,t[l+2]=o|4294901760&t[l+2]},setPackedSplatOpacity:function(t,e,n){const i=fP(n),s=4*e;t[s]=16777215&t[s]|i<<24},setPackedSplatQuat:function(t,e,n,i,s,r){const a=NP(new pi(n,i,s,r)),o=255&a,l=a>>>8&255,c=a>>>16&255,A=4*e;t[A+2]=65535&t[A+2]|o<<16|l<<24,t[A+3]=16777215&t[A+3]|c<<24},setPackedSplatRgb:function(t,e,n,i,s,r){const a=(null==r?void 0:r.rgbMin)??0,o=((null==r?void 0:r.rgbMax)??1)-a,l=fP((n-a)/o),c=fP((i-a)/o),A=fP((s-a)/o),h=4*e;t[h]=l|c<<8|A<<16|4278190080&t[h]},setPackedSplatRgba:function(t,e,n,i,s,r,a){const o=(null==a?void 0:a.rgbMin)??0,l=((null==a?void 0:a.rgbMax)??1)-o,c=fP((n-o)/l),A=fP((i-o)/l),h=fP((s-o)/l),u=fP(r);t[4*e]=c|A<<8|h<<16|u<<24},setPackedSplatScales:function(t,e,n,i,s,r){const a=(null==r?void 0:r.lnScaleMin)??eR,o=254/(((null==r?void 0:r.lnScaleMax)??nR)-a),l=n<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(n)-a)*o)+1)),c=i<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(i)-a)*o)+1)),A=s<rR?0:Math.min(255,Math.max(1,Math.round((Math.log(s)-a)*o)+1)),h=4*e;t[h+3]=l|c<<8|A<<16|4278190080&t[h+3]},toHalf:pP,uintBitsToFloat:function(t){return dP[0]=t,uP[0]},unpackSplat:wP,withinCoinciDist:function({matrix1:t,matrix2:e,maxDistance:n,minCoincidence:i}){const{distance:s,coincidence:r}=PP(t,e);return s<=n&&(null==i||r>=i)},withinCoorientDist:FP,withinDist:function({matrix1:t,matrix2:e,maxDistance:n}){const i=new gi(0,0,0).applyMatrix4(t),s=new gi(0,0,0).applyMatrix4(e);return i.distanceTo(s)<=n}},Symbol.toStringTag,{value:"Module"}));class VP{constructor({graph:t,inputs:e,outputs:n,template:i}){this.graph=t,this.template=i,this.inputs=e??{},this.outputs=n??{};const s=new zR({indent:this.template.indent});for(const t in this.outputs)this.outputs[t]&&s.declares.add(this.outputs[t]);const r=t.compile({inputs:this.inputs,outputs:this.outputs,compile:s});this.shader=i.generate({globals:s.globals,statements:r}),this.uniforms=s.uniforms,this.updaters=s.updaters}prepareMaterial(){return function(t){let e=qP.get(t);return e||(e=new Jc({glslVersion:jn,vertexShader:DP,fragmentShader:t.shader,uniforms:t.uniforms}),qP.set(t,e),e)}(this)}update(){for(const t of this.updaters)t()}}class YP{constructor(t){const e=t.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m),n=t.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);if(!e||!n)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=t.substring(0,e.index),this.between=t.substring(e.index+e[0].length,n.index),this.after=t.substring(n.index+n[0].length),this.indent=n[1]}generate({globals:t,statements:e}){return this.before+Array.from(t).join("\n\n")+this.between+e.map(t=>this.indent+t).join("\n")+this.after}}const qP=new Map;function WP(t,e,n="add"){const i=()=>{throw new Error(`Invalid ${n} types: ${t}, ${e}`)};if(t===e)return t;if("int"===t){if(pR(e))return e;i()}if("int"===e){if(pR(t))return t;i()}if("uint"===t){if(gR(e))return e;i()}if("uint"===e){if(gR(t))return t;i()}if("float"===t){if(yR(e))return e;i()}if("float"===e){if(yR(t))return t;i()}throw new Error(`Invalid ${n} types: ${t}, ${e}`)}function JP(t,e){return WP(t,e,"sub")}function jP(t,e){const n=()=>{throw new Error(`Invalid mul types: ${t}, ${e}`)};if("int"===t){if(pR(e))return e;n()}if("int"===e){if(pR(t))return t;n()}if("uint"===t){if(gR(e))return e;n()}if("uint"===e){if(gR(t))return t;n()}if("float"===t){if(yR(e))return e;n()}if("float"===e){if(yR(t))return t;n()}if(pR(t)||gR(t)||pR(e)||gR(e)){if(t===e)return t;n()}if("vec2"===t){if("vec2"===e||vR(e))return"vec2";if("mat3x2"===e)return"vec3";if("mat4x2"===e)return"vec4";n()}if("vec3"===t){if("mat2x3"===e)return"vec2";if("vec3"===e||xR(e))return"vec3";if("mat4x3"===e)return"vec4";n()}if("vec4"===t){if("mat2x4"===e)return"vec2";if("mat3x4"===e)return"vec3";if("vec4"===e||wR(e))return"vec4";n()}if("vec2"===e){if(vR(t))return"vec2";if("mat2x3"===t)return"vec3";if("mat2x4"===t)return"vec4";n()}if("vec3"===e){if("mat3x2"===t)return"vec2";if(xR(t))return"vec3";if("mat3x4"===t)return"vec4";n()}if("vec4"===e){if("mat4x2"===t)return"vec2";if("mat4x3"===t)return"vec3";if(wR(t))return"vec4";n()}if(vR(t)){if(vR(e))return"mat2";if("mat3x2"===e)return"mat3x2";if("mat4x2"===e)return"mat4x2";n()}if("mat2x3"===t){if(vR(e))return"mat2x3";if("mat3x2"===e)return"mat3";if("mat4x2"===e)return"mat4x3";n()}if("mat2x4"===t){if(vR(e))return"mat2x4";if("mat3x2"===e)return"mat3x4";if("mat4x2"===e)return"mat4";n()}if("mat3x2"===t){if("mat2x3"===e)return"mat2";if(xR(e))return"mat3x2";if("mat4x3"===e)return"mat4x2";n()}if(xR(t)){if("mat2x3"===e)return"mat2x3";if(xR(e))return"mat3";if("mat4x3"===e)return"mat4x3";n()}if("mat3x4"===t){if("mat2x3"===e)return"mat2x4";if(xR(e))return"mat3x4";if("mat4x3"===e)return"mat4";n()}if("mat4x2"===t){if("mat2x4"===e)return"mat2";if("mat3x4"===e)return"mat3x2";if(wR(e))return"mat4x2";n()}if("mat4x3"===t){if("mat2x4"===e)return"mat2x3";if("mat3x4"===e)return"mat3";if(wR(e))return"mat4x3";n()}if(wR(t)){if("mat2x4"===e)return"mat2x4";if("mat3x4"===e)return"mat3x4";if(wR(e))return"mat4";n()}throw new Error(`Invalid mul types: ${t}, ${e}`)}function XP(t,e){return WP(t,e,"div")}function KP(t,e){if(t===e)return t;if("int"===t){if(pR(e))return e}else if("int"===e){if(pR(t))return t}else if("uint"===t){if(gR(e))return e}else if("uint"===e&&gR(t))return t;throw new Error(`Invalid imod types: ${t}, ${e}`)}function ZP(t,e){if(t===e||"float"===e)return t;throw new Error(`Invalid mod types: ${t}, ${e}`)}function $P(t){return t}function tL(t){return t}function eL(t){return t}function nL(t){return t}function iL(t){return t}function sL(t){return t}function rL(t){return t}function aL(t){return t}function oL(t){return t}function lL(t){return t}function cL(t){return t}function AL(t){return t}function hL(t){return t}function uL(t){return t}function dL(t){return t}function pL(t){return t}function gL(t,e,n="min"){if(t===e)return t;if("float"===e){if(fR(t))return t}else if("int"===e){if(pR(t))return t}else if("uint"===e&&gR(t))return t;throw new Error(`Invalid ${n} types: ${t}, ${e}`)}function fL(t,e){return gL(t,e,"max")}function mL(t,e,n){if("float"===e){if(fR(t))return t}else if("int"===e){if(pR(t))return t}else if("uint"===e&&gR(t))return t;throw new Error(`Invalid clamp types: ${t}, ${e}`)}function yL(t,e,n){if(n===t)return t;if("float"===n)return t;if("bool"===n&&"float"===t)return t;if("bvec2"===n&&"vec2"===t)return t;if("bvec3"===n&&"vec3"===t)return t;if("bvec4"===n&&"vec4"===t)return t;throw new Error(`Invalid mix types: ${t}, ${e}, ${n}`)}function IL(t,e){if(t===e||"float"===e)return e;throw new Error(`Invalid step types: ${t}, ${e}`)}function CL(t,e,n){if(t===e&&(t===n||"float"===t))return n;throw new Error(`Invalid smoothstep types: ${t}, ${e}, ${n}`)}function EL(t,e="isNan"){if("float"===t)return"bool";if("vec2"===t)return"bvec2";if("vec3"===t)return"bvec3";if("vec4"===t)return"bvec4";throw new Error(`Invalid ${e} types: ${t}`)}function vL(t){return EL(t,"isInf")}const xL=(t,e)=>new RL({a:t,b:e}),wL=(t,e)=>new UL({a:t,b:e}),_L=(t,e)=>new PL({a:t,b:e}),BL=(t,e)=>new LL({a:t,b:e}),SL=(t,e)=>new FL({a:t,b:e}),bL=(t,e)=>new NL({a:t,b:e}),ML=t=>new OL({a:t}),TL=t=>new WL({a:t}),QL=(t,e)=>new iF({a:t,b:e}),DL=(t,e,n)=>new rF({a:t,b:e,t:n});class RL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"sum",outTypeFunc:WP}),this.statements=({inputs:t,outputs:e})=>[`${e.sum} = ${t.a} + ${t.b};`]}}class UL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"difference",outTypeFunc:JP}),this.statements=({inputs:t,outputs:e})=>[`${e.difference} = ${t.a} - ${t.b};`]}}class PL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"product",outTypeFunc:jP}),this.statements=({inputs:t,outputs:e})=>[`${e.product} = ${t.a} * ${t.b};`]}}class LL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"quotient",outTypeFunc:XP}),this.statements=({inputs:t,outputs:e})=>[`${e.quotient} = ${t.a} / ${t.b};`]}}class FL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"remainder",outTypeFunc:KP}),this.statements=({inputs:t,outputs:e})=>[`${e.remainder} = ${t.a} % ${t.b};`]}}class NL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"remainder",outTypeFunc:ZP}),this.statements=({inputs:t,outputs:e})=>[`${e.remainder} = mod(${t.a}, ${t.b});`]}}class kL extends GR{constructor({a:t}){const e={a:DR(t)},n=e.a;super({inTypes:e,outTypes:{fract:n,integer:n},inputs:{a:t}}),this.statements=({inputs:t,outputs:e})=>[`${e.fract} = modf(${t.a}, ${e.integer});`]}}class OL extends jR{constructor({a:t}){super({a:t,outKey:"neg",outTypeFunc:$P}),this.statements=({inputs:t,outputs:e})=>[`${e.neg} = -${t.a};`]}}class zL extends jR{constructor({a:t}){super({a:t,outKey:"abs",outTypeFunc:tL}),this.statements=({inputs:t,outputs:e})=>[`${e.abs} = abs(${t.a});`]}}class GL extends jR{constructor({a:t}){super({a:t,outKey:"sign",outTypeFunc:eL}),this.statements=({inputs:t,outputs:e})=>[`${e.sign} = sign(${t.a});`]}}class HL extends jR{constructor({a:t}){super({a:t,outKey:"floor",outTypeFunc:nL}),this.statements=({inputs:t,outputs:e})=>[`${e.floor} = floor(${t.a});`]}}class VL extends jR{constructor({a:t}){super({a:t,outKey:"ceil",outTypeFunc:iL}),this.statements=({inputs:t,outputs:e})=>[`${e.ceil} = ceil(${t.a});`]}}class YL extends jR{constructor({a:t}){super({a:t,outKey:"trunc",outTypeFunc:sL}),this.statements=({inputs:t,outputs:e})=>[`${e.trunc} = trunc(${t.a});`]}}class qL extends jR{constructor({a:t}){super({a:t,outKey:"round",outTypeFunc:rL}),this.statements=({inputs:t,outputs:e})=>[`${e.round} = round(${t.a});`]}}class WL extends jR{constructor({a:t}){super({a:t,outKey:"fract",outTypeFunc:aL}),this.statements=({inputs:t,outputs:e})=>[`${e.fract} = fract(${t.a});`]}}class JL extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"power",outTypeFunc:oL}),this.statements=({inputs:t,outputs:e})=>[`${e.power} = pow(${t.a}, ${t.b});`]}}class jL extends jR{constructor({a:t}){super({a:t,outKey:"exp",outTypeFunc:lL}),this.statements=({inputs:t,outputs:e})=>[`${e.exp} = exp(${t.a});`]}}class XL extends jR{constructor({a:t}){super({a:t,outKey:"exp2",outTypeFunc:cL}),this.statements=({inputs:t,outputs:e})=>[`${e.exp2} = exp2(${t.a});`]}}class KL extends jR{constructor({a:t}){super({a:t,outKey:"log",outTypeFunc:AL}),this.statements=({inputs:t,outputs:e})=>[`${e.log} = log(${t.a});`]}}class ZL extends jR{constructor({a:t}){super({a:t,outKey:"log2",outTypeFunc:hL}),this.statements=({inputs:t,outputs:e})=>[`${e.log2} = log2(${t.a});`]}}class $L extends jR{constructor({a:t}){super({a:t,outKey:"sqr",outTypeFunc:uL}),this.statements=({inputs:t,outputs:e})=>[`${e.sqr} = ${t.a} * ${t.a};`]}}class tF extends jR{constructor({a:t}){super({a:t,outKey:"sqrt",outTypeFunc:dL}),this.statements=({inputs:t,outputs:e})=>[`${e.sqrt} = sqrt(${t.a});`]}}class eF extends jR{constructor({a:t}){super({a:t,outKey:"inversesqrt",outTypeFunc:pL}),this.statements=({inputs:t,outputs:e})=>[`${e.inversesqrt} = inversesqrt(${t.a});`]}}class nF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"min",outTypeFunc:gL}),this.statements=({inputs:t,outputs:e})=>[`${e.min} = min(${t.a}, ${t.b});`]}}class iF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"max",outTypeFunc:fL}),this.statements=({inputs:t,outputs:e})=>[`${e.max} = max(${t.a}, ${t.b});`]}}class sF extends KR{constructor({a:t,min:e,max:n}){super({a:t,b:e,c:n,outKey:"clamp",outTypeFunc:mL}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:s}=t;return[`${e.clamp} = clamp(${n}, ${i}, ${s});`]}}}class rF extends KR{constructor({a:t,b:e,t:n}){super({a:t,b:e,c:n,outKey:"mix",outTypeFunc:yL}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:s}=t;return[`${e.mix} = mix(${n}, ${i}, ${s});`]}}}class aF extends XR{constructor({edge:t,x:e}){super({a:t,b:e,outKey:"step",outTypeFunc:IL}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i}=t;return[`${e.step} = step(${n}, ${i});`]}}}class oF extends KR{constructor({edge0:t,edge1:e,x:n}){super({a:t,b:e,c:n,outKey:"smoothstep",outTypeFunc:CL}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:s}=t;return[`${e.smoothstep} = smoothstep(${n}, ${i}, ${s});`]}}}class lF extends jR{constructor({a:t}){super({a:t,outKey:"isNan",outTypeFunc:EL}),this.statements=({inputs:t,outputs:e})=>[`${e.isNan} = isNan(${t.a});`]}}class cF extends jR{constructor({a:t}){super({a:t,outKey:"isInf",outTypeFunc:vL}),this.statements=({inputs:t,outputs:e})=>[`${e.isInf} = isInf(${t.a});`]}}const AF=(t,e)=>new IF({a:t,b:e}),hF=(t,e,n)=>new wF({cond:t,t:e,f:n});class uF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"and"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.and?[`${e.and} = ${t.a} && ${t.b};`]:[`${e.and} = ${t.a} & ${t.b};`]}}class dF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"or"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.or?[`${e.or} = ${t.a} || ${t.b};`]:[`${e.or} = ${t.a} | ${t.b};`]}}class pF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"xor"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.xor?[`${e.xor} = ${t.a} ^^ ${t.b};`]:[`${e.xor} = ${t.a} ^ ${t.b};`]}}class gF extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>t,outKey:"not"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.not?[`${e.not} = !${t.a};`]:[`${e.not} = not(${t.a});`]}}class fF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>_F(t,"lessThan"),outKey:"lessThan"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.lessThan?[`${e.lessThan} = ${t.a} < ${t.b};`]:[`${e.lessThan} = lessThan(${t.a}, ${t.b});`]}}class mF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>_F(t,"lessThanEqual"),outKey:"lessThanEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.lessThanEqual?[`${e.lessThanEqual} = ${t.a} <= ${t.b};`]:[`${e.lessThanEqual} = lessThanEqual(${t.a}, ${t.b});`]}}class yF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>_F(t,"greaterThan"),outKey:"greaterThan"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.greaterThan?[`${e.greaterThan} = ${t.a} > ${t.b};`]:[`${e.greaterThan} = greaterThan(${t.a}, ${t.b});`]}}class IF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:(t,e)=>_F(t,"greaterThanEqual"),outKey:"greaterThanEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.greaterThanEqual?[`${e.greaterThanEqual} = ${t.a} >= ${t.b};`]:[`${e.greaterThanEqual} = greaterThanEqual(${t.a}, ${t.b});`]}}class CF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:BF,outKey:"equal"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.equal?[`${e.equal} = ${t.a} == ${t.b};`]:[`${e.equal} = equal(${t.a}, ${t.b});`]}}class EF extends XR{constructor({a:t,b:e}){super({a:t,b:e,outTypeFunc:SF,outKey:"notEqual"}),this.statements=({inputs:t,outputs:e})=>"bool"===this.outTypes.notEqual?[`${e.notEqual} = ${t.a} != ${t.b};`]:[`${e.notEqual} = notEqual(${t.a}, ${t.b});`]}}class vF extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>"bool",outKey:"any"}),this.statements=({inputs:t,outputs:e})=>[`${e.any} = any(${t.a});`]}}class xF extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>"bool",outKey:"all"}),this.statements=({inputs:t,outputs:e})=>[`${e.all} = all(${t.a});`]}}class wF extends KR{constructor({cond:t,t:e,f:n}){super({a:t,b:e,c:n,outKey:"select",outTypeFunc:(t,e,n)=>e}),this.statements=({inputs:t,outputs:e})=>{const{a:n,b:i,c:s}=t;return[`${e.select} = (${n}) ? (${i}) : (${s});`]}}}function _F(t,e){if(dR(t))return"bool";if("ivec2"===t||"uvec2"===t||"vec2"===t)return"bvec2";if("ivec3"===t||"uvec3"===t||"vec3"===t)return"bvec3";if("ivec4"===t||"uvec4"===t||"vec4"===t)return"bvec4";throw new Error(`Invalid ${e} type: ${t}`)}function BF(t,e="equal"){if(dR(t))return"bool";if(uR(t))return t;if("ivec2"===t||"uvec2"===t||"vec2"===t)return"bvec2";if("ivec3"===t||"uvec3"===t||"vec3"===t)return"bvec3";if("ivec4"===t||"uvec4"===t||"vec4"===t)return"bvec4";throw new Error(`Invalid ${e} type: ${t}`)}function SF(t){return BF(t,"notEqual")}class bF extends jR{constructor({a:t}){const e=function(t){if(uR(t))return"bool";if(pR(t))return"int";if(gR(t))return"uint";throw new Error(`Invalid compXor type: ${t}`)}(DR(t));super({a:t,outTypeFunc:t=>e,outKey:"compXor"}),this.statements=({inputs:t,outputs:n})=>{if(dR(this.outTypes.compXor))return[`${n.compXor} = ${t.a};`];const i=(IR(e)?["x","y"]:CR(e)?["x","y","z"]:["x","y","z","w"]).map(e=>`${t.a}.${e}`),s=uR(e)?"^^":"^";return[`${n.compXor} = ${i.join(` ${s} `)};`]}}}const MF=t=>new zF({value:t}),TF=t=>new KF({value:t}),QF=t=>new ZF({value:t}),DF=t=>new $F({value:t}),RF=t=>new iN({value:t}),UF=t=>new sN({value:t}),PF=t=>new hN({value:t}),LF=t=>new dN({value:t});class FF extends jR{constructor({value:t,outType:e,outKey:n}){super({a:t,outTypeFunc:()=>e,outKey:n}),this.statements=({inputs:t,outputs:i})=>[`${i[n]} = ${bR(e)}(${t.a});`]}}class NF extends FF{constructor({value:t}){super({value:t,outType:"bool",outKey:"bool"})}}class kF extends FF{constructor({value:t}){super({value:t,outType:"int",outKey:"int"})}}class OF extends FF{constructor({value:t}){super({value:t,outType:"uint",outKey:"uint"})}}class zF extends FF{constructor({value:t}){super({value:t,outType:"float",outKey:"float"})}}class GF extends FF{constructor({value:t}){super({value:t,outType:"bvec2",outKey:"bvec2"})}}class HF extends FF{constructor({value:t}){super({value:t,outType:"bvec3",outKey:"bvec3"})}}class VF extends FF{constructor({value:t}){super({value:t,outType:"bvec4",outKey:"bvec4"})}}class YF extends FF{constructor({value:t}){super({value:t,outType:"ivec2",outKey:"ivec2"})}}class qF extends FF{constructor({value:t}){super({value:t,outType:"ivec3",outKey:"ivec3"})}}class WF extends FF{constructor({value:t}){super({value:t,outType:"ivec4",outKey:"ivec4"})}}class JF extends FF{constructor({value:t}){super({value:t,outType:"uvec2",outKey:"uvec2"})}}class jF extends FF{constructor({value:t}){super({value:t,outType:"uvec3",outKey:"uvec3"})}}class XF extends FF{constructor({value:t}){super({value:t,outType:"uvec4",outKey:"uvec4"})}}class KF extends FF{constructor({value:t}){super({value:t,outType:"vec2",outKey:"vec2"})}}class ZF extends FF{constructor({value:t}){super({value:t,outType:"vec3",outKey:"vec3"})}}class $F extends FF{constructor({value:t}){super({value:t,outType:"vec4",outKey:"vec4"})}}class tN extends FF{constructor({value:t}){super({value:t,outType:"mat2",outKey:"mat2"})}}class eN extends FF{constructor({value:t}){super({value:t,outType:"mat3",outKey:"mat3"})}}class nN extends FF{constructor({value:t}){super({value:t,outType:"mat4",outKey:"mat4"})}}class iN extends jR{constructor({value:t}){super({a:t,outKey:"int",outTypeFunc:()=>"int"}),this.statements=({inputs:t,outputs:e})=>[`${e.int} = floatBitsToInt(${t.a});`]}}class sN extends jR{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = floatBitsToUint(${t.a});`]}}class rN extends jR{constructor({value:t}){super({a:t,outKey:"float",outTypeFunc:()=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.float} = intBitsToFloat(${t.a});`]}}class aN extends jR{constructor({value:t}){super({a:t,outKey:"float",outTypeFunc:()=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.float} = uintBitsToFloat(${t.a});`]}}class oN extends jR{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packSnorm2x16(${t.a});`]}}class lN extends jR{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackSnorm2x16(${t.a});`]}}class cN extends jR{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packUnorm2x16(${t.a});`]}}class AN extends jR{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackUnorm2x16(${t.a});`]}}class hN extends jR{constructor({value:t}){super({a:t,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:e})=>[`${e.uint} = packHalf2x16(${t.a});`]}}class uN extends jR{constructor({value:t}){super({a:t,outKey:"vec2",outTypeFunc:()=>"vec2"}),this.statements=({inputs:t,outputs:e})=>[`${e.vec2} = unpackHalf2x16(${t.a});`]}}class dN extends jR{constructor({value:t}){super({a:t,outKey:"rgba8",outTypeFunc:()=>"vec4"}),this.statements=({inputs:t,outputs:e})=>[`uvec4 uRgba = uvec4(${t.a} & 0xffu, (${t.a} >> 8u) & 0xffu, (${t.a} >> 16u) & 0xffu, (${t.a} >> 24u) & 0xffu);`,`${e.rgba8} = vec4(uRgba) / 255.0;`]}}const pN=(t,e)=>new EN({a:t,b:e}),gN=t=>new xN({a:t}),fN=t=>new LN({vector:t}),mN=({vector:t,vectorType:e,x:n,y:i,z:s,w:r,r:a,g:o,b:l,a:c})=>new FN({vector:t,vectorType:e,x:n,y:i,z:s,w:r,r:a,g:o,b:l,a:c}),yN=(t,e)=>new _N({a:t,b:e});class IN extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>"float",outKey:"length"}),this.statements=({inputs:t,outputs:e})=>[`${e.length} = length(${t.a});`]}}class CN extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"distance",outTypeFunc:(t,e)=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.distance} = distance(${t.a}, ${t.b});`]}}class EN extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"dot",outTypeFunc:(t,e)=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.dot} = dot(${t.a}, ${t.b});`]}}class vN extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"cross",outTypeFunc:(t,e)=>"vec3"}),this.statements=({inputs:t,outputs:e})=>[`${e.cross} = cross(${t.a}, ${t.b});`]}}class xN extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:e})=>[`${e.normalize} = normalize(${t.a});`]}}class wN extends jR{constructor({a:t}){super({a:t,outTypeFunc:t=>function(t){if("vec3"===t)return"vec2";if("vec4"===t)return"vec3";throw new Error("Invalid type")}(t),outKey:"projected"}),this.statements=({inputs:t,outputs:e})=>{if("vec3"===this.inTypes.a)return[`${e.projected} = ${t.a}.xy / ${t.a}.z;`];if("vec4"===this.inTypes.a)return[`${e.projected} = ${t.a}.xyz / ${t.a}.w;`];throw new Error("Invalid type")}}}class _N extends XR{constructor({a:t,b:e}){const n=function(t){if("float"===t)return"vec2";if("vec2"===t)return"vec3";if("vec3"===t)return"vec4";throw new Error("Invalid type")}(DR(t));super({a:t,b:e,outKey:"extend",outTypeFunc:()=>n}),this.statements=({inputs:t,outputs:e})=>[`${e.extend} = ${n}(${t.a}, ${t.b});`]}}class BN extends KR{constructor({a:t,b:e,c:n}){super({a:t,b:e,c:n,outKey:"forward",outTypeFunc:(t,e,n)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.forward} = faceforward(${t.a}, ${t.b}, ${t.c});`]}}class SN extends XR{constructor({incident:t,normal:e}){super({a:t,b:e,outKey:"reflection",outTypeFunc:(t,e)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.reflection} = reflect(${t.a}, ${t.b});`]}}class bN extends KR{constructor({incident:t,normal:e,eta:n}){super({a:t,b:e,c:n,outKey:"refraction",outTypeFunc:(t,e,n)=>t}),this.statements=({inputs:t,outputs:e})=>[`${e.refraction} = refract(${t.a}, ${t.b}, ${t.c});`]}}class MN extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"product",outTypeFunc:(t,e)=>t}),this.statements=({inputs:n,outputs:i})=>[`${i.product} = matrixCompMult(${t}, ${e});`]}}function TN(t,e){if("vec2"===t){if("vec2"===e)return"mat2";if("vec3"===e)return"mat3x2";if("vec4"===e)return"mat4x2"}if("vec3"===t){if("vec2"===e)return"mat2x3";if("vec3"===e)return"mat3";if("vec4"===e)return"mat4x3"}if("vec4"===t){if("vec2"===e)return"mat2x4";if("vec3"===e)return"mat3x4";if("vec4"===e)return"mat4"}throw new Error(`Invalid outer type: ${t}, ${e}`)}class QN extends XR{constructor({a:t,b:e}){super({a:t,b:e,outKey:"outer",outTypeFunc:TN}),this.statements=({inputs:t,outputs:e})=>[`${e.outer} = outerProduct(${t.a}, ${t.b});`]}}function DN(t){if("mat2"===t)return"mat2";if("mat3"===t)return"mat3";if("mat4"===t)return"mat4";if("mat2x2"===t)return"mat2x2";if("mat2x3"===t)return"mat3x2";if("mat2x4"===t)return"mat4x2";if("mat3x2"===t)return"mat2x3";if("mat3x3"===t)return"mat3x3";if("mat3x4"===t)return"mat4x3";if("mat4x2"===t)return"mat2x4";if("mat4x3"===t)return"mat3x4";if("mat4x4"===t)return"mat4x4";throw new Error(`Invalid transpose type: ${t}`)}class RN extends jR{constructor({a:t}){super({a:t,outKey:"transpose",outTypeFunc:DN}),this.statements=({inputs:t,outputs:e})=>[`${e.transpose} = transpose(${t.a});`]}}class UN extends jR{constructor({a:t}){super({a:t,outKey:"det",outTypeFunc:t=>"float"}),this.statements=({inputs:t,outputs:e})=>[`${e.det} = determinant(${t.a});`]}}class PN extends jR{constructor({a:t}){super({a:t,outKey:"inverse",outTypeFunc:t=>t}),this.statements=({inputs:e,outputs:n})=>[`${n.inverse} = inverse(${t});`]}}class LN extends GR{constructor({vector:t}){const e={vector:DR(t)};super({inTypes:e,outTypes:function(t){switch(t){case"vec2":return{x:"float",y:"float",r:"float",g:"float"};case"vec3":return{x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"};case"vec4":return{x:"float",y:"float",z:"float",w:"float",r:"float",g:"float",b:"float",a:"float"};case"ivec2":return{x:"int",y:"int",r:"int",g:"int"};case"ivec3":return{x:"int",y:"int",z:"int",r:"int",g:"int",b:"int"};case"ivec4":return{x:"int",y:"int",z:"int",w:"int",r:"int",g:"int",b:"int",a:"int"};case"uvec2":return{x:"uint",y:"uint",r:"uint",g:"uint"};case"uvec3":return{x:"uint",y:"uint",z:"uint",r:"uint",g:"uint",b:"uint"};case"uvec4":return{x:"uint",y:"uint",z:"uint",w:"uint",r:"uint",g:"uint",b:"uint",a:"uint"};default:throw new Error(`Invalid vector type: ${t}`)}}(e.vector),inputs:{vector:t}}),this.statements=({inputs:t,outputs:e})=>{const{x:n,y:i,z:s,w:r,r:a,g:o,b:l,a:c}=e,{vector:A}=t;return[n?`${n} = ${A}.x;`:null,i?`${i} = ${A}.y;`:null,s?`${s} = ${A}.z;`:null,r?`${r} = ${A}.w;`:null,a?`${a} = ${A}.r;`:null,o?`${o} = ${A}.g;`:null,l?`${l} = ${A}.b;`:null,c?`${c} = ${A}.a;`:null].filter(Boolean)}}}class FN extends GR{constructor({vector:t,vectorType:e,x:n,y:i,z:s,w:r,r:a,g:o,b:l,a:c}){if(!t&&!e)throw new Error("Either vector or vectorType must be provided");const A=e??DR(t),h=_R(A),u=BR(A),d={vector:A,x:h,y:h,r:h,g:h},p={vector:t,x:n,y:i,r:a,g:o};u>=3&&(Object.assign(d,{z:h,b:h}),Object.assign(p,{z:s,b:l})),u>=4&&(Object.assign(d,{w:h,a:h}),Object.assign(p,{w:r,a:c})),super({inTypes:d,outTypes:{vector:A},inputs:p}),this.statements=({inputs:t,outputs:e})=>{const{vector:n}=e,{vector:i,x:s,y:r,z:a,w:o,r:l,g:c,b:A,a:d}=t,p=[`${n}.x = ${s??l??(i?`${i}.x`:kR(h))};`,`${n}.y = ${r??c??(i?`${i}.y`:kR(h))};`];return u>=3&&p.push(`${n}.z = ${a??A??(i?`${i}.z`:kR(h))};`),u>=4&&p.push(`${n}.w = ${o??d??(i?`${i}.w`:kR(h))};`),p}}dynoOut(){return new UR(this,"vector")}}class NN extends jR{constructor({vector:t,select:e}){super({a:t,outKey:"swizzle",outTypeFunc:t=>function(t,e){let n=null;if(fR(t)?n=1===e.length?"float":2===e.length?"vec2":3===e.length?"vec3":4===e.length?"vec4":null:pR(t)?n=1===e.length?"int":2===e.length?"ivec2":3===e.length?"ivec3":4===e.length?"ivec4":null:gR(t)&&(n=1===e.length?"uint":2===e.length?"uvec2":3===e.length?"uvec3":4===e.length?"uvec4":null),null==n)throw new Error(`Invalid swizzle: ${e}`);return n}(t,e)}),this.statements=({inputs:t,outputs:n})=>[`${n.swizzle} = ${t.a}.${e};`]}}const kN=t=>new XN({value:t}),ON=t=>new KN({value:t}),zN=t=>new ZN({value:t}),GN=t=>new $N({value:t}),HN=t=>new nk({value:t}),VN=t=>new ik({value:t}),YN=(t,e,n)=>new sk({z:t,zNear:e,zFar:n}).outputs.depth;class qN extends GR{constructor({from:t,to:e,index:n}){super({inTypes:{from:"int",to:"int",index:"int"},outTypes:{index:"int"},inputs:{from:t,to:e,index:n},statements:({inputs:t,outputs:e})=>[`${e.index} = ${t.index} - ${t.from} + ${t.to};`]})}dynoOut(){return new UR(this,"index")}}class WN extends GR{constructor({state:t}){const e=DR(t);super({inTypes:{state:e},outTypes:{state:"uint"},inputs:{state:t},globals:()=>[JR("\n          uint pcg_next(uint state) {\n            return state * 747796405u + 2891336453u;\n          }\n        ")],statements:({inputs:t,outputs:n})=>{const i="uint"===e?`${t.state}`:"int"===e?`uint(${t.state})`:`floatBitsToUint(${t.state})`;return[`${n.state} = pcg_next(${i});`]}})}dynoOut(){return new UR(this,"state")}}class JN extends GR{constructor({state:t}){super({inTypes:{state:"uint"},outTypes:{hash:"uint"},inputs:{state:t},globals:()=>[JR("\n          uint pcg_hash(uint state) {\n            uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\n            return (hash >> 22u) ^ hash;\n          }\n        ")],statements:({inputs:t,outputs:e})=>[`${e.hash} = pcg_hash(${t.state});`]})}dynoOut(){return new UR(this,"hash")}}class jN extends GR{constructor({value:t}){const e=DR(t),n=SR(e);super({inTypes:{value:e},outTypes:{state:"uint"},inputs:{value:t},globals:()=>[JR("\n          uint pcg_mix(uint value) {\n            return value;\n          }\n          uint pcg_mix(uvec2 value) {\n            return value.x + 0x9e3779b9u * value.y;\n          }\n          uint pcg_mix(uvec3 value) {\n            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z;\n          }\n          uint pcg_mix(uvec4 value) {\n            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z + 0xc2b2ae35u * value.w;\n          }\n        ")],statements:({inputs:t,outputs:i})=>{const s=gR(e)?`${t.value}`:pR(e)?`${n}(${t.value})`:`floatBitsToUint(${t.value})`;return[`${n} bits = ${s};`,`${i.state} = pcg_mix(bits);`]}})}dynoOut(){return new UR(this,"state")}}class XN extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"uint"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new jN({value:t}).outputs.state;return e=new WN({state:e}).outputs.state,new JN({state:e}).outputs}})}dynoOut(){return new UR(this,"hash")}}class KN extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"uvec2"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new jN({value:t}).outputs.state;e=new WN({state:e}).outputs.state;const n=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const i=new JN({state:e}).outputs.hash;return{hash:mN({vectorType:"uvec2",x:n,y:i})}}})}dynoOut(){return new UR(this,"hash")}}class ZN extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"uvec3"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new jN({value:t}).outputs.state;e=new WN({state:e}).outputs.state;const n=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const i=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const s=new JN({state:e}).outputs.hash;return{hash:mN({vectorType:"uvec3",x:n,y:i,z:s})}}})}dynoOut(){return new UR(this,"hash")}}class $N extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"uvec4"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");let e=new jN({value:t}).outputs.state;e=new WN({state:e}).outputs.state;const n=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const i=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const s=new JN({state:e}).outputs.hash;e=new WN({state:e}).outputs.state;const r=new JN({state:e}).outputs.hash;return{hash:mN({vectorType:"uvec4",x:n,y:i,z:s,w:r})}}})}dynoOut(){return new UR(this,"hash")}}class tk extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"float"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=kN(t);return{hash:_L(MF(e),NR("float",1/2**32))}}})}dynoOut(){return new UR(this,"hash")}}class ek extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"vec2"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=ON(t);return{hash:_L(TF(e),NR("float",1/2**32))}}})}dynoOut(){return new UR(this,"hash")}}class nk extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"vec3"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=zN(t);return{hash:_L(QF(e),NR("float",1/2**32))}}})}dynoOut(){return new UR(this,"hash")}}class ik extends HR{constructor({value:t}){super({inTypes:{value:DR(t)},outTypes:{hash:"vec4"},inputs:{value:t},construct:({value:t})=>{if(!t)throw new Error("value is required");const e=GN(t);return{hash:_L(DF(e),NR("float",1/2**32))}}})}dynoOut(){return new UR(this,"hash")}}class sk extends GR{constructor({z:t,zNear:e,zFar:n}){super({inTypes:{z:"float",zNear:"float",zFar:"float"},outTypes:{depth:"float"},inputs:{z:t,zNear:e,zFar:n},statements:({inputs:t,outputs:e})=>[`float clamped = clamp(${t.z}, ${t.zNear}, ${t.zFar});`,`${e.depth} = (log2(clamped + 1.0) - log2(${t.zNear} + 1.0)) / (log2(${t.zFar} + 1.0) - log2(${t.zNear} + 1.0));`]})}dynoOut(){return new UR(this,"depth")}}const rk=(t,{scale:e,scales:n,rotate:i,translate:s})=>new ok({position:t,scale:e,scales:n,rotate:i,translate:s}).outputs.position,ak=(t,{scale:e,scales:n,rotate:i})=>new lk({dir:t,scale:e,scales:n,rotate:i}).outputs.dir;class ok extends GR{constructor({position:t,scale:e,scales:n,rotate:i,translate:s}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:t,scale:e,scales:n,rotate:i,translate:s},statements:({inputs:t,outputs:e})=>{const{position:n}=e;if(!n)return[];const{scale:i,scales:s,rotate:r,translate:a}=t;return[`${n} = ${t.position??"vec3(0.0, 0.0, 0.0)"};`,i?`${n} *= ${i};`:null,s?`${n} *= ${s};`:null,r?`${n} = quatVec(${r}, ${n});`:null,a?`${n} += ${a};`:null].filter(Boolean)}})}}class lk extends GR{constructor({dir:t,scale:e,scales:n,rotate:i}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:t,scale:e,scales:n,rotate:i},statements:({inputs:t,outputs:e})=>{const{dir:n}=e;if(!n)return[];const{scale:i,scales:s,rotate:r}=t;return[`${n} = ${t.dir??"vec3(0.0, 0.0, 0.0)"};`,i?`${n} *= ${i};`:null,s?`${n} *= ${s};`:null,r?`${n} = quatVec(${r}, ${n});`:null].filter(Boolean)}})}}class ck extends GR{constructor({quaternion:t,rotate:e}){super({inTypes:{quaternion:"vec4",rotate:"vec4"},outTypes:{quaternion:"vec4"},inputs:{quaternion:t,rotate:e},statements:({inputs:t,outputs:n})=>{const{quaternion:i}=n;return i?[`${i} = ${t.quaternion??"vec4(0.0, 0.0, 0.0, 1.0)"};`,e?`${i} = quatQuat(${t.rotate}, ${i});`:null].filter(Boolean):[]}})}}class Ak extends GR{constructor({texture:t,lod:e}){const n=DR(t);super({inTypes:{texture:n,lod:"int"},outTypes:{size:dk(n)},inputs:{texture:t,lod:e},statements:({inputs:t,outputs:e})=>[`${e.size} = textureSize(${t.texture}, ${t.lod??"0"});`]})}dynoOut(){return new UR(this,"size")}}class hk extends GR{constructor({texture:t,coord:e,bias:n}){const i=DR(t);super({inTypes:{texture:i,coord:pk(i),bias:"float"},outTypes:{sample:gk(i)},inputs:{texture:t,coord:e,bias:n},statements:({inputs:t,outputs:e})=>[`${e.sample} = texture(${t.texture}, ${t.coord}${t.bias?`, ${t.bias}`:""});`]})}dynoOut(){return new UR(this,"sample")}}class uk extends GR{constructor({texture:t,coord:e,lod:n}){const i=DR(t);super({inTypes:{texture:i,coord:dk(i),lod:"int"},outTypes:{texel:gk(i)},inputs:{texture:t,coord:e,lod:n},statements:({inputs:t,outputs:e})=>[`${e.texel} = texelFetch(${t.texture}, ${t.coord}, ${t.lod??"0"});`]})}dynoOut(){return new UR(this,"texel")}}function dk(t){switch(t){case"sampler2D":case"usampler2D":case"isampler2D":case"samplerCube":case"usamplerCube":case"isamplerCube":case"sampler2DShadow":case"samplerCubeShadow":return"ivec2";case"sampler3D":case"usampler3D":case"isampler3D":case"sampler2DArray":case"usampler2DArray":case"isampler2DArray":case"sampler2DArrayShadow":return"ivec3";default:throw new Error(`Invalid texture type: ${t}`)}}function pk(t){switch(t){case"sampler2D":case"usampler2D":case"isampler2D":return"vec2";case"sampler3D":case"usampler3D":case"isampler3D":case"samplerCube":case"usamplerCube":case"isamplerCube":case"sampler2DArray":case"usampler2DArray":case"isampler2DArray":case"sampler2DShadow":return"vec3";case"samplerCubeShadow":case"sampler2DArrayShadow":return"vec4";default:throw new Error(`Invalid texture type: ${t}`)}}function gk(t){switch(t){case"sampler2D":case"sampler2DArray":case"sampler3D":case"samplerCube":case"sampler2DShadow":return"vec4";case"usampler2D":case"usampler2DArray":case"usampler3D":case"usamplerCube":return"uvec4";case"isampler2D":case"isampler2DArray":case"isampler3D":case"isamplerCube":return"ivec4";case"samplerCubeShadow":case"sampler2DArrayShadow":return"float";default:throw new Error(`Invalid texture type: ${t}`)}}const fk=t=>new Ik({radians:t});class mk extends jR{constructor({degrees:t}){super({a:t,outTypeFunc:t=>t,outKey:"radians"}),this.statements=({inputs:t,outputs:e})=>[`${e.radians} = radians(${t.a});`]}}class yk extends jR{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"degrees"}),this.statements=({inputs:t,outputs:e})=>[`${e.degrees} = degrees(${t.a});`]}}class Ik extends jR{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"sin"}),this.statements=({inputs:t,outputs:e})=>[`${e.sin} = sin(${t.a});`]}}class Ck extends jR{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"cos"}),this.statements=({inputs:t,outputs:e})=>[`${e.cos} = cos(${t.a});`]}}class Ek extends jR{constructor({radians:t}){super({a:t,outTypeFunc:t=>t,outKey:"tan"}),this.statements=({inputs:t,outputs:e})=>[`${e.tan} = tan(${t.a});`]}}class vk extends jR{constructor({sin:t}){super({a:t,outTypeFunc:t=>t,outKey:"asin"}),this.statements=({inputs:t,outputs:e})=>[`${e.asin} = asin(${t.a});`]}}class xk extends jR{constructor({cos:t}){super({a:t,outTypeFunc:t=>t,outKey:"acos"}),this.statements=({inputs:t,outputs:e})=>[`${e.acos} = acos(${t.a});`]}}class wk extends jR{constructor({tan:t}){super({a:t,outTypeFunc:t=>t,outKey:"atan"}),this.statements=({inputs:t,outputs:e})=>[`${e.atan} = atan(${t.a});`]}}class _k extends XR{constructor({y:t,x:e}){super({a:t,b:e,outTypeFunc:(t,e)=>t,outKey:"atan2"}),this.statements=({inputs:t,outputs:e})=>[`${e.atan2} = atan2(${t.a}, ${t.b});`]}}class Bk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"sinh"}),this.statements=({inputs:t,outputs:e})=>[`${e.sinh} = sinh(${t.a});`]}}class Sk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"cosh"}),this.statements=({inputs:t,outputs:e})=>[`${e.cosh} = cosh(${t.a});`]}}class bk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"tanh"}),this.statements=({inputs:t,outputs:e})=>[`${e.tanh} = tanh(${t.a});`]}}class Mk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"asinh"}),this.statements=({inputs:t,outputs:e})=>[`${e.asinh} = asinh(${t.a});`]}}class Tk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"acosh"}),this.statements=({inputs:t,outputs:e})=>[`${e.acosh} = acosh(${t.a});`]}}class Qk extends jR{constructor({x:t}){super({a:t,outTypeFunc:t=>t,outKey:"atanh"}),this.statements=({inputs:t,outputs:e})=>[`${e.atanh} = atanh(${t.a});`]}}const Dk=Object.freeze(Object.defineProperty({__proto__:null,Abs:zL,Acos:xk,Acosh:Tk,Add:RL,All:xF,And:uF,Any:vF,Asin:vk,Asinh:Mk,Atan:wk,Atan2:_k,Atanh:Qk,BVec2:GF,BVec3:HF,BVec4:VF,BinaryOp:XR,Bool:NF,Ceil:VL,Clamp:sF,Combine:FN,CombineGsplat:dU,CompMult:MN,CompXor:bF,Compilation:zR,Cos:Ck,Cosh:Sk,Cross:vN,Degrees:yk,Determinant:UN,Distance:CN,Div:LL,Dot:EN,Dyno:GR,DynoBlock:HR,DynoBool:xU,DynoBvec2:SU,DynoBvec3:QU,DynoBvec4:PU,DynoConst:FR,DynoFloat:BU,DynoInt:_U,DynoIsampler2D:ZU,DynoIsampler2DArray:eP,DynoIsampler3D:sP,DynoIsamplerCube:oP,DynoIvec2:MU,DynoIvec3:RU,DynoIvec4:FU,DynoLiteral:PR,DynoMat2:kU,DynoMat2x2:OU,DynoMat2x3:zU,DynoMat2x4:GU,DynoMat3:HU,DynoMat3x2:VU,DynoMat3x3:YU,DynoMat3x4:qU,DynoMat4:WU,DynoMat4x2:JU,DynoMat4x3:jU,DynoMat4x4:XU,DynoOutput:UR,DynoProgram:VP,DynoProgramTemplate:YP,DynoRemapIndex:qN,DynoSampler2D:$U,DynoSampler2DArray:nP,DynoSampler2DArrayShadow:AP,DynoSampler2DShadow:cP,DynoSampler3D:rP,DynoSamplerCube:lP,DynoSamplerCubeShadow:hP,DynoUint:wU,DynoUniform:vU,DynoUsampler2D:KU,DynoUsampler2DArray:tP,DynoUsampler3D:iP,DynoUsamplerCube:aP,DynoUvec2:bU,DynoUvec3:DU,DynoUvec4:LU,DynoValue:RR,DynoVec2:TU,DynoVec3:UU,DynoVec4:NU,Equal:CF,Exp:jL,Exp2:XL,ExtendVec:_N,FaceForward:BN,Float:zF,FloatBitsToInt:iN,FloatBitsToUint:sN,Floor:HL,Fract:WL,GreaterThan:yF,GreaterThanEqual:IF,Gsplat:ZR,GsplatNormal:gU,Hash:XN,Hash2:KN,Hash3:ZN,Hash4:$N,HashFloat:tk,HashVec2:ek,HashVec3:nk,HashVec4:ik,IMod:FL,IVec2:YF,IVec3:qF,IVec4:WF,Int:kF,IntBitsToFloat:rN,Inverse:PN,InverseSqrt:eF,IsInf:cF,IsNan:lF,Length:IN,LessThan:fF,LessThanEqual:mF,Log:KL,Log2:ZL,Mat2:tN,Mat3:eN,Mat4:nN,Max:iF,Min:nF,Mix:rF,Mod:NL,Modf:kL,Mul:PL,Neg:OL,Normalize:xN,NormalizedDepth:sk,Not:gF,NotEqual:EF,NumPackedSplats:lU,Or:dF,Outer:QN,OutputPackedSplat:yU,OutputRgba8:IU,PackHalf2x16:hN,PackSnorm2x16:oN,PackUnorm2x16:cN,PcgHash:JN,PcgMix:jN,PcgNext:WN,Pow:JL,ProjectH:wN,Radians:mk,ReadPackedSplat:AU,ReadPackedSplatRange:hU,ReflectVec:SN,RefractVec:bN,Round:qL,Select:wF,Sign:GL,SimpleCast:FF,Sin:Ik,Sinh:Bk,Smoothstep:oF,Split:LN,SplitGsplat:uU,Sqr:$L,Sqrt:tF,Step:aF,Sub:UL,Swizzle:NN,TPackedSplats:$R,Tan:Ek,Tanh:bk,TexelFetch:uk,Texture:hk,TextureSize:Ak,TransformDir:lk,TransformGsplat:fU,TransformPosition:ok,TransformQuaternion:ck,Transpose:RN,TrinaryOp:KR,Trunc:YL,UVec2:JF,UVec3:jF,UVec4:XF,Uint:OF,UintBitsToFloat:aN,UintToRgba8:dN,UnaryOp:jR,UnpackHalf2x16:uN,UnpackSnorm2x16:lN,UnpackUnorm2x16:AN,Vec2:KF,Vec3:ZF,Vec4:$F,Xor:pF,abs:t=>new zL({a:t}),acos:t=>new xk({cos:t}),acosh:t=>new Tk({x:t}),add:xL,all:t=>new xF({a:t}),and:(t,e)=>new uF({a:t,b:e}),any:t=>new vF({a:t}),arrayIndex:()=>{throw new Error("Not implemented")},arrayLength:()=>{throw new Error("Not implemented")},asin:t=>new vk({sin:t}),asinh:t=>new Mk({x:t}),atan:t=>new wk({tan:t}),atan2:(t,e)=>new _k({y:t,x:e}),atanh:t=>new Qk({x:t}),bool:t=>new NF({value:t}),bvec2:t=>new GF({value:t}),bvec3:t=>new HF({value:t}),bvec4:t=>new VF({value:t}),ceil:t=>new VL({a:t}),clamp:(t,e,n)=>new sF({a:t,min:e,max:n}),combine:mN,combineGsplat:iU,comment:()=>{throw new Error("Not implemented")},compMult:(t,e)=>new MN({a:t,b:e}),compXor:t=>new bF({a:t}),cos:t=>new Ck({radians:t}),cosh:t=>new Sk({x:t}),cross:(t,e)=>new vN({a:t,b:e}),defineGsplat:aU,defineGsplatNormal:pU,definePackedSplats:oU,degrees:t=>new yk({radians:t}),determinant:t=>new UN({a:t}),distance:(t,e)=>new CN({a:t,b:e}),div:BL,dot:pN,dyno:YR,dynoBlock:VR,dynoBool:(t=!1,e)=>new xU({key:e,value:t}),dynoBvec2:(t,e)=>new SU({key:e,value:t}),dynoBvec3:(t,e)=>new QU({key:e,value:t}),dynoBvec4:(t,e)=>new PU({key:e,value:t}),dynoConst:NR,dynoDeclare:qR,dynoFloat:CU,dynoFor:()=>{throw new Error("Not implemented")},dynoIf:()=>{throw new Error("Not implemented")},dynoInt:(t=0,e)=>new _U({key:e,value:t}),dynoIsampler2D:(t,e)=>new ZU({key:e,value:t}),dynoIsampler2DArray:(t,e)=>new eP({key:t,value:e}),dynoIsampler3D:(t,e)=>new sP({key:e,value:t}),dynoIsamplerCube:(t,e)=>new oP({key:e,value:t}),dynoIvec2:(t,e)=>new MU({key:e,value:t}),dynoIvec3:(t,e)=>new RU({key:e,value:t}),dynoIvec4:(t,e)=>new FU({key:e,value:t}),dynoLiteral:LR,dynoMat2:(t,e)=>new kU({key:e,value:t}),dynoMat2x2:(t,e)=>new OU({key:e,value:t}),dynoMat2x3:(t,e)=>new zU({key:e,value:t}),dynoMat2x4:(t,e)=>new GU({key:e,value:t}),dynoMat3:(t,e)=>new HU({key:e,value:t}),dynoMat3x2:(t,e)=>new VU({key:e,value:t}),dynoMat3x3:(t,e)=>new YU({key:e,value:t}),dynoMat3x4:(t,e)=>new qU({key:e,value:t}),dynoMat4:(t,e)=>new WU({key:e,value:t}),dynoMat4x2:(t,e)=>new JU({key:e,value:t}),dynoMat4x3:(t,e)=>new jU({key:e,value:t}),dynoMat4x4:(t,e)=>new XU({key:e,value:t}),dynoSampler2D:(t,e)=>new $U({key:e,value:t}),dynoSampler2DArray:(t,e)=>new nP({key:e,value:t}),dynoSampler2DArrayShadow:(t,e)=>new AP({key:e,value:t}),dynoSampler2DShadow:(t,e)=>new cP({key:e,value:t}),dynoSampler3D:(t,e)=>new rP({key:e,value:t}),dynoSamplerCube:(t,e)=>new lP({key:e,value:t}),dynoSamplerCubeShadow:(t,e)=>new hP({key:e,value:t}),dynoSwitch:()=>{throw new Error("Not implemented")},dynoUint:(t=0,e)=>new wU({key:e,value:t}),dynoUsampler2D:(t,e)=>new KU({key:e,value:t}),dynoUsampler2DArray:(t,e)=>new tP({key:e,value:t}),dynoUsampler3D:(t,e)=>new iP({key:e,value:t}),dynoUsamplerCube:(t,e)=>new aP({key:e,value:t}),dynoUvec2:(t,e)=>new bU({key:e,value:t}),dynoUvec3:(t,e)=>new DU({key:e,value:t}),dynoUvec4:(t,e)=>new LU({key:e,value:t}),dynoVec2:(t,e)=>new TU({key:e,value:t}),dynoVec3:EU,dynoVec4:(t,e)=>new NU({key:e,value:t}),equal:(t,e)=>new CF({a:t,b:e}),exp:t=>new jL({a:t}),exp2:t=>new XL({a:t}),extendVec:yN,faceforward:(t,e,n)=>new BN({a:t,b:e,c:n}),float:MF,floatBitsToInt:RF,floatBitsToUint:UF,floor:t=>new HL({a:t}),fract:TL,greaterThan:(t,e)=>new yF({a:t,b:e}),greaterThanEqual:AF,gsplatNormal:sU,hash:kN,hash2:ON,hash3:zN,hash4:GN,hashFloat:t=>new tk({value:t}),hashVec2:t=>new ek({value:t}),hashVec3:HN,hashVec4:VN,imod:SL,int:t=>new kF({value:t}),intBitsToFloat:t=>new rN({value:t}),inverse:t=>new PN({a:t}),inversesqrt:t=>new eF({a:t}),isAllFloatType:yR,isBoolType:uR,isFloatType:fR,isInf:t=>new cF({a:t}),isIntType:pR,isMat2:vR,isMat3:xR,isMat4:wR,isMatFloatType:mR,isNan:t=>new lF({a:t}),isScalarType:dR,isUintType:gR,isVector2Type:IR,isVector3Type:CR,isVector4Type:ER,isVectorType:function(t){return IR(t)||CR(t)||ER(t)},ivec2:t=>new YF({value:t}),ivec3:t=>new qF({value:t}),ivec4:t=>new WF({value:t}),length:t=>new IN({a:t}),lessThan:(t,e)=>new fF({a:t,b:e}),lessThanEqual:(t,e)=>new mF({a:t,b:e}),literalNegOne:function(t){const e=String(t);if(uR(t))return`${e}(true)`;if(yR(t))return`${e}(-1.0)`;if(pR(t))return`${e}(-1)`;if(gR(t))return`${e}(0xFFFFFFFFu)`;throw new Error(`Type not implemented: ${e}`)},literalOne:function(t){const e=String(t);if(uR(t))return`${e}(true)`;if(yR(t))return`${e}(1.0)`;if(pR(t))return`${e}(1)`;if(gR(t))return`${e}(1u)`;throw new Error(`Type not implemented: ${e}`)},literalZero:kR,log:t=>new KL({a:t}),log2:t=>new ZL({a:t}),mat2:t=>new tN({value:t}),mat3:t=>new eN({value:t}),mat4:t=>new nN({value:t}),max:QL,min:(t,e)=>new nF({a:t,b:e}),mix:DL,mod:bL,modf:t=>new kL({a:t}).outputs,mul:_L,neg:ML,normalize:gN,normalizedDepth:YN,not:t=>new gF({a:t}),notEqual:(t,e)=>new EF({a:t,b:e}),numPackedSplats:t=>new lU({packedSplats:t}),numberAsFloat:QR,numberAsInt:MR,numberAsUint:TR,or:(t,e)=>new dF({a:t,b:e}),outer:(t,e)=>new QN({a:t,b:e}),outputPackedSplat:mU,outputRgba8:t=>new IU({rgba8:t}),packHalf2x16:PF,packSnorm2x16:t=>new oN({value:t}),packUnorm2x16:t=>new cN({value:t}),pcgHash:t=>new JN({state:t}),pcgMix:t=>new jN({value:t}),pcgNext:t=>new WN({state:t}),pow:(t,e)=>new JL({a:t,b:e}),projectH:t=>new wN({a:t}),radians:t=>new mk({degrees:t}),readPackedSplat:tU,readPackedSplatRange:eU,reflectVec:(t,e)=>new SN({incident:t,normal:e}),refractVec:(t,e,n)=>new bN({incident:t,normal:e,eta:n}),remapIndex:(t,e,n)=>new qN({index:t,from:e,to:n}),round:t=>new qL({a:t}),sameSizeIvec:function(t){if(dR(t))return"int";if(IR(t))return"ivec2";if(CR(t))return"ivec3";if(ER(t))return"ivec4";throw new Error(`Invalid vector type: ${t}`)},sameSizeUvec:SR,sameSizeVec:function(t){if(dR(t))return"float";if(IR(t))return"vec2";if(CR(t))return"vec3";if(ER(t))return"vec4";throw new Error(`Invalid vector type: ${t}`)},select:hF,sign:t=>new GL({a:t}),sin:fk,sinh:t=>new Bk({x:t}),smoothstep:(t,e,n)=>new oF({edge0:t,edge1:e,x:n}),split:fN,splitGsplat:nU,sqr:t=>new $L({a:t}),sqrt:t=>new tF({a:t}),step:(t,e)=>new aF({edge:t,x:e}),sub:wL,swizzle:(t,e)=>new NN({vector:t,select:e}),tan:t=>new Ek({radians:t}),tanh:t=>new bk({x:t}),texelFetch:(t,e,n)=>new uk({texture:t,coord:e,lod:n}),texture:(t,e,n)=>new hk({texture:t,coord:e,bias:n}),textureSize:(t,e)=>new Ak({texture:t,lod:e}),transformDir:ak,transformGsplat:rU,transformPos:rk,transformQuat:(t,{rotate:e})=>new ck({quaternion:t,rotate:e}).outputs.quaternion,transpose:t=>new RN({a:t}),trunc:t=>new YL({a:t}),typeLiteral:bR,uint:t=>new OF({value:t}),uintBitsToFloat:t=>new aN({value:t}),uintToRgba8:LF,uniform:(t,e,n)=>new vU({key:t,type:e,value:n}),unindent:JR,unindentLines:WR,unpackHalf2x16:t=>new uN({value:t}),unpackSnorm2x16:t=>new lN({value:t}),unpackUnorm2x16:t=>new AN({value:t}),uvec2:t=>new JF({value:t}),uvec3:t=>new jF({value:t}),uvec4:t=>new XF({value:t}),valType:DR,vec2:TF,vec3:QF,vec4:DF,vectorDim:BR,vectorElementType:_R,xor:(t,e)=>new pF({a:t,b:e})},Symbol.toStringTag,{value:"Module"})),Rk=class t{constructor({renderer:t}={}){this.renderer=t,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(t,e){const n=Math.ceil(Math.max(1,t)/aR)*aR*4;if(e.byteLength>=n)return e;const i=new ArrayBuffer(n);return e instanceof ArrayBuffer?i:new(0,e.constructor)(i)}ensureCapacity(t){const{width:e,height:n,depth:i,maxSplats:s}=_P(t);(!this.target||s>this.capacity)&&(this.dispose(),this.capacity=s,this.target=new Yi(e,n,i,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Dt,minFilter:Dt}),this.target.texture.format=ne,this.target.texture.type=Gt,this.target.texture.internalFormat="RGBA8",this.target.scissorTest=!0)}prepareProgramMaterial(e){let n=t.readbackProgram.get(e);if(!n){const i=VR({index:"int"},{rgba8:"vec4"},({index:t})=>(e.inputs.index=t,{rgba8:new IU({rgba8:e.outputs.rgba8})}));t.programTemplate||(t.programTemplate=new YP("precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout vec4 target;\n\n{{ GLOBALS }}\n\nvoid computeReadback(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        computeReadback(index);\n    } else {\n        target = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n}")),n=new VP({graph:i,inputs:{index:"index"},outputs:{rgba8:"target"},template:t.programTemplate}),Object.assign(n.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),t.readbackProgram.set(e,n)}const i=n.prepareMaterial();return t.fullScreenQuad.material=i,{program:n,material:i}}saveRenderState(t){return{xrEnabled:t.xr.enabled,autoClear:t.autoClear}}resetRenderState(t,e){t.setRenderTarget(null),t.xr.enabled=e.xrEnabled,t.autoClear=e.autoClear}process({count:e,material:n}){const i=this.renderer;if(!i)throw new Error("No renderer");if(!this.target)throw new Error("No target");const s=aR*oR;n.uniforms.targetBase.value=0,n.uniforms.targetCount.value=e;let r=0;for(;r<e;){const a=Math.floor(r/s),o=a*s,l=Math.min(oR,Math.ceil((e-o)/aR));n.uniforms.targetLayer.value=a,this.target.scissor.set(0,0,aR,l),i.setRenderTarget(this.target,a),i.xr.enabled=!1,i.autoClear=!1,t.fullScreenQuad.render(i),r+=aR*l}this.count=e}async read({readback:t}){const e=this.renderer;if(!e)throw new Error("No renderer");if(!this.target)throw new Error("No target");const n=Math.ceil(this.count/aR)*aR;if(t.byteLength<4*n)throw new Error(`Readback buffer too small: ${t.byteLength} < ${4*n}`);const i=new Uint8Array(t instanceof ArrayBuffer?t:t.buffer),s=aR*oR;let r=0;const a=[];for(;r<this.count;){const t=Math.floor(r/s),n=t*s,o=Math.min(oR,Math.ceil((this.count-n)/aR));e.setRenderTarget(this.target,t);const l=aR*o*4,c=i.subarray(4*n,4*n+l),A=null==e?void 0:e.readRenderTargetPixelsAsync(this.target,0,0,aR,o,c);a.push(A),r+=aR*o}return Promise.all(a).then(()=>t)}render({reader:t,count:e,renderer:n}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(e);const{program:i,material:s}=this.prepareProgramMaterial(t);i.update();const r=this.saveRenderState(this.renderer);this.process({count:e,material:s}),this.resetRenderState(this.renderer,r)}async readback({readback:t}){if(!this.renderer)throw new Error("No renderer");const e=this.saveRenderState(this.renderer),n=this.read({readback:t});return this.resetRenderState(this.renderer,e),n}async renderReadback({reader:t,count:e,renderer:n,readback:i}){if(this.renderer=n||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(e);const{program:s,material:r}=this.prepareProgramMaterial(t);s.update();const a=this.saveRenderState(this.renderer);this.process({count:e,material:r});const o=this.read({readback:i});return this.resetRenderState(this.renderer,a),o}getTexture(){var t;return null==(t=this.target)?void 0:t.texture}};Rk.programTemplate=null,Rk.readbackProgram=new Map,Rk.fullScreenQuad=new uD(new Jc({visible:!1}));let Uk=Rk;const Pk=class t{constructor(e={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new vU({key:"rgbaArray",type:Fk,globals:()=>[Nk],value:{texture:t.getEmpty(),count:0},update:e=>{var n;return e.texture=(null==(n=this.readback)?void 0:n.getTexture())??this.source??t.getEmpty(),e.count=this.count,e}}),e.array?(this.array=e.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/aR)*aR,this.count=Math.min(this.capacity,e.count??Number.POSITIVE_INFINITY)):(this.capacity=e.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(t){var e;if(!this.array||t>((null==(e=this.array)?void 0:e.length)??0)/4){this.capacity=_P(t).maxSplats;const e=new Uint8Array(4*this.capacity);this.array&&e.set(this.array),this.array=e}return this.array}getTexture(){var e;let n=null==(e=this.readback)?void 0:e.getTexture();return(this.source||this.array)&&(n=this.maybeUpdateSource()),n??t.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:t,height:e,depth:n}=this.source.image;this.capacity!==t*e*n&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:t,height:e,depth:n}=_P(this.capacity);this.source=new Vi(this.array,t,e,n),this.source.format=ne,this.source.type=Gt,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:t,count:e,renderer:n}){this.readback||(this.readback=new Uk({renderer:n})),this.readback.render({reader:t,count:e,renderer:n}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:e,base:n,count:i,renderer:s}){const{dynoSplats:r,dynoBase:a,dynoCount:o,reader:l}=t.makeDynos();return r.packedSplats=e,a.value=n,o.value=i,this.render({reader:l,count:i,renderer:s}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<4*this.count)&&(this.array=new Uint8Array(4*this.capacity)),(await this.readback.readback({readback:this.array})).subarray(0,4*this.count)}static getEmpty(){if(!t.emptySource){const e=new Uint8Array(4);t.emptySource=new Vi(e,1,1,1),t.emptySource.format=ne,t.emptySource.type=Gt,t.emptySource.internalFormat="RGBA8",t.emptySource.needsUpdate=!0}return t.emptySource}static makeDynos(){if(!t.dynos){const e=new LO,n=new _U({value:0}),i=new _U({value:0}),s=VR({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("index is undefined");t=xL(t,n);const s=eU(e,t,n,i);return{rgba8:nU(s).outputs.rgba}});t.dynos={dynoSplats:e,dynoBase:n,dynoCount:i,reader:s}}return t.dynos}};Pk.emptySource=null,Pk.dynos=null;let Lk=Pk;const Fk={type:"RgbaArray"},Nk=JR("\n  struct RgbaArray {\n    sampler2DArray texture;\n    int count;\n  };\n");var kk=(t=>(t.ALL="all",t.PLANE="plane",t.SPHERE="sphere",t.BOX="box",t.ELLIPSOID="ellipsoid",t.CYLINDER="cylinder",t.CAPSULE="capsule",t.INFINITE_CONE="infinite_cone",t))(kk||{});function Ok(t){switch(t){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${t}`)}}var zk=(t=>(t.MULTIPLY="multiply",t.SET_RGB="set_rgb",t.ADD_RGBA="add_rgba",t))(zk||{});function Gk(t){switch(t){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${t}`)}}class Hk extends Js{constructor(t={}){super();const{type:e,invert:n,opacity:i,color:s,displace:r,radius:a}=t;this.type=e??"sphere",this.invert=n??!1,this.opacity=i??1,this.color=s??new dr(1,1,1),this.displace=r??new gi(0,0,0),this.radius=a??0}}const Vk=class t extends Js{constructor(e={}){const{name:n,rgbaBlendMode:i="multiply",sdfSmooth:s=0,softEdge:r=0,invert:a=!1,sdfs:o=null}=e;super(),this.rgbaBlendMode=i,this.sdfSmooth=s,this.softEdge=r,this.invert=a,this.sdfs=o,this.ordering=t.nextOrdering++,this.name=n??`Edit ${this.ordering}`}addSdf(t){null==this.sdfs&&(this.sdfs=[]),this.sdfs.includes(t)||this.sdfs.push(t)}removeSdf(t){null!=this.sdfs&&(this.sdfs=this.sdfs.filter(e=>e!==t))}};Vk.nextOrdering=1;let Yk=Vk;class qk{constructor({maxSdfs:t,maxEdits:e}){this.maxSdfs=Math.max(16,t??0),this.numSdfs=0,this.sdfData=new Uint32Array(8*this.maxSdfs*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new vU({key:"sdfArray",type:Wk,globals:()=>[Jk],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:t=>(t.numSdfs=this.numSdfs,t.sdfTexture=this.sdfTexture,t)}),this.maxEdits=Math.max(16,e??0),this.numEdits=0,this.editData=new Uint32Array(4*this.maxEdits),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new _U({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(t,e){const n=new io(t,8,e,Ae,Wt);return n.internalFormat="RGBA32UI",n.needsUpdate=!0,n}newEdits(t,e){return new vU({key:"edits",type:"uvec4",count:e,globals:()=>[jk],value:t})}ensureCapacity({maxSdfs:t,maxEdits:e}){let n=!1;return t>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(2*this.maxSdfs,t),this.sdfData=new Uint32Array(8*this.maxSdfs*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),e>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(2*this.maxEdits,e),this.editData=new Uint32Array(4*this.maxEdits),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),n=!0),n}updateEditData(t,e){const n=this.editData[t]!==e;return this.editData[t]=e,n}updateEditFloatData(t,e){Xk[0]=e;const n=this.editFloatData[t]!==Xk[0];return n&&(this.editFloatData[t]=Xk[0]),n}encodeEdit(t,{sdfFirst:e,sdfCount:n,invert:i,rgbaBlendMode:s,softEdge:r,sdfSmooth:a}){const o=4*t;let l=!1;return l=this.updateEditData(o+0,s|(i?256:0))||l,l=this.updateEditData(o+1,e|n<<16)||l,l=this.updateEditFloatData(o+2,r)||l,l=this.updateEditFloatData(o+3,a)||l,l}updateSdfData(t,e){const n=this.sdfData[t]!==e;return this.sdfData[t]=e,n}updateSdfFloatData(t,e){Xk[0]=e;const n=this.sdfFloatData[t]!==Xk[0];return n&&(this.sdfFloatData[t]=Xk[0]),n}encodeSdf(t,{sdfType:e,invert:n,center:i,quaternion:s,scale:r,sizes:a},o){const l=32*t,c=e|(n?256:0);let A=!1;A=this.updateSdfFloatData(l+0,(null==i?void 0:i.x)??0)||A,A=this.updateSdfFloatData(l+1,(null==i?void 0:i.y)??0)||A,A=this.updateSdfFloatData(l+2,(null==i?void 0:i.z)??0)||A,A=this.updateSdfData(l+3,c)||A,A=this.updateSdfFloatData(l+4,(null==s?void 0:s.x)??0)||A,A=this.updateSdfFloatData(l+5,(null==s?void 0:s.y)??0)||A,A=this.updateSdfFloatData(l+6,(null==s?void 0:s.z)??0)||A,A=this.updateSdfFloatData(l+7,(null==s?void 0:s.w)??0)||A,A=this.updateSdfFloatData(l+8,(null==r?void 0:r.x)??0)||A,A=this.updateSdfFloatData(l+9,(null==r?void 0:r.y)??0)||A,A=this.updateSdfFloatData(l+10,(null==r?void 0:r.z)??0)||A,A=this.updateSdfData(l+11,0)||A,A=this.updateSdfFloatData(l+12,(null==a?void 0:a.x)??0)||A,A=this.updateSdfFloatData(l+13,(null==a?void 0:a.y)??0)||A,A=this.updateSdfFloatData(l+14,(null==a?void 0:a.z)??0)||A,A=this.updateSdfFloatData(l+15,(null==a?void 0:a.w)??0)||A;const h=Math.min(4,o.length);for(let t=0;t<h;++t){const e=l+16+4*t;A=this.updateSdfFloatData(e+0,o[t].x)||A,A=this.updateSdfFloatData(e+1,o[t].y)||A,A=this.updateSdfFloatData(e+2,o[t].z)||A,A=this.updateSdfFloatData(e+3,o[t].w)||A}return A}update(t){const e=t.reduce((t,{sdfs:e})=>t+e.length,0),n=this.ensureCapacity({maxEdits:t.length,maxSdfs:e}),i=[new zi,new zi],s=new gi,r=new pi,a=new gi,o=new zi;let l=0,c=n;t.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=t.length,this.numEdits=t.length,c=!0);for(const[e,{edit:n,sdfs:A}]of t.entries()){c=this.encodeEdit(e,{sdfFirst:l,sdfCount:A.length,invert:n.invert,rgbaBlendMode:Gk(n.rgbaBlendMode),softEdge:n.softEdge,sdfSmooth:n.sdfSmooth})||c;let t=!1;for(const e of A)o.set(e.scale.x,e.scale.y,e.scale.z,e.radius),e.scale.setScalar(1),e.updateMatrixWorld(),e.matrixWorld.clone().invert().decompose(s,r,a),e.scale.set(o.x,o.y,o.z),e.updateMatrixWorld(),i[0].set(e.color.r,e.color.g,e.color.b,e.opacity),i[1].set(e.displace.x,e.displace.y,e.displace.z,1),t=this.encodeSdf(l,{sdfType:Ok(e.type),invert:e.invert,center:s,quaternion:r,scale:a,sizes:o},i)||t,l+=1;this.numSdfs=l,t&&(this.sdfTexture.needsUpdate=!0),c||(c=t)}return{updated:c,dynoUpdated:n}}modify(t){return function(t,e,n,i){return new GR({inTypes:{gsplat:ZR,sdfArray:Wk,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:ZR},globals:()=>[Jk,jk],inputs:{gsplat:t,sdfArray:e,numEdits:n,rgbaDisplaceEdits:i},statements:({inputs:t,outputs:e})=>{const{sdfArray:n,numEdits:i,rgbaDisplaceEdits:s}=t,{gsplat:r}=e;return WR(`\n        ${r} = ${t.gsplat};\n        if (isGsplatActive(${r}.flags)) {\n          for (int editIndex = 0; editIndex < ${i}; ++editIndex) {\n            applyPackedRgbaDisplaceEdit(\n              ${s}[editIndex], ${n}.sdfTexture, ${n}.numSdfs,\n              ${r}.center, ${r}.rgba\n            );\n          }\n        }\n      `)}}).outputs.gsplat}(t,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const Wk={type:"SdfArray"},Jk=JR("\n  struct SdfArray {\n    int numSdfs;\n    usampler2D sdfTexture;\n  };\n\n  void unpackSdfArray(\n    usampler2D sdfTexture, int sdfIndex, out uint flags,\n    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,\n    int numValues, out vec4 values[4]\n  ) {\n    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);\n    flags = temp.w;\n    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);\n    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);\n    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));\n\n    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);\n    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n\n    for (int i = 0; i < numValues; ++i) {\n      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);\n      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));\n    }\n  }\n\n  const uint SDF_FLAG_TYPE = 0xFFu;\n  const uint SDF_FLAG_INVERT = 1u << 8u;\n\n  const uint SDF_TYPE_ALL = 0u;\n  const uint SDF_TYPE_PLANE = 1u;\n  const uint SDF_TYPE_SPHERE = 2u;\n  const uint SDF_TYPE_BOX = 3u;\n  const uint SDF_TYPE_ELLIPSOID = 4u;\n  const uint SDF_TYPE_CYLINDER = 5u;\n  const uint SDF_TYPE_CAPSULE = 6u;\n  const uint SDF_TYPE_INFINITE_CONE = 7u;\n\n  float evaluateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 outValues[4]\n  ) {\n    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;\n    float maxExp = -1.0 / 0.0;\n    for (int i = 0; i < numValues; ++i) {\n        outValues[i] = vec4(0.0);\n    }\n\n    uint flags;\n    vec3 center, scale;\n    vec4 quaternion, sizes;\n    vec4 values[4];\n\n    int sdfLast = min(sdfFirst + sdfCount, numSdfs);\n    for (int index = sdfFirst; index < sdfLast; ++index) {\n      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);\n      uint sdfType = flags & SDF_FLAG_TYPE;\n      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;\n\n      float distance;\n      switch (sdfType) {\n        case SDF_TYPE_ALL:\n          distance = -1.0 / 0.0;\n          break;\n        case SDF_TYPE_PLANE: {\n          distance = sdfPos.z;\n          break;\n        }\n        case SDF_TYPE_SPHERE: {\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_BOX: {\n          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;\n          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_ELLIPSOID: {\n          vec3 sizes = sizes.xyz;\n          float k0 = length(sdfPos / sizes);\n          float k1 = length(sdfPos / dot(sizes, sizes));\n          distance = k0 * (k0 - 1.0) / k1;\n          break;\n        }\n        case SDF_TYPE_CYLINDER: {\n          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;\n          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n          break;\n        }\n        case SDF_TYPE_CAPSULE: {\n          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);\n          distance = length(sdfPos) - sizes.w;\n          break;\n        }\n        case SDF_TYPE_INFINITE_CONE: {\n          float angle = 0.25 * PI * sizes.w;\n          vec2 c = vec2(sin(angle), cos(angle));\n          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);\n          float d = length(q - c * max(dot(q, c), 0.0));\n          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);\n          break;\n        }\n      }\n\n      if ((flags & SDF_FLAG_INVERT) != 0u) {\n        distance = -distance;\n      }\n\n      if (smoothK == 0.0) {\n        if (distance < distanceAccum) {\n          distanceAccum = distance;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] = values[i];\n          }\n        }\n      } else {\n        float scaledDistance = -distance / smoothK;\n        if (scaledDistance > maxExp) {\n          float scale = exp(maxExp - scaledDistance);\n          distanceAccum *= scale;\n          for (int i = 0; i < numValues; ++i) {\n            outValues[i] *= scale;\n          }\n          maxExp = scaledDistance;\n        }\n\n        float weight = exp(scaledDistance - maxExp);\n        distanceAccum += weight;\n        for (int i = 0; i < numValues; ++i) {\n          outValues[i] += weight * values[i];\n        }\n      }\n    }\n\n    if (smoothK == 0.0) {\n      return distanceAccum;\n    } else {\n      // Very distant SDFs may result in 0 accumulation\n      if (distanceAccum == 0.0) {\n        return 1.0 / 0.0;\n      }\n      for (int i = 0; i < numValues; ++i) {\n        outValues[i] /= distanceAccum;\n      }\n      return (-log(distanceAccum) - maxExp) * smoothK;\n    }\n  }\n\n  float modulateSdfArray(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,\n    float smoothK, int numValues, out vec4 values[4],\n    float softEdge, bool invert\n  ) {\n    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);\n    if (invert) {\n      distance = -distance;\n    }\n\n    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)\n      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);\n  }\n"),jk=JR("\n  const uint EDIT_FLAG_BLEND = 0xFFu;\n  const uint EDIT_BLEND_MULTIPLY = 0u;\n  const uint EDIT_BLEND_SET_RGB = 1u;\n  const uint EDIT_BLEND_ADD_RGBA = 2u;\n  const uint EDIT_FLAG_INVERT = 0x100u;\n\n  void decodeEdit(\n    uvec4 packedEdit, out int sdfFirst, out int sdfCount,\n    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth\n  ) {\n    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;\n    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;\n\n    sdfFirst = int(packedEdit.y & 0xFFFFu);\n    sdfCount = int(packedEdit.y >> 16u);\n\n    softEdge = uintBitsToFloat(packedEdit.z);\n    sdfSmooth = uintBitsToFloat(packedEdit.w);\n  }\n\n  void applyRgbaDisplaceEdit(\n    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,\n    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba\n  ) {\n    vec4 values[4];\n    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);\n    // On Android, moving values[0] is necessary to work around a compiler bug.\n    vec4 sdfRgba = values[0];\n    vec4 sdfDisplaceScale = values[1];\n\n    vec4 target;\n    switch (rgbaBlendMode) {\n      case EDIT_BLEND_MULTIPLY:\n        target = rgba * sdfRgba;\n        break;\n      case EDIT_BLEND_SET_RGB:\n        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);\n        break;\n      case EDIT_BLEND_ADD_RGBA:\n        target = rgba + sdfRgba;\n        break;\n      default:\n        // Debug output if blend mode not set\n        target = vec4(fract(pos), 1.0);\n    }\n    rgba = mix(rgba, target, modulate);\n    pos += sdfDisplaceScale.xyz * modulate;\n  }\n\n  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {\n    int sdfFirst, sdfCount;\n    bool invert;\n    uint rgbaBlendMode;\n    float softEdge, sdfSmooth;\n    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);\n    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);\n  }\n"),Xk=new Float32Array(1);class Kk{constructor(t){this.modifier=t,this.cache=new Map}apply(t){let e=this.cache.get(t);return e||(e=VR({index:"int"},{gsplat:ZR},({index:e})=>{const{gsplat:n}=t.apply({index:e});return this.modifier.apply({gsplat:n})}),this.cache.set(t,e)),e}}class Zk{constructor(){this.scale=new BU({value:Number.NEGATIVE_INFINITY}),this.rotate=new NU({value:new pi(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new UU({value:new gi(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(t){return rk(t,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(t){return ak(t,{rotate:this.rotate})}applyGsplat(t){return rU(t,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(t){const e=new gi,n=new pi,i=new gi;t.decompose(i,n,e);const s=(e.x+e.y+e.z)/3;let r=!1;return s!==this.scale.value&&(this.scale.value=s,r=!0),i.equals(this.translate.value)||(this.translate.value.copy(i),r=!0),n.equals(this.rotate.value)||(this.rotate.value.copy(n),r=!0),r}update(t){return t.updateMatrixWorld(),this.updateFromMatrix(t.matrixWorld)}}class $k extends Js{constructor({numSplats:t,generator:e,construct:n,update:i}){if(super(),this.numSplats=t??0,this.generator=e,this.frameUpdate=i,this.version=0,n){const t=n(this);Object.assign(this,t)}}updateVersion(){this.version+=1}set needsUpdate(t){t&&this.updateVersion()}}const tO=class t extends $k{constructor(t={}){const e={transform:new Zk,viewToWorld:new Zk,worldToView:new Zk,viewToObject:new Zk,recolor:new NU({value:new zi(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),time:new BU({value:0}),deltaTime:new BU({value:0})};if(super({update:({time:t,deltaTime:e,viewToWorld:n,globalEdits:i})=>this.update({time:t,deltaTime:e,viewToWorld:n,globalEdits:i})}),this.isInitialized=!1,this.recolor=new dr(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=t.packedSplats??new PO,this.packedSplats.splatEncoding=t.splatEncoding??{...RO},this.numSplats=this.packedSplats.numSplats,this.editable=t.editable??!0,this.onFrame=t.onFrame,this.context=e,this.objectModifier=t.objectModifier,this.worldModifier=t.worldModifier,this.updateGenerator(),t.url||t.fileBytes||t.constructSplats||t.packedSplats&&!t.packedSplats.isInitialized)this.initialized=this.asyncInitialize(t).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,t.onLoad){const e=t.onLoad(this);e instanceof Promise&&await e}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),t.onLoad){const e=t.onLoad(this);e instanceof Promise&&(this.initialized=e.then(()=>this))}}async asyncInitialize(t){const{url:e,fileBytes:n,fileType:i,fileName:s,maxSplats:r,constructSplats:a,splatEncoding:o}=t;if(e||n||a){const t={url:e,fileBytes:n,fileType:i,fileName:s,maxSplats:r,construct:a,splatEncoding:o};this.packedSplats.reinitialize(t)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await tR(),t.isStaticInitialized=!0}pushSplat(t,e,n,i,s){this.packedSplats.pushSplat(t,e,n,i,s)}forEachSplat(t){this.packedSplats.forEachSplat(t)}dispose(){this.packedSplats.dispose()}getBoundingBox(t=!0){if(!this.initialized)throw new Error("Cannot get bounding box before SplatMesh is initialized");const e=new gi(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),n=new gi(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),i=new gi,s=[-1,1];return this.packedSplats.forEachSplat((r,a,o,l,c,A)=>{if(t)e.min(a),n.max(a);else for(const t of s)for(const r of s)for(const c of s)i.set(t*o.x,r*o.y,c*o.z),i.applyQuaternion(l),i.add(a),e.min(i),n.max(i)}),new Ji(e,n)}constructGenerator(t){const{transform:e,viewToObject:n,recolor:i}=t,s=VR({index:"int"},{gsplat:ZR},({index:t})=>{if(!t)throw new Error("index is undefined");let s=tU(this.packedSplats.dyno,t);if(this.maxSh>=1){const{sh1Texture:t,sh2Texture:e,sh3Texture:i}=this.ensureShTextures();if(t){let r=function(t,e){const{x:n,y:i}=fN(e).outputs,s=_L(xL(n,i),NR("float",.5)),r=_L(wL(i,n),NR("float",.5));return xL(s,_L(t,r))};const a=n.translate,{center:o}=nU(s).outputs,l=gN(wL(o,a)),c=function(t,e,n){return YR({inTypes:{gsplat:ZR,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh1:e,viewDir:n},globals:()=>[aU,nO],statements:({inputs:t,outputs:e})=>WR(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH1(${t.gsplat}, ${t.sh1}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(s,t,l);let A=r(c,this.packedSplats.dynoSh1MinMax);if(this.maxSh>=2&&e){const t=function(t,e,n){return YR({inTypes:{gsplat:ZR,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh2:e,viewDir:n},globals:()=>[aU,iO],statements:({inputs:t,outputs:e})=>WR(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH2(${t.gsplat}, ${t.sh2}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(s,e,l);A=xL(A,r(t,this.packedSplats.dynoSh2MinMax))}if(this.maxSh>=3&&i){const t=function(t,e,n){return YR({inTypes:{gsplat:ZR,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:t,sh3:e,viewDir:n},globals:()=>[aU,sO],statements:({inputs:t,outputs:e})=>WR(`\n        if (isGsplatActive(${t.gsplat}.flags)) {\n          ${e.rgb} = evaluateSH3(${t.gsplat}, ${t.sh3}, ${t.viewDir});\n        } else {\n          ${e.rgb} = vec3(0.0);\n        }\n      `)}).outputs.rgb}(s,i,l);A=xL(A,r(t,this.packedSplats.dynoSh3MinMax))}let{rgba:h}=nU(s).outputs;h=xL(h,yN(A,NR("float",0))),s=iU({gsplat:s,rgba:h})}}if(this.splatRgba){const e=function(t,e){return new GR({inTypes:{rgba:Fk,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:t,index:e},globals:()=>[Nk],statements:({inputs:t,outputs:e})=>WR(`\n        if ((index >= 0) && (index < ${t.rgba}.count)) {\n          ${e.rgba} = texelFetch(${t.rgba}.texture, splatTexCoord(index), 0);\n        } else {\n          ${e.rgba} = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `)}).outputs.rgba}(this.splatRgba.dyno,t);s=iU({gsplat:s,rgba:e})}this.skinning&&(s=this.skinning.modify(s)),this.objectModifier&&(s=this.objectModifier.apply({gsplat:s}).gsplat),s=e.applyGsplat(s);const r=_L(i,nU(s).outputs.rgba);return s=iU({gsplat:s,rgba:r}),this.rgbaDisplaceEdits&&(s=this.rgbaDisplaceEdits.modify(s)),this.worldModifier&&(s=this.worldModifier.apply({gsplat:s}).gsplat),{gsplat:s}});this.generator=s}updateGenerator(){this.constructGenerator(this.context)}update({time:e,viewToWorld:n,deltaTime:i,globalEdits:s}){var r;this.numSplats=this.packedSplats.numSplats,this.context.time.value=e,this.context.deltaTime.value=i,t.dynoTime.value=e;const{transform:a,viewToObject:o,recolor:l}=this.context;let c=a.update(this);this.context.viewToWorld.updateFromMatrix(n)&&this.enableViewToWorld&&(c=!0);const A=n.clone().invert();this.context.worldToView.updateFromMatrix(A)&&this.enableWorldToView&&(c=!0);const h=(new Es).compose(a.translate.value,a.rotate.value,(new gi).setScalar(a.scale.value)).invert().multiply(n);o.updateFromMatrix(h)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(c=!0);const u=new zi(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);u.equals(l.value)||(l.value.copy(u),c=!0);const d=this.editable?(this.edits??[]).concat(s):[];this.editable&&!this.edits&&this.traverseVisible(t=>{t instanceof Yk&&d.push(t)}),d.sort((t,e)=>t.ordering-e.ordering);const p=d.map(t=>{if(null!=t.sdfs)return{edit:t,sdfs:t.sdfs};const e=[];return t.traverseVisible(t=>{t instanceof Hk&&e.push(t)}),{edit:t,sdfs:e}});if(p.length>0&&!this.rgbaDisplaceEdits){const t=p.length,e=p.reduce((t,e)=>t+e.sdfs.length,0);this.rgbaDisplaceEdits=new qk({maxEdits:t,maxSdfs:e}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const t=this.rgbaDisplaceEdits.update(p);c||(c=t.updated),t.dynoUpdated&&this.updateGenerator()}c&&this.updateVersion(),null==(r=this.onFrame)||r.call(this,{mesh:this,time:e,deltaTime:i})}raycast(t,e){var n,i;if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:s,far:r,ray:a}=t,o=this.matrixWorld.clone().invert(),l=(new yi).setFromMatrix4(o),c=a.origin.clone().applyMatrix4(o),A=a.direction.clone().applyMatrix3(l),h=new gi;o.decompose(new gi,new pi,h),h.x,h.y,h.z;const u=function(t,e,n,i,s,r,a,o,l,c,A,h,u){return KD.raycast_splats(t,e,n,i,s,r,a,o,l,c,!0,h,u)}(c.x,c.y,c.z,A.x,A.y,A.z,s,r,this.packedSplats.numSplats,this.packedSplats.packedArray,0,(null==(n=this.packedSplats.splatEncoding)?void 0:n.lnScaleMin)??eR,(null==(i=this.packedSplats.splatEncoding)?void 0:i.lnScaleMax)??nR);for(const t of u){const n=a.direction.clone().multiplyScalar(t).add(a.origin);e.push({distance:t,point:n,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let t=this.packedSplats.extra.sh1Texture;if(!t){let e=this.packedSplats.extra.sh1;const{width:n,height:i,depth:s,maxSplats:r}=_P(e.length/2);if(e.length<2*r){const t=new Uint32Array(2*r);t.set(e),this.packedSplats.extra.sh1=t,e=t}const a=new Vi(e,n,i,s);a.format=le,a.type=Wt,a.internalFormat="RG32UI",a.needsUpdate=!0,t=new tP({value:a,key:"sh1"}),this.packedSplats.extra.sh1Texture=t}if(!this.packedSplats.extra.sh2)return{sh1Texture:t};let e=this.packedSplats.extra.sh2Texture;if(!e){let t=this.packedSplats.extra.sh2;const{width:n,height:i,depth:s,maxSplats:r}=_P(t.length/4);if(t.length<4*r){const e=new Uint32Array(4*r);e.set(t),this.packedSplats.extra.sh2=e,t=e}const a=new Vi(t,n,i,s);a.format=Ae,a.type=Wt,a.internalFormat="RGBA32UI",a.needsUpdate=!0,e=new tP({value:a,key:"sh2"}),this.packedSplats.extra.sh2Texture=e}if(!this.packedSplats.extra.sh3)return{sh1Texture:t,sh2Texture:e};let n=this.packedSplats.extra.sh3Texture;if(!n){let t=this.packedSplats.extra.sh3;const{width:e,height:i,depth:s,maxSplats:r}=_P(t.length/4);if(t.length<4*r){const e=new Uint32Array(4*r);e.set(t),this.packedSplats.extra.sh3=e,t=e}const a=new Vi(t,e,i,s);a.format=Ae,a.type=Wt,a.internalFormat="RGBA32UI",a.needsUpdate=!0,n=new tP({value:a,key:"sh3"}),this.packedSplats.extra.sh3Texture=n}return{sh1Texture:t,sh2Texture:e,sh3Texture:n}}};tO.staticInitialized=tO.staticInitialize(),tO.isStaticInitialized=!1,tO.dynoTime=new BU({value:0});let eO=tO;const nO=JR("\n  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {\n    // Extract sint7 values packed into 2 x uint32\n    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;\n    vec3 sh1_0 = vec3(ivec3(\n      int(packed.x << 25u) >> 25,\n      int(packed.x << 18u) >> 25,\n      int(packed.x << 11u) >> 25\n    )) / 63.0;\n    vec3 sh1_1 = vec3(ivec3(\n      int(packed.x << 4u) >> 25,\n      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,\n      int(packed.y << 22u) >> 25\n    )) / 63.0;\n    vec3 sh1_2 = vec3(ivec3(\n      int(packed.y << 15u) >> 25,\n      int(packed.y << 8u) >> 25,\n      int(packed.y << 1u) >> 25\n    )) / 63.0;\n\n    return sh1_0 * (-0.4886025 * viewDir.y)\n      + sh1_1 * (0.4886025 * viewDir.z)\n      + sh1_2 * (-0.4886025 * viewDir.x);\n  }\n"),iO=JR("\n  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {\n    // Extract sint8 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);\n    vec3 sh2_0 = vec3(ivec3(\n      int(packed.x << 24u) >> 24,\n      int(packed.x << 16u) >> 24,\n      int(packed.x << 8u) >> 24\n    )) / 127.0;\n    vec3 sh2_1 = vec3(ivec3(\n      int(packed.x) >> 24,\n      int(packed.y << 24u) >> 24,\n      int(packed.y << 16u) >> 24\n    )) / 127.0;\n    vec3 sh2_2 = vec3(ivec3(\n      int(packed.y << 8u) >> 24,\n      int(packed.y) >> 24,\n      int(packed.z << 24u) >> 24\n    )) / 127.0;\n    vec3 sh2_3 = vec3(ivec3(\n      int(packed.z << 16u) >> 24,\n      int(packed.z << 8u) >> 24,\n      int(packed.z) >> 24\n    )) / 127.0;\n    vec3 sh2_4 = vec3(ivec3(\n      int(packed.w << 24u) >> 24,\n      int(packed.w << 16u) >> 24,\n      int(packed.w << 8u) >> 24\n    )) / 127.0;\n\n    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)\n      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)\n      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))\n      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)\n      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));\n  }\n"),sO=JR("\n  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {\n    // Extract sint6 values packed into 4 x uint32\n    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);\n    vec3 sh3_0 = vec3(ivec3(\n      int(packed.x << 26u) >> 26,\n      int(packed.x << 20u) >> 26,\n      int(packed.x << 14u) >> 26\n    )) / 31.0;\n    vec3 sh3_1 = vec3(ivec3(\n      int(packed.x << 8u) >> 26,\n      int(packed.x << 2u) >> 26,\n      int((packed.x >> 4u) | (packed.y << 28u)) >> 26\n    )) / 31.0;\n    vec3 sh3_2 = vec3(ivec3(\n      int(packed.y << 22u) >> 26,\n      int(packed.y << 16u) >> 26,\n      int(packed.y << 10u) >> 26\n    )) / 31.0;\n    vec3 sh3_3 = vec3(ivec3(\n      int(packed.y << 4u) >> 26,\n      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,\n      int(packed.z << 24u) >> 26\n    )) / 31.0;\n    vec3 sh3_4 = vec3(ivec3(\n      int(packed.z << 18u) >> 26,\n      int(packed.z << 12u) >> 26,\n      int(packed.z << 6u) >> 26\n    )) / 31.0;\n    vec3 sh3_5 = vec3(ivec3(\n      int(packed.z) >> 26,\n      int(packed.w << 26u) >> 26,\n      int(packed.w << 20u) >> 26\n    )) / 31.0;\n    vec3 sh3_6 = vec3(ivec3(\n      int(packed.w << 14u) >> 26,\n      int(packed.w << 8u) >> 26,\n      int(packed.w << 2u) >> 26\n    )) / 31.0;\n\n    float xx = viewDir.x * viewDir.x;\n    float yy = viewDir.y * viewDir.y;\n    float zz = viewDir.z * viewDir.z;\n    float xy = viewDir.x * viewDir.y;\n    float yz = viewDir.y * viewDir.z;\n    float zx = viewDir.z * viewDir.x;\n\n    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))\n      + sh3_1 * (2.8906114 * xy * viewDir.z) +\n      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))\n      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))\n      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))\n      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))\n      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));\n  }\n"),rO=class t{constructor({fileBytes:t}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=t instanceof ArrayBuffer?new Uint8Array(t):t}async parseHeader(){const t=new ReadableStream({start:t=>{t.enqueue(this.fileBytes.slice(0,65536)),t.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";for(;;){const{value:e,done:n}=await t.read();if(n)throw new Error("Failed to read header");this.header+=e;const i=this.header.indexOf("end_header\n");if(i>=0){this.header=this.header.slice(0,i+11);break}}const e=(new TextEncoder).encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,e),this.elements={};let n=null;this.comments=[],this.header.trim().split("\n").forEach((t,e)=>{const i=t.trim();if(0===e){if("ply"!==i)throw new Error("Invalid PLY header");return}if(0===i.length)return;const s=i.split(" ");switch(s[0]){case"format":if("binary_little_endian"===s[1])this.littleEndian=!0;else{if("binary_big_endian"!==s[1])throw new Error(`Unsupported PLY format: ${s[1]}`);this.littleEndian=!1}if("1.0"!==s[2])throw new Error(`Unsupported PLY version: ${s[2]}`);break;case"end_header":break;case"comment":this.comments.push(i.slice(8));break;case"element":{const t=s[1];n={name:t,count:Number.parseInt(s[2]),properties:{}},this.elements[t]=n;break}case"property":if(null==n)throw new Error("Property must be inside an element");"list"===s[1]?n.properties[s[4]]={isList:!0,type:s[3],countType:s[2]}:n.properties[s[2]]={isList:!1,type:s[1]}}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(t){let e=0;const n=this.data;if(null==n)throw new Error("No data to parse");for(const i in this.elements){const s=this.elements[i],{count:r,properties:a}=s,o={},l=[];for(const[t,i]of Object.entries(a))i.isList?(o[t]=[],l.push(()=>{const s=o[t];s.length=lO[i.countType](n,e,this.littleEndian),e+=AO[i.countType];for(let t=0;t<s.length;t++)s[t]=lO[i.type](n,e,this.littleEndian),e+=AO[i.type]})):(o[t]=0,l.push(()=>{o[t]=lO[i.type](n,e,this.littleEndian),e+=AO[i.type]}));const c=t(s)??(()=>{});for(let t=0;t<r;t++){for(const t of l)t();c(t,o)}}}parseSplats(e,n){if(null==this.elements.vertex)throw new Error("No vertex element found");let i=!1;const s=[];let r,a,o,l=0,c=[],A=[],h=[];function u(){const t=dO[l];c=new Array(3).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>`f_rest_${n+i*t/3}`)),A=new Array(5).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>`f_rest_${3+n+i*t/3}`)),h=new Array(7).fill(null).flatMap((e,n)=>[0,1,2].map((e,i)=>`f_rest_${8+n+i*t/3}`)),r=l>=1?new Float32Array(9):void 0,a=l>=2?new Float32Array(15):void 0,o=l>=3?new Float32Array(21):void 0}function d(t,e){if(!r)throw new Error("Missing sh1");for(const[t,n]of c.entries())r[t]=8*e[n]/255-4;if(a)for(const[t,n]of A.entries())a[t]=8*e[n]/255-4;if(o)for(const[t,n]of h.entries())o[t]=8*e[n]/255-4;null==n||n(t,r,a,o)}this.parseData(p=>{if("chunk"===p.name)return function(t){const{min_x:e,min_y:n,min_z:r,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:A,min_scale_z:h,max_scale_x:u,max_scale_y:d,max_scale_z:p}=t.properties;if(!(e&&n&&r&&a&&o&&l&&c&&A&&h&&u&&d&&p))throw new Error("Missing PLY chunk properties");return i=!0,(t,e)=>{const{min_x:n,min_y:i,min_z:r,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:A,min_scale_z:h,max_scale_x:u,max_scale_y:d,max_scale_z:p,min_r:g,min_g:f,min_b:m,max_r:y,max_g:I,max_b:C}=e;s.push({min_x:n,min_y:i,min_z:r,max_x:a,max_y:o,max_z:l,min_scale_x:c,min_scale_y:A,min_scale_z:h,max_scale_x:u,max_scale_y:d,max_scale_z:p,min_r:g,min_g:f,min_b:m,max_r:y,max_g:I,max_b:C})}}(p);if(i)return function(t){if(n&&"sh"===t.name)return l=pO(t.properties),u(),d;if("vertex"!==t.name)return null;const{packed_position:i,packed_rotation:r,packed_scale:a,packed_color:o}=t.properties;if(!(i&&r&&a&&o))throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const c=Math.sqrt(2);return(t,n)=>{const i=s[t>>>8];if(null==i)throw new Error("Missing PLY chunk");const{min_x:r,min_y:a,min_z:o,max_x:l,max_y:A,max_z:h,min_scale_x:u,min_scale_y:d,min_scale_z:p,max_scale_x:g,max_scale_y:f,max_scale_z:m,min_r:y,min_g:I,min_b:C,max_r:E,max_g:v,max_b:x}=i,{packed_position:w,packed_rotation:_,packed_scale:B,packed_color:S}=n,b=(w>>>21&2047)/2047*(l-r)+r,M=(w>>>11&1023)/1023*(A-a)+a,T=(2047&w)/2047*(h-o)+o,Q=((_>>>20&1023)/1023-.5)*c,D=((_>>>10&1023)/1023-.5)*c,R=((1023&_)/1023-.5)*c,U=Math.sqrt(Math.max(0,1-Q*Q-D*D-R*R)),P=_>>>30,L=0===P?Q:1===P?U:D,F=P<=1?D:2===P?U:R,N=P<=2?R:U,k=0===P?U:Q,O=Math.exp((B>>>21&2047)/2047*(g-u)+u),z=Math.exp((B>>>11&1023)/1023*(f-d)+d),G=Math.exp((2047&B)/2047*(m-p)+p);e(t,b,M,T,O,z,G,L,F,N,k,(255&S)/255,(S>>>24&255)/255*((E??1)-(y??0))+(y??0),(S>>>16&255)/255*((v??1)-(I??0))+(I??0),(S>>>8&255)/255*((x??1)-(C??0))+(C??0))}}(p);if("vertex"!==p.name)return null;const{x:g,y:f,z:m,scale_0:y,scale_1:I,scale_2:C,rot_0:E,rot_1:v,rot_2:x,rot_3:w,opacity:_,f_dc_0:B,f_dc_1:S,f_dc_2:b,red:M,green:T,blue:Q,alpha:D}=p.properties;if(!g||!f||!m)throw new Error("Missing PLY properties: x, y, z");const R=y&&I&&C,U=E&&v&&x&&w,P=null!=D?hO[D.type]:1,L=null!=M?hO[M.type]:1,F=null!=T?hO[T.type]:1,N=null!=Q?hO[Q.type]:1;return l=pO(p.properties),u(),(i,s)=>{const l=R?Math.exp(s.scale_0):t.defaultPointScale,u=R?Math.exp(s.scale_1):t.defaultPointScale,d=R?Math.exp(s.scale_2):t.defaultPointScale,p=U?s.rot_1:0,g=U?s.rot_2:0,f=U?s.rot_3:0,m=U?s.rot_0:1,y=null!=_?1/(1+Math.exp(-s.opacity)):null!=D?s.alpha/P:1,I=null!=B?s.f_dc_0*oO+.5:null!=M?s.red/L:1,C=null!=S?s.f_dc_1*oO+.5:null!=T?s.green/F:1,E=null!=b?s.f_dc_2*oO+.5:null!=Q?s.blue/N:1;if(e(i,s.x,s.y,s.z,l,u,d,p,g,f,m,y,I,C,E),n&&r){if(r)for(const[t,e]of c.entries())r[t]=s[e];if(a)for(const[t,e]of A.entries())a[t]=s[e];if(o)for(const[t,e]of h.entries())o[t]=s[e];n(i,r,a,o)}}})}injectRgba(t){let e=0;const n=this.data;if(null==n)throw new Error("No parsed data");if(t.length!==4*this.numSplats)throw new Error("Invalid RGBA array length");for(const i in this.elements){const s=this.elements[i],{count:r,properties:a}=s,o=[];let l=0;const c="vertex"===i;if(c)for(const t of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!a[t]||"float"!==a[t].type)throw new Error(`Can't injectRgba due to property: ${t}`);for(const[i,s]of Object.entries(a))if(s.isList)o.push(()=>{const t=lO[s.countType](n,e,this.littleEndian);e+=AO[s.countType],e+=t*AO[s.type]});else{if(c)if("f_dc_0"===i||"f_dc_1"===i||"f_dc_2"===i){const r=Number.parseInt(i.slice(5));o.push(()=>{const i=(t[l+r]/255-.5)/oO;cO[s.type](n,e,this.littleEndian,i)})}else"opacity"===i&&o.push(()=>{const i=Math.max(-100,Math.min(100,-Math.log(1/(t[l+3]/255)-1)));cO[s.type](n,e,this.littleEndian,i)});o.push(()=>{e+=AO[s.type]})}for(let t=0;t<r;t++){for(const t of o)t();c&&(l+=4)}}}};rO.defaultPointScale=.001;let aO=rO;const oO=.28209479177387814,lO={char:(t,e,n)=>t.getInt8(e),uchar:(t,e,n)=>t.getUint8(e),short:(t,e,n)=>t.getInt16(e,n),ushort:(t,e,n)=>t.getUint16(e,n),int:(t,e,n)=>t.getInt32(e,n),uint:(t,e,n)=>t.getUint32(e,n),float:(t,e,n)=>t.getFloat32(e,n),double:(t,e,n)=>t.getFloat64(e,n)},cO={char:(t,e,n,i)=>{t.setInt8(e,i)},uchar:(t,e,n,i)=>{t.setUint8(e,i)},short:(t,e,n,i)=>{t.setInt16(e,i,n)},ushort:(t,e,n,i)=>{t.setUint16(e,i,n)},int:(t,e,n,i)=>{t.setInt32(e,i,n)},uint:(t,e,n,i)=>{t.setUint32(e,i,n)},float:(t,e,n,i)=>{t.setFloat32(e,i,n)},double:(t,e,n,i)=>{t.setFloat64(e,i,n)}},AO={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},hO={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},uO={0:0,9:1,24:2,45:3},dO={0:0,1:9,2:24,3:45};function pO(t){let e=0;for(;t[`f_rest_${e}`];)e+=1;const n=uO[e];if(null==n)throw new Error(`Unsupported number of SH coefficients: ${e}`);return n}const gO='(function() {\n  "use strict";\n  let wasm;\n  const cachedTextDecoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {\n    throw Error("TextDecoder not available");\n  } };\n  if (typeof TextDecoder !== "undefined") {\n    cachedTextDecoder.decode();\n  }\n  let cachedUint8ArrayMemory0 = null;\n  function getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n      cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n  }\n  function getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n  }\n  function sort_splats(num_splats, readback, ordering) {\n    const ret = wasm.sort_splats(num_splats, readback, ordering);\n    return ret >>> 0;\n  }\n  function sort32_splats(num_splats, readback, ordering) {\n    const ret = wasm.sort32_splats(num_splats, readback, ordering);\n    return ret >>> 0;\n  }\n  async function __wbg_load(module, imports) {\n    if (typeof Response === "function" && module instanceof Response) {\n      if (typeof WebAssembly.instantiateStreaming === "function") {\n        try {\n          return await WebAssembly.instantiateStreaming(module, imports);\n        } catch (e) {\n          if (module.headers.get("Content-Type") != "application/wasm") {\n            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n", e);\n          } else {\n            throw e;\n          }\n        }\n      }\n      const bytes = await module.arrayBuffer();\n      return await WebAssembly.instantiate(bytes, imports);\n    } else {\n      const instance = await WebAssembly.instantiate(module, imports);\n      if (instance instanceof WebAssembly.Instance) {\n        return { instance, module };\n      } else {\n        return instance;\n      }\n    }\n  }\n  function __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n      const ret = arg0.buffer;\n      return ret;\n    };\n    imports.wbg.__wbg_length_3b4f022188ae8db6 = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_length_6ca527665d89694d = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_length_8cfd2c6409af88ad = function(arg0) {\n      const ret = arg0.length;\n      return ret;\n    };\n    imports.wbg.__wbg_new_9fee97a409b32b68 = function(arg0) {\n      const ret = new Uint16Array(arg0);\n      return ret;\n    };\n    imports.wbg.__wbg_new_e3b321dcfef89fc7 = function(arg0) {\n      const ret = new Uint32Array(arg0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(arg0, arg1, arg2) {\n      const ret = new Float32Array(arg0, arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(arg0, arg1, arg2) {\n      const ret = new Uint32Array(arg0, arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(arg0) {\n      const ret = new Float32Array(arg0 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_set_10bad9bee0e9c58b = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_set_d23661d19148b229 = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_set_f4f1f0daa30696fc = function(arg0, arg1, arg2) {\n      arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(arg0, arg1, arg2) {\n      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbg_subarray_769e1e0f81bb259b = function(arg0, arg1, arg2) {\n      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n      return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n      const table = wasm.__wbindgen_export_0;\n      const offset = table.grow(4);\n      table.set(0, void 0);\n      table.set(offset + 0, void 0);\n      table.set(offset + 1, null);\n      table.set(offset + 2, true);\n      table.set(offset + 3, false);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n      const ret = wasm.memory;\n      return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n      throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    return imports;\n  }\n  function __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n    wasm.__wbindgen_start();\n    return wasm;\n  }\n  async function __wbg_init(module_or_path) {\n    if (wasm !== void 0) return wasm;\n    if (typeof module_or_path !== "undefined") {\n      if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n        ({ module_or_path } = module_or_path);\n      } else {\n        console.warn("using deprecated parameters for the initialization function; pass a single object instead");\n      }\n    }\n    if (typeof module_or_path === "undefined") {\n      module_or_path = new URL("data:application/wasm;base64,AGFzbQEAAAABzAEeYAJ/fwF/YAJ/fwBgA39/fwF/YAF/AX9gA39/fwBgAX8AYAV/f39/fwBgA29/fwFvYAV/f39/fwF/YAFvAW9gA29vfwBgAW8Bf2AAAX9gBH9/f38AYAAAYAR/f39/AX9gA39vbwF/YAF/AW9gAAFvYAF9AX1gBn9/f39/fwBgDX19fX19fX19f29/fX0Bb2AGf39/f39/AX9gBX9/fH9/AGAEf3x/fwBgBX9/fX9/AGAEf31/fwBgBX9/fn9/AGAEf35/fwBgAn19AX0C8gQRA3diZx1fX3diZ19idWZmZXJfNjA5Y2MzZWVlNTFlZDE1OAAJA3diZxpfX3diZ19uZXdfOWZlZTk3YTQwOWIzMmI2OAAJA3diZxpfX3diZ19zZXRfZjRmMWYwZGFhMzA2OTZmYwAKA3diZx1fX3diZ19sZW5ndGhfOGNmZDJjNjQwOWFmODhhZAALA3diZzFfX3diZ19uZXd3aXRoYnl0ZW9mZnNldGFuZGxlbmd0aF9mMWRlYWQ0NGQxZmM3MjEyAAcDd2JnGl9fd2JnX25ld19lM2IzMjFkY2ZlZjg5ZmM3AAkDd2JnGl9fd2JnX3NldF9kMjM2NjFkMTkxNDhiMjI5AAoDd2JnHV9fd2JnX2xlbmd0aF82Y2E1Mjc2NjVkODk2OTRkAAsDd2JnMV9fd2JnX25ld3dpdGhieXRlb2Zmc2V0YW5kbGVuZ3RoX2U2YjdlNjlhY2Q0YzczNTQABwN3YmcaX193Ymdfc2V0XzEwYmFkOWJlZTBlOWM1OGIACgN3YmcdX193YmdfbGVuZ3RoXzNiNGYwMjIxODhhZThkYjYACwN3YmcfX193Ymdfc3ViYXJyYXlfNzY5ZTFlMGY4MWJiMjU5YgAHA3diZx9fX3diZ19zdWJhcnJheV8zYWFlZWM4OWJiMjU0NGYwAAcDd2JnJF9fd2JnX25ld3dpdGhsZW5ndGhfNWE1ZWZlMzEzY2ZkNTlmMQARA3diZxBfX3diaW5kZ2VuX3Rocm93AAEDd2JnEV9fd2JpbmRnZW5fbWVtb3J5ABIDd2JnH19fd2JpbmRnZW5faW5pdF9leHRlcm5yZWZfdGFibGUADgNhYAMAAQIIBQQCEwEMAAEBAgAAAQwBBAYFBQQAAQYFFAENBAAGBQQEAQQOAgECAQAIBAAVARYGCBcZGwUNAhAQBR0FAQMPAAIDAwMADAAAAQEBAAAABAECAAEAAQAAAQEDAwQJAnABLi5vAIABBQMBABEGCQF/AUGAgMAACwdiBgZtZW1vcnkCAAtzb3J0X3NwbGF0cwBNDXNvcnQzMl9zcGxhdHMATg5yYXljYXN0X3NwbGF0cwBCE19fd2JpbmRnZW5fZXhwb3J0XzABARBfX3diaW5kZ2VuX3N0YXJ0ABAJMwEAQQELLVhZV1xBZ0YuRUZETEtFRUhHST5RN086IWlfXmE7YGpKMiQrbk88IGtsVVpiYwrF3wFghCQCCX8BfiMAQRBrIggkAAJ/AkACQAJAAkACQAJAIABB9QFPBEBBACAAQc3/e08NBxogAEELaiIBQXhxIQVB7JbAACgCACIJRQ0EQR8hB0EAIAVrIQQgAEH0//8HTQRAIAVBBiABQQh2ZyIAa3ZBAXEgAEEBdGtBPmohBwsgB0ECdEHQk8AAaigCACIBRQRAQQAhAAwCC0EAIQAgBUEZIAdBAXZrQQAgB0EfRxt0IQMDQAJAIAEoAgRBeHEiBiAFSQ0AIAYgBWsiBiAETw0AIAEhAiAGIgQNAEEAIQQgASEADAQLIAEoAhQiBiAAIAYgASADQR12QQRxakEQaigCACIBRxsgACAGGyEAIANBAXQhAyABDQALDAELQeiWwAAoAgAiAkEQIABBC2pB+ANxIABBC0kbIgVBA3YiAHYiAUEDcQRAAkAgAUF/c0EBcSAAaiIGQQN0IgBB4JTAAGoiAyAAQeiUwABqKAIAIgEoAggiBEcEQCAEIAM2AgwgAyAENgIIDAELQeiWwAAgAkF+IAZ3cTYCAAsgASAAQQNyNgIEIAAgAWoiACAAKAIEQQFyNgIEIAFBCGoMBwsgBUHwlsAAKAIATQ0DAkACQCABRQRAQeyWwAAoAgAiAEUNBiAAaEECdEHQk8AAaigCACICKAIEQXhxIAVrIQQgAiEBA0ACQCACKAIQIgANACACKAIUIgANACABKAIYIQcCQAJAIAEgASgCDCIARgRAIAFBFEEQIAEoAhQiABtqKAIAIgINAUEAIQAMAgsgASgCCCICIAA2AgwgACACNgIIDAELIAFBFGogAUEQaiAAGyEDA0AgAyEGIAIiAEEUaiAAQRBqIAAoAhQiAhshAyAAQRRBECACG2ooAgAiAg0ACyAGQQA2AgALIAdFDQQgASABKAIcQQJ0QdCTwABqIgIoAgBHBEAgB0EQQRQgBygCECABRhtqIAA2AgAgAEUNBQwECyACIAA2AgAgAA0DQeyWwABB7JbAACgCAEF+IAEoAhx3cTYCAAwECyAAKAIEQXhxIAVrIgIgBCACIARJIgIbIQQgACABIAIbIQEgACECDAALAAsCQEECIAB0IgNBACADa3IgASAAdHFoIgZBA3QiAUHglMAAaiIDIAFB6JTAAGooAgAiACgCCCIERwRAIAQgAzYCDCADIAQ2AggMAQtB6JbAACACQX4gBndxNgIACyAAIAVBA3I2AgQgACAFaiIGIAEgBWsiA0EBcjYCBCAAIAFqIAM2AgBB8JbAACgCACIEBEAgBEF4cUHglMAAaiEBQfiWwAAoAgAhAgJ/QeiWwAAoAgAiBUEBIARBA3Z0IgRxRQRAQeiWwAAgBCAFcjYCACABDAELIAEoAggLIQQgASACNgIIIAQgAjYCDCACIAE2AgwgAiAENgIIC0H4lsAAIAY2AgBB8JbAACADNgIAIABBCGoMCAsgACAHNgIYIAEoAhAiAgRAIAAgAjYCECACIAA2AhgLIAEoAhQiAkUNACAAIAI2AhQgAiAANgIYCwJAAkAgBEEQTwRAIAEgBUEDcjYCBCABIAVqIgMgBEEBcjYCBCADIARqIAQ2AgBB8JbAACgCACIGRQ0BIAZBeHFB4JTAAGohAEH4lsAAKAIAIQICf0HolsAAKAIAIgVBASAGQQN2dCIGcUUEQEHolsAAIAUgBnI2AgAgAAwBCyAAKAIICyEGIAAgAjYCCCAGIAI2AgwgAiAANgIMIAIgBjYCCAwBCyABIAQgBWoiAEEDcjYCBCAAIAFqIgAgACgCBEEBcjYCBAwBC0H4lsAAIAM2AgBB8JbAACAENgIACyABQQhqDAYLIAAgAnJFBEBBACECQQIgB3QiAEEAIABrciAJcSIARQ0DIABoQQJ0QdCTwABqKAIAIQALIABFDQELA0AgACACIAAoAgRBeHEiAyAFayIGIARJIgcbIQkgACgCECIBRQRAIAAoAhQhAQsgAiAJIAMgBUkiABshAiAEIAYgBCAHGyAAGyEEIAEiAA0ACwsgAkUNACAFQfCWwAAoAgAiAE0gBCAAIAVrT3ENACACKAIYIQcCQAJAIAIgAigCDCIARgRAIAJBFEEQIAIoAhQiABtqKAIAIgENAUEAIQAMAgsgAigCCCIBIAA2AgwgACABNgIIDAELIAJBFGogAkEQaiAAGyEDA0AgAyEGIAEiAEEUaiAAQRBqIAAoAhQiARshAyAAQRRBECABG2ooAgAiAQ0ACyAGQQA2AgALIAdFDQIgAiACKAIcQQJ0QdCTwABqIgEoAgBHBEAgB0EQQRQgBygCECACRhtqIAA2AgAgAEUNAwwCCyABIAA2AgAgAA0BQeyWwABB7JbAACgCAEF+IAIoAhx3cTYCAAwCCwJAAkACQAJAAkAgBUHwlsAAKAIAIgFLBEAgBUH0lsAAKAIAIgBPBEAgBUGvgARqQYCAfHEiAkEQdkAAIQAgCEEEaiIBQQA2AgggAUEAIAJBgIB8cSAAQX9GIgIbNgIEIAFBACAAQRB0IAIbNgIAQQAgCCgCBCIBRQ0JGiAIKAIMIQZBgJfAACAIKAIIIgRBgJfAACgCAGoiADYCAEGEl8AAQYSXwAAoAgAiAiAAIAAgAkkbNgIAAkACQEH8lsAAKAIAIgIEQEHQlMAAIQADQCABIAAoAgAiAyAAKAIEIgdqRg0CIAAoAggiAA0ACwwCC0GMl8AAKAIAIgBBACAAIAFNG0UEQEGMl8AAIAE2AgALQZCXwABB/x82AgBB3JTAACAGNgIAQdSUwAAgBDYCAEHQlMAAIAE2AgBB7JTAAEHglMAANgIAQfSUwABB6JTAADYCAEHolMAAQeCUwAA2AgBB/JTAAEHwlMAANgIAQfCUwABB6JTAADYCAEGElcAAQfiUwAA2AgBB+JTAAEHwlMAANgIAQYyVwABBgJXAADYCAEGAlcAAQfiUwAA2AgBBlJXAAEGIlcAANgIAQYiVwABBgJXAADYCAEGclcAAQZCVwAA2AgBBkJXAAEGIlcAANgIAQaSVwABBmJXAADYCAEGYlcAAQZCVwAA2AgBBrJXAAEGglcAANgIAQaCVwABBmJXAADYCAEGolcAAQaCVwAA2AgBBtJXAAEGolcAANgIAQbCVwABBqJXAADYCAEG8lcAAQbCVwAA2AgBBuJXAAEGwlcAANgIAQcSVwABBuJXAADYCAEHAlcAAQbiVwAA2AgBBzJXAAEHAlcAANgIAQciVwABBwJXAADYCAEHUlcAAQciVwAA2AgBB0JXAAEHIlcAANgIAQdyVwABB0JXAADYCAEHYlcAAQdCVwAA2AgBB5JXAAEHYlcAANgIAQeCVwABB2JXAADYCAEHslcAAQeCVwAA2AgBB9JXAAEHolcAANgIAQeiVwABB4JXAADYCAEH8lcAAQfCVwAA2AgBB8JXAAEHolcAANgIAQYSWwABB+JXAADYCAEH4lcAAQfCVwAA2AgBBjJbAAEGAlsAANgIAQYCWwABB+JXAADYCAEGUlsAAQYiWwAA2AgBBiJbAAEGAlsAANgIAQZyWwABBkJbAADYCAEGQlsAAQYiWwAA2AgBBpJbAAEGYlsAANgIAQZiWwABBkJbAADYCAEGslsAAQaCWwAA2AgBBoJbAAEGYlsAANgIAQbSWwABBqJbAADYCAEGolsAAQaCWwAA2AgBBvJbAAEGwlsAANgIAQbCWwABBqJbAADYCAEHElsAAQbiWwAA2AgBBuJbAAEGwlsAANgIAQcyWwABBwJbAADYCAEHAlsAAQbiWwAA2AgBB1JbAAEHIlsAANgIAQciWwABBwJbAADYCAEHclsAAQdCWwAA2AgBB0JbAAEHIlsAANgIAQeSWwABB2JbAADYCAEHYlsAAQdCWwAA2AgBB/JbAACABQQ9qQXhxIgBBCGsiAjYCAEHglsAAQdiWwAA2AgBB9JbAACAEQShrIgMgASAAa2pBCGoiADYCACACIABBAXI2AgQgASADakEoNgIEQYiXwABBgICAATYCAAwICyACIANJIAEgAk1yDQAgACgCDCIDQQFxDQAgA0EBdiAGRg0DC0GMl8AAQYyXwAAoAgAiACABIAAgAUkbNgIAIAEgBGohA0HQlMAAIQACQAJAA0AgAyAAKAIAIgdHBEAgACgCCCIADQEMAgsLIAAoAgwiA0EBcQ0AIANBAXYgBkYNAQtB0JTAACEAA0ACQCACIAAoAgAiA08EQCACIAMgACgCBGoiB0kNAQsgACgCCCEADAELC0H8lsAAIAFBD2pBeHEiAEEIayIDNgIAQfSWwAAgBEEoayIJIAEgAGtqQQhqIgA2AgAgAyAAQQFyNgIEIAEgCWpBKDYCBEGIl8AAQYCAgAE2AgAgAiAHQSBrQXhxQQhrIgAgACACQRBqSRsiA0EbNgIEQdCUwAApAgAhCiADQRBqQdiUwAApAgA3AgAgAyAKNwIIQdyUwAAgBjYCAEHUlMAAIAQ2AgBB0JTAACABNgIAQdiUwAAgA0EIajYCACADQRxqIQADQCAAQQc2AgAgAEEEaiIAIAdJDQALIAIgA0YNByADIAMoAgRBfnE2AgQgAiADIAJrIgBBAXI2AgQgAyAANgIAIABBgAJPBEAgAiAAECIMCAsgAEH4AXFB4JTAAGohAQJ/QeiWwAAoAgAiA0EBIABBA3Z0IgBxRQRAQeiWwAAgACADcjYCACABDAELIAEoAggLIQAgASACNgIIIAAgAjYCDCACIAE2AgwgAiAANgIIDAcLIAAgATYCACAAIAAoAgQgBGo2AgQgAUEPakF4cUEIayICIAVBA3I2AgQgB0EPakF4cUEIayIEIAIgBWoiAGshBSAEQfyWwAAoAgBGDQMgBEH4lsAAKAIARg0EIAQoAgQiAUEDcUEBRgRAIAQgAUF4cSIBEB4gASAFaiEFIAEgBGoiBCgCBCEBCyAEIAFBfnE2AgQgACAFQQFyNgIEIAAgBWogBTYCACAFQYACTwRAIAAgBRAiDAYLIAVB+AFxQeCUwABqIQECf0HolsAAKAIAIgNBASAFQQN2dCIEcUUEQEHolsAAIAMgBHI2AgAgAQwBCyABKAIICyEDIAEgADYCCCADIAA2AgwgACABNgIMIAAgAzYCCAwFC0H0lsAAIAAgBWsiATYCAEH8lsAAQfyWwAAoAgAiACAFaiICNgIAIAIgAUEBcjYCBCAAIAVBA3I2AgQgAEEIagwIC0H4lsAAKAIAIQACQCABIAVrIgJBD00EQEH4lsAAQQA2AgBB8JbAAEEANgIAIAAgAUEDcjYCBCAAIAFqIgEgASgCBEEBcjYCBAwBC0HwlsAAIAI2AgBB+JbAACAAIAVqIgM2AgAgAyACQQFyNgIEIAAgAWogAjYCACAAIAVBA3I2AgQLIABBCGoMBwsgACAEIAdqNgIEQfyWwABB/JbAACgCACIAQQ9qQXhxIgFBCGsiAjYCAEH0lsAAQfSWwAAoAgAgBGoiAyAAIAFrakEIaiIBNgIAIAIgAUEBcjYCBCAAIANqQSg2AgRBiJfAAEGAgIABNgIADAMLQfyWwAAgADYCAEH0lsAAQfSWwAAoAgAgBWoiATYCACAAIAFBAXI2AgQMAQtB+JbAACAANgIAQfCWwABB8JbAACgCACAFaiIBNgIAIAAgAUEBcjYCBCAAIAFqIAE2AgALIAJBCGoMAwtBAEH0lsAAKAIAIgAgBU0NAhpB9JbAACAAIAVrIgE2AgBB/JbAAEH8lsAAKAIAIgAgBWoiAjYCACACIAFBAXI2AgQgACAFQQNyNgIEIABBCGoMAgsgACAHNgIYIAIoAhAiAQRAIAAgATYCECABIAA2AhgLIAIoAhQiAUUNACAAIAE2AhQgASAANgIYCwJAIARBEE8EQCACIAVBA3I2AgQgAiAFaiIAIARBAXI2AgQgACAEaiAENgIAIARBgAJPBEAgACAEECIMAgsgBEH4AXFB4JTAAGohAQJ/QeiWwAAoAgAiA0EBIARBA3Z0IgRxRQRAQeiWwAAgAyAEcjYCACABDAELIAEoAggLIQMgASAANgIIIAMgADYCDCAAIAE2AgwgACADNgIIDAELIAIgBCAFaiIAQQNyNgIEIAAgAmoiACAAKAIEQQFyNgIECyACQQhqCyAIQRBqJAALxgYBCH8CQAJAIAEgAEEDakF8cSICIABrIghJDQAgASAIayIGQQRJDQAgBkEDcSEHQQAhAQJAIAAgAkYiCQ0AAkAgACACayIEQXxLBEBBACECDAELQQAhAgNAIAEgACACaiIDLAAAQb9/SmogA0EBaiwAAEG/f0pqIANBAmosAABBv39KaiADQQNqLAAAQb9/SmohASACQQRqIgINAAsLIAkNACAAIAJqIQMDQCABIAMsAABBv39KaiEBIANBAWohAyAEQQFqIgQNAAsLIAAgCGohAgJAIAdFDQAgAiAGQXxxaiIALAAAQb9/SiEFIAdBAUYNACAFIAAsAAFBv39KaiEFIAdBAkYNACAFIAAsAAJBv39KaiEFCyAGQQJ2IQYgASAFaiEEA0AgAiEAIAZFDQJBwAEgBiAGQcABTxsiBUEDcSEHIAVBAnQhCEEAIQMgBkEETwRAIAAgCEHwB3FqIQkgACEBA0AgASgCACICQX9zQQd2IAJBBnZyQYGChAhxIANqIAEoAgQiAkF/c0EHdiACQQZ2ckGBgoQIcWogASgCCCICQX9zQQd2IAJBBnZyQYGChAhxaiABKAIMIgJBf3NBB3YgAkEGdnJBgYKECHFqIQMgAUEQaiIBIAlHDQALCyAGIAVrIQYgACAIaiECIANBCHZB/4H8B3EgA0H/gfwHcWpBgYAEbEEQdiAEaiEEIAdFDQALAn8gACAFQfwBcUECdGoiACgCACIBQX9zQQd2IAFBBnZyQYGChAhxIgEgB0EBRg0AGiABIAAoAgQiAUF/c0EHdiABQQZ2ckGBgoQIcWoiASAHQQJGDQAaIAAoAggiAEF/c0EHdiAAQQZ2ckGBgoQIcSABagsiAUEIdkH/gRxxIAFB/4H8B3FqQYGABGxBEHYgBGoPCyABRQRAQQAPCyABQQNxIQICQCABQQRJBEAMAQsgAUF8cSEFA0AgBCAAIANqIgEsAABBv39KaiABQQFqLAAAQb9/SmogAUECaiwAAEG/f0pqIAFBA2osAABBv39KaiEEIAUgA0EEaiIDRw0ACwsgAkUNACAAIANqIQEDQCAEIAEsAABBv39KaiEEIAFBAWohASACQQFrIgINAAsLIAQL3QUBBX8gACgCCCIDIAFJBEAgASADIgJrIgQgACgCACACa0sEQCAAIAIgBEEEQQQQJiAAKAIIIQILIAAoAgQiBiACQQJ0aiEFIARBAk8EQCAFIANBf3MgAWpBAnQQKhogASACakECdCADQQJ0ayAGakEEayEFIAIgBGpBAWshAgsgBUEANgIAIAAgAkEBajYCCAsgACgCFCIDIAFJBEAgASADIgJrIgQgACgCDCACa0sEQCAAQQxqIAIgBEEEQQQQJiAAKAIUIQILIAAoAhAiBiACQQJ0aiEFIARBAk8EQCAFIANBf3MgAWpBAnQQKhogASACakECdCADQQJ0ayAGakEEayEFIAIgBGpBAWshAgsgBUEANgIAIAAgAkEBajYCFAsgACgCOCIDIAFJBEAgASADIgJrIgQgACgCMCACa0sEQCAAQTBqIAIgBEEEQQQQJiAAKAI4IQILIAAoAjQiBiACQQJ0aiEFIARBAk8EQCAFIANBf3MgAWpBAnQQKhogASACakECdCADQQJ0ayAGakEEayEFIAIgBGpBAWshAgsgBUEANgIAIAAgAkEBajYCOAsgACgCICIDQf//A00EQCADIQFBgIAEIANrIgIgACgCGCADa0sEQCAAQRhqIAMgAkEEQQQQJiAAKAIgIQELIAAoAhwiBSABQQJ0IgRqIQIgA0H//wNHBEAgAkH8/w8gA0ECdCICaxAqGiAEIAJrIAVqQfz/D2ohAiABIANrQf//A2ohAQsgAkEANgIAIAAgAUEBajYCIAsgACgCLCIDQf//A00EQCADIQFBgIAEIANrIgIgACgCJCADa0sEQCAAQSRqIAMgAkEEQQQQJiAAKAIsIQELIAAoAigiBSABQQJ0IgRqIQIgA0H//wNHBEAgAkH8/w8gA0ECdCICaxAqGiAEIAJrIAVqQfz/D2ohAiABIANrQf//A2ohAQsgAkEANgIAIAAgAUEBajYCLAsLqQUBB38CQCAAKAIIQQFxRSIEIAAoAgAiCUVxRQRAAkAgBA0AIAEgAmohBwJAIAAoAgwiBkUEQCABIQQMAQsgASEEA0AgBCIDIAdGDQICfyADQQFqIAMsAAAiCEEATg0AGiADQQJqIAhBYEkNABogA0EDaiAIQXBJDQAaIANBBGoLIgQgA2sgBWohBSAGQQFrIgYNAAsLIAQgB0YNACAELAAAGiAFIAICfwJAIAVFDQAgAiAFSwRAIAEgBWosAABBv39KDQFBAAwCCyACIAVGDQBBAAwBCyABCyIDGyECIAMgASADGyEBCyAJRQ0BIAAoAgQhBwJAIAJBEE8EQCABIAIQEiEDDAELIAJFBEBBACEDDAELIAJBA3EhBgJAIAJBBEkEQEEAIQNBACEFDAELIAJBDHEhCEEAIQNBACEFA0AgAyABIAVqIgQsAABBv39KaiAEQQFqLAAAQb9/SmogBEECaiwAAEG/f0pqIARBA2osAABBv39KaiEDIAggBUEEaiIFRw0ACwsgBkUNACABIAVqIQQDQCADIAQsAABBv39KaiEDIARBAWohBCAGQQFrIgYNAAsLAkAgAyAHSQRAIAcgA2shBEEAIQMCQAJAAkAgAC0AIEEBaw4CAAECCyAEIQNBACEEDAELIARBAXYhAyAEQQFqQQF2IQQLIANBAWohAyAAKAIQIQYgACgCGCEFIAAoAhQhAANAIANBAWsiA0UNAiAAIAYgBSgCEBEAAEUNAAtBAQ8LDAILIAAgASACIAUoAgwRAgAEQEEBDwtBACEDA0AgAyAERgRAQQAPCyADQQFqIQMgACAGIAUoAhARAABFDQALIANBAWsgBEkPCyAAKAIUIAEgAiAAKAIYKAIMEQIADwsgACgCFCABIAIgACgCGCgCDBECAAu/BQEIf0ErQYCAxAAgACgCHCIIQQFxIgYbIQwgBCAGaiEGAkAgCEEEcUUEQEEAIQEMAQsCQCACQRBPBEAgASACEBIhBQwBCyACRQRADAELIAJBA3EhCQJAIAJBBEkEQAwBCyACQQxxIQoDQCAFIAEgB2oiCywAAEG/f0pqIAtBAWosAABBv39KaiALQQJqLAAAQb9/SmogC0EDaiwAAEG/f0pqIQUgCiAHQQRqIgdHDQALCyAJRQ0AIAEgB2ohBwNAIAUgBywAAEG/f0pqIQUgB0EBaiEHIAlBAWsiCQ0ACwsgBSAGaiEGCyAAKAIARQRAIAAoAhQiBiAAKAIYIgAgDCABIAIQPwRAQQEPCyAGIAMgBCAAKAIMEQIADwsCQAJAAkAgBiAAKAIEIgdPBEAgACgCFCIGIAAoAhgiACAMIAEgAhA/RQ0BQQEPCyAIQQhxRQ0BIAAoAhAhCCAAQTA2AhAgAC0AICEKQQEhBSAAQQE6ACAgACgCFCIJIAAoAhgiCyAMIAEgAhA/DQIgByAGa0EBaiEFAkADQCAFQQFrIgVFDQEgCUEwIAsoAhARAABFDQALQQEPCyAJIAMgBCALKAIMEQIABEBBAQ8LIAAgCjoAICAAIAg2AhBBAA8LIAYgAyAEIAAoAgwRAgAhBQwBCyAHIAZrIQYCQAJAAkAgAC0AICIFQQFrDgMAAQACCyAGIQVBACEGDAELIAZBAXYhBSAGQQFqQQF2IQYLIAVBAWohBSAAKAIQIQogACgCGCEIIAAoAhQhAAJAA0AgBUEBayIFRQ0BIAAgCiAIKAIQEQAARQ0AC0EBDwtBASEFIAAgCCAMIAEgAhA/DQAgACADIAQgCCgCDBECAA0AQQAhBQNAIAUgBkYEQEEADwsgBUEBaiEFIAAgCiAIKAIQEQAARQ0ACyAFQQFrIAZJDwsgBQv+BQEFfyAAQQhrIgEgAEEEaygCACIDQXhxIgBqIQICQAJAIANBAXENACADQQJxRQ0BIAEoAgAiAyAAaiEAIAEgA2siAUH4lsAAKAIARgRAIAIoAgRBA3FBA0cNAUHwlsAAIAA2AgAgAiACKAIEQX5xNgIEIAEgAEEBcjYCBCACIAA2AgAPCyABIAMQHgsCQAJAAkACQAJAIAIoAgQiA0ECcUUEQCACQfyWwAAoAgBGDQIgAkH4lsAAKAIARg0DIAIgA0F4cSICEB4gASAAIAJqIgBBAXI2AgQgACABaiAANgIAIAFB+JbAACgCAEcNAUHwlsAAIAA2AgAPCyACIANBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAAsgAEGAAkkNAiABIAAQIkEAIQFBkJfAAEGQl8AAKAIAQQFrIgA2AgAgAA0EQdiUwAAoAgAiAARAA0AgAUEBaiEBIAAoAggiAA0ACwtBkJfAAEH/HyABIAFB/x9NGzYCAA8LQfyWwAAgATYCAEH0lsAAQfSWwAAoAgAgAGoiADYCACABIABBAXI2AgRB+JbAACgCACABRgRAQfCWwABBADYCAEH4lsAAQQA2AgALIABBiJfAACgCACIDTQ0DQfyWwAAoAgAiAkUNA0EAIQBB9JbAACgCACIEQSlJDQJB0JTAACEBA0AgAiABKAIAIgVPBEAgAiAFIAEoAgRqSQ0ECyABKAIIIQEMAAsAC0H4lsAAIAE2AgBB8JbAAEHwlsAAKAIAIABqIgA2AgAgASAAQQFyNgIEIAAgAWogADYCAA8LIABB+AFxQeCUwABqIQICf0HolsAAKAIAIgNBASAAQQN2dCIAcUUEQEHolsAAIAAgA3I2AgAgAgwBCyACKAIICyEAIAIgATYCCCAAIAE2AgwgASACNgIMIAEgADYCCA8LQdiUwAAoAgAiAQRAA0AgAEEBaiEAIAEoAggiAQ0ACwtBkJfAAEH/HyAAIABB/x9NGzYCACADIARPDQBBiJfAAEF/NgIACwvpBAEFfwJ/AkAgAkECTwRAIAEoAgQiBEH//wFxRQRAIARBEHQMAwsgBEH/B3EhBSAEQYCAAnEhAyAEQYD4AXEiBkGA+AFGBEAgA0EQdCEDIANBgICA/AdyIAVFDQMaIAMgBUENdHJBgICA/gdyDAMLIANBEHQhAyAGRQ0BIAZBDXRBgICA/ABxIAVBDXRyQYCAgMADaiADcgwCC0EBQQFB9IHAABA1AAsgBSAFZ0EQayIFQf//A3FBCGp0Qf///wNxIANBgICA2ANyIAVBF3RrcgshBQJ/IARBgIB8cSAEQRB2IgNB//8BcUUNABogA0H/B3EhBCADQYCAAnEhBiADQYD4AXEiB0GA+AFGBEAgBkEQdCEGIAZBgICA/AdyIARFDQEaIAYgA0ENdHJBgICA/gdyDAELIAZBEHQhAyAHQQ10QYCAgPwAcSAEQQ10ckGAgIDAA2ogA3IgBw0AGiAEIARnQRBrIgRB//8DcUEIanRB////A3EgA0GAgIDYA3IgBEEXdGtyCyEEIAACfwJAIAJBAkcEQCABKAIIIgJB//8BcUUEQCACQRB0DAMLIAJB/wdxIQEgAkGAgAJxIQMgAkGA+AFxIgJBgPgBRgRAIANBEHQhAiACQYCAgPwHciABRQ0DGiACIAFBDXRyQYCAgP4HcgwDCyADQRB0IQMgAkUNASACQQ10QYCAgPwAcSABQQ10ckGAgIDAA2ogA3IMAgtBAkECQYSCwAAQNQALIAEgAWdBEGsiAUH//wNxQQhqdEH///8DcSADQYCAgNgDciABQRd0a3ILNgIIIAAgBDYCBCAAIAU2AgAL6wQBCn8jAEEwayIDJAAgA0EDOgAsIANBIDYCHCADQQA2AiggAyABNgIkIAMgADYCICADQQA2AhQgA0EANgIMAn8CQAJAAkAgAigCECIKRQRAIAIoAgwiAEUNASACKAIIIgEgAEEDdGohBCAAQQFrQf////8BcUEBaiEHIAIoAgAhAANAIABBBGooAgAiBQRAIAMoAiAgACgCACAFIAMoAiQoAgwRAgANBAsgASgCACADQQxqIAEoAgQRAAANAyAAQQhqIQAgAUEIaiIBIARHDQALDAELIAIoAhQiAEUNACAAQQV0IQsgAEEBa0H///8/cUEBaiEHIAIoAgghBSACKAIAIQADQCAAQQRqKAIAIgEEQCADKAIgIAAoAgAgASADKAIkKAIMEQIADQMLIAMgCCAKaiIBQRBqKAIANgIcIAMgAUEcai0AADoALCADIAFBGGooAgA2AiggAUEMaigCACEEQQAhCUEAIQYCQAJAAkAgAUEIaigCAEEBaw4CAAIBCyAEQQN0IAVqIgwoAgANASAMKAIEIQQLQQEhBgsgAyAENgIQIAMgBjYCDCABQQRqKAIAIQQCQAJAAkAgASgCAEEBaw4CAAIBCyAEQQN0IAVqIgYoAgANASAGKAIEIQQLQQEhCQsgAyAENgIYIAMgCTYCFCAFIAFBFGooAgBBA3RqIgEoAgAgA0EMaiABKAIEEQAADQIgAEEIaiEAIAsgCEEgaiIIRw0ACwsgByACKAIETw0BIAMoAiAgAigCACAHQQN0aiIAKAIAIAAoAgQgAygCJCgCDBECAEUNAQtBAQwBC0EACyADQTBqJAALsgQCAn0EfyMAQRBrIQQgALwiBUEfdiEGAkACfSAAAn8CQAJAAkACQCAFQf////8HcSIDQdDYupUETwRAIANBgICA/AdLBEAgAA8LIAVBAEgiBUUgA0GX5MWVBEtxDQIgBUUNASAEQwAAgIAgAJU4AgggBCoCCBogA0G047+WBE0NAQwHCyADQZjkxfUDTQRAIANBgICAyANNDQNBACEDIAAMBgsgA0GSq5T8A00NAwsgAEM7qrg/lCAGQQJ0QYiSwABqKgIAkiIBQwAAAM9gIQRB/////wcCfyABi0MAAABPXQRAIAGoDAELQYCAgIB4C0GAgICAeCAEGyABQ////05eG0EAIAEgAVsbDAMLIABDAAAAf5QPCyAEIABDAAAAf5I4AgwgBCoCDBogAEMAAIA/kg8LIAZFIAZrCyIDsiIBQwByMb+UkiIAIAFDjr6/NZQiApMLIQEgACABIAEgASABlCIAIABDFVI1u5RDj6oqPpKUkyIAlEMAAABAIACTlSACk5JDAACAP5IhASADRQ0AAkACQAJAIANB/wBMBEAgA0GCf04NAyABQwAAgAyUIQEgA0Gbfk0NASADQeYAaiEDDAMLIAFDAAAAf5QhASADQf4BSw0BIANB/wBrIQMMAgsgAUMAAIAMlCEBQbZ9IAMgA0G2fU0bQcwBaiEDDAELIAFDAAAAf5QhAUH9AiADIANB/QJPG0H+AWshAwsgASADQRd0QYCAgPwDar6UIQELIAEL+QMBAn8gACABaiECAkACQCAAKAIEIgNBAXENACADQQJxRQ0BIAAoAgAiAyABaiEBIAAgA2siAEH4lsAAKAIARgRAIAIoAgRBA3FBA0cNAUHwlsAAIAE2AgAgAiACKAIEQX5xNgIEIAAgAUEBcjYCBCACIAE2AgAMAgsgACADEB4LAkACQAJAIAIoAgQiA0ECcUUEQCACQfyWwAAoAgBGDQIgAkH4lsAAKAIARg0DIAIgA0F4cSICEB4gACABIAJqIgFBAXI2AgQgACABaiABNgIAIABB+JbAACgCAEcNAUHwlsAAIAE2AgAPCyACIANBfnE2AgQgACABQQFyNgIEIAAgAWogATYCAAsgAUGAAk8EQCAAIAEQIg8LIAFB+AFxQeCUwABqIQICf0HolsAAKAIAIgNBASABQQN2dCIBcUUEQEHolsAAIAEgA3I2AgAgAgwBCyACKAIICyEBIAIgADYCCCABIAA2AgwgACACNgIMIAAgATYCCA8LQfyWwAAgADYCAEH0lsAAQfSWwAAoAgAgAWoiATYCACAAIAFBAXI2AgQgAEH4lsAAKAIARw0BQfCWwABBADYCAEH4lsAAQQA2AgAPC0H4lsAAIAA2AgBB8JbAAEHwlsAAKAIAIAFqIgE2AgAgACABQQFyNgIEIAAgAWogATYCAAsLggMBCX8jAEEgayIEJAAQIyIAKAIQIQUgACgCDCEIIABCADcCDCAAKAIEIQYgACgCCCEDIABCBDcCBCAAKAIAIQIgAEEANgIAAkAgAyAIRgRAAkAgAiADRgRA0G9BgAEgAiACQYABTRsiB/wPASIBQX9GDQMCQCAFRQRAIAEhBQwBCyACIAVqIAFHDQQLIAIgB2oiByACSSAHQf////8DS3INAyAHQQJ0IgFB/P///wdLDQMgBCACBH8gBCAGNgIUIAQgAkECdDYCHEEEBUEACzYCGCAEQQhqQQQgASAEQRRqEDAgBCgCCEEBRg0DIAQoAgwhBiACIQEgByECDAELIAIgAyIBTQ0CCyAGIAFBAnRqIANBAWo2AgAgAUEBaiEDCyADIAhNDQAgBiAIQQJ0aigCACEBIAAgBTYCECAAIAE2AgwgACADNgIIIAAoAgQhAyAAIAY2AgQgACgCACEBIAAgAjYCACABBEAgAyABQQJ0EGULIARBIGokACAFIAhqDwsAC+cCAQV/AkBBzf97QRAgACAAQRBNGyIAayABTQ0AIABBECABQQtqQXhxIAFBC0kbIgRqQQxqEBEiAkUNACACQQhrIQECQCAAQQFrIgMgAnFFBEAgASEADAELIAJBBGsiBSgCACIGQXhxIAIgA2pBACAAa3FBCGsiAiAAQQAgAiABa0EQTRtqIgAgAWsiAmshAyAGQQNxBEAgACADIAAoAgRBAXFyQQJyNgIEIAAgA2oiAyADKAIEQQFyNgIEIAUgAiAFKAIAQQFxckECcjYCACABIAJqIgMgAygCBEEBcjYCBCABIAIQGgwBCyABKAIAIQEgACADNgIEIAAgASACajYCAAsCQCAAKAIEIgFBA3FFDQAgAUF4cSICIARBEGpNDQAgACAEIAFBAXFyQQJyNgIEIAAgBGoiASACIARrIgRBA3I2AgQgACACaiICIAIoAgRBAXI2AgQgASAEEBoLIABBCGohAwsgAwv7AgEHfyMAQRBrIgQkAAJAAkACQAJAAkAgASgCBCICRQ0AIAEoAgAhByACQQNxIQUCQCACQQRJBEBBACECDAELIAdBHGohAyACQXxxIQhBACECA0AgAygCACADQQhrKAIAIANBEGsoAgAgA0EYaygCACACampqaiECIANBIGohAyAIIAZBBGoiBkcNAAsLIAUEQCAGQQN0IAdqQQRqIQMDQCADKAIAIAJqIQIgA0EIaiEDIAVBAWsiBQ0ACwsgASgCDARAIAJBAEgNASAHKAIERSACQRBJcQ0BIAJBAXQhAgtBACEFIAJBAEgNAyACDQELQQEhA0EAIQIMAQtBsZPAAC0AABpBASEFIAJBARBdIgNFDQELIARBADYCCCAEIAM2AgQgBCACNgIAIARBwIvAACABEBhFDQFBqIzAAEHWACAEQQ9qQZiMwABBkI3AABAzAAsgBSACEFIACyAAIAQpAgA3AgAgAEEIaiAEQQhqKAIANgIAIARBEGokAAvxAgEEfyAAKAIMIQICQAJAIAFBgAJPBEAgACgCGCEDAkACQCAAIAJGBEAgAEEUQRAgACgCFCICG2ooAgAiAQ0BQQAhAgwCCyAAKAIIIgEgAjYCDCACIAE2AggMAQsgAEEUaiAAQRBqIAIbIQQDQCAEIQUgASICQRRqIAJBEGogAigCFCIBGyEEIAJBFEEQIAEbaigCACIBDQALIAVBADYCAAsgA0UNAiAAIAAoAhxBAnRB0JPAAGoiASgCAEcEQCADQRBBFCADKAIQIABGG2ogAjYCACACRQ0DDAILIAEgAjYCACACDQFB7JbAAEHslsAAKAIAQX4gACgCHHdxNgIADAILIAAoAggiACACRwRAIAAgAjYCDCACIAA2AggPC0HolsAAQeiWwAAoAgBBfiABQQN2d3E2AgAPCyACIAM2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgACgCFCIARQ0AIAIgADYCFCAAIAI2AhgLC7YCAQd/AkAgAkEQSQRAIAAhAwwBCyAAQQAgAGtBA3EiBGohBSAEBEAgACEDIAEhBgNAIAMgBi0AADoAACAGQQFqIQYgA0EBaiIDIAVJDQALCyAFIAIgBGsiCEF8cSIHaiEDAkAgASAEaiIEQQNxBEAgB0EATA0BIARBA3QiAkEYcSEJIARBfHEiBkEEaiEBQQAgAmtBGHEhAiAGKAIAIQYDQCAFIAYgCXYgASgCACIGIAJ0cjYCACABQQRqIQEgBUEEaiIFIANJDQALDAELIAdBAEwNACAEIQEDQCAFIAEoAgA2AgAgAUEEaiEBIAVBBGoiBSADSQ0ACwsgCEEDcSECIAQgB2ohAQsgAgRAIAIgA2ohAgNAIAMgAS0AADoAACABQQFqIQEgA0EBaiIDIAJJDQALCyAAC78CAQN/IwBBEGsiAiQAAkAgAUGAAU8EQCACQQA2AgwCfyABQYAQTwRAIAFBgIAETwRAIAJBDGpBA3IhBCACIAFBEnZB8AFyOgAMIAIgAUEGdkE/cUGAAXI6AA4gAiABQQx2QT9xQYABcjoADUEEDAILIAJBDGpBAnIhBCACIAFBDHZB4AFyOgAMIAIgAUEGdkE/cUGAAXI6AA1BAwwBCyACQQxqQQFyIQQgAiABQQZ2QcABcjoADEECCyEDIAQgAUE/cUGAAXI6AAAgAyAAKAIAIAAoAggiAWtLBEAgACABIAMQKSAAKAIIIQELIAAoAgQgAWogAkEMaiADEB8aIAAgASADajYCCAwBCyAAKAIIIgMgACgCAEYEQCAAECgLIAAgA0EBajYCCCAAKAIEIANqIAE6AAALIAJBEGokAEEAC70CAQJ/IwBBEGsiAiQAAkAgAUGAAU8EQCACQQA2AgwCfyABQYAQTwRAIAFBgIAETwRAIAIgAUE/cUGAAXI6AA8gAiABQRJ2QfABcjoADCACIAFBBnZBP3FBgAFyOgAOIAIgAUEMdkE/cUGAAXI6AA1BBAwCCyACIAFBP3FBgAFyOgAOIAIgAUEMdkHgAXI6AAwgAiABQQZ2QT9xQYABcjoADUEDDAELIAIgAUE/cUGAAXI6AA0gAiABQQZ2QcABcjoADEECCyEBIAEgACgCACAAKAIIIgNrSwRAIAAgAyABECUgACgCCCEDCyAAKAIEIANqIAJBDGogARAfGiAAIAEgA2o2AggMAQsgACgCCCIDIAAoAgBGBEAgABAoCyAAIANBAWo2AgggACgCBCADaiABOgAACyACQRBqJABBAAvEAgEEfyAAQgA3AhAgAAJ/QQAgAUGAAkkNABpBHyABQf///wdLDQAaIAFBBiABQQh2ZyIDa3ZBAXEgA0EBdGtBPmoLIgI2AhwgAkECdEHQk8AAaiEEQQEgAnQiA0HslsAAKAIAcUUEQCAEIAA2AgAgACAENgIYIAAgADYCDCAAIAA2AghB7JbAAEHslsAAKAIAIANyNgIADwsCQAJAIAEgBCgCACIDKAIEQXhxRgRAIAMhAgwBCyABQRkgAkEBdmtBACACQR9HG3QhBQNAIAMgBUEddkEEcWpBEGoiBCgCACICRQ0CIAVBAXQhBSACIQMgAigCBEF4cSABRw0ACwsgAigCCCIBIAA2AgwgAiAANgIIIABBADYCGCAAIAI2AgwgACABNgIIDwsgBCAANgIAIAAgAzYCGCAAIAA2AgwgACAANgIIC/MCAQR/IwBBMGsiACQAAkACQEGQksAAKAIARQRAQaiSwAAoAgAhAUGoksAAQQA2AgAgAUUNASAAQRhqIAERBQAgAEEQaiICIABBJGopAgA3AwAgACAAKQIcNwMIIAAoAhghAUGQksAAKAIAIgMNAgJAIANFDQBBlJLAACgCACICRQ0AQZiSwAAoAgAgAkECdBBlC0GUksAAIAE2AgBBkJLAAEEBNgIAQZiSwAAgACkDCDcCAEGgksAAIABBEGopAwA3AgALIABBMGokAEGUksAADwsgAEEANgIoIABBATYCHCAAQaCHwAA2AhggAEIENwIgIABBGGpBiIjAABBDAAsgAEEoaiACKQMANwIAIAAgACkDCDcCICAAIAE2AhwgAEEBNgIYAkAgAEEYaiIBKAIARQ0AIAEoAgQiAkUNACABKAIIIAJBAnQQZQsgAEEANgIoIABBATYCHCAAQaiIwAA2AhggAEIENwIgIAFBsIjAABBDAAuoAgIDfwF+IwBBQGoiAiQAIAEoAgBBgICAgHhGBEAgASgCDCEDIAJBJGoiBEEANgIAIAJCgICAgBA3AhwgAkEwaiADKAIAIgNBCGopAgA3AwAgAkE4aiADQRBqKQIANwMAIAIgAykCADcDKCACQRxqQcCIwAAgAkEoahAYGiACQRhqIAQoAgAiAzYCACACIAIpAhwiBTcDECABQQhqIAM2AgAgASAFNwIACyABKQIAIQUgAUKAgICAEDcCACACQQhqIgMgAUEIaiIBKAIANgIAIAFBADYCAEGxk8AALQAAGiACIAU3AwBBDEEEEF0iAUUEQEEEQQwQbQALIAEgAikDADcCACABQQhqIAMoAgA2AgAgAEHgisAANgIEIAAgATYCACACQUBrJAAL0gECBH8BfiMAQSBrIgMkACABIAEgAmoiAksEQEEAQQAQUgALQQggACgCACIEQQF0IgEgAiABIAJLGyICIAJBCEkbIgKtIgdCIIhQRQRAQQBBABBSAAsCQCAHpyIFQf////8HTQRAIAMgBAR/IAMgBDYCHCADIAAoAgQ2AhRBAQVBAAs2AhggA0EIakEBIAUgA0EUahAwIAMoAghBAUcNASADKAIMIQYgAygCECEBCyAGIAEQUgALIAMoAgwhASAAIAI2AgAgACABNgIEIANBIGokAAvrAQIEfwF+IwBBIGsiBSQAIAEgASACaiICSwRAQQBBABBSAAtBACEBIAMgBGpBAWtBACADa3GtQQQgACgCACIHQQF0IgYgAiACIAZJGyICIAJBBE0bIgKtfiIJQiCIUEUEQEEAQQAQUgALAkAgCaciBkGAgICAeCADa00EfyAFIAcEfyAFIAQgB2w2AhwgBSAAKAIENgIUIAMFQQALNgIYIAVBCGogAyAGIAVBFGoQMCAFKAIIQQFHDQEgBSgCECEIIAUoAgwFIAELIAgQUgALIAUoAgwhASAAIAI2AgAgACABNgIEIAVBIGokAAvTAQEFfyMAQSBrIgEkACAAKAIAIgJBf0YEQEEAQQAQUgALIAJBAXQiAyACQQFqIgUgAyAFSxsiA0H/////A0sEQEEAQQAQUgALAkBBBCADIANBBE0bIgNBAnQiBUH8////B00EfyABIAIEfyABIAJBAnQ2AhwgASAAKAIENgIUQQQFQQALNgIYIAFBCGpBBCAFIAFBFGoQMCABKAIIQQFHDQEgASgCECEEIAEoAgwFIAQLIAQQUgALIAEoAgwhAiAAIAM2AgAgACACNgIEIAFBIGokAAuyAQEEfyMAQSBrIgEkACAAKAIAIgJBf0YEQEEAQQAQUgALQQggAkEBdCIDIAJBAWoiBCADIARLGyIDIANBCE0bIgNBAEgEQEEAQQAQUgALIAEgAgR/IAEgAjYCHCABIAAoAgQ2AhRBAQVBAAs2AhggAUEIakEBIAMgAUEUahAwIAEoAghBAUYEQCABKAIMIAEoAhAQUgALIAEoAgwhAiAAIAM2AgAgACACNgIEIAFBIGokAAuyAQECfyMAQSBrIgMkACABIAEgAmoiAksEQEEAQQAQUgALQQggACgCACIBQQF0IgQgAiACIARJGyICIAJBCE0bIgRBAEgEQEEAQQAQUgALIAMgAQR/IAMgATYCHCADIAAoAgQ2AhRBAQVBAAs2AhggA0EIakEBIAQgA0EUahAwIAMoAghBAUYEQCADKAIMIAMoAhAQUgALIAMoAgwhASAAIAQ2AgAgACABNgIEIANBIGokAAudAQEDfwJAIAFBEEkEQCAAIQIMAQsgAEEAIABrQQNxIgRqIQMgBARAIAAhAgNAIAJBADoAACACQQFqIgIgA0kNAAsLIAMgASAEayIBQXxxIgRqIQIgBEEASgRAA0AgA0EANgIAIANBBGoiAyACSQ0ACwsgAUEDcSEBCyABBEAgASACaiEBA0AgAkEAOgAAIAJBAWoiAiABSQ0ACwsgAAvBAQIDfwF+IwBBMGsiAiQAIAEoAgBBgICAgHhGBEAgASgCDCEDIAJBFGoiBEEANgIAIAJCgICAgBA3AgwgAkEgaiADKAIAIgNBCGopAgA3AwAgAkEoaiADQRBqKQIANwMAIAIgAykCADcDGCACQQxqQcCIwAAgAkEYahAYGiACQQhqIAQoAgAiAzYCACACIAIpAgwiBTcDACABQQhqIAM2AgAgASAFNwIACyAAQeCKwAA2AgQgACABNgIAIAJBMGokAAuWAgECfyMAQSBrIgUkAEHMk8AAQcyTwAAoAgAiBkEBajYCAAJAAn9BACAGQQBIDQAaQQFBmJfAAC0AAA0AGkGYl8AAQQE6AABBlJfAAEGUl8AAKAIAQQFqNgIAQQILQf8BcSIGQQJHBEAgBkEBcUUNASAFQQhqIAAgASgCGBEBAAALQcCTwAAoAgAiBkEASA0AQcCTwAAgBkEBajYCAEHAk8AAQcSTwAAoAgAEfyAFIAAgASgCFBEBACAFIAQ6AB0gBSADOgAcIAUgAjYCGCAFIAUpAwA3AhBBxJPAACgCACAFQRBqQciTwAAoAgAoAhQRAQBBwJPAACgCAEEBawUgBgs2AgBBmJfAAEEAOgAAIANFDQAACwALrwEBBn8CQAJAIABBhAFJDQAgANBvJgEQIyIBKAIMIQUgASgCECECIAFCADcCDCABKAIIIQMgASgCBCEEIAFCBDcCBCABKAIAIQYgAUEANgIAIAAgAkkNASAAIAJrIgAgA08NASAEIABBAnRqIAU2AgAgASACNgIQIAEgADYCDCABIAM2AgggASgCBCABIAQ2AgQgASgCACEAIAEgBjYCACAARQ0AIABBAnQQZQsPCwALowEBAX8jAEEQayIGJAACQCABBEAgBkEEaiABIAMgBCAFIAIoAhARBgACQCAGKAIEIgIgBigCDCIBTQRAIAYoAgghBQwBCyACQQJ0IQIgBigCCCEDIAFFBEBBBCEFIAMgAhBlDAELIAMgAkEEIAFBAnQiAhBUIgVFDQILIAAgATYCBCAAIAU2AgAgBkEQaiQADwtBxIbAAEEyEGgAC0EEIAIQUgALrAEBA38gASgCDCECAkACQAJAAkACQAJAIAEoAgQOAgABAgsgAg0BQQEhA0EAIQFBASECDAMLIAJFDQELIAAgARAdDwsgASgCACICKAIEIgFBAEgNASACKAIAIQMgAUUEQEEBIQJBACEBDAELQbGTwAAtAAAaQQEhBCABQQEQXSICRQ0BCyACIAMgARAfIQIgACABNgIIIAAgAjYCBCAAIAE2AgAPCyAEIAEQUgALiQEBAX8CQCACQQBOBEACfyADKAIEBEACQCADKAIIIgRFBEAMAQsgAygCACAEIAEgAhBUDAILCyABIAJFDQAaQbGTwAAtAAAaIAIgARBdCyIDBEAgACACNgIIIAAgAzYCBCAAQQA2AgAPCyAAIAI2AgggACABNgIEDAELIABBADYCBAsgAEEBNgIAC5cBAgR/AW8jAEEgayIDJAAgACgCACIGEHAhACADIAI2AgQgAyAANgIAIAAgAkYEQBBbIgQQUyIFJQEgASACEAQhBxAbIgAgByYBIARBhAFPBEAgBBAtCyAFQYQBTwRAIAUQLQsgBiAAQQAQZCAAQYQBTwRAIAAQLQsgA0EgaiQADwsgA0EANgIIIAMgA0EEaiADQQhqEEAAC3kBAX8jAEEgayICJAACfyAAKAIAQYCAgIB4RwRAIAEgACgCBCAAKAIIEFYMAQsgAkEQaiAAKAIMKAIAIgBBCGopAgA3AwAgAkEYaiAAQRBqKQIANwMAIAIgACkCADcDCCABKAIUIAEoAhggAkEIahAYCyACQSBqJAALewEBfyMAQUBqIgUkACAFIAE2AgwgBSAANgIIIAUgAzYCFCAFIAI2AhAgBUECNgIcIAVBoI/AADYCGCAFQgI3AiQgBSAFQRBqrUKAgICAsAWENwM4IAUgBUEIaq1CgICAgMAFhDcDMCAFIAVBMGo2AiAgBUEYaiAEEEMAC24BAX8jAEEwayIBJAAgASAANgIAIAFBgAE2AgQgAUECNgIMIAFB2JHAADYCCCABQgI3AhQgASABQQRqrUKAgICA4ACENwMoIAEgAa1CgICAgOAAhDcDICABIAFBIGo2AhAgAUEIakHIj8AAEEMAC2kCAX8BfiMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBAjYCDCADQfyNwAA2AgggA0ICNwIUIANCgICAgOAAIgQgA62ENwMoIAMgBCADQQRqrYQ3AyAgAyADQSBqNgIQIANBCGogAhBDAAtpAgF/AX4jAEEwayIDJAAgAyAANgIAIAMgATYCBCADQQI2AgwgA0H4kcAANgIIIANCAjcCFCADQoCAgIDgACIEIANBBGqthDcDKCADIAQgA62ENwMgIAMgA0EgajYCECADQQhqIAIQQwALZgAjAEEwayIAJABBsJPAAC0AAARAIABBAjYCDCAAQbCKwAA2AgggAEIBNwIUIAAgATYCLCAAIABBLGqtQoCAgIDgAIQ3AyAgACAAQSBqNgIQIABBCGpB0IrAABBDAAsgAEEwaiQAC5QBAgN/AW8jAEEgayIDJAAgAyAAKAIAEHAiBDYCACADIAI2AgQgAiAERwRAIANBADYCCCADIANBBGogA0EIahBAAAsQWyIEEFMiBSUBEAUhBhAbIgIgBiYBIAVBhAFPBEAgBRAtCyACIAAoAgAgAUECdhBkIAJBhAFPBEAgAhAtCyAEQYQBTwRAIAQQLQsgA0EgaiQAC08BAX8jAEEwayIAJAAgAEEBNgIMIABBwI3AADYCCCAAQgE3AhQgACAAQS9qrUKAgICAoAWENwMgIAAgAEEgajYCECAAQQhqQcSBwAAQQwALQQEBfyACIAAoAgAgACgCCCIDa0sEQCAAIAMgAhAlIAAoAgghAwsgACgCBCADaiABIAIQHxogACACIANqNgIIQQALTQECf0Gxk8AALQAAGiABKAIEIQIgASgCACEDQQhBBBBdIgFFBEBBBEEIEG0ACyABIAI2AgQgASADNgIAIABB8IrAADYCBCAAIAE2AgALQQEBfyACIAAoAgAgACgCCCIDa0sEQCAAIAMgAhApIAAoAgghAwsgACgCBCADaiABIAIQHxogACACIANqNgIIQQALQQEBfyMAQSBrIgIkACACQQA2AhAgAkEBNgIEIAJCBDcCCCACQS42AhwgAiAANgIYIAIgAkEYajYCACACIAEQQwALswIBA38gACgCACECIAEoAhwiAEEQcUUEQCAAQSBxRQRAIAIgARBnDwtBACEAIwBBgAFrIgQkACACKAIAIQIDQCAAIARqQf8AaiACQQ9xIgNBMHIgA0E3aiADQQpJGzoAACAAQQFrIQAgAkEQSSACQQR2IQJFDQALIABBgAFqIgJBgQFPBEAgAhA0AAsgAUHYj8AAQQIgACAEakGAAWpBACAAaxAVIARBgAFqJAAPC0EAIQAjAEGAAWsiBCQAIAIoAgAhAgNAIAAgBGpB/wBqIAJBD3EiA0EwciADQdcAaiADQQpJGzoAACAAQQFrIQAgAkEQSSACQQR2IQJFDQALIABBgAFqIgJBgQFPBEAgAhA0AAsgAUHYj8AAQQIgACAEakGAAWpBACAAaxAVIARBgAFqJAALOAACQCACQYCAxABGDQAgACACIAEoAhARAABFDQBBAQ8LIANFBEBBAA8LIAAgAyAEIAEoAgwRAgAL0AIBAX8jAEEQayIDJAAgAyABNgIMIAMgADYCCCMAQfAAayIAJAAgAEG0hsAANgIMIAAgA0EIajYCCCAAQbSGwAA2AhQgACADQQxqNgIQIABBjI7AADYCGCAAQQI2AhwCQCACKAIARQRAIABBAzYCXCAAQciOwAA2AlggAEIDNwJkIAAgAEEQaq1CgICAgLAFhDcDSCAAIABBCGqtQoCAgICwBYQ3A0AMAQsgAEEwaiACQRBqKQIANwMAIABBKGogAkEIaikCADcDACAAIAIpAgA3AyAgAEEENgJcIABB/I7AADYCWCAAQgQ3AmQgACAAQRBqrUKAgICAsAWENwNQIAAgAEEIaq1CgICAgLAFhDcDSCAAIABBIGqtQoCAgIDQBYQ3A0ALIAAgAEEYaq1CgICAgMAFhDcDOCAAIABBOGo2AmAgAEHYAGpBpIbAABBDAAuyAQECfyMAQRBrIgAkACABKAIUQYCKwABBCyABKAIYKAIMEQIAIQMgAEEIaiICQQA6AAUgAiADOgAEIAIgATYCACACIgEtAAQhAiABLQAFBEAgAQJ/QQEgAkEBcQ0AGiABKAIAIgEtABxBBHFFBEAgASgCFEGxj8AAQQIgASgCGCgCDBECAAwBCyABKAIUQbCPwABBASABKAIYKAIMEQIACyICOgAECyACQQFxIABBEGokAAvrEgIYfxB9EBsiDiAJJgEjAEGAAWsiDSQAIA0gDjYCLCANIAg2AiggDSAHOAIkIA0gBjgCICANIAU4AhwgDSAEOAIYIA0gAzgCFCANIAI4AhAgDSABOAIMIA0gADgCCCANIApBAEc6ADMgDSALOAI0IA0gDDgCOCANQQA2AkQgDUKAgICAwAA3AjwgDSANQThqNgJ8IA0gDUE0ajYCeCANIA1BJGo2AnQgDSANQSBqNgJwIA0gDUEcajYCbCANIA1BGGo2AmggDSANQRRqNgJkIA0gDUEQajYCYCANIA1BDGo2AlwgDSANQQhqNgJYIA0gDUE8ajYCVCANIA1BM2o2AlAgDSANQSxqNgJMIA0gDUEoajYCSCANQcgAaiIYIQgjAEEgayIQJAACQEEAQYiAwAAoAgARAwAiEwRAIBMoAgBFBEAgCCgCNCEZIAgoAjAhGiAIKAIsIRsgCCgCKCEcIAgoAiQhHSAIKAIgIR4gCCgCHCEfIAgoAhghICAIKAIUISEgCCgCECEiIAgoAgwhESAIKAIIISMgCCgCBCEkIAgoAgAhFiATQX82AgAgEyAWKAIAIggEfyATQQxqKAIAIRcgE0EIaigCACEKQQAhDgNAIBAgJCAOQQJ0IA5BgIAEIAggDmsiCCAIQYCABE8bIghqIhRBAnQQZjYCDAJAAkAgFyAIQQJ0Ig5PBEAgEEEMaiAKIA4QOCAZKgIAIQAgGioCACEDIBsqAgAhLyAcKgIAITAgHSoCACEEIB4qAgAhBSAfKgIAIQYgICoCACExICEqAgAhMiAiKgIAITMgIy0AAA0BIAAgA5NDAAB+Q5UhACAGIAaUIAUgBZSSIAQgBJSSIQsgCiEIA0AgDkEEIA5BBEkiDxshEgJAIAgtAAOzQwAAf0OVQ83MzD1dDQAgEEEQaiAIIBIQFwJ9AkAgD0UEQCAQKgIYIQEgECoCFCECIBAqAhAhB0MAAAAAIQxDAAAAACElIAgoAgwiD0H/AXEEQCADIAAgD0EBa0H/AXGzlJIQGSElCyAPQQh2IhVB/wFxBEAgAyAAIBVBAWtB/wFxs5SSEBkhDAsgMSABkyEBIDIgApMhAiAzIAeTIQcgD0EQdiIPQf8BcQ0BQwAAAAAMAgtBAyASQZSCwAAQNQALIAMgACAPQQFrQf8BcbOUkhAZCyEpIAYgB5QgBSAClJIgBCABlJIiJiAmlCALIAcgB5QgAiAClJIgASABlJIgJSAMkiApkkMAAEBAlSIBIAGUk5STIgFDAAAAAF0NACAmjCABkZMgC5UiASAwYEUgASAvX0VyDQAgESgCCCIPIBEoAgBGBEAgERAnCyARKAIEIA9BAnRqIAE4AgAgESAPQQFqNgIICyAIIBJBAnRqIQggDiASayIODQALDAILIA4gF0GIg8AAEDYACyAAIAOTQwAAfkOVISwgCiEIA0AgDkEEIA5BBEkiDxshEgJAIAgtAAOzQwAAf0OVQ83MzD1dDQAgEEEQaiAIIBIQFwJ9AkAgD0UEQCAQKgIYIQAgECoCFCEBIBAqAhAhAkMAAAAAIQdDAAAAACELIAgoAgwiD0H/AXEEQCADICwgD0EBa0H/AXGzlJIQGSELCyAPQQh2IhVB/wFxBEAgAyAsIBVBAWtB/wFxs5SSEBkhBwsgMSAAkyEnIDIgAZMhLSAzIAKTIS4gD0EQdiIVQf8BcQ0BQwAAAAAMAgtBAyASQZSCwAAQNQALIAMgLCAVQQFrQf8BcbOUkhAZCyEMIAQgCCgCCCIVQRh1skMAAP5ClSIAIAUgD0EYdbJDAAD+QpUiAZQgBCAAlJMiKJQgFUEQdsCyQwAA/kKVIgIgBCAClCAGIAGUkyIqlJMgBiAAlCAFIAKUkyIrQwAAgD8gAiAClJMgACAAlJMgASABlJNDAAAAABBQkSIllJIiJiAmkpIhJiAFIAIgK5QgASAolJMgKiAllJIiKSApkpIhKSAGIAEgKpQgACArlJMgKCAllJIiKCAokpIhKCAnIAAgLSABlCAnIACUkyIqlCACICcgApQgLiABlJMiK5STIC4gAJQgLSAClJMiNCAllJIiJyAnkpIhJyAtIAIgNJQgASAqlJMgKyAllJIiAiACkpIhAiAuIAEgK5QgACA0lJMgKiAllJIiACAAkpIhAAJAIAwgCyAHEFAgDBBQQwrXIzyUIgFdRQRAIAEgB15FBEAgASALXkUEQEMAAIA/IAyVIgwgJ5QiASAMICaUIgyUQwAAgD8gC5UiCyAAlCIAIAsgKJQiC5RDAACAPyAHlSIHIAKUIgIgByAplCIHlJKSIiUgJZQgDCAMlCALIAuUIAcgB5SSkiIHIAEgAZQgACAAlCACIAKUkpJDAACAv5KUkyIAQwAAAABdDQQgJYwgAJGTIAeVIQAMAwsgKItDvTeGNV0NAyACICkgAIwgKJUiAJSSIAeVIgEgAZQgJyAmIACUkiAMlSIBIAGUkkMAAIA/XkUNAgwDCyApi0O9N4Y1XQ0CIAAgKCACjCAplSIAlJIgC5UiASABlCAnICYgAJSSIAyVIgEgAZSSQwAAgD9eDQIMAQsgJotDvTeGNV0NASAAICggJ4wgJpUiAJSSIAuVIgEgAZQgAiApIACUkiAHlSIBIAGUkkMAAIA/Xg0BCyAAIDBgRSAAIC9fRXINACARKAIIIg8gESgCAEYEQCARECcLIBEoAgQgD0ECdGogADgCACARIA9BAWo2AggLIAggEkECdGohCCAOIBJrIg4NAAsLIBAoAgwiCEGEAU8EQCAIEC0LIBYoAgAiCCAUIg5LDQALIBMoAgBBAWoFQQALNgIAIBBBIGokAAwCCxA5AAtBnIDAAEHGACAQQR9qQYyAwABBtIHAABAzAAsgDSgCRBANIQkQGyIIIAkmASANIAg2AkggDSgCQCERIA0oAkQhDiMAQSBrIgokACAYKAIAIhMlARAKIRQgCiAONgIEIAogFDYCAAJAIA4gFEYEQBBbIhQQUyIQJQEgESAOEAghCRAbIg4gCSYBIBRBhAFPBEAgFBAtCyAQQYQBTwRAIBAQLQsgEyUBIA4lAUEAEAkgDkGEAU8EQCAOEC0LIApBIGokAAwBCyAKQQA2AgggCiAKQQRqIApBCGoQQAALIA0oAjwiCgRAIA0oAkAgCkECdBBlCyANKAIsIgpBhAFPBEAgChAtCyANQYABaiQAIAglASAIEC0L+gECAn8BfiMAQRBrIgIkACACQQE7AQwgAiABNgIIIAIgADYCBCMAQRBrIgEkACACQQRqIgApAgAhBCABIAA2AgwgASAENwIEIwBBEGsiACQAIAFBBGoiASgCACICKAIMIQMCQAJAAkACQCACKAIEDgIAAQILIAMNAUEBIQJBACEDDAILIAMNACACKAIAIgIoAgQhAyACKAIAIQIMAQsgAEGAgICAeDYCACAAIAE2AgwgAEGci8AAIAEoAgQgASgCCCIALQAIIAAtAAkQLAALIAAgAzYCBCAAIAI2AgAgAEGAi8AAIAEoAgQgASgCCCIALQAIIAAtAAkQLAALJAAgAEUEQEHEhsAAQTIQaAALIAAgAiADIAQgBSABKAIQEQgACyIAIABFBEBBxIbAAEEyEGgACyAAIAIgAyAEIAEoAhARDQALIgAgAEUEQEHEhsAAQTIQaAALIAAgAiADIAQgASgCEBEPAAsiACAARQRAQcSGwABBMhBoAAsgACACIAMgBCABKAIQERgACyIAIABFBEBBxIbAAEEyEGgACyAAIAIgAyAEIAEoAhARGgALIgAgAEUEQEHEhsAAQTIQaAALIAAgAiADIAQgASgCEBEcAAslAQF/IAAoAgAiAUGAgICAeHJBgICAgHhHBEAgACgCBCABEGULCyAAIABFBEBBxIbAAEEyEGgACyAAIAIgAyABKAIQEQQACx4AIABFBEBBxIbAAEEyEGgACyAAIAIgASgCEBEAAAuvDwEPfxAbIgMgASYBEBsiBCACJgEjAEEgayIKJAAgCiAENgIIIAogAzYCBCAKIAA2AgAgCiAKQQRqIgAoAgAQbzYCDCAKIApBCGo2AhwgCiAKNgIYIAogADYCFCAKIApBDGo2AhAgCkEQaiEAIwBB0ABrIgckAAJAAkACQAJAQQBBgIDAACgCABEDACINBEAgDSgCAEUEQCAAKAIMIREgDUF/NgIAIAAoAgQgACgCCCEOIAAoAgAoAgAiBiANQQRqIgQoAggiA0sEQCAGIAMiAGsiCSAEKAIAIABrSwRAIAQgACAJQQJBAhAmIAQoAgghAAsgBCgCBCIMIABBAXRqIQUgCUECTwRAIAUgA0F/cyAGakEBdBAqGiAAIAZqQQF0IANBAXRrIAxqQQJrIQUgACAJakEBayEACyAFQQA7AQAgBCAAQQFqNgIICyAEKAIUIgMgBkkEQCAGIAMiAGsiCSAEKAIMIABrSwRAIARBDGogACAJQQRBBBAmIAQoAhQhAAsgBCgCECIMIABBAnRqIQUgCUECTwRAIAUgA0F/cyAGakECdBAqGiAAIAZqQQJ0IANBAnRrIAxqQQRrIQUgACAJakEBayEACyAFQQA2AgAgBCAAQQFqNgIUCyAEKAIgIgNBgPgBTQRAQYH4ASADIgBrIgUgBCgCGCAAa0sEQCAEQRhqIAAgBUEEQQQQJiAEKAIgIQALIAQoAhwiBiAAQQJ0IglqIQUgA0GA+AFHBH8gBUGA4AcgA0ECdCIFaxAqGiAAIANrQYD4AWohACAJIAVrIAZqQYDgB2oFIAULQQA2AgAgBCAAQQFqNgIgCygCACUBQQAgDigCACIJEAshARAbIgAgASYBIAcgADYCACAJIA0oAgwiAEsNAiANKAIIIQgjAEEgayIAJAAgACAHKAIAEG8iAzYCACAAIAk2AgQgAyAJRwRAIABBADYCCCAAIABBBGogAEEIahBAAAsQWyIFEFMiBiUBEAEhARAbIgMgASYBIAZBhAFPBEAgBhAtCyADJQEgBygCACUBIAhBAXYQAiADQYQBTwRAIAMQLQsgBUGEAU8EQCAFEC0LIABBIGokACAHQQRqIRBBACEAQQAhBSMAQTBrIgYkAAJAAkACQAJAIAkgBCgCCCIDTQRAIAQoAgQhAyAEQQA2AiAgBCgCGEGA+AFNBEAgBEEYakEAQYH4AUEEQQQQJiAEKAIgIQALIAQoAhwiDiAAQQJ0Ig9qQYDgBxAqIAQgAEGB+AFqIgw2AiBBgOAHakEANgIAAkAgCQRAIAlBAXQhCCADIQADQCAALwEAIgtBgPgBSQRAIAsgDE8NAyAOIAtBAnRqIgsgCygCAEEBajYCAAsgAEECaiEAIAhBAmsiCA0ACwsgBkEANgIEAkAgDEECSQ0AIA4gDEECdGpBCGsiACgCACEFIABBADYCACAGIAU2AgQgACAORg0AIA9B+N8HaiILQQJ2QQFqQQNxIggEQCAIQQJ0IQgDQCAAQQRrIgAoAgAhDyAAIAU2AgAgBiAFIA9qIgU2AgQgCEEEayIIDQALCyALQQxJDQAgAEEQayEAA0AgAEEMaiIIKAIAIQsgCCAFNgIAIAYgBSALaiIFNgIEIABBCGoiCCgCACELIAggBTYCACAGIAUgC2oiBTYCBCAAQQRqIggoAgAhCyAIIAU2AgAgBiAFIAtqIgU2AgQgACgCACEIIAAgBTYCACAGIAUgCGoiBTYCBCAAIA5GIABBEGshAEUNAAsLAkAgCQRAIAlBAXQhCCAEKAIQIQ8gBCgCFCEJQQAhAANAIAMvAQAiBEGA+AFJBEAgBCAMTw0DIAkgDiAEQQJ0aiIEKAIAIgtNBEAgCyAJQZiEwAAQNQALIA8gC0ECdGogADYCACAEIAQoAgBBAWo2AgALIANBAmohAyAAQQFqIQAgCEECayIIDQALCyAMRQ0FIA4oAgAgBUcNAyAQQYCAgIB4NgIAIBAgBTYCBAwECyAEIAxBiITAABA1AAsgCyAMQaiEwAAQNQALIAkgA0G4g8AAEDYACyAGQQI2AgwgBkH4g8AANgIIIAZCAjcCFCAGIA6tQoCAgIDgAIQ3AyggBiAGQQRqrUKAgICA4ACENwMgIAYgBkEgajYCECAQIAZBCGoQHQsgBkEwaiQADAELQQBBAEHIg8AAEDUACyAHKAIEQYCAgIB4Rw0DIAcoAggiAEUNBSAAIA0oAhgiA0sNBCANKAIUIQQgByARQQAgABBmIgM2AiggB0EoaiAEIAAQMSADQYQBSQ0FIAMQLQwFCxA5AAtBnIDAAEHGACAHQc8AakGMgMAAQbSBwAAQMwALIAkgAEHAgsAAEDYACyAHQRhqIAdBDGooAgA2AgAgByAHKQIENwMQIAdBATYCLCAHQeCCwAA2AiggB0IBNwI0IAcgB0EQaq1CgICAgMAAhDcDQCAHIAdBQGs2AjAgB0EcaiAHQShqEC8gBygCICAHKAIkEGgACyAAIANB0ILAABA2AAsgBygCACIDQYQBTwRAIAMQLQsgDSANKAIAQQFqNgIAIAdB0ABqJAAgCigCCCIDQYQBTwRAIAMQLQsgCigCBCIDQYQBTwRAIAMQLQsgCkEgaiQAIAALmA8BE38QGyIEIAEmARAbIg8gAiYBIwBBIGsiCiQAIAogDzYCCCAKIAQ2AgQgCiAANgIAIAogCkEEaiIAKAIAEHA2AgwgCiAKQQhqNgIcIAogCjYCGCAKIAA2AhQgCiAKQQxqNgIQIApBEGohACMAQdAAayIIJAACQAJAAkACQEEAQYSAwAAoAgARAwAiEARAIBAoAgBFBEAgACgCDCEUIBBBfzYCACAAKAIEIQQgACgCCCEPIBBBBGoiCSAAKAIAKAIAIgAQEyAIIARBACAPKAIAIgwQZjYCACAMIBAoAgwiBEsNAiAIIBAoAgggDBA4IwBBMGsiDSQAIAkgABATAkACQCAMIAkoAggiAE0EQCAJKAIEIQ8gCSgCHCEEIAkoAiAiDgRAIAQgDkECdBAqGgsgCSgCKCESIAkoAiwiEQRAIBIgEUECdBAqGgsgDARAIAxBAnQhBSAPIQADQAJAIAAoAgAiA0GAgID8B08NACAOIANBf3MiC0H//wNxIgNLBEAgBCADQQJ0aiIDIAMoAgBBAWo2AgAgESALQRB2IgNLBEAgEiADQQJ0aiIDIAMoAgBBAWo2AgAMAgsgAyARQbiFwAAQNQALIAMgDkGohcAAEDUACyAAQQRqIQAgBUEEayIFDQALCyAORQRAQQAhBQwDCyAOQQFrQf////8DcSIAQQFqIgVBB3EhAyAAQQdJBEBBACEFIAQhAAwCCyAFQfj///8HcSELQQAhBSAEIQADQCAAKAIAIQYgACAFNgIAIAAoAgQhByAAIAUgBmoiBTYCBCAAKAIIIQYgACAFIAdqIgU2AgggACgCDCEHIAAgBSAGaiIFNgIMIAAoAhAhBiAAIAUgB2oiBTYCECAAKAIUIQcgACAFIAZqIgU2AhQgACgCGCEGIAAgBSAHaiIFNgIYIAAoAhwhByAAIAUgBmoiBTYCHCAAQSBqIQAgBSAHaiEFIAtBCGsiCw0ACwwBCyAMIABBuITAABA2AAsgA0UNAANAIAAoAgAhCyAAIAU2AgAgAEEEaiEAIAUgC2ohBSADQQFrIgMNAAsLIA0gBTYCBCAMBEAgDEECdCELIAkoAjQhFSAJKAI4IQZBACEDIA8hAANAAkAgACgCACIHQYCAgPwHTw0AAkAgDiAHQX9zQf//A3EiB0sEQCAEIAdBAnRqIgcoAgAiEyAGTw0BIBUgE0ECdGogAzYCACAHIAcoAgBBAWo2AgAMAgsgByAOQYiFwAAQNQALIBMgBkGYhcAAEDUACyAAQQRqIQAgA0EBaiEDIAtBBGsiCw0ACwsgCEEEaiEOAkAgEUUNACARQQFrQf////8DcSIEQQFqIgZBB3EhC0EAIQMgEiEAIARBB08EQCAGQfj///8HcSEEA0AgACgCACEGIAAgAzYCACAAKAIEIQcgACADIAZqIgM2AgQgACgCCCEGIAAgAyAHaiIDNgIIIAAoAgwhByAAIAMgBmoiAzYCDCAAKAIQIQYgACADIAdqIgM2AhAgACgCFCEHIAAgAyAGaiIDNgIUIAAoAhghBiAAIAMgB2oiAzYCGCAAKAIcIQcgACADIAZqIgM2AhwgAEEgaiEAIAMgB2ohAyAEQQhrIgQNAAsLIAtFDQADQCAAKAIAIQQgACADNgIAIABBBGohACADIARqIQMgC0EBayILDQALCwJAIAVFDQAgCSgCNCEDIAkoAjhBAnQhACAJKAIQIRMgCSgCFCELIAUhBAJAAkADQCAARQ0DIAMoAgAiCSAMTw0CIBEgDyAJQQJ0aigCAEF/c0EQdiIGSwRAIBIgBkECdGoiBigCACIHIAtPDQIgA0EEaiEDIBMgB0ECdGogCTYCACAGIAYoAgBBAWo2AgAgAEEEayEAIARBAWsiBA0BDAQLCyAGIBFB6ITAABA1AAsgByALQfiEwAAQNQALIAkgDEHYhMAAEDUACwJAIBFB//8DSwRAAkAgBSASKAL8/w9GBEAgDkGAgICAeDYCACAOIAU2AgQMAQsgDUECNgIMIA1B+IPAADYCCCANQgI3AhQgDSASQfz/D2qtQoCAgIDgAIQ3AyggDSANQQRqrUKAgICA4ACENwMgIA0gDUEgajYCECAOIA1BCGoQHQsgDUEwaiQADAELQf//AyARQciEwAAQNQALIAgoAgRBgICAgHhHDQMgCCgCCCIARQ0FIAAgECgCGCIESw0EIBAoAhQhDyAIIBRBACAAEGYiBDYCKCAIQShqIA8gABAxIARBhAFJDQUgBBAtDAULEDkAC0GcgMAAQcYAIAhBzwBqQYyAwABBtIHAABAzAAsgDCAEQeiCwAAQNgALIAhBGGogCEEMaigCADYCACAIIAgpAgQ3AxAgCEEBNgIsIAhB4ILAADYCKCAIQgE3AjQgCCAIQRBqrUKAgICAwACENwNAIAggCEFAazYCMCAIQRxqIAhBKGoQLyAIKAIgIAgoAiQQaAALIAAgBEH4gsAAEDYACyAIKAIAIgRBhAFPBEAgBBAtCyAQIBAoAgBBAWo2AgAgCEHQAGokACAKKAIIIgRBhAFPBEAgBBAtCyAKKAIEIgRBhAFPBEAgBBAtCyAKQSBqJAAgAAsXAQF/IAAoAgAiAQRAIAAoAgQgARBlCwsUACABIAEgACAAIAFdGyAAIABcGwscACAAQQA2AhAgAEIANwIIIABCgICAgMAANwIAC0QAIABFBEAjAEEgayIAJAAgAEEANgIYIABBATYCDCAAQeyLwAA2AgggAEIENwIQIABBCGpBiIzAABBDAAsgACABEG0ACxYBAW8gACUBEAAhARAbIgAgASYBIAALzgYBBn8CfwJAAkACQAJAAkAgAEEEayIFKAIAIgZBeHEiBEEEQQggBkEDcSIHGyABak8EQCAHQQAgAUEnaiIJIARJGw0BAkACQCACQQlPBEAgAiADEBwiCA0BQQAMCQsgA0HM/3tLDQFBECADQQtqQXhxIANBC0kbIQECQCAHRQRAIAFBgAJJIAQgAUEEcklyIAQgAWtBgYAIT3INAQwJCyAAQQhrIgIgBGohBwJAAkACQAJAIAEgBEsEQCAHQfyWwAAoAgBGDQQgB0H4lsAAKAIARg0CIAcoAgQiBkECcQ0FIAZBeHEiBiAEaiIEIAFJDQUgByAGEB4gBCABayIDQRBJDQEgBSABIAUoAgBBAXFyQQJyNgIAIAEgAmoiASADQQNyNgIEIAIgBGoiAiACKAIEQQFyNgIEIAEgAxAaDA0LIAQgAWsiA0EPSw0CDAwLIAUgBCAFKAIAQQFxckECcjYCACACIARqIgEgASgCBEEBcjYCBAwLC0HwlsAAKAIAIARqIgQgAUkNAgJAIAQgAWsiA0EPTQRAIAUgBkEBcSAEckECcjYCACACIARqIgEgASgCBEEBcjYCBEEAIQNBACEBDAELIAUgASAGQQFxckECcjYCACABIAJqIgEgA0EBcjYCBCACIARqIgIgAzYCACACIAIoAgRBfnE2AgQLQfiWwAAgATYCAEHwlsAAIAM2AgAMCgsgBSABIAZBAXFyQQJyNgIAIAEgAmoiASADQQNyNgIEIAcgBygCBEEBcjYCBCABIAMQGgwJC0H0lsAAKAIAIARqIgQgAUsNBwsgAxARIgFFDQEgASAAQXxBeCAFKAIAIgFBA3EbIAFBeHFqIgEgAyABIANJGxAfIAAQFgwICyAIIAAgASADIAEgA0kbEB8aIAUoAgAiAkF4cSIDIAFBBEEIIAJBA3EiAhtqSQ0DIAJBACADIAlLGw0EIAAQFgsgCAwGC0GBicAAQbCJwAAQPQALQcCJwABB8InAABA9AAtBgYnAAEGwicAAED0AC0HAicAAQfCJwAAQPQALIAUgASAGQQFxckECcjYCACABIAJqIgIgBCABayIBQQFyNgIEQfSWwAAgATYCAEH8lsAAIAI2AgAgAAwBCyAACwsZACABKAIUQaCNwABBDiABKAIYKAIMEQIACxYAIAAoAhQgASACIAAoAhgoAgwRAgALhwIBA39BnJPAACgCAEUEQAJAAkACQAJAIABFDQAgACgCACAAQQA2AgBBAXFFDQAgACgCECECIAAoAgwhASAAKAIIIQMgACgCBCEADAELQQAhAEGxk8AALQAAGkGAgBAhAkGAgBAhAwJAQYCAwAAQESIBRQ0AIAFBBGstAABBA3FFDQAgAUGAgMAAECoaCyABRQ0BC0Gsk8AAIAI2AgBBoJPAACAANgIAQaiTwAAoAgAhAkGok8AAIAE2AgBBpJPAACgCACEAQaSTwAAgAzYCAEGck8AAKAIAQZyTwABBATYCAEUgAEVyRQRAIAIgAEECdBBlCwwBC0EEQYCAwAAQUgALC0Ggk8AAC/ICAQl/QaySwAAoAgBFBEACfwJAIABFDQAgACgCACAAQQA2AgBBAXFFDQAgACgCKCEBIAAoAiQhByAAKAIgIQIgACgCHCEDIAAoAhghCCAAKAIUIQQgACgCECEFIAAoAgwhCSAAKAIIIQYgACgCBAwBC0ECIQlBBCEHQQAhAUEEIQhBAAshAEHUksAAIAE2AgBByJLAACADNgIAQbySwAAgBTYCAEGwksAAIAA2AgBB0JLAACgCACEFQdCSwAAgBzYCAEHMksAAKAIAIQBBzJLAACACNgIAQcSSwAAoAgAhAUHEksAAIAg2AgBBwJLAACgCACECQcCSwAAgBDYCAEG4ksAAKAIAIQRBuJLAACAJNgIAQbSSwAAoAgAhA0G0ksAAIAY2AgBBrJLAACgCACEGQaySwABBATYCAAJAIAZFDQAgAwRAIAQgA0EBdBBlCyACBEAgASACQQJ0EGULIABFDQAgBSAAQQJ0EGULC0GwksAAC8QEARF/QdiSwAAoAgBFBEACQCAABEAgACgCQCEBIAAoAjwhAiAAKAI4IQMgACgCNCEEIAAoAjAhBSAAKAIsIQYgACgCKCEHIAAoAiQhCCAAKAIgIQkgACgCHCEKIAAoAhghCyAAKAIUIQwgACgCECENIAAoAgwhDiAAKAIIIQ8gACgCBCEQIAAoAgAgAEEANgIAQQFxDQELQQQhAkEAIQFBACEDQQAhBEEEIQVBACEGQQAhB0EEIQhBACEJQQAhCkEEIQtBACEMQQAhDUEEIQ5BACEPQQAhEAtBmJPAACABNgIAQYyTwAAgBDYCAEGAk8AAIAc2AgBB9JLAACAKNgIAQeiSwAAgDTYCAEHcksAAIBA2AgBBlJPAACgCACEHQZSTwAAgAjYCAEGQk8AAKAIAIQBBkJPAACADNgIAQYiTwAAoAgAhCkGIk8AAIAU2AgBBhJPAACgCACEBQYSTwAAgBjYCAEH8ksAAKAIAIQVB/JLAACAINgIAQfiSwAAoAgAhAkH4ksAAIAk2AgBB8JLAACgCACEGQfCSwAAgCzYCAEHsksAAKAIAIQNB7JLAACAMNgIAQeSSwAAoAgAhCEHkksAAIA42AgBB4JLAACgCACEEQeCSwAAgDzYCAEHYksAAKAIAIQlB2JLAAEEBNgIAAkAgCUUNACAEBEAgCCAEQQJ0EGULIAMEQCAGIANBAnQQZQsgAgRAIAUgAkECdBBlCyABBEAgCiABQQJ0EGULIABFDQAgByAAQQJ0EGULC0HcksAACxQAIAAoAgAgASAAKAIEKAIMEQAACxQCAW8BfxAPIQAQGyIBIAAmASABCxAAIAEgACgCBCAAKAIIEBQLGQACfyABQQlPBEAgASAAEBwMAQsgABARCwsiACAAQu26rbbNhdT14wA3AwggAEL4gpm9le7Gxbl/NwMACyAAIABC2KGkg7Hi0d18NwMIIABCldfdmMOXiowLNwMACxMAIABB8IrAADYCBCAAIAE2AgALEAAgASAAKAIAIAAoAgQQVgsQACABIAAoAgAgACgCBBAUCxAAIAEoAhQgASgCGCAAEBgLDgAgACUBIAElASACEAYLWwECfwJAAkAgAEEEaygCACICQXhxIgNBBEEIIAJBA3EiAhsgAWpPBEAgAkEAIAMgAUEnaksbDQEgABAWDAILQYGJwABBsInAABA9AAtBwInAAEHwicAAED0ACwsdAQFvIAAoAgAlASABIAIQDCEDEBsiACADJgEgAAvCAgEGfyAAKAIAIQIjAEEQayIEJABBCiEDAkAgAkGQzgBJBEAgAiEADAELA0AgBEEGaiADaiIGQQRrIAIgAkGQzgBuIgBBkM4AbGsiB0H//wNxQeQAbiIFQQF0QdqPwABqLwAAOwAAIAZBAmsgByAFQeQAbGtB//8DcUEBdEHaj8AAai8AADsAACADQQRrIQMgAkH/wdcvSyAAIQINAAsLAkAgAEHjAE0EQCAAIQIMAQsgA0ECayIDIARBBmpqIAAgAEH//wNxQeQAbiICQeQAbGtB//8DcUEBdEHaj8AAai8AADsAAAsCQCACQQpPBEAgA0ECayIDIARBBmpqIAJBAXRB2o/AAGovAAA7AAAMAQsgA0EBayIDIARBBmpqIAJBMHI6AAALIAFBAUEAIARBBmogA2pBCiADaxAVIARBEGokAAsJACAAIAEQDgALDQAgAEHAiMAAIAEQGAsMACAAIAEpAgA3AwALDQAgAEHAi8AAIAEQGAsNACABQbiLwABBBRBWCxkAIAAgAUG8k8AAKAIAIgBBFSAAGxEBAAALCQAgAEEANgIACwgAIAAlARADCwgAIAAlARAHCwueEgQAQYCAwAALCQEAAAACAAAAAwBBlIDAAAuBDAEAAAAFAAAAY2Fubm90IGFjY2VzcyBhIFRocmVhZCBMb2NhbCBTdG9yYWdlIHZhbHVlIGR1cmluZyBvciBhZnRlciBkZXN0cnVjdGlvbi9ydXN0Yy85MGIzNWE2MjM5YzNkOGJkYWJjNTMwYTZhMDgxNmY3ZmY4OWEwYWFmL2xpYnJhcnkvc3RkL3NyYy90aHJlYWQvbG9jYWwucnMAAABiABAATwAAAAQBAAAaAAAAYgAQAE8AAAD4AQAAJgAAAHNwYXJrLWludGVybmFsLXJzL3NyYy9yYXljYXN0LnJz1AAQACAAAAB+AAAAHAAAANQAEAAgAAAAgAAAABwAAADUABAAIAAAAIUAAAAgAAAAc3BhcmstaW50ZXJuYWwtcnMvc3JjL2xpYi5ycyQBEAAcAAAAHQAAADMAAAAkARAAHAAAACgAAAAtAAAAAQAAAAAAAAAkARAAHAAAADoAAAAzAAAAJAEQABwAAABFAAAALQAAACQBEAAcAAAAXgAAACgAAABzcGFyay1pbnRlcm5hbC1ycy9zcmMvc29ydC5ycwAAAJgBEAAdAAAAGwAAAB0AAACYARAAHQAAADkAAAAPAAAARXhwZWN0ZWQgIGFjdGl2ZSBzcGxhdHMgYnV0IGdvdCDYARAACQAAAOEBEAAXAAAAmAEQAB0AAAAzAAAAHQAAAJgBEAAdAAAAMwAAABUAAACYARAAHQAAACQAAAAUAAAAmAEQAB0AAAB0AAAAGQAAAJgBEAAdAAAApwAAABMAAACYARAAHQAAAJ8AAAATAAAAmAEQAB0AAACiAAAAHQAAAJgBEAAdAAAAogAAABEAAACYARAAHQAAAJAAAAAgAAAAmAEQAB0AAACQAAAAFAAAAJgBEAAdAAAAfAAAABgAAACYARAAHQAAAH0AAAAYAAAAL1VzZXJzL2RtYXJjb3MvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9pbmRleC5jcmF0ZXMuaW8tNmYxN2QyMmJiYTE1MDAxZi9qcy1zeXMtMC4zLjc3L3NyYy9saWIucnPIAhAAXAAAAPsYAAABAAAAAAAAAAQAAAAEAAAAEwAAAGNsb3N1cmUgaW52b2tlZCByZWN1cnNpdmVseSBvciBhZnRlciBiZWluZyBkcm9wcGVkTGF6eSBpbnN0YW5jZSBoYXMgcHJldmlvdXNseSBiZWVuIHBvaXNvbmVkdgMQACoAAAAvVXNlcnMvZG1hcmNvcy8uY2FyZ28vcmVnaXN0cnkvc3JjL2luZGV4LmNyYXRlcy5pby02ZjE3ZDIyYmJhMTUwMDFmL29uY2VfY2VsbC0xLjIxLjMvc3JjL2xpYi5ycwCoAxAAXwAAAAgDAAAZAAAAcmVlbnRyYW50IGluaXQAABgEEAAOAAAAqAMQAF8AAAB6AgAADQAAABYAAAAMAAAABAAAABcAAAAYAAAAGQAAAC9ydXN0L2RlcHMvZGxtYWxsb2MtMC4yLjYvc3JjL2RsbWFsbG9jLnJzYXNzZXJ0aW9uIGZhaWxlZDogcHNpemUgPj0gc2l6ZSArIG1pbl9vdmVyaGVhZABYBBAAKQAAAKgEAAAJAAAAYXNzZXJ0aW9uIGZhaWxlZDogcHNpemUgPD0gc2l6ZSArIG1heF9vdmVyaGVhZAAAWAQQACkAAACuBAAADQAAAEFjY2Vzc0Vycm9ybWVtb3J5IGFsbG9jYXRpb24gb2YgIGJ5dGVzIGZhaWxlZAAAAAsFEAAVAAAAIAUQAA0AAABzdGQvc3JjL2FsbG9jLnJzQAUQABAAAABjAQAACQAAABYAAAAMAAAABAAAABoAAAAAAAAACAAAAAQAAAAbAAAAAAAAAAgAAAAEAAAAHAAAAB0AAAAeAAAAHwAAACAAAAAQAAAABAAAACEAAAAiAAAAIwAAACQAAABFcnJvcgAAACUAAAAMAAAABAAAACYAAAAnAAAAKAAAAGNhcGFjaXR5IG92ZXJmbG93AAAA2AUQABEAAABhbGxvYy9zcmMvcmF3X3ZlYy5yc/QFEAAUAAAAGAAAAAUAQaCMwAAL8AUBAAAAKQAAAGEgZm9ybWF0dGluZyB0cmFpdCBpbXBsZW1lbnRhdGlvbiByZXR1cm5lZCBhbiBlcnJvciB3aGVuIHRoZSB1bmRlcmx5aW5nIHN0cmVhbSBkaWQgbm90YWxsb2Mvc3JjL2ZtdC5ycwAAfgYQABAAAAB+AgAADgAAAEJvcnJvd011dEVycm9yYWxyZWFkeSBib3Jyb3dlZDogrgYQABIAAABpbmRleCBvdXQgb2YgYm91bmRzOiB0aGUgbGVuIGlzICBidXQgdGhlIGluZGV4IGlzIAAAyAYQACAAAADoBhAAEgAAAD09IT1tYXRjaGVzYXNzZXJ0aW9uIGBsZWZ0ICByaWdodGAgZmFpbGVkCiAgbGVmdDogCiByaWdodDogABcHEAAQAAAAJwcQABcAAAA+BxAACQAAACByaWdodGAgZmFpbGVkOiAKICBsZWZ0OiAAAAAXBxAAEAAAAGAHEAAQAAAAcAcQAAkAAAA+BxAACQAAADogAAABAAAAAAAAAJwHEAACAAAAfSB9Y29yZS9zcmMvZm10L251bS5ycwAAswcQABMAAABmAAAAFwAAADB4MDAwMTAyMDMwNDA1MDYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMjIzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1MzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2NDY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwODE4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5NDk1OTY5Nzk4OTlyYW5nZSBzdGFydCBpbmRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAACiCBAAEgAAALQIEAAiAAAAcmFuZ2UgZW5kIGluZGV4IOgIEAAQAAAAtAgQACIAAAAAAAA/AAAAvwBBqJLAAAsBFABwCXByb2R1Y2VycwIIbGFuZ3VhZ2UBBFJ1c3QADHByb2Nlc3NlZC1ieQMFcnVzdGMdMS44My4wICg5MGIzNWE2MjMgMjAyNC0xMS0yNikGd2FscnVzBjAuMjMuMwx3YXNtLWJpbmRnZW4HMC4yLjEwMABJD3RhcmdldF9mZWF0dXJlcwQrD211dGFibGUtZ2xvYmFscysIc2lnbi1leHQrD3JlZmVyZW5jZS10eXBlcysKbXVsdGl2YWx1ZQ==", self.location.href);\n    }\n    const imports = __wbg_get_imports();\n    if (typeof module_or_path === "string" || typeof Request === "function" && module_or_path instanceof Request || typeof URL === "function" && module_or_path instanceof URL) {\n      module_or_path = fetch(module_or_path);\n    }\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n    return __wbg_finalize_init(instance, module);\n  }\n  var ch2 = {};\n  var wk = function(c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n      c + \';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})\'\n    ], { type: "text/javascript" }))));\n    w.onmessage = function(e) {\n      var d = e.data, ed = d.$e$;\n      if (ed) {\n        var err2 = new Error(ed[0]);\n        err2["code"] = ed[1];\n        err2.stack = ed[2];\n        cb(err2, null);\n      } else\n        cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n  };\n  var u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n  var fleb = new u8([\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    0,\n    /* unused */\n    0,\n    0,\n    /* impossible */\n    0\n  ]);\n  var fdeb = new u8([\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n    12,\n    13,\n    13,\n    /* unused */\n    0,\n    0\n  ]);\n  var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var freb = function(eb, start) {\n    var b = new u16(31);\n    for (var i2 = 0; i2 < 31; ++i2) {\n      b[i2] = start += 1 << eb[i2 - 1];\n    }\n    var r = new i32(b[30]);\n    for (var i2 = 1; i2 < 30; ++i2) {\n      for (var j = b[i2]; j < b[i2 + 1]; ++j) {\n        r[j] = j - b[i2] << 5 | i2;\n      }\n    }\n    return { b, r };\n  };\n  var _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n  fl[28] = 258, revfl[258] = 28;\n  var _b = freb(fdeb, 0), fd = _b.b;\n  var rev = new u16(32768);\n  for (var i = 0; i < 32768; ++i) {\n    var x = (i & 43690) >> 1 | (i & 21845) << 1;\n    x = (x & 52428) >> 2 | (x & 13107) << 2;\n    x = (x & 61680) >> 4 | (x & 3855) << 4;\n    rev[i] = ((x & 65280) >> 8 | (x & 255) << 8) >> 1;\n  }\n  var hMap = function(cd, mb, r) {\n    var s = cd.length;\n    var i2 = 0;\n    var l = new u16(mb);\n    for (; i2 < s; ++i2) {\n      if (cd[i2])\n        ++l[cd[i2] - 1];\n    }\n    var le = new u16(mb);\n    for (i2 = 1; i2 < mb; ++i2) {\n      le[i2] = le[i2 - 1] + l[i2 - 1] << 1;\n    }\n    var co;\n    if (r) {\n      co = new u16(1 << mb);\n      var rvb = 15 - mb;\n      for (i2 = 0; i2 < s; ++i2) {\n        if (cd[i2]) {\n          var sv = i2 << 4 | cd[i2];\n          var r_1 = mb - cd[i2];\n          var v = le[cd[i2] - 1]++ << r_1;\n          for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n            co[rev[v] >> rvb] = sv;\n          }\n        }\n      }\n    } else {\n      co = new u16(s);\n      for (i2 = 0; i2 < s; ++i2) {\n        if (cd[i2]) {\n          co[i2] = rev[le[cd[i2] - 1]++] >> 15 - cd[i2];\n        }\n      }\n    }\n    return co;\n  };\n  var flt = new u8(288);\n  for (var i = 0; i < 144; ++i)\n    flt[i] = 8;\n  for (var i = 144; i < 256; ++i)\n    flt[i] = 9;\n  for (var i = 256; i < 280; ++i)\n    flt[i] = 7;\n  for (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n  var fdt = new u8(32);\n  for (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n  var flrm = /* @__PURE__ */ hMap(flt, 9, 1);\n  var fdrm = /* @__PURE__ */ hMap(fdt, 5, 1);\n  var max = function(a) {\n    var m = a[0];\n    for (var i2 = 1; i2 < a.length; ++i2) {\n      if (a[i2] > m)\n        m = a[i2];\n    }\n    return m;\n  };\n  var bits = function(d, p, m) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n  };\n  var bits16 = function(d, p) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n  };\n  var shft = function(p) {\n    return (p + 7) / 8 | 0;\n  };\n  var slc = function(v, s, e) {\n    if (s == null || s < 0)\n      s = 0;\n    if (e == null || e > v.length)\n      e = v.length;\n    return new u8(v.subarray(s, e));\n  };\n  var ec = [\n    "unexpected EOF",\n    "invalid block type",\n    "invalid length/literal",\n    "invalid distance",\n    "stream finished",\n    "no stream handler",\n    ,\n    "no callback",\n    "invalid UTF-8 data",\n    "extra field too long",\n    "date not in range 1980-2099",\n    "filename too long",\n    "stream finishing",\n    "invalid zip data"\n    // determined by unknown compression method\n  ];\n  var err = function(ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(e, err);\n    if (!nt)\n      throw e;\n    return e;\n  };\n  var inflt = function(dat, st, buf, dict) {\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n      return buf || new u8(0);\n    var noBuf = !buf;\n    var resize = noBuf || st.i != 2;\n    var noSt = st.i;\n    if (noBuf)\n      buf = new u8(sl * 3);\n    var cbuf = function(l2) {\n      var bl = buf.length;\n      if (l2 > bl) {\n        var nbuf = new u8(Math.max(bl * 2, l2));\n        nbuf.set(buf);\n        buf = nbuf;\n      }\n    };\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    var tbts = sl * 8;\n    do {\n      if (!lm) {\n        final = bits(dat, pos, 1);\n        var type = bits(dat, pos + 1, 3);\n        pos += 3;\n        if (!type) {\n          var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;\n          if (t > sl) {\n            if (noSt)\n              err(0);\n            break;\n          }\n          if (resize)\n            cbuf(bt + l);\n          buf.set(dat.subarray(s, t), bt);\n          st.b = bt += l, st.p = pos = t * 8, st.f = final;\n          continue;\n        } else if (type == 1)\n          lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n        else if (type == 2) {\n          var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n          var tl = hLit + bits(dat, pos + 5, 31) + 1;\n          pos += 14;\n          var ldt = new u8(tl);\n          var clt = new u8(19);\n          for (var i2 = 0; i2 < hcLen; ++i2) {\n            clt[clim[i2]] = bits(dat, pos + i2 * 3, 7);\n          }\n          pos += hcLen * 3;\n          var clb = max(clt), clbmsk = (1 << clb) - 1;\n          var clm = hMap(clt, clb, 1);\n          for (var i2 = 0; i2 < tl; ) {\n            var r = clm[bits(dat, pos, clbmsk)];\n            pos += r & 15;\n            var s = r >> 4;\n            if (s < 16) {\n              ldt[i2++] = s;\n            } else {\n              var c = 0, n = 0;\n              if (s == 16)\n                n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i2 - 1];\n              else if (s == 17)\n                n = 3 + bits(dat, pos, 7), pos += 3;\n              else if (s == 18)\n                n = 11 + bits(dat, pos, 127), pos += 7;\n              while (n--)\n                ldt[i2++] = c;\n            }\n          }\n          var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n          lbt = max(lt);\n          dbt = max(dt);\n          lm = hMap(lt, lbt, 1);\n          dm = hMap(dt, dbt, 1);\n        } else\n          err(1);\n        if (pos > tbts) {\n          if (noSt)\n            err(0);\n          break;\n        }\n      }\n      if (resize)\n        cbuf(bt + 131072);\n      var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n      var lpos = pos;\n      for (; ; lpos = pos) {\n        var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n        pos += c & 15;\n        if (pos > tbts) {\n          if (noSt)\n            err(0);\n          break;\n        }\n        if (!c)\n          err(2);\n        if (sym < 256)\n          buf[bt++] = sym;\n        else if (sym == 256) {\n          lpos = pos, lm = null;\n          break;\n        } else {\n          var add = sym - 254;\n          if (sym > 264) {\n            var i2 = sym - 257, b = fleb[i2];\n            add = bits(dat, pos, (1 << b) - 1) + fl[i2];\n            pos += b;\n          }\n          var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n          if (!d)\n            err(3);\n          pos += d & 15;\n          var dt = fd[dsym];\n          if (dsym > 3) {\n            var b = fdeb[dsym];\n            dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n          }\n          if (pos > tbts) {\n            if (noSt)\n              err(0);\n            break;\n          }\n          if (resize)\n            cbuf(bt + 131072);\n          var end = bt + add;\n          if (bt < dt) {\n            var shift = dl - dt, dend = Math.min(dt, end);\n            if (shift + bt < 0)\n              err(3);\n            for (; bt < dend; ++bt)\n              buf[bt] = dict[shift + bt];\n          }\n          for (; bt < end; ++bt)\n            buf[bt] = buf[bt - dt];\n        }\n      }\n      st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n      if (lm)\n        final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n  };\n  var et = /* @__PURE__ */ new u8(0);\n  var mrg = function(a, b) {\n    var o = {};\n    for (var k in a)\n      o[k] = a[k];\n    for (var k in b)\n      o[k] = b[k];\n    return o;\n  };\n  var wcln = function(fn, fnStr, td2) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\\s+/g, "").split(",");\n    for (var i2 = 0; i2 < dt.length; ++i2) {\n      var v = dt[i2], k = ks[i2];\n      if (typeof v == "function") {\n        fnStr += ";" + k + "=";\n        var st_1 = v.toString();\n        if (v.prototype) {\n          if (st_1.indexOf("[native code]") != -1) {\n            var spInd = st_1.indexOf(" ", 8) + 1;\n            fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));\n          } else {\n            fnStr += st_1;\n            for (var t in v.prototype)\n              fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();\n          }\n        } else\n          fnStr += st_1;\n      } else\n        td2[k] = v;\n    }\n    return fnStr;\n  };\n  var ch = [];\n  var cbfs = function(v) {\n    var tl = [];\n    for (var k in v) {\n      if (v[k].buffer) {\n        tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n      }\n    }\n    return tl;\n  };\n  var wrkr = function(fns, init, id, cb) {\n    if (!ch[id]) {\n      var fnStr = "", td_1 = {}, m = fns.length - 1;\n      for (var i2 = 0; i2 < m; ++i2)\n        fnStr = wcln(fns[i2], fnStr, td_1);\n      ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td2 = mrg({}, ch[id].e);\n    return wk(ch[id].c + ";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=" + init.toString() + "}", id, td2, cbfs(td2), cb);\n  };\n  var bInflt = function() {\n    return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];\n  };\n  var pbf = function(msg) {\n    return postMessage(msg, [msg.buffer]);\n  };\n  var gopt = function(o) {\n    return o && {\n      out: o.size && new u8(o.size),\n      dictionary: o.dictionary\n    };\n  };\n  var cbify = function(dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function(err2, dat2) {\n      w.terminate();\n      cb(err2, dat2);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function() {\n      w.terminate();\n    };\n  };\n  var b2 = function(d, b) {\n    return d[b] | d[b + 1] << 8;\n  };\n  var b4 = function(d, b) {\n    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n  };\n  var b8 = function(d, b) {\n    return b4(d, b) + b4(d, b + 4) * 4294967296;\n  };\n  var gzs = function(d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n      err(6, "invalid gzip data");\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n      st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n      ;\n    return st + (flg & 2);\n  };\n  var Inflate = /* @__PURE__ */ function() {\n    function Inflate2(opts, cb) {\n      if (typeof opts == "function")\n        cb = opts, opts = {};\n      this.ondata = cb;\n      var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n      this.s = { i: 0, b: dict ? dict.length : 0 };\n      this.o = new u8(32768);\n      this.p = new u8(0);\n      if (dict)\n        this.o.set(dict);\n    }\n    Inflate2.prototype.e = function(c) {\n      if (!this.ondata)\n        err(5);\n      if (this.d)\n        err(4);\n      if (!this.p.length)\n        this.p = c;\n      else if (c.length) {\n        var n = new u8(this.p.length + c.length);\n        n.set(this.p), n.set(c, this.p.length), this.p = n;\n      }\n    };\n    Inflate2.prototype.c = function(final) {\n      this.s.i = +(this.d = final || false);\n      var bts = this.s.b;\n      var dt = inflt(this.p, this.s, this.o);\n      this.ondata(slc(dt, bts, this.s.b), this.d);\n      this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n      this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n    };\n    Inflate2.prototype.push = function(chunk, final) {\n      this.e(chunk), this.c(final);\n    };\n    return Inflate2;\n  }();\n  function inflate(data, opts, cb) {\n    if (!cb)\n      cb = opts, opts = {};\n    if (typeof cb != "function")\n      err(7);\n    return cbify(data, opts, [\n      bInflt\n    ], function(ev) {\n      return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));\n    }, 1, cb);\n  }\n  function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n  }\n  var Gunzip = /* @__PURE__ */ function() {\n    function Gunzip2(opts, cb) {\n      this.v = 1;\n      this.r = 0;\n      Inflate.call(this, opts, cb);\n    }\n    Gunzip2.prototype.push = function(chunk, final) {\n      Inflate.prototype.e.call(this, chunk);\n      this.r += chunk.length;\n      if (this.v) {\n        var p = this.p.subarray(this.v - 1);\n        var s = p.length > 3 ? gzs(p) : 4;\n        if (s > p.length) {\n          if (!final)\n            return;\n        } else if (this.v > 1 && this.onmember) {\n          this.onmember(this.r - p.length);\n        }\n        this.p = p.subarray(s), this.v = 0;\n      }\n      Inflate.prototype.c.call(this, final);\n      if (this.s.f && !this.s.l && !final) {\n        this.v = shft(this.s.p) + 9;\n        this.s = { i: 0 };\n        this.o = new u8(0);\n        this.push(new u8(0), final);\n      }\n    };\n    return Gunzip2;\n  }();\n  var td = typeof TextDecoder != "undefined" && /* @__PURE__ */ new TextDecoder();\n  try {\n    td.decode(et, { stream: true });\n  } catch (e) {\n  }\n  var dutf8 = function(d) {\n    for (var r = "", i2 = 0; ; ) {\n      var c = d[i2++];\n      var eb = (c > 127) + (c > 223) + (c > 239);\n      if (i2 + eb > d.length)\n        return { s: r, r: slc(d, i2 - 1) };\n      if (!eb)\n        r += String.fromCharCode(c);\n      else if (eb == 3) {\n        c = ((c & 15) << 18 | (d[i2++] & 63) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n      } else if (eb & 1)\n        r += String.fromCharCode((c & 31) << 6 | d[i2++] & 63);\n      else\n        r += String.fromCharCode((c & 15) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63);\n    }\n  };\n  function strFromU8(dat, latin1) {\n    if (latin1) {\n      var r = "";\n      for (var i2 = 0; i2 < dat.length; i2 += 16384)\n        r += String.fromCharCode.apply(null, dat.subarray(i2, i2 + 16384));\n      return r;\n    } else if (td) {\n      return td.decode(dat);\n    } else {\n      var _a2 = dutf8(dat), s = _a2.s, r = _a2.r;\n      if (r.length)\n        err(8);\n      return s;\n    }\n  }\n  var slzh = function(d, b) {\n    return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n  };\n  var zh = function(d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a2 = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a2[0], su = _a2[1], off = _a2[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n  };\n  var z64e = function(d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n      ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n  };\n  var mt = typeof queueMicrotask == "function" ? queueMicrotask : typeof setTimeout == "function" ? setTimeout : function(fn) {\n    fn();\n  };\n  function unzip(data, opts, cb) {\n    if (!cb)\n      cb = opts, opts = {};\n    if (typeof cb != "function")\n      err(7);\n    var term = [];\n    var tAll = function() {\n      for (var i3 = 0; i3 < term.length; ++i3)\n        term[i3]();\n    };\n    var files = {};\n    var cbd = function(a, b) {\n      mt(function() {\n        cb(a, b);\n      });\n    };\n    mt(function() {\n      cbd = cb;\n    });\n    var e = data.length - 22;\n    for (; b4(data, e) != 101010256; --e) {\n      if (!e || data.length - e > 65558) {\n        cbd(err(13, 0, 1), null);\n        return tAll;\n      }\n    }\n    var lft = b2(data, e + 8);\n    if (lft) {\n      var c = lft;\n      var o = b4(data, e + 16);\n      var z = o == 4294967295 || c == 65535;\n      if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 101075792;\n        if (z) {\n          c = lft = b4(data, ze + 32);\n          o = b4(data, ze + 48);\n        }\n      }\n      var fltr = opts && opts.filter;\n      var _loop_3 = function(i3) {\n        var _a2 = zh(data, o, z), c_1 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);\n        o = no;\n        var cbl = function(e2, d) {\n          if (e2) {\n            tAll();\n            cbd(e2, null);\n          } else {\n            if (d)\n              files[fn] = d;\n            if (!--lft)\n              cbd(null, files);\n          }\n        };\n        if (!fltr || fltr({\n          name: fn,\n          size: sc,\n          originalSize: su,\n          compression: c_1\n        })) {\n          if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n          else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (su < 524288 || sc > 0.8 * su) {\n              try {\n                cbl(null, inflateSync(infl, { out: new u8(su) }));\n              } catch (e2) {\n                cbl(e2, null);\n              }\n            } else\n              term.push(inflate(infl, { size: su }, cbl));\n          } else\n            cbl(err(14, "unknown compression type " + c_1, 1), null);\n        } else\n          cbl(null, null);\n      };\n      for (var i2 = 0; i2 < c; ++i2) {\n        _loop_3(i2);\n      }\n    } else\n      cbd(null, {});\n    return tAll;\n  }\n  function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 101010256; --e) {\n      if (!e || data.length - e > 65558)\n        err(13);\n    }\n    var c = b2(data, e + 8);\n    if (!c)\n      return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n      var ze = b4(data, e - 12);\n      z = b4(data, ze) == 101075792;\n      if (z) {\n        c = b4(data, ze + 32);\n        o = b4(data, ze + 48);\n      }\n    }\n    var fltr = opts && opts.filter;\n    for (var i2 = 0; i2 < c; ++i2) {\n      var _a2 = zh(data, o, z), c_2 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);\n      o = no;\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_2\n      })) {\n        if (!c_2)\n          files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n          files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n        else\n          err(14, "unknown compression type " + c_2);\n      }\n    }\n    return files;\n  }\n  /**\n   * @license\n   * Copyright 2010-2024 Three.js Authors\n   * SPDX-License-Identifier: MIT\n   */\n  const REVISION = "172";\n  const NoColorSpace = "";\n  const SRGBColorSpace = "srgb";\n  const LinearSRGBColorSpace = "srgb-linear";\n  const LinearTransfer = "linear";\n  const SRGBTransfer = "srgb";\n  function clamp(value, min, max2) {\n    return Math.max(min, Math.min(max2, value));\n  }\n  function euclideanModulo(n, m) {\n    return (n % m + m) % m;\n  }\n  function lerp(x2, y, t) {\n    return (1 - t) * x2 + t * y;\n  }\n  class Matrix3 {\n    constructor(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      Matrix3.prototype.isMatrix3 = true;\n      this.elements = [\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ];\n      if (n11 !== void 0) {\n        this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);\n      }\n    }\n    set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      const te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    }\n    identity() {\n      this.set(\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    copy(m) {\n      const te = this.elements;\n      const me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    }\n    extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrix3Column(this, 0);\n      yAxis.setFromMatrix3Column(this, 1);\n      zAxis.setFromMatrix3Column(this, 2);\n      return this;\n    }\n    setFromMatrix4(m) {\n      const me = m.elements;\n      this.set(\n        me[0],\n        me[4],\n        me[8],\n        me[1],\n        me[5],\n        me[9],\n        me[2],\n        me[6],\n        me[10]\n      );\n      return this;\n    }\n    multiply(m) {\n      return this.multiplyMatrices(this, m);\n    }\n    premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    }\n    multiplyMatrices(a, b) {\n      const ae = a.elements;\n      const be = b.elements;\n      const te = this.elements;\n      const a11 = ae[0], a12 = ae[3], a13 = ae[6];\n      const a21 = ae[1], a22 = ae[4], a23 = ae[7];\n      const a31 = ae[2], a32 = ae[5], a33 = ae[8];\n      const b11 = be[0], b12 = be[3], b13 = be[6];\n      const b21 = be[1], b22 = be[4], b23 = be[7];\n      const b31 = be[2], b32 = be[5], b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    }\n    multiplyScalar(s) {\n      const te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    }\n    determinant() {\n      const te = this.elements;\n      const a = te[0], b = te[1], c = te[2], d = te[3], e = te[4], f = te[5], g = te[6], h = te[7], i2 = te[8];\n      return a * e * i2 - a * f * h - b * d * i2 + b * f * g + c * d * h - c * e * g;\n    }\n    invert() {\n      const te = this.elements, n11 = te[0], n21 = te[1], n31 = te[2], n12 = te[3], n22 = te[4], n32 = te[5], n13 = te[6], n23 = te[7], n33 = te[8], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13;\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      const detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    }\n    transpose() {\n      let tmp;\n      const m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    }\n    getNormalMatrix(matrix4) {\n      return this.setFromMatrix4(matrix4).invert().transpose();\n    }\n    transposeIntoArray(r) {\n      const m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    }\n    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n      const c = Math.cos(rotation);\n      const s = Math.sin(rotation);\n      this.set(\n        sx * c,\n        sx * s,\n        -sx * (c * cx + s * cy) + cx + tx,\n        -sy * s,\n        sy * c,\n        -sy * (-s * cx + c * cy) + cy + ty,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    //\n    scale(sx, sy) {\n      this.premultiply(_m3.makeScale(sx, sy));\n      return this;\n    }\n    rotate(theta) {\n      this.premultiply(_m3.makeRotation(-theta));\n      return this;\n    }\n    translate(tx, ty) {\n      this.premultiply(_m3.makeTranslation(tx, ty));\n      return this;\n    }\n    // for 2D Transforms\n    makeTranslation(x2, y) {\n      if (x2.isVector2) {\n        this.set(\n          1,\n          0,\n          x2.x,\n          0,\n          1,\n          x2.y,\n          0,\n          0,\n          1\n        );\n      } else {\n        this.set(\n          1,\n          0,\n          x2,\n          0,\n          1,\n          y,\n          0,\n          0,\n          1\n        );\n      }\n      return this;\n    }\n    makeRotation(theta) {\n      const c = Math.cos(theta);\n      const s = Math.sin(theta);\n      this.set(\n        c,\n        -s,\n        0,\n        s,\n        c,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    makeScale(x2, y) {\n      this.set(\n        x2,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        1\n      );\n      return this;\n    }\n    //\n    equals(matrix) {\n      const te = this.elements;\n      const me = matrix.elements;\n      for (let i2 = 0; i2 < 9; i2++) {\n        if (te[i2] !== me[i2]) return false;\n      }\n      return true;\n    }\n    fromArray(array, offset = 0) {\n      for (let i2 = 0; i2 < 9; i2++) {\n        this.elements[i2] = array[i2 + offset];\n      }\n      return this;\n    }\n    toArray(array = [], offset = 0) {\n      const te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n    clone() {\n      return new this.constructor().fromArray(this.elements);\n    }\n  }\n  const _m3 = /* @__PURE__ */ new Matrix3();\n  const LINEAR_REC709_TO_XYZ = /* @__PURE__ */ new Matrix3().set(\n    0.4123908,\n    0.3575843,\n    0.1804808,\n    0.212639,\n    0.7151687,\n    0.0721923,\n    0.0193308,\n    0.1191948,\n    0.9505322\n  );\n  const XYZ_TO_LINEAR_REC709 = /* @__PURE__ */ new Matrix3().set(\n    3.2409699,\n    -1.5373832,\n    -0.4986108,\n    -0.9692436,\n    1.8759675,\n    0.0415551,\n    0.0556301,\n    -0.203977,\n    1.0569715\n  );\n  function createColorManagement() {\n    const ColorManagement2 = {\n      enabled: true,\n      workingColorSpace: LinearSRGBColorSpace,\n      /**\n       * Implementations of supported color spaces.\n       *\n       * Required:\n       *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n       *\t- whitePoint: reference white [ x y ]\n       *\t- transfer: transfer function (pre-defined)\n       *\t- toXYZ: Matrix3 RGB to XYZ transform\n       *\t- fromXYZ: Matrix3 XYZ to RGB transform\n       *\t- luminanceCoefficients: RGB luminance coefficients\n       *\n       * Optional:\n       *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n       *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n       *\n       * Reference:\n       * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n       */\n      spaces: {},\n      convert: function(color, sourceColorSpace, targetColorSpace) {\n        if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {\n          return color;\n        }\n        if (this.spaces[sourceColorSpace].transfer === SRGBTransfer) {\n          color.r = SRGBToLinear(color.r);\n          color.g = SRGBToLinear(color.g);\n          color.b = SRGBToLinear(color.b);\n        }\n        if (this.spaces[sourceColorSpace].primaries !== this.spaces[targetColorSpace].primaries) {\n          color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ);\n          color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ);\n        }\n        if (this.spaces[targetColorSpace].transfer === SRGBTransfer) {\n          color.r = LinearToSRGB(color.r);\n          color.g = LinearToSRGB(color.g);\n          color.b = LinearToSRGB(color.b);\n        }\n        return color;\n      },\n      fromWorkingColorSpace: function(color, targetColorSpace) {\n        return this.convert(color, this.workingColorSpace, targetColorSpace);\n      },\n      toWorkingColorSpace: function(color, sourceColorSpace) {\n        return this.convert(color, sourceColorSpace, this.workingColorSpace);\n      },\n      getPrimaries: function(colorSpace) {\n        return this.spaces[colorSpace].primaries;\n      },\n      getTransfer: function(colorSpace) {\n        if (colorSpace === NoColorSpace) return LinearTransfer;\n        return this.spaces[colorSpace].transfer;\n      },\n      getLuminanceCoefficients: function(target, colorSpace = this.workingColorSpace) {\n        return target.fromArray(this.spaces[colorSpace].luminanceCoefficients);\n      },\n      define: function(colorSpaces) {\n        Object.assign(this.spaces, colorSpaces);\n      },\n      // Internal APIs\n      _getMatrix: function(targetMatrix, sourceColorSpace, targetColorSpace) {\n        return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ);\n      },\n      _getDrawingBufferColorSpace: function(colorSpace) {\n        return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace;\n      },\n      _getUnpackColorSpace: function(colorSpace = this.workingColorSpace) {\n        return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace;\n      }\n    };\n    const REC709_PRIMARIES = [0.64, 0.33, 0.3, 0.6, 0.15, 0.06];\n    const REC709_LUMINANCE_COEFFICIENTS = [0.2126, 0.7152, 0.0722];\n    const D65 = [0.3127, 0.329];\n    ColorManagement2.define({\n      [LinearSRGBColorSpace]: {\n        primaries: REC709_PRIMARIES,\n        whitePoint: D65,\n        transfer: LinearTransfer,\n        toXYZ: LINEAR_REC709_TO_XYZ,\n        fromXYZ: XYZ_TO_LINEAR_REC709,\n        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n        workingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n      },\n      [SRGBColorSpace]: {\n        primaries: REC709_PRIMARIES,\n        whitePoint: D65,\n        transfer: SRGBTransfer,\n        toXYZ: LINEAR_REC709_TO_XYZ,\n        fromXYZ: XYZ_TO_LINEAR_REC709,\n        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n      }\n    });\n    return ColorManagement2;\n  }\n  const ColorManagement = /* @__PURE__ */ createColorManagement();\n  function SRGBToLinear(c) {\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n  }\n  function LinearToSRGB(c) {\n    return c < 31308e-7 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n  }\n  class Quaternion {\n    constructor(x2 = 0, y = 0, z = 0, w = 1) {\n      this.isQuaternion = true;\n      this._x = x2;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n    }\n    static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      let x0 = src0[srcOffset0 + 0], y0 = src0[srcOffset0 + 1], z0 = src0[srcOffset0 + 2], w0 = src0[srcOffset0 + 3];\n      const x1 = src1[srcOffset1 + 0], y1 = src1[srcOffset1 + 1], z1 = src1[srcOffset1 + 2], w1 = src1[srcOffset1 + 3];\n      if (t === 0) {\n        dst[dstOffset + 0] = x0;\n        dst[dstOffset + 1] = y0;\n        dst[dstOffset + 2] = z0;\n        dst[dstOffset + 3] = w0;\n        return;\n      }\n      if (t === 1) {\n        dst[dstOffset + 0] = x1;\n        dst[dstOffset + 1] = y1;\n        dst[dstOffset + 2] = z1;\n        dst[dstOffset + 3] = w1;\n        return;\n      }\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        let s = 1 - t;\n        const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1, dir = cos >= 0 ? 1 : -1, sqrSin = 1 - cos * cos;\n        if (sqrSin > Number.EPSILON) {\n          const sin = Math.sqrt(sqrSin), len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n        const tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir;\n        if (s === 1 - t) {\n          const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n    static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n      const x0 = src0[srcOffset0];\n      const y0 = src0[srcOffset0 + 1];\n      const z0 = src0[srcOffset0 + 2];\n      const w0 = src0[srcOffset0 + 3];\n      const x1 = src1[srcOffset1];\n      const y1 = src1[srcOffset1 + 1];\n      const z1 = src1[srcOffset1 + 2];\n      const w1 = src1[srcOffset1 + 3];\n      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n      return dst;\n    }\n    get x() {\n      return this._x;\n    }\n    set x(value) {\n      this._x = value;\n      this._onChangeCallback();\n    }\n    get y() {\n      return this._y;\n    }\n    set y(value) {\n      this._y = value;\n      this._onChangeCallback();\n    }\n    get z() {\n      return this._z;\n    }\n    set z(value) {\n      this._z = value;\n      this._onChangeCallback();\n    }\n    get w() {\n      return this._w;\n    }\n    set w(value) {\n      this._w = value;\n      this._onChangeCallback();\n    }\n    set(x2, y, z, w) {\n      this._x = x2;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this._onChangeCallback();\n      return this;\n    }\n    clone() {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    }\n    copy(quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this._onChangeCallback();\n      return this;\n    }\n    setFromEuler(euler, update = true) {\n      const x2 = euler._x, y = euler._y, z = euler._z, order = euler._order;\n      const cos = Math.cos;\n      const sin = Math.sin;\n      const c1 = cos(x2 / 2);\n      const c2 = cos(y / 2);\n      const c3 = cos(z / 2);\n      const s1 = sin(x2 / 2);\n      const s2 = sin(y / 2);\n      const s3 = sin(z / 2);\n      switch (order) {\n        case "XYZ":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "YXZ":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        case "ZXY":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "ZYX":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        case "YZX":\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\n          break;\n        case "XZY":\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\n          break;\n        default:\n          console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + order);\n      }\n      if (update === true) this._onChangeCallback();\n      return this;\n    }\n    setFromAxisAngle(axis, angle) {\n      const halfAngle = angle / 2, s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this._onChangeCallback();\n      return this;\n    }\n    setFromRotationMatrix(m) {\n      const te = m.elements, m11 = te[0], m12 = te[4], m13 = te[8], m21 = te[1], m22 = te[5], m23 = te[9], m31 = te[2], m32 = te[6], m33 = te[10], trace = m11 + m22 + m33;\n      if (trace > 0) {\n        const s = 0.5 / Math.sqrt(trace + 1);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n      this._onChangeCallback();\n      return this;\n    }\n    setFromUnitVectors(vFrom, vTo) {\n      let r = vFrom.dot(vTo) + 1;\n      if (r < Number.EPSILON) {\n        r = 0;\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          this._x = -vFrom.y;\n          this._y = vFrom.x;\n          this._z = 0;\n          this._w = r;\n        } else {\n          this._x = 0;\n          this._y = -vFrom.z;\n          this._z = vFrom.y;\n          this._w = r;\n        }\n      } else {\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n        this._w = r;\n      }\n      return this.normalize();\n    }\n    angleTo(q) {\n      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n    }\n    rotateTowards(q, step) {\n      const angle = this.angleTo(q);\n      if (angle === 0) return this;\n      const t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    }\n    identity() {\n      return this.set(0, 0, 0, 1);\n    }\n    invert() {\n      return this.conjugate();\n    }\n    conjugate() {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this._onChangeCallback();\n      return this;\n    }\n    dot(v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    }\n    lengthSq() {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    }\n    length() {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    }\n    normalize() {\n      let l = this.length();\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n      this._onChangeCallback();\n      return this;\n    }\n    multiply(q) {\n      return this.multiplyQuaternions(this, q);\n    }\n    premultiply(q) {\n      return this.multiplyQuaternions(q, this);\n    }\n    multiplyQuaternions(a, b) {\n      const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n      const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this._onChangeCallback();\n      return this;\n    }\n    slerp(qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      const x2 = this._x, y = this._y, z = this._z, w = this._w;\n      let cosHalfTheta = w * qb._w + x2 * qb._x + y * qb._y + z * qb._z;\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n      if (cosHalfTheta >= 1) {\n        this._w = w;\n        this._x = x2;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n      const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        const s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x2 + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        this.normalize();\n        return this;\n      }\n      const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x2 * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this._onChangeCallback();\n      return this;\n    }\n    slerpQuaternions(qa, qb, t) {\n      return this.copy(qa).slerp(qb, t);\n    }\n    random() {\n      const theta1 = 2 * Math.PI * Math.random();\n      const theta2 = 2 * Math.PI * Math.random();\n      const x0 = Math.random();\n      const r1 = Math.sqrt(1 - x0);\n      const r2 = Math.sqrt(x0);\n      return this.set(\n        r1 * Math.sin(theta1),\n        r1 * Math.cos(theta1),\n        r2 * Math.sin(theta2),\n        r2 * Math.cos(theta2)\n      );\n    }\n    equals(quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    }\n    fromArray(array, offset = 0) {\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this._onChangeCallback();\n      return this;\n    }\n    toArray(array = [], offset = 0) {\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    }\n    fromBufferAttribute(attribute, index) {\n      this._x = attribute.getX(index);\n      this._y = attribute.getY(index);\n      this._z = attribute.getZ(index);\n      this._w = attribute.getW(index);\n      this._onChangeCallback();\n      return this;\n    }\n    toJSON() {\n      return this.toArray();\n    }\n    _onChange(callback) {\n      this._onChangeCallback = callback;\n      return this;\n    }\n    _onChangeCallback() {\n    }\n    *[Symbol.iterator]() {\n      yield this._x;\n      yield this._y;\n      yield this._z;\n      yield this._w;\n    }\n  }\n  class Vector3 {\n    constructor(x2 = 0, y = 0, z = 0) {\n      Vector3.prototype.isVector3 = true;\n      this.x = x2;\n      this.y = y;\n      this.z = z;\n    }\n    set(x2, y, z) {\n      if (z === void 0) z = this.z;\n      this.x = x2;\n      this.y = y;\n      this.z = z;\n      return this;\n    }\n    setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    }\n    setX(x2) {\n      this.x = x2;\n      return this;\n    }\n    setY(y) {\n      this.y = y;\n      return this;\n    }\n    setZ(z) {\n      this.z = z;\n      return this;\n    }\n    setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n        case 1:\n          this.y = value;\n          break;\n        case 2:\n          this.z = value;\n          break;\n        default:\n          throw new Error("index is out of range: " + index);\n      }\n      return this;\n    }\n    getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n        case 1:\n          return this.y;\n        case 2:\n          return this.z;\n        default:\n          throw new Error("index is out of range: " + index);\n      }\n    }\n    clone() {\n      return new this.constructor(this.x, this.y, this.z);\n    }\n    copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    }\n    add(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    }\n    addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    }\n    addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    }\n    addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    }\n    sub(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    }\n    subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    }\n    subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    }\n    multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    }\n    multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    }\n    multiplyVectors(a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    }\n    applyEuler(euler) {\n      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n    }\n    applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n    }\n    applyMatrix3(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      this.x = e[0] * x2 + e[3] * y + e[6] * z;\n      this.y = e[1] * x2 + e[4] * y + e[7] * z;\n      this.z = e[2] * x2 + e[5] * y + e[8] * z;\n      return this;\n    }\n    applyNormalMatrix(m) {\n      return this.applyMatrix3(m).normalize();\n    }\n    applyMatrix4(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      const w = 1 / (e[3] * x2 + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x2 + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x2 + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x2 + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    }\n    applyQuaternion(q) {\n      const vx = this.x, vy = this.y, vz = this.z;\n      const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n      const tx = 2 * (qy * vz - qz * vy);\n      const ty = 2 * (qz * vx - qx * vz);\n      const tz = 2 * (qx * vy - qy * vx);\n      this.x = vx + qw * tx + qy * tz - qz * ty;\n      this.y = vy + qw * ty + qz * tx - qx * tz;\n      this.z = vz + qw * tz + qx * ty - qy * tx;\n      return this;\n    }\n    project(camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    }\n    unproject(camera) {\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n    }\n    transformDirection(m) {\n      const x2 = this.x, y = this.y, z = this.z;\n      const e = m.elements;\n      this.x = e[0] * x2 + e[4] * y + e[8] * z;\n      this.y = e[1] * x2 + e[5] * y + e[9] * z;\n      this.z = e[2] * x2 + e[6] * y + e[10] * z;\n      return this.normalize();\n    }\n    divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    }\n    divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    }\n    min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    }\n    max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    }\n    clamp(min, max2) {\n      this.x = clamp(this.x, min.x, max2.x);\n      this.y = clamp(this.y, min.y, max2.y);\n      this.z = clamp(this.z, min.z, max2.z);\n      return this;\n    }\n    clampScalar(minVal, maxVal) {\n      this.x = clamp(this.x, minVal, maxVal);\n      this.y = clamp(this.y, minVal, maxVal);\n      this.z = clamp(this.z, minVal, maxVal);\n      return this;\n    }\n    clampLength(min, max2) {\n      const length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max2));\n    }\n    floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    }\n    ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    }\n    round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    }\n    roundToZero() {\n      this.x = Math.trunc(this.x);\n      this.y = Math.trunc(this.y);\n      this.z = Math.trunc(this.z);\n      return this;\n    }\n    negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    }\n    dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    // TODO lengthSquared?\n    lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    }\n    normalize() {\n      return this.divideScalar(this.length() || 1);\n    }\n    setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    }\n    lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    }\n    lerpVectors(v1, v2, alpha) {\n      this.x = v1.x + (v2.x - v1.x) * alpha;\n      this.y = v1.y + (v2.y - v1.y) * alpha;\n      this.z = v1.z + (v2.z - v1.z) * alpha;\n      return this;\n    }\n    cross(v) {\n      return this.crossVectors(this, v);\n    }\n    crossVectors(a, b) {\n      const ax = a.x, ay = a.y, az = a.z;\n      const bx = b.x, by = b.y, bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    }\n    projectOnVector(v) {\n      const denominator = v.lengthSq();\n      if (denominator === 0) return this.set(0, 0, 0);\n      const scalar = v.dot(this) / denominator;\n      return this.copy(v).multiplyScalar(scalar);\n    }\n    projectOnPlane(planeNormal) {\n      _vector$c.copy(this).projectOnVector(planeNormal);\n      return this.sub(_vector$c);\n    }\n    reflect(normal) {\n      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    }\n    angleTo(v) {\n      const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n      if (denominator === 0) return Math.PI / 2;\n      const theta = this.dot(v) / denominator;\n      return Math.acos(clamp(theta, -1, 1));\n    }\n    distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    }\n    distanceToSquared(v) {\n      const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    }\n    manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    }\n    setFromSpherical(s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    }\n    setFromSphericalCoords(radius, phi, theta) {\n      const sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    }\n    setFromCylindrical(c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    }\n    setFromCylindricalCoords(radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    }\n    setFromMatrixPosition(m) {\n      const e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    }\n    setFromMatrixScale(m) {\n      const sx = this.setFromMatrixColumn(m, 0).length();\n      const sy = this.setFromMatrixColumn(m, 1).length();\n      const sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    }\n    setFromMatrixColumn(m, index) {\n      return this.fromArray(m.elements, index * 4);\n    }\n    setFromMatrix3Column(m, index) {\n      return this.fromArray(m.elements, index * 3);\n    }\n    setFromEuler(e) {\n      this.x = e._x;\n      this.y = e._y;\n      this.z = e._z;\n      return this;\n    }\n    setFromColor(c) {\n      this.x = c.r;\n      this.y = c.g;\n      this.z = c.b;\n      return this;\n    }\n    equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    }\n    fromArray(array, offset = 0) {\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    }\n    toArray(array = [], offset = 0) {\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    }\n    fromBufferAttribute(attribute, index) {\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n    random() {\n      this.x = Math.random();\n      this.y = Math.random();\n      this.z = Math.random();\n      return this;\n    }\n    randomDirection() {\n      const theta = Math.random() * Math.PI * 2;\n      const u = Math.random() * 2 - 1;\n      const c = Math.sqrt(1 - u * u);\n      this.x = c * Math.cos(theta);\n      this.y = u;\n      this.z = c * Math.sin(theta);\n      return this;\n    }\n    *[Symbol.iterator]() {\n      yield this.x;\n      yield this.y;\n      yield this.z;\n    }\n  }\n  const _vector$c = /* @__PURE__ */ new Vector3();\n  const _quaternion$4 = /* @__PURE__ */ new Quaternion();\n  class Box3 {\n    constructor(min = new Vector3(Infinity, Infinity, Infinity), max2 = new Vector3(-Infinity, -Infinity, -Infinity)) {\n      this.isBox3 = true;\n      this.min = min;\n      this.max = max2;\n    }\n    set(min, max2) {\n      this.min.copy(min);\n      this.max.copy(max2);\n      return this;\n    }\n    setFromArray(array) {\n      this.makeEmpty();\n      for (let i2 = 0, il = array.length; i2 < il; i2 += 3) {\n        this.expandByPoint(_vector$b.fromArray(array, i2));\n      }\n      return this;\n    }\n    setFromBufferAttribute(attribute) {\n      this.makeEmpty();\n      for (let i2 = 0, il = attribute.count; i2 < il; i2++) {\n        this.expandByPoint(_vector$b.fromBufferAttribute(attribute, i2));\n      }\n      return this;\n    }\n    setFromPoints(points) {\n      this.makeEmpty();\n      for (let i2 = 0, il = points.length; i2 < il; i2++) {\n        this.expandByPoint(points[i2]);\n      }\n      return this;\n    }\n    setFromCenterAndSize(center, size) {\n      const halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    }\n    setFromObject(object, precise = false) {\n      this.makeEmpty();\n      return this.expandByObject(object, precise);\n    }\n    clone() {\n      return new this.constructor().copy(this);\n    }\n    copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    }\n    makeEmpty() {\n      this.min.x = this.min.y = this.min.z = Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    }\n    isEmpty() {\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    }\n    getCenter(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    }\n    getSize(target) {\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    }\n    expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    }\n    expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    }\n    expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    }\n    expandByObject(object, precise = false) {\n      object.updateWorldMatrix(false, false);\n      const geometry = object.geometry;\n      if (geometry !== void 0) {\n        const positionAttribute = geometry.getAttribute("position");\n        if (precise === true && positionAttribute !== void 0 && object.isInstancedMesh !== true) {\n          for (let i2 = 0, l = positionAttribute.count; i2 < l; i2++) {\n            if (object.isMesh === true) {\n              object.getVertexPosition(i2, _vector$b);\n            } else {\n              _vector$b.fromBufferAttribute(positionAttribute, i2);\n            }\n            _vector$b.applyMatrix4(object.matrixWorld);\n            this.expandByPoint(_vector$b);\n          }\n        } else {\n          if (object.boundingBox !== void 0) {\n            if (object.boundingBox === null) {\n              object.computeBoundingBox();\n            }\n            _box$4.copy(object.boundingBox);\n          } else {\n            if (geometry.boundingBox === null) {\n              geometry.computeBoundingBox();\n            }\n            _box$4.copy(geometry.boundingBox);\n          }\n          _box$4.applyMatrix4(object.matrixWorld);\n          this.union(_box$4);\n        }\n      }\n      const children = object.children;\n      for (let i2 = 0, l = children.length; i2 < l; i2++) {\n        this.expandByObject(children[i2], precise);\n      }\n      return this;\n    }\n    containsPoint(point) {\n      return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y && point.z >= this.min.z && point.z <= this.max.z;\n    }\n    containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    }\n    getParameter(point, target) {\n      return target.set(\n        (point.x - this.min.x) / (this.max.x - this.min.x),\n        (point.y - this.min.y) / (this.max.y - this.min.y),\n        (point.z - this.min.z) / (this.max.z - this.min.z)\n      );\n    }\n    intersectsBox(box) {\n      return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y && box.max.z >= this.min.z && box.min.z <= this.max.z;\n    }\n    intersectsSphere(sphere) {\n      this.clampPoint(sphere.center, _vector$b);\n      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    }\n    intersectsPlane(plane) {\n      let min, max2;\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max2 = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max2 = plane.normal.x * this.min.x;\n      }\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max2 += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max2 += plane.normal.y * this.min.y;\n      }\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max2 += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max2 += plane.normal.z * this.min.z;\n      }\n      return min <= -plane.constant && max2 >= -plane.constant;\n    }\n    intersectsTriangle(triangle) {\n      if (this.isEmpty()) {\n        return false;\n      }\n      this.getCenter(_center);\n      _extents.subVectors(this.max, _center);\n      _v0$2.subVectors(triangle.a, _center);\n      _v1$7.subVectors(triangle.b, _center);\n      _v2$4.subVectors(triangle.c, _center);\n      _f0.subVectors(_v1$7, _v0$2);\n      _f1.subVectors(_v2$4, _v1$7);\n      _f2.subVectors(_v0$2, _v2$4);\n      let axes = [\n        0,\n        -_f0.z,\n        _f0.y,\n        0,\n        -_f1.z,\n        _f1.y,\n        0,\n        -_f2.z,\n        _f2.y,\n        _f0.z,\n        0,\n        -_f0.x,\n        _f1.z,\n        0,\n        -_f1.x,\n        _f2.z,\n        0,\n        -_f2.x,\n        -_f0.y,\n        _f0.x,\n        0,\n        -_f1.y,\n        _f1.x,\n        0,\n        -_f2.y,\n        _f2.x,\n        0\n      ];\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n        return false;\n      }\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n        return false;\n      }\n      _triangleNormal.crossVectors(_f0, _f1);\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n      return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);\n    }\n    clampPoint(point, target) {\n      return target.copy(point).clamp(this.min, this.max);\n    }\n    distanceToPoint(point) {\n      return this.clampPoint(point, _vector$b).distanceTo(point);\n    }\n    getBoundingSphere(target) {\n      if (this.isEmpty()) {\n        target.makeEmpty();\n      } else {\n        this.getCenter(target.center);\n        target.radius = this.getSize(_vector$b).length() * 0.5;\n      }\n      return target;\n    }\n    intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    }\n    union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    }\n    applyMatrix4(matrix) {\n      if (this.isEmpty()) return this;\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix);\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix);\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix);\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix);\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix);\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix);\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix);\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);\n      this.setFromPoints(_points);\n      return this;\n    }\n    translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    }\n    equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  }\n  const _points = [\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3(),\n    /* @__PURE__ */ new Vector3()\n  ];\n  const _vector$b = /* @__PURE__ */ new Vector3();\n  const _box$4 = /* @__PURE__ */ new Box3();\n  const _v0$2 = /* @__PURE__ */ new Vector3();\n  const _v1$7 = /* @__PURE__ */ new Vector3();\n  const _v2$4 = /* @__PURE__ */ new Vector3();\n  const _f0 = /* @__PURE__ */ new Vector3();\n  const _f1 = /* @__PURE__ */ new Vector3();\n  const _f2 = /* @__PURE__ */ new Vector3();\n  const _center = /* @__PURE__ */ new Vector3();\n  const _extents = /* @__PURE__ */ new Vector3();\n  const _triangleNormal = /* @__PURE__ */ new Vector3();\n  const _testAxis = /* @__PURE__ */ new Vector3();\n  function satForAxes(axes, v0, v1, v2, extents) {\n    for (let i2 = 0, j = axes.length - 3; i2 <= j; i2 += 3) {\n      _testAxis.fromArray(axes, i2);\n      const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);\n      const p0 = v0.dot(_testAxis);\n      const p1 = v1.dot(_testAxis);\n      const p2 = v2.dot(_testAxis);\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const _colorKeywords = {\n    "aliceblue": 15792383,\n    "antiquewhite": 16444375,\n    "aqua": 65535,\n    "aquamarine": 8388564,\n    "azure": 15794175,\n    "beige": 16119260,\n    "bisque": 16770244,\n    "black": 0,\n    "blanchedalmond": 16772045,\n    "blue": 255,\n    "blueviolet": 9055202,\n    "brown": 10824234,\n    "burlywood": 14596231,\n    "cadetblue": 6266528,\n    "chartreuse": 8388352,\n    "chocolate": 13789470,\n    "coral": 16744272,\n    "cornflowerblue": 6591981,\n    "cornsilk": 16775388,\n    "crimson": 14423100,\n    "cyan": 65535,\n    "darkblue": 139,\n    "darkcyan": 35723,\n    "darkgoldenrod": 12092939,\n    "darkgray": 11119017,\n    "darkgreen": 25600,\n    "darkgrey": 11119017,\n    "darkkhaki": 12433259,\n    "darkmagenta": 9109643,\n    "darkolivegreen": 5597999,\n    "darkorange": 16747520,\n    "darkorchid": 10040012,\n    "darkred": 9109504,\n    "darksalmon": 15308410,\n    "darkseagreen": 9419919,\n    "darkslateblue": 4734347,\n    "darkslategray": 3100495,\n    "darkslategrey": 3100495,\n    "darkturquoise": 52945,\n    "darkviolet": 9699539,\n    "deeppink": 16716947,\n    "deepskyblue": 49151,\n    "dimgray": 6908265,\n    "dimgrey": 6908265,\n    "dodgerblue": 2003199,\n    "firebrick": 11674146,\n    "floralwhite": 16775920,\n    "forestgreen": 2263842,\n    "fuchsia": 16711935,\n    "gainsboro": 14474460,\n    "ghostwhite": 16316671,\n    "gold": 16766720,\n    "goldenrod": 14329120,\n    "gray": 8421504,\n    "green": 32768,\n    "greenyellow": 11403055,\n    "grey": 8421504,\n    "honeydew": 15794160,\n    "hotpink": 16738740,\n    "indianred": 13458524,\n    "indigo": 4915330,\n    "ivory": 16777200,\n    "khaki": 15787660,\n    "lavender": 15132410,\n    "lavenderblush": 16773365,\n    "lawngreen": 8190976,\n    "lemonchiffon": 16775885,\n    "lightblue": 11393254,\n    "lightcoral": 15761536,\n    "lightcyan": 14745599,\n    "lightgoldenrodyellow": 16448210,\n    "lightgray": 13882323,\n    "lightgreen": 9498256,\n    "lightgrey": 13882323,\n    "lightpink": 16758465,\n    "lightsalmon": 16752762,\n    "lightseagreen": 2142890,\n    "lightskyblue": 8900346,\n    "lightslategray": 7833753,\n    "lightslategrey": 7833753,\n    "lightsteelblue": 11584734,\n    "lightyellow": 16777184,\n    "lime": 65280,\n    "limegreen": 3329330,\n    "linen": 16445670,\n    "magenta": 16711935,\n    "maroon": 8388608,\n    "mediumaquamarine": 6737322,\n    "mediumblue": 205,\n    "mediumorchid": 12211667,\n    "mediumpurple": 9662683,\n    "mediumseagreen": 3978097,\n    "mediumslateblue": 8087790,\n    "mediumspringgreen": 64154,\n    "mediumturquoise": 4772300,\n    "mediumvioletred": 13047173,\n    "midnightblue": 1644912,\n    "mintcream": 16121850,\n    "mistyrose": 16770273,\n    "moccasin": 16770229,\n    "navajowhite": 16768685,\n    "navy": 128,\n    "oldlace": 16643558,\n    "olive": 8421376,\n    "olivedrab": 7048739,\n    "orange": 16753920,\n    "orangered": 16729344,\n    "orchid": 14315734,\n    "palegoldenrod": 15657130,\n    "palegreen": 10025880,\n    "paleturquoise": 11529966,\n    "palevioletred": 14381203,\n    "papayawhip": 16773077,\n    "peachpuff": 16767673,\n    "peru": 13468991,\n    "pink": 16761035,\n    "plum": 14524637,\n    "powderblue": 11591910,\n    "purple": 8388736,\n    "rebeccapurple": 6697881,\n    "red": 16711680,\n    "rosybrown": 12357519,\n    "royalblue": 4286945,\n    "saddlebrown": 9127187,\n    "salmon": 16416882,\n    "sandybrown": 16032864,\n    "seagreen": 3050327,\n    "seashell": 16774638,\n    "sienna": 10506797,\n    "silver": 12632256,\n    "skyblue": 8900331,\n    "slateblue": 6970061,\n    "slategray": 7372944,\n    "slategrey": 7372944,\n    "snow": 16775930,\n    "springgreen": 65407,\n    "steelblue": 4620980,\n    "tan": 13808780,\n    "teal": 32896,\n    "thistle": 14204888,\n    "tomato": 16737095,\n    "turquoise": 4251856,\n    "violet": 15631086,\n    "wheat": 16113331,\n    "white": 16777215,\n    "whitesmoke": 16119285,\n    "yellow": 16776960,\n    "yellowgreen": 10145074\n  };\n  const _hslA = { h: 0, s: 0, l: 0 };\n  const _hslB = { h: 0, s: 0, l: 0 };\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n    return p;\n  }\n  class Color {\n    constructor(r, g, b) {\n      this.isColor = true;\n      this.r = 1;\n      this.g = 1;\n      this.b = 1;\n      return this.set(r, g, b);\n    }\n    set(r, g, b) {\n      if (g === void 0 && b === void 0) {\n        const value = r;\n        if (value && value.isColor) {\n          this.copy(value);\n        } else if (typeof value === "number") {\n          this.setHex(value);\n        } else if (typeof value === "string") {\n          this.setStyle(value);\n        }\n      } else {\n        this.setRGB(r, g, b);\n      }\n      return this;\n    }\n    setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n    setHex(hex, colorSpace = SRGBColorSpace) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n    setRGB(r, g, b, colorSpace = ColorManagement.workingColorSpace) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n    setHSL(h, s, l, colorSpace = ColorManagement.workingColorSpace) {\n      h = euclideanModulo(h, 1);\n      s = clamp(s, 0, 1);\n      l = clamp(l, 0, 1);\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        const q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n      ColorManagement.toWorkingColorSpace(this, colorSpace);\n      return this;\n    }\n    setStyle(style, colorSpace = SRGBColorSpace) {\n      function handleAlpha(string) {\n        if (string === void 0) return;\n        if (parseFloat(string) < 1) {\n          console.warn("THREE.Color: Alpha component of " + style + " will be ignored.");\n        }\n      }\n      let m;\n      if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {\n        let color;\n        const name = m[1];\n        const components = m[2];\n        switch (name) {\n          case "rgb":\n          case "rgba":\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setRGB(\n                Math.min(255, parseInt(color[1], 10)) / 255,\n                Math.min(255, parseInt(color[2], 10)) / 255,\n                Math.min(255, parseInt(color[3], 10)) / 255,\n                colorSpace\n              );\n            }\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setRGB(\n                Math.min(100, parseInt(color[1], 10)) / 100,\n                Math.min(100, parseInt(color[2], 10)) / 100,\n                Math.min(100, parseInt(color[3], 10)) / 100,\n                colorSpace\n              );\n            }\n            break;\n          case "hsl":\n          case "hsla":\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              handleAlpha(color[4]);\n              return this.setHSL(\n                parseFloat(color[1]) / 360,\n                parseFloat(color[2]) / 100,\n                parseFloat(color[3]) / 100,\n                colorSpace\n              );\n            }\n            break;\n          default:\n            console.warn("THREE.Color: Unknown color model " + style);\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        const hex = m[1];\n        const size = hex.length;\n        if (size === 3) {\n          return this.setRGB(\n            parseInt(hex.charAt(0), 16) / 15,\n            parseInt(hex.charAt(1), 16) / 15,\n            parseInt(hex.charAt(2), 16) / 15,\n            colorSpace\n          );\n        } else if (size === 6) {\n          return this.setHex(parseInt(hex, 16), colorSpace);\n        } else {\n          console.warn("THREE.Color: Invalid hex color " + style);\n        }\n      } else if (style && style.length > 0) {\n        return this.setColorName(style, colorSpace);\n      }\n      return this;\n    }\n    setColorName(style, colorSpace = SRGBColorSpace) {\n      const hex = _colorKeywords[style.toLowerCase()];\n      if (hex !== void 0) {\n        this.setHex(hex, colorSpace);\n      } else {\n        console.warn("THREE.Color: Unknown color " + style);\n      }\n      return this;\n    }\n    clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n    copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n    copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n    copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n    convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n    convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n    getHex(colorSpace = SRGBColorSpace) {\n      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n      return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));\n    }\n    getHexString(colorSpace = SRGBColorSpace) {\n      return ("000000" + this.getHex(colorSpace).toString(16)).slice(-6);\n    }\n    getHSL(target, colorSpace = ColorManagement.workingColorSpace) {\n      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n      const r = _color.r, g = _color.g, b = _color.b;\n      const max2 = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      let hue, saturation;\n      const lightness = (min + max2) / 2;\n      if (min === max2) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        const delta = max2 - min;\n        saturation = lightness <= 0.5 ? delta / (max2 + min) : delta / (2 - max2 - min);\n        switch (max2) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n        hue /= 6;\n      }\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n    getRGB(target, colorSpace = ColorManagement.workingColorSpace) {\n      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n      target.r = _color.r;\n      target.g = _color.g;\n      target.b = _color.b;\n      return target;\n    }\n    getStyle(colorSpace = SRGBColorSpace) {\n      ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n      const r = _color.r, g = _color.g, b = _color.b;\n      if (colorSpace !== SRGBColorSpace) {\n        return `color(${colorSpace} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})`;\n      }\n      return `rgb(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)})`;\n    }\n    offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);\n    }\n    add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n    addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n    addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n    sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n    multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n    multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n    lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n    lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n    lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      const h = lerp(_hslA.h, _hslB.h, alpha);\n      const s = lerp(_hslA.s, _hslB.s, alpha);\n      const l = lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n    setFromVector3(v) {\n      this.r = v.x;\n      this.g = v.y;\n      this.b = v.z;\n      return this;\n    }\n    applyMatrix3(m) {\n      const r = this.r, g = this.g, b = this.b;\n      const e = m.elements;\n      this.r = e[0] * r + e[3] * g + e[6] * b;\n      this.g = e[1] * r + e[4] * g + e[7] * b;\n      this.b = e[2] * r + e[5] * g + e[8] * b;\n      return this;\n    }\n    equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n    fromArray(array, offset = 0) {\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n    toArray(array = [], offset = 0) {\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n    fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n      return this;\n    }\n    toJSON() {\n      return this.getHex();\n    }\n    *[Symbol.iterator]() {\n      yield this.r;\n      yield this.g;\n      yield this.b;\n    }\n  }\n  const _color = /* @__PURE__ */ new Color();\n  Color.NAMES = _colorKeywords;\n  if (typeof __THREE_DEVTOOLS__ !== "undefined") {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {\n      revision: REVISION\n    } }));\n  }\n  if (typeof window !== "undefined") {\n    if (window.__THREE__) {\n      console.warn("WARNING: Multiple instances of Three.js being imported.");\n    } else {\n      window.__THREE__ = REVISION;\n    }\n  }\n  const LN_SCALE_MIN = -12;\n  const LN_SCALE_MAX = 9;\n  const LN_SCALE_ZERO = -30;\n  const SCALE_ZERO = Math.exp(LN_SCALE_ZERO);\n  const SPLAT_TEX_WIDTH_BITS = 11;\n  const SPLAT_TEX_HEIGHT_BITS = 11;\n  const SPLAT_TEX_WIDTH = 1 << SPLAT_TEX_WIDTH_BITS;\n  const SPLAT_TEX_HEIGHT = 1 << SPLAT_TEX_HEIGHT_BITS;\n  const SPLAT_TEX_MIN_HEIGHT = 1;\n  function unindentLines(s) {\n    var _a2;\n    let seenNonEmpty = false;\n    const lines = s.split("\\n").map((line) => {\n      const trimmedLine = line.trimEnd();\n      if (seenNonEmpty) {\n        return trimmedLine;\n      }\n      if (trimmedLine.length > 0) {\n        seenNonEmpty = true;\n        return trimmedLine;\n      }\n      return null;\n    }).filter((line) => line != null);\n    while (lines.length > 0 && lines[lines.length - 1].length === 0) {\n      lines.pop();\n    }\n    if (lines.length === 0) {\n      return [];\n    }\n    const indent = (_a2 = lines[0].match(/^\\s*/)) == null ? void 0 : _a2[0];\n    if (!indent) {\n      return lines;\n    }\n    const regex = new RegExp(`^${indent}`);\n    return lines.map((line) => line.replace(regex, ""));\n  }\n  function unindent(s) {\n    return unindentLines(s).join("\\n");\n  }\n  const f32buffer = new Float32Array(1);\n  const u32buffer = new Uint32Array(f32buffer.buffer);\n  function toHalf(f) {\n    f32buffer[0] = f;\n    const bits2 = u32buffer[0];\n    const sign = bits2 >> 31 & 1;\n    const exp = bits2 >> 23 & 255;\n    const frac = bits2 & 8388607;\n    const halfSign = sign << 15;\n    if (exp === 255) {\n      if (frac !== 0) {\n        return halfSign | 32767;\n      }\n      return halfSign | 31744;\n    }\n    const newExp = exp - 127 + 15;\n    if (newExp >= 31) {\n      return halfSign | 31744;\n    }\n    if (newExp <= 0) {\n      if (newExp < -10) {\n        return halfSign;\n      }\n      const subFrac = (frac | 8388608) >> 1 - newExp + 13;\n      return halfSign | subFrac;\n    }\n    const halfFrac = frac >> 13;\n    return halfSign | newExp << 10 | halfFrac;\n  }\n  function fromHalf(h) {\n    const sign = h >> 15 & 1;\n    const exp = h >> 10 & 31;\n    const frac = h & 1023;\n    let f32bits;\n    if (exp === 0) {\n      if (frac === 0) {\n        f32bits = sign << 31;\n      } else {\n        let mant = frac;\n        let e = -14;\n        while ((mant & 1024) === 0) {\n          mant <<= 1;\n          e--;\n        }\n        mant &= 1023;\n        const newExp = e + 127;\n        const newFrac = mant << 13;\n        f32bits = sign << 31 | newExp << 23 | newFrac;\n      }\n    } else if (exp === 31) {\n      if (frac === 0) {\n        f32bits = sign << 31 | 2139095040;\n      } else {\n        f32bits = sign << 31 | 2143289344;\n      }\n    } else {\n      const newExp = exp - 15 + 127;\n      const newFrac = frac << 13;\n      f32bits = sign << 31 | newExp << 23 | newFrac;\n    }\n    u32buffer[0] = f32bits;\n    return f32buffer[0];\n  }\n  function floatToUint8(v) {\n    return Math.max(0, Math.min(255, Math.round(v * 255)));\n  }\n  function getArrayBuffers(ctx) {\n    const buffers = [];\n    const seen = /* @__PURE__ */ new Set();\n    function traverse(obj) {\n      if (obj && typeof obj === "object" && !seen.has(obj)) {\n        seen.add(obj);\n        if (obj instanceof ArrayBuffer) {\n          buffers.push(obj);\n        } else if (ArrayBuffer.isView(obj)) {\n          buffers.push(obj.buffer);\n        } else if (Array.isArray(obj)) {\n          obj.forEach(traverse);\n        } else {\n          Object.values(obj).forEach(traverse);\n        }\n      }\n    }\n    traverse(ctx);\n    return buffers;\n  }\n  function setPackedSplat(packedSplats, index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const uA = floatToUint8(opacity);\n    const uQuat = encodeQuatOctXy88R8(\n      new Quaternion(quatX, quatY, quatZ, quatW)\n    );\n    const uQuatX = uQuat & 255;\n    const uQuatY = uQuat >>> 8 & 255;\n    const uQuatZ = uQuat >>> 16 & 255;\n    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;\n    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;\n    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);\n    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uCenterX = toHalf(x2);\n    const uCenterY = toHalf(y);\n    const uCenterZ = toHalf(z);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;\n    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;\n    packedSplats[i4 + 2] = uCenterZ | uQuatX << 16 | uQuatY << 24;\n    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | uQuatZ << 24;\n  }\n  function setPackedSplatCenter(packedSplats, index, x2, y, z) {\n    const uCenterX = toHalf(x2);\n    const uCenterY = toHalf(y);\n    const uCenterZ = toHalf(z);\n    const i4 = index * 4;\n    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;\n    packedSplats[i4 + 2] = uCenterZ | packedSplats[i4 + 2] & 4294901760;\n  }\n  function setPackedSplatScales(packedSplats, index, scaleX, scaleY, scaleZ, encoding) {\n    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;\n    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;\n    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);\n    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(\n      255,\n      Math.max(\n        1,\n        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1\n      )\n    );\n    const i4 = index * 4;\n    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | packedSplats[i4 + 3] & 4278190080;\n  }\n  function setPackedSplatQuat(packedSplats, index, quatX, quatY, quatZ, quatW) {\n    const uQuat = encodeQuatOctXy88R8(\n      new Quaternion(quatX, quatY, quatZ, quatW)\n    );\n    const uQuatX = uQuat & 255;\n    const uQuatY = uQuat >>> 8 & 255;\n    const uQuatZ = uQuat >>> 16 & 255;\n    const i4 = index * 4;\n    packedSplats[i4 + 2] = packedSplats[i4 + 2] & 65535 | uQuatX << 16 | uQuatY << 24;\n    packedSplats[i4 + 3] = packedSplats[i4 + 3] & 16777215 | uQuatZ << 24;\n  }\n  function setPackedSplatRgba(packedSplats, index, r, g, b, a, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const uA = floatToUint8(a);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;\n  }\n  function setPackedSplatRgb(packedSplats, index, r, g, b, encoding) {\n    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;\n    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;\n    const rgbRange = rgbMax - rgbMin;\n    const uR = floatToUint8((r - rgbMin) / rgbRange);\n    const uG = floatToUint8((g - rgbMin) / rgbRange);\n    const uB = floatToUint8((b - rgbMin) / rgbRange);\n    const i4 = index * 4;\n    packedSplats[i4] = uR | uG << 8 | uB << 16 | packedSplats[i4] & 4278190080;\n  }\n  function setPackedSplatOpacity(packedSplats, index, opacity) {\n    const uA = floatToUint8(opacity);\n    const i4 = index * 4;\n    packedSplats[i4] = packedSplats[i4] & 16777215 | uA << 24;\n  }\n  new Vector3();\n  new Vector3();\n  new Color();\n  function getTextureSize(numSplats) {\n    const width = SPLAT_TEX_WIDTH;\n    const height = Math.max(\n      SPLAT_TEX_MIN_HEIGHT,\n      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))\n    );\n    const depth = Math.ceil(numSplats / (width * height));\n    const maxSplats = width * height * depth;\n    return { width, height, depth, maxSplats };\n  }\n  function computeMaxSplats(numSplats) {\n    const width = SPLAT_TEX_WIDTH;\n    const height = Math.max(\n      SPLAT_TEX_MIN_HEIGHT,\n      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))\n    );\n    const depth = Math.ceil(numSplats / (width * height));\n    return width * height * depth;\n  }\n  unindent(`\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n`);\n  function encodeQuatOctXy88R8(q) {\n    const qnorm = q.clone().normalize();\n    if (qnorm.w < 0) {\n      qnorm.set(-qnorm.x, -qnorm.y, -qnorm.z, -qnorm.w);\n    }\n    const theta = 2 * Math.acos(qnorm.w);\n    const xyz_norm = Math.sqrt(\n      qnorm.x * qnorm.x + qnorm.y * qnorm.y + qnorm.z * qnorm.z\n    );\n    const axis = xyz_norm < 1e-6 ? new Vector3(1, 0, 0) : new Vector3(qnorm.x, qnorm.y, qnorm.z).divideScalar(xyz_norm);\n    const sum = Math.abs(axis.x) + Math.abs(axis.y) + Math.abs(axis.z);\n    let p_x = axis.x / sum;\n    let p_y = axis.y / sum;\n    if (axis.z < 0) {\n      const tmp = p_x;\n      p_x = (1 - Math.abs(p_y)) * (p_x >= 0 ? 1 : -1);\n      p_y = (1 - Math.abs(tmp)) * (p_y >= 0 ? 1 : -1);\n    }\n    const u_f = p_x * 0.5 + 0.5;\n    const v_f = p_y * 0.5 + 0.5;\n    const quantU = Math.round(u_f * 255);\n    const quantV = Math.round(v_f * 255);\n    const angleInt = Math.round(theta * (255 / Math.PI));\n    return angleInt << 16 | quantV << 8 | quantU;\n  }\n  function packSint8Bytes(b0, b1, b22, b3) {\n    const clampedB0 = Math.max(-127, Math.min(127, b0 * 127));\n    const clampedB1 = Math.max(-127, Math.min(127, b1 * 127));\n    const clampedB2 = Math.max(-127, Math.min(127, b22 * 127));\n    const clampedB3 = Math.max(-127, Math.min(127, b3 * 127));\n    return clampedB0 & 255 | (clampedB1 & 255) << 8 | (clampedB2 & 255) << 16 | (clampedB3 & 255) << 24;\n  }\n  function encodeSh1Rgb(sh1Array, index, sh1Rgb, encoding) {\n    const sh1Min = (encoding == null ? void 0 : encoding.sh1Min) ?? -1;\n    const sh1Max = (encoding == null ? void 0 : encoding.sh1Max) ?? 1;\n    const sh1Mid = 0.5 * (sh1Min + sh1Max);\n    const sh1Scale = 126 / (sh1Max - sh1Min);\n    const base = index * 2;\n    for (let i2 = 0; i2 < 9; ++i2) {\n      const s = (sh1Rgb[i2] - sh1Mid) * sh1Scale;\n      const value = Math.round(Math.max(-63, Math.min(63, s))) & 127;\n      const bitStart = i2 * 7;\n      const bitEnd = bitStart + 7;\n      const wordStart = Math.floor(bitStart / 32);\n      const bitOffset = bitStart - wordStart * 32;\n      const firstWord = value << bitOffset & 4294967295;\n      sh1Array[base + wordStart] |= firstWord;\n      if (bitEnd > wordStart * 32 + 32) {\n        const secondWord = value >>> 32 - bitOffset & 4294967295;\n        sh1Array[base + wordStart + 1] |= secondWord;\n      }\n    }\n  }\n  function encodeSh2Rgb(sh2Array, index, sh2Rgb, encoding) {\n    const sh2Min = (encoding == null ? void 0 : encoding.sh2Min) ?? -1;\n    const sh2Max = (encoding == null ? void 0 : encoding.sh2Max) ?? 1;\n    const sh2Mid = 0.5 * (sh2Min + sh2Max);\n    const sh2Scale = 2 / (sh2Max - sh2Min);\n    sh2Array[index * 4 + 0] = packSint8Bytes(\n      (sh2Rgb[0] - sh2Mid) * sh2Scale,\n      (sh2Rgb[1] - sh2Mid) * sh2Scale,\n      (sh2Rgb[2] - sh2Mid) * sh2Scale,\n      (sh2Rgb[3] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 1] = packSint8Bytes(\n      (sh2Rgb[4] - sh2Mid) * sh2Scale,\n      (sh2Rgb[5] - sh2Mid) * sh2Scale,\n      (sh2Rgb[6] - sh2Mid) * sh2Scale,\n      (sh2Rgb[7] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 2] = packSint8Bytes(\n      (sh2Rgb[8] - sh2Mid) * sh2Scale,\n      (sh2Rgb[9] - sh2Mid) * sh2Scale,\n      (sh2Rgb[10] - sh2Mid) * sh2Scale,\n      (sh2Rgb[11] - sh2Mid) * sh2Scale\n    );\n    sh2Array[index * 4 + 3] = packSint8Bytes(\n      (sh2Rgb[12] - sh2Mid) * sh2Scale,\n      (sh2Rgb[13] - sh2Mid) * sh2Scale,\n      (sh2Rgb[14] - sh2Mid) * sh2Scale,\n      0\n    );\n  }\n  function encodeSh3Rgb(sh3Array, index, sh3Rgb, encoding) {\n    const sh3Min = (encoding == null ? void 0 : encoding.sh3Min) ?? -1;\n    const sh3Max = (encoding == null ? void 0 : encoding.sh3Max) ?? 1;\n    const sh3Mid = 0.5 * (sh3Min + sh3Max);\n    const sh3Scale = 62 / (sh3Max - sh3Min);\n    const base = index * 4;\n    for (let i2 = 0; i2 < 21; ++i2) {\n      const s = (sh3Rgb[i2] - sh3Mid) * sh3Scale;\n      const value = Math.round(Math.max(-31, Math.min(31, s))) & 63;\n      const bitStart = i2 * 6;\n      const bitEnd = bitStart + 6;\n      const wordStart = Math.floor(bitStart / 32);\n      const bitOffset = bitStart - wordStart * 32;\n      const firstWord = value << bitOffset & 4294967295;\n      sh3Array[base + wordStart] |= firstWord;\n      if (bitEnd > wordStart * 32 + 32) {\n        const secondWord = value >>> 32 - bitOffset & 4294967295;\n        sh3Array[base + wordStart + 1] |= secondWord;\n      }\n    }\n  }\n  function decompressPartialGzip(fileBytes, numBytes) {\n    const chunks = [];\n    let totalBytes = 0;\n    let result = null;\n    const gunzip = new Gunzip((data, final) => {\n      chunks.push(data);\n      totalBytes += data.length;\n      if (final || totalBytes >= numBytes) {\n        const allBytes = new Uint8Array(totalBytes);\n        let offset2 = 0;\n        for (const chunk of chunks) {\n          allBytes.set(chunk, offset2);\n          offset2 += chunk.length;\n        }\n        result = allBytes.slice(0, numBytes);\n      }\n    });\n    const CHUNK_SIZE = 1024;\n    let offset = 0;\n    while (result == null && offset < fileBytes.length) {\n      const chunk = fileBytes.slice(offset, offset + CHUNK_SIZE);\n      gunzip.push(chunk, false);\n      offset += CHUNK_SIZE;\n    }\n    if (result == null) {\n      gunzip.push(new Uint8Array(), true);\n      if (result == null) {\n        throw new Error("Failed to decompress partial gzip");\n      }\n    }\n    return result;\n  }\n  class GunzipReader {\n    constructor({\n      fileBytes,\n      chunkBytes = 64 * 1024\n    }) {\n      this.fileBytes = fileBytes;\n      this.chunkBytes = chunkBytes;\n      this.offset = 0;\n      this.chunks = [];\n      this.totalBytes = 0;\n      this.gunzip = new Gunzip((chunk, _final) => {\n        this.chunks.push(chunk);\n        this.totalBytes += chunk.length;\n      });\n    }\n    read(numBytes) {\n      while (this.totalBytes < numBytes && this.offset < this.fileBytes.length) {\n        const end = Math.min(\n          this.offset + this.chunkBytes,\n          this.fileBytes.length\n        );\n        this.gunzip.push(this.fileBytes.subarray(this.offset, end), false);\n        this.offset = end;\n      }\n      if (this.totalBytes < numBytes && this.offset >= this.fileBytes.length) {\n        this.gunzip.push(new Uint8Array(0), true);\n      }\n      if (this.totalBytes < numBytes) {\n        throw new Error(\n          `Unexpected EOF: needed ${numBytes}, got ${this.totalBytes}`\n        );\n      }\n      const allBytes = new Uint8Array(this.totalBytes);\n      let outOffset = 0;\n      for (const chunk of this.chunks) {\n        allBytes.set(chunk, outOffset);\n        outOffset += chunk.length;\n      }\n      const result = allBytes.subarray(0, numBytes);\n      this.chunks = [allBytes.subarray(numBytes)];\n      this.totalBytes -= numBytes;\n      return result;\n    }\n  }\n  function decodeAntiSplat(fileBytes, initNumSplats, splatCallback) {\n    const numSplats = Math.floor(fileBytes.length / 32);\n    if (numSplats * 32 !== fileBytes.length) {\n      throw new Error("Invalid .splat file size");\n    }\n    initNumSplats(numSplats);\n    const f32 = new Float32Array(fileBytes.buffer);\n    for (let i2 = 0; i2 < numSplats; ++i2) {\n      const i322 = i2 * 32;\n      const i8 = i2 * 8;\n      const x2 = f32[i8 + 0];\n      const y = f32[i8 + 1];\n      const z = f32[i8 + 2];\n      const scaleX = f32[i8 + 3];\n      const scaleY = f32[i8 + 4];\n      const scaleZ = f32[i8 + 5];\n      const r = fileBytes[i322 + 24] / 255;\n      const g = fileBytes[i322 + 25] / 255;\n      const b = fileBytes[i322 + 26] / 255;\n      const opacity = fileBytes[i322 + 27] / 255;\n      const quatW = (fileBytes[i322 + 28] - 128) / 128;\n      const quatX = (fileBytes[i322 + 29] - 128) / 128;\n      const quatY = (fileBytes[i322 + 30] - 128) / 128;\n      const quatZ = (fileBytes[i322 + 31] - 128) / 128;\n      splatCallback(\n        i2,\n        x2,\n        y,\n        z,\n        scaleX,\n        scaleY,\n        scaleZ,\n        quatX,\n        quatY,\n        quatZ,\n        quatW,\n        opacity,\n        r,\n        g,\n        b\n      );\n    }\n  }\n  function unpackAntiSplat(fileBytes, splatEncoding) {\n    let numSplats = 0;\n    let maxSplats = 0;\n    let packedArray = new Uint32Array(0);\n    decodeAntiSplat(\n      fileBytes,\n      (cbNumSplats) => {\n        numSplats = cbNumSplats;\n        maxSplats = computeMaxSplats(numSplats);\n        packedArray = new Uint32Array(maxSplats * 4);\n      },\n      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n        setPackedSplat(\n          packedArray,\n          index,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n      }\n    );\n    return { packedArray, numSplats };\n  }\n  const KSPLAT_COMPRESSION = {\n    0: {\n      bytesPerCenter: 12,\n      bytesPerScale: 12,\n      bytesPerRotation: 16,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 4,\n      scaleOffsetBytes: 12,\n      rotationOffsetBytes: 24,\n      colorOffsetBytes: 40,\n      sphericalHarmonicsOffsetBytes: 44,\n      scaleRange: 1\n    },\n    1: {\n      bytesPerCenter: 6,\n      bytesPerScale: 6,\n      bytesPerRotation: 8,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 2,\n      scaleOffsetBytes: 6,\n      rotationOffsetBytes: 12,\n      colorOffsetBytes: 20,\n      sphericalHarmonicsOffsetBytes: 24,\n      scaleRange: 32767\n    },\n    2: {\n      bytesPerCenter: 6,\n      bytesPerScale: 6,\n      bytesPerRotation: 8,\n      bytesPerColor: 4,\n      bytesPerSphericalHarmonicsComponent: 1,\n      scaleOffsetBytes: 6,\n      rotationOffsetBytes: 12,\n      colorOffsetBytes: 20,\n      sphericalHarmonicsOffsetBytes: 24,\n      scaleRange: 32767\n    }\n  };\n  const KSPLAT_SH_DEGREE_TO_COMPONENTS = {\n    0: 0,\n    1: 9,\n    2: 24,\n    3: 45\n  };\n  function decodeKsplat(fileBytes, initNumSplats, splatCallback, shCallback) {\n    var _a2;\n    const HEADER_BYTES = 4096;\n    const SECTION_BYTES = 1024;\n    let headerOffset = 0;\n    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);\n    headerOffset += HEADER_BYTES;\n    const versionMajor = header.getUint8(0);\n    const versionMinor = header.getUint8(1);\n    if (versionMajor !== 0 || versionMinor < 1) {\n      throw new Error(\n        `Unsupported .ksplat version: ${versionMajor}.${versionMinor}`\n      );\n    }\n    const maxSectionCount = header.getUint32(4, true);\n    header.getUint32(16, true);\n    const compressionLevel = header.getUint16(20, true);\n    if (compressionLevel < 0 || compressionLevel > 2) {\n      throw new Error(`Invalid .ksplat compression level: ${compressionLevel}`);\n    }\n    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;\n    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;\n    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;\n    for (let section = 0; section < maxSectionCount; ++section) {\n      let getSh = function(splatOffset, component) {\n        if (compressionLevel === 0) {\n          return data.getFloat32(\n            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,\n            true\n          );\n        }\n        if (compressionLevel === 1) {\n          return fromHalf(\n            data.getUint16(\n              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,\n              true\n            )\n          );\n        }\n        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;\n        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);\n      };\n      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);\n      headerOffset += SECTION_BYTES;\n      const sectionSplatCount = section2.getUint32(0, true);\n      const sectionMaxSplatCount = section2.getUint32(4, true);\n      const bucketSize = section2.getUint32(8, true);\n      const bucketCount = section2.getUint32(12, true);\n      const bucketBlockSize = section2.getFloat32(16, true);\n      const bucketStorageSizeBytes = section2.getUint16(20, true);\n      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;\n      const fullBucketCount = section2.getUint32(32, true);\n      const fullBucketSplats = fullBucketCount * bucketSize;\n      const partiallyFilledBucketCount = section2.getUint32(36, true);\n      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;\n      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;\n      const sphericalHarmonicsDegree = section2.getUint16(40, true);\n      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];\n      const {\n        bytesPerCenter,\n        bytesPerScale,\n        bytesPerRotation,\n        bytesPerColor,\n        bytesPerSphericalHarmonicsComponent,\n        scaleOffsetBytes,\n        rotationOffsetBytes,\n        colorOffsetBytes,\n        sphericalHarmonicsOffsetBytes\n      } = KSPLAT_COMPRESSION[compressionLevel];\n      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;\n      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;\n      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;\n      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];\n      const sh2Index = [\n        9,\n        14,\n        19,\n        10,\n        15,\n        20,\n        11,\n        16,\n        21,\n        12,\n        17,\n        22,\n        13,\n        18,\n        23\n      ];\n      const sh3Index = [\n        24,\n        31,\n        38,\n        25,\n        32,\n        39,\n        26,\n        33,\n        40,\n        27,\n        34,\n        41,\n        28,\n        35,\n        42,\n        29,\n        36,\n        43,\n        30,\n        37,\n        44\n      ];\n      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;\n      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;\n      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;\n      const dataBase = sectionBase + bucketsStorageSizeBytes;\n      const data = new DataView(\n        fileBytes.buffer,\n        dataBase,\n        splatDataStorageSizeBytes\n      );\n      const bucketArray = new Float32Array(\n        fileBytes.buffer,\n        bucketsBase,\n        bucketCount * 3\n      );\n      const partiallyFilledBucketLengths = new Uint32Array(\n        fileBytes.buffer,\n        sectionBase,\n        partiallyFilledBucketCount\n      );\n      let partialBucketIndex = fullBucketCount;\n      let partialBucketBase = fullBucketSplats;\n      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {\n        const splatOffset = i2 * bytesPerSplat;\n        let bucketIndex;\n        if (i2 < fullBucketSplats) {\n          bucketIndex = Math.floor(i2 / bucketSize);\n        } else {\n          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];\n          if (i2 >= partialBucketBase + bucketLength) {\n            partialBucketIndex += 1;\n            partialBucketBase += bucketLength;\n          }\n          bucketIndex = partialBucketIndex;\n        }\n        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];\n        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];\n        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];\n        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));\n        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));\n        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));\n        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)\n        );\n        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)\n        );\n        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)\n        );\n        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)\n        );\n        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;\n        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;\n        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;\n        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;\n        splatCallback(\n          i2,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b\n        );\n        if (sphericalHarmonicsDegree >= 1 && sh1) {\n          for (const [i22, key] of sh1Index.entries()) {\n            sh1[i22] = getSh(splatOffset, key);\n          }\n          if (sh2) {\n            for (const [i22, key] of sh2Index.entries()) {\n              sh2[i22] = getSh(splatOffset, key);\n            }\n          }\n          if (sh3) {\n            for (const [i22, key] of sh3Index.entries()) {\n              sh3[i22] = getSh(splatOffset, key);\n            }\n          }\n          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);\n        }\n      }\n      sectionBase += storageSizeBytes;\n    }\n  }\n  function unpackKsplat(fileBytes, splatEncoding) {\n    var _a2;\n    const HEADER_BYTES = 4096;\n    const SECTION_BYTES = 1024;\n    let headerOffset = 0;\n    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);\n    headerOffset += HEADER_BYTES;\n    const versionMajor = header.getUint8(0);\n    const versionMinor = header.getUint8(1);\n    if (versionMajor !== 0 || versionMinor < 1) {\n      throw new Error(\n        `Unsupported .ksplat version: ${versionMajor}.${versionMinor}`\n      );\n    }\n    const maxSectionCount = header.getUint32(4, true);\n    const splatCount = header.getUint32(16, true);\n    const compressionLevel = header.getUint16(20, true);\n    if (compressionLevel < 0 || compressionLevel > 2) {\n      throw new Error(`Invalid .ksplat compression level: ${compressionLevel}`);\n    }\n    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;\n    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;\n    const numSplats = splatCount;\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;\n    for (let section = 0; section < maxSectionCount; ++section) {\n      let getSh = function(splatOffset, component) {\n        if (compressionLevel === 0) {\n          return data.getFloat32(\n            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,\n            true\n          );\n        }\n        if (compressionLevel === 1) {\n          return fromHalf(\n            data.getUint16(\n              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,\n              true\n            )\n          );\n        }\n        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;\n        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);\n      };\n      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);\n      headerOffset += SECTION_BYTES;\n      const sectionSplatCount = section2.getUint32(0, true);\n      const sectionMaxSplatCount = section2.getUint32(4, true);\n      const bucketSize = section2.getUint32(8, true);\n      const bucketCount = section2.getUint32(12, true);\n      const bucketBlockSize = section2.getFloat32(16, true);\n      const bucketStorageSizeBytes = section2.getUint16(20, true);\n      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;\n      const fullBucketCount = section2.getUint32(32, true);\n      const fullBucketSplats = fullBucketCount * bucketSize;\n      const partiallyFilledBucketCount = section2.getUint32(36, true);\n      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;\n      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;\n      const sphericalHarmonicsDegree = section2.getUint16(40, true);\n      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];\n      const {\n        bytesPerCenter,\n        bytesPerScale,\n        bytesPerRotation,\n        bytesPerColor,\n        bytesPerSphericalHarmonicsComponent,\n        scaleOffsetBytes,\n        rotationOffsetBytes,\n        colorOffsetBytes,\n        sphericalHarmonicsOffsetBytes\n      } = KSPLAT_COMPRESSION[compressionLevel];\n      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;\n      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;\n      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;\n      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];\n      const sh2Index = [\n        9,\n        14,\n        19,\n        10,\n        15,\n        20,\n        11,\n        16,\n        21,\n        12,\n        17,\n        22,\n        13,\n        18,\n        23\n      ];\n      const sh3Index = [\n        24,\n        31,\n        38,\n        25,\n        32,\n        39,\n        26,\n        33,\n        40,\n        27,\n        34,\n        41,\n        28,\n        35,\n        42,\n        29,\n        36,\n        43,\n        30,\n        37,\n        44\n      ];\n      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;\n      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;\n      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;\n      const dataBase = sectionBase + bucketsStorageSizeBytes;\n      const data = new DataView(\n        fileBytes.buffer,\n        dataBase,\n        splatDataStorageSizeBytes\n      );\n      const bucketArray = new Float32Array(\n        fileBytes.buffer,\n        bucketsBase,\n        bucketCount * 3\n      );\n      const partiallyFilledBucketLengths = new Uint32Array(\n        fileBytes.buffer,\n        sectionBase,\n        partiallyFilledBucketCount\n      );\n      let partialBucketIndex = fullBucketCount;\n      let partialBucketBase = fullBucketSplats;\n      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {\n        const splatOffset = i2 * bytesPerSplat;\n        let bucketIndex;\n        if (i2 < fullBucketSplats) {\n          bucketIndex = Math.floor(i2 / bucketSize);\n        } else {\n          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];\n          if (i2 >= partialBucketBase + bucketLength) {\n            partialBucketIndex += 1;\n            partialBucketBase += bucketLength;\n          }\n          bucketIndex = partialBucketIndex;\n        }\n        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];\n        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];\n        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];\n        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));\n        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));\n        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));\n        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)\n        );\n        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)\n        );\n        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)\n        );\n        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(\n          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)\n        );\n        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;\n        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;\n        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;\n        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;\n        setPackedSplat(\n          packedArray,\n          i2,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n        if (sphericalHarmonicsDegree >= 1) {\n          if (sh1) {\n            if (!extra.sh1) {\n              extra.sh1 = new Uint32Array(numSplats * 2);\n            }\n            for (const [i22, key] of sh1Index.entries()) {\n              sh1[i22] = getSh(splatOffset, key);\n            }\n            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);\n          }\n          if (sh2) {\n            if (!extra.sh2) {\n              extra.sh2 = new Uint32Array(numSplats * 4);\n            }\n            for (const [i22, key] of sh2Index.entries()) {\n              sh2[i22] = getSh(splatOffset, key);\n            }\n            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);\n          }\n          if (sh3) {\n            if (!extra.sh3) {\n              extra.sh3 = new Uint32Array(numSplats * 4);\n            }\n            for (const [i22, key] of sh3Index.entries()) {\n              sh3[i22] = getSh(splatOffset, key);\n            }\n            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);\n          }\n        }\n      }\n      sectionBase += storageSizeBytes;\n    }\n    return { packedArray, numSplats, extra };\n  }\n  const _PlyReader = class _PlyReader {\n    // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet\n    constructor({ fileBytes }) {\n      this.header = "";\n      this.littleEndian = true;\n      this.elements = {};\n      this.comments = [];\n      this.data = null;\n      this.numSplats = 0;\n      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;\n    }\n    // Identify and parse the PLY text header (assumed to be <64KB in size).\n    // this.elements will contain all the elements in the file, typically\n    // "vertex" contains the Gsplat data.\n    async parseHeader() {\n      const bufferStream = new ReadableStream({\n        start: (controller) => {\n          controller.enqueue(this.fileBytes.slice(0, 65536));\n          controller.close();\n        }\n      });\n      const decoder = bufferStream.pipeThrough(new TextDecoderStream()).getReader();\n      this.header = "";\n      const headerTerminator = "end_header\\n";\n      while (true) {\n        const { value, done } = await decoder.read();\n        if (done) {\n          throw new Error("Failed to read header");\n        }\n        this.header += value;\n        const endHeader = this.header.indexOf(headerTerminator);\n        if (endHeader >= 0) {\n          this.header = this.header.slice(0, endHeader + headerTerminator.length);\n          break;\n        }\n      }\n      const headerLen = new TextEncoder().encode(this.header).length;\n      this.data = new DataView(this.fileBytes.buffer, headerLen);\n      this.elements = {};\n      let curElement = null;\n      this.comments = [];\n      this.header.trim().split("\\n").forEach((line, lineIndex) => {\n        const trimmedLine = line.trim();\n        if (lineIndex === 0) {\n          if (trimmedLine !== "ply") {\n            throw new Error("Invalid PLY header");\n          }\n          return;\n        }\n        if (trimmedLine.length === 0) {\n          return;\n        }\n        const fields = trimmedLine.split(" ");\n        switch (fields[0]) {\n          case "format":\n            if (fields[1] === "binary_little_endian") {\n              this.littleEndian = true;\n            } else if (fields[1] === "binary_big_endian") {\n              this.littleEndian = false;\n            } else {\n              throw new Error(`Unsupported PLY format: ${fields[1]}`);\n            }\n            if (fields[2] !== "1.0") {\n              throw new Error(`Unsupported PLY version: ${fields[2]}`);\n            }\n            break;\n          case "end_header":\n            break;\n          case "comment":\n            this.comments.push(trimmedLine.slice("comment ".length));\n            break;\n          case "element": {\n            const name = fields[1];\n            curElement = {\n              name,\n              count: Number.parseInt(fields[2]),\n              properties: {}\n            };\n            this.elements[name] = curElement;\n            break;\n          }\n          case "property":\n            if (curElement == null) {\n              throw new Error("Property must be inside an element");\n            }\n            if (fields[1] === "list") {\n              curElement.properties[fields[4]] = {\n                isList: true,\n                type: fields[3],\n                countType: fields[2]\n              };\n            } else {\n              curElement.properties[fields[2]] = {\n                isList: false,\n                type: fields[1]\n              };\n            }\n            break;\n        }\n      });\n      if (this.elements.vertex) {\n        this.numSplats = this.elements.vertex.count;\n      }\n    }\n    parseData(elementCallback) {\n      let offset = 0;\n      const data = this.data;\n      if (data == null) {\n        throw new Error("No data to parse");\n      }\n      for (const elementName in this.elements) {\n        const element = this.elements[elementName];\n        const { count, properties } = element;\n        const item = {};\n        const parsers = [];\n        for (const [propertyName, property] of Object.entries(properties)) {\n          if (!property.isList) {\n            item[propertyName] = 0;\n            parsers.push(() => {\n              item[propertyName] = PARSE_FIELD[property.type](\n                data,\n                offset,\n                this.littleEndian\n              );\n              offset += FIELD_BYTES[property.type];\n            });\n          } else {\n            item[propertyName] = [];\n            parsers.push(() => {\n              const list = item[propertyName];\n              list.length = PARSE_FIELD[property.countType](\n                data,\n                offset,\n                this.littleEndian\n              );\n              offset += FIELD_BYTES[property.countType];\n              for (let i2 = 0; i2 < list.length; i2++) {\n                list[i2] = PARSE_FIELD[property.type](\n                  data,\n                  offset,\n                  this.littleEndian\n                );\n                offset += FIELD_BYTES[property.type];\n              }\n            });\n          }\n        }\n        const callback = elementCallback(element) ?? (() => {\n        });\n        for (let index = 0; index < count; index++) {\n          for (const parser of parsers) {\n            parser();\n          }\n          callback(index, item);\n        }\n      }\n    }\n    // Parse all the Gsplat data in the PLY file in go, invoking the given\n    // callbacks for each Gsplat.\n    parseSplats(splatCallback, shCallback) {\n      if (this.elements.vertex == null) {\n        throw new Error("No vertex element found");\n      }\n      let isSuperSplat = false;\n      const ssChunks = [];\n      let numSh = 0;\n      let sh1Props = [];\n      let sh2Props = [];\n      let sh3Props = [];\n      let sh1 = void 0;\n      let sh2 = void 0;\n      let sh3 = void 0;\n      function prepareSh() {\n        const num_f_rest = NUM_SH_TO_NUM_F_REST[numSh];\n        sh1Props = new Array(3).fill(null).flatMap(\n          (_, k) => [0, 1, 2].map((_2, d) => `f_rest_${k + d * num_f_rest / 3}`)\n        );\n        sh2Props = new Array(5).fill(null).flatMap(\n          (_, k) => [0, 1, 2].map((_2, d) => `f_rest_${3 + k + d * num_f_rest / 3}`)\n        );\n        sh3Props = new Array(7).fill(null).flatMap(\n          (_, k) => [0, 1, 2].map((_2, d) => `f_rest_${8 + k + d * num_f_rest / 3}`)\n        );\n        sh1 = numSh >= 1 ? new Float32Array(3 * 3) : void 0;\n        sh2 = numSh >= 2 ? new Float32Array(5 * 3) : void 0;\n        sh3 = numSh >= 3 ? new Float32Array(7 * 3) : void 0;\n      }\n      function ssShCallback(index, item) {\n        if (!sh1) {\n          throw new Error("Missing sh1");\n        }\n        for (const [i2, key] of sh1Props.entries()) {\n          sh1[i2] = item[key] * 8 / 255 - 4;\n        }\n        if (sh2) {\n          for (const [i2, key] of sh2Props.entries()) {\n            sh2[i2] = item[key] * 8 / 255 - 4;\n          }\n        }\n        if (sh3) {\n          for (const [i2, key] of sh3Props.entries()) {\n            sh3[i2] = item[key] * 8 / 255 - 4;\n          }\n        }\n        shCallback == null ? void 0 : shCallback(index, sh1, sh2, sh3);\n      }\n      function initSuperSplat(element) {\n        const {\n          min_x,\n          min_y,\n          min_z,\n          max_x,\n          max_y,\n          max_z,\n          min_scale_x,\n          min_scale_y,\n          min_scale_z,\n          max_scale_x,\n          max_scale_y,\n          max_scale_z\n        } = element.properties;\n        if (!min_x || !min_y || !min_z || !max_x || !max_y || !max_z || !min_scale_x || !min_scale_y || !min_scale_z || !max_scale_x || !max_scale_y || !max_scale_z) {\n          throw new Error("Missing PLY chunk properties");\n        }\n        isSuperSplat = true;\n        return (index, item) => {\n          const {\n            min_x: min_x2,\n            min_y: min_y2,\n            min_z: min_z2,\n            max_x: max_x2,\n            max_y: max_y2,\n            max_z: max_z2,\n            min_scale_x: min_scale_x2,\n            min_scale_y: min_scale_y2,\n            min_scale_z: min_scale_z2,\n            max_scale_x: max_scale_x2,\n            max_scale_y: max_scale_y2,\n            max_scale_z: max_scale_z2,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          } = item;\n          ssChunks.push({\n            min_x: min_x2,\n            min_y: min_y2,\n            min_z: min_z2,\n            max_x: max_x2,\n            max_y: max_y2,\n            max_z: max_z2,\n            min_scale_x: min_scale_x2,\n            min_scale_y: min_scale_y2,\n            min_scale_z: min_scale_z2,\n            max_scale_x: max_scale_x2,\n            max_scale_y: max_scale_y2,\n            max_scale_z: max_scale_z2,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          });\n        };\n      }\n      function decodeSuperSplat(element) {\n        if (shCallback && element.name === "sh") {\n          numSh = getNumSh(element.properties);\n          prepareSh();\n          return ssShCallback;\n        }\n        if (element.name !== "vertex") {\n          return null;\n        }\n        const { packed_position, packed_rotation, packed_scale, packed_color } = element.properties;\n        if (!packed_position || !packed_rotation || !packed_scale || !packed_color) {\n          throw new Error(\n            "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"\n          );\n        }\n        const SQRT2 = Math.sqrt(2);\n        return (index, item) => {\n          const chunk = ssChunks[index >>> 8];\n          if (chunk == null) {\n            throw new Error("Missing PLY chunk");\n          }\n          const {\n            min_x,\n            min_y,\n            min_z,\n            max_x,\n            max_y,\n            max_z,\n            min_scale_x,\n            min_scale_y,\n            min_scale_z,\n            max_scale_x,\n            max_scale_y,\n            max_scale_z,\n            min_r,\n            min_g,\n            min_b,\n            max_r,\n            max_g,\n            max_b\n          } = chunk;\n          const { packed_position: packed_position2, packed_rotation: packed_rotation2, packed_scale: packed_scale2, packed_color: packed_color2 } = item;\n          const x2 = (packed_position2 >>> 21 & 2047) / 2047 * (max_x - min_x) + min_x;\n          const y = (packed_position2 >>> 11 & 1023) / 1023 * (max_y - min_y) + min_y;\n          const z = (packed_position2 & 2047) / 2047 * (max_z - min_z) + min_z;\n          const r0 = ((packed_rotation2 >>> 20 & 1023) / 1023 - 0.5) * SQRT2;\n          const r1 = ((packed_rotation2 >>> 10 & 1023) / 1023 - 0.5) * SQRT2;\n          const r2 = ((packed_rotation2 & 1023) / 1023 - 0.5) * SQRT2;\n          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));\n          const rOrder = packed_rotation2 >>> 30;\n          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;\n          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;\n          const quatZ = rOrder <= 2 ? r2 : rr;\n          const quatW = rOrder === 0 ? rr : r0;\n          const scaleX = Math.exp(\n            (packed_scale2 >>> 21 & 2047) / 2047 * (max_scale_x - min_scale_x) + min_scale_x\n          );\n          const scaleY = Math.exp(\n            (packed_scale2 >>> 11 & 1023) / 1023 * (max_scale_y - min_scale_y) + min_scale_y\n          );\n          const scaleZ = Math.exp(\n            (packed_scale2 & 2047) / 2047 * (max_scale_z - min_scale_z) + min_scale_z\n          );\n          const r = (packed_color2 >>> 24 & 255) / 255 * ((max_r ?? 1) - (min_r ?? 0)) + (min_r ?? 0);\n          const g = (packed_color2 >>> 16 & 255) / 255 * ((max_g ?? 1) - (min_g ?? 0)) + (min_g ?? 0);\n          const b = (packed_color2 >>> 8 & 255) / 255 * ((max_b ?? 1) - (min_b ?? 0)) + (min_b ?? 0);\n          const opacity = (packed_color2 & 255) / 255;\n          splatCallback(\n            index,\n            x2,\n            y,\n            z,\n            scaleX,\n            scaleY,\n            scaleZ,\n            quatX,\n            quatY,\n            quatZ,\n            quatW,\n            opacity,\n            r,\n            g,\n            b\n          );\n        };\n      }\n      const elementCallback = (element) => {\n        if (element.name === "chunk") {\n          return initSuperSplat(element);\n        }\n        if (isSuperSplat) {\n          return decodeSuperSplat(element);\n        }\n        if (element.name !== "vertex") {\n          return null;\n        }\n        const {\n          x: x2,\n          y,\n          z,\n          scale_0,\n          scale_1,\n          scale_2,\n          rot_0,\n          rot_1,\n          rot_2,\n          rot_3,\n          opacity,\n          f_dc_0,\n          f_dc_1,\n          f_dc_2,\n          red,\n          green,\n          blue,\n          alpha\n        } = element.properties;\n        if (!x2 || !y || !z) {\n          throw new Error("Missing PLY properties: x, y, z");\n        }\n        const hasScales = scale_0 && scale_1 && scale_2;\n        const hasRots = rot_0 && rot_1 && rot_2 && rot_3;\n        const alphaDiv = alpha != null ? FIELD_SCALE[alpha.type] : 1;\n        const redDiv = red != null ? FIELD_SCALE[red.type] : 1;\n        const greenDiv = green != null ? FIELD_SCALE[green.type] : 1;\n        const blueDiv = blue != null ? FIELD_SCALE[blue.type] : 1;\n        numSh = getNumSh(element.properties);\n        prepareSh();\n        return (index, item) => {\n          const scaleX = hasScales ? Math.exp(item.scale_0) : _PlyReader.defaultPointScale;\n          const scaleY = hasScales ? Math.exp(item.scale_1) : _PlyReader.defaultPointScale;\n          const scaleZ = hasScales ? Math.exp(item.scale_2) : _PlyReader.defaultPointScale;\n          const quatX = hasRots ? item.rot_1 : 0;\n          const quatY = hasRots ? item.rot_2 : 0;\n          const quatZ = hasRots ? item.rot_3 : 0;\n          const quatW = hasRots ? item.rot_0 : 1;\n          const op = opacity != null ? 1 / (1 + Math.exp(-item.opacity)) : alpha != null ? item.alpha / alphaDiv : 1;\n          const r = f_dc_0 != null ? item.f_dc_0 * SH_C0$1 + 0.5 : red != null ? item.red / redDiv : 1;\n          const g = f_dc_1 != null ? item.f_dc_1 * SH_C0$1 + 0.5 : green != null ? item.green / greenDiv : 1;\n          const b = f_dc_2 != null ? item.f_dc_2 * SH_C0$1 + 0.5 : blue != null ? item.blue / blueDiv : 1;\n          splatCallback(\n            index,\n            item.x,\n            item.y,\n            item.z,\n            scaleX,\n            scaleY,\n            scaleZ,\n            quatX,\n            quatY,\n            quatZ,\n            quatW,\n            op,\n            r,\n            g,\n            b\n          );\n          if (shCallback && sh1) {\n            if (sh1) {\n              for (const [i2, key] of sh1Props.entries()) {\n                sh1[i2] = item[key];\n              }\n            }\n            if (sh2) {\n              for (const [i2, key] of sh2Props.entries()) {\n                sh2[i2] = item[key];\n              }\n            }\n            if (sh3) {\n              for (const [i2, key] of sh3Props.entries()) {\n                sh3[i2] = item[key];\n              }\n            }\n            shCallback(index, sh1, sh2, sh3);\n          }\n        };\n      };\n      this.parseData(elementCallback);\n    }\n    // Inject RGBA values into original PLY file, which can be used to modify\n    // the color/opacity of the Gsplats and write out the modified PLY file.\n    injectRgba(rgba) {\n      let offset = 0;\n      const data = this.data;\n      if (data == null) {\n        throw new Error("No parsed data");\n      }\n      if (rgba.length !== this.numSplats * 4) {\n        throw new Error("Invalid RGBA array length");\n      }\n      for (const elementName in this.elements) {\n        const element = this.elements[elementName];\n        const { count, properties } = element;\n        const parsers = [];\n        let rgbaOffset = 0;\n        const isVertex = elementName === "vertex";\n        if (isVertex) {\n          for (const name of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"]) {\n            if (!properties[name] || properties[name].type !== "float") {\n              throw new Error(`Can\'t injectRgba due to property: ${name}`);\n            }\n          }\n        }\n        for (const [propertyName, property] of Object.entries(properties)) {\n          if (!property.isList) {\n            if (isVertex) {\n              if (propertyName === "f_dc_0" || propertyName === "f_dc_1" || propertyName === "f_dc_2") {\n                const component = Number.parseInt(\n                  propertyName.slice("f_dc_".length)\n                );\n                parsers.push(() => {\n                  const value = (rgba[rgbaOffset + component] / 255 - 0.5) / SH_C0$1;\n                  SET_FIELD[property.type](\n                    data,\n                    offset,\n                    this.littleEndian,\n                    value\n                  );\n                });\n              } else if (propertyName === "opacity") {\n                parsers.push(() => {\n                  const value = Math.max(\n                    -100,\n                    Math.min(\n                      100,\n                      -Math.log(1 / (rgba[rgbaOffset + 3] / 255) - 1)\n                    )\n                  );\n                  SET_FIELD[property.type](\n                    data,\n                    offset,\n                    this.littleEndian,\n                    value\n                  );\n                });\n              }\n            }\n            parsers.push(() => {\n              offset += FIELD_BYTES[property.type];\n            });\n          } else {\n            parsers.push(() => {\n              const length = PARSE_FIELD[property.countType](\n                data,\n                offset,\n                this.littleEndian\n              );\n              offset += FIELD_BYTES[property.countType];\n              offset += length * FIELD_BYTES[property.type];\n            });\n          }\n        }\n        for (let index = 0; index < count; index++) {\n          for (const parser of parsers) {\n            parser();\n          }\n          if (isVertex) {\n            rgbaOffset += 4;\n          }\n        }\n      }\n    }\n  };\n  _PlyReader.defaultPointScale = 1e-3;\n  let PlyReader = _PlyReader;\n  const SH_C0$1 = 0.28209479177387814;\n  const PARSE_FIELD = {\n    char: (data, offset, littleEndian) => {\n      return data.getInt8(offset);\n    },\n    uchar: (data, offset, littleEndian) => {\n      return data.getUint8(offset);\n    },\n    short: (data, offset, littleEndian) => {\n      return data.getInt16(offset, littleEndian);\n    },\n    ushort: (data, offset, littleEndian) => {\n      return data.getUint16(offset, littleEndian);\n    },\n    int: (data, offset, littleEndian) => {\n      return data.getInt32(offset, littleEndian);\n    },\n    uint: (data, offset, littleEndian) => {\n      return data.getUint32(offset, littleEndian);\n    },\n    float: (data, offset, littleEndian) => {\n      return data.getFloat32(offset, littleEndian);\n    },\n    double: (data, offset, littleEndian) => {\n      return data.getFloat64(offset, littleEndian);\n    }\n  };\n  const SET_FIELD = {\n    char: (data, offset, littleEndian, value) => {\n      data.setInt8(offset, value);\n    },\n    uchar: (data, offset, littleEndian, value) => {\n      data.setUint8(offset, value);\n    },\n    short: (data, offset, littleEndian, value) => {\n      data.setInt16(offset, value, littleEndian);\n    },\n    ushort: (data, offset, littleEndian, value) => {\n      data.setUint16(offset, value, littleEndian);\n    },\n    int: (data, offset, littleEndian, value) => {\n      data.setInt32(offset, value, littleEndian);\n    },\n    uint: (data, offset, littleEndian, value) => {\n      data.setUint32(offset, value, littleEndian);\n    },\n    float: (data, offset, littleEndian, value) => {\n      data.setFloat32(offset, value, littleEndian);\n    },\n    double: (data, offset, littleEndian, value) => {\n      data.setFloat64(offset, value, littleEndian);\n    }\n  };\n  const FIELD_BYTES = {\n    char: 1,\n    uchar: 1,\n    short: 2,\n    ushort: 2,\n    int: 4,\n    uint: 4,\n    float: 4,\n    double: 8\n  };\n  const FIELD_SCALE = {\n    char: 127,\n    uchar: 255,\n    short: 32767,\n    ushort: 65535,\n    int: 2147483647,\n    uint: 4294967295,\n    float: 1,\n    double: 1\n  };\n  const NUM_F_REST_TO_NUM_SH = {\n    0: 0,\n    9: 1,\n    24: 2,\n    45: 3\n  };\n  const NUM_SH_TO_NUM_F_REST = {\n    0: 0,\n    1: 9,\n    2: 24,\n    3: 45\n  };\n  function getNumSh(properties) {\n    let num_f_rest = 0;\n    while (properties[`f_rest_${num_f_rest}`]) {\n      num_f_rest += 1;\n    }\n    const numSh = NUM_F_REST_TO_NUM_SH[num_f_rest];\n    if (numSh == null) {\n      throw new Error(`Unsupported number of SH coefficients: ${num_f_rest}`);\n    }\n    return numSh;\n  }\n  var SplatFileType = /* @__PURE__ */ ((SplatFileType2) => {\n    SplatFileType2["PLY"] = "ply";\n    SplatFileType2["SPZ"] = "spz";\n    SplatFileType2["SPLAT"] = "splat";\n    SplatFileType2["KSPLAT"] = "ksplat";\n    SplatFileType2["PCSOGS"] = "pcsogs";\n    SplatFileType2["PCSOGSZIP"] = "pcsogszip";\n    return SplatFileType2;\n  })(SplatFileType || {});\n  function getSplatFileType(fileBytes) {\n    const view = new DataView(fileBytes.buffer);\n    if ((view.getUint32(0, true) & 16777215) === 7957616) {\n      return "ply";\n    }\n    if ((view.getUint32(0, true) & 16777215) === 559903) {\n      const header = decompressPartialGzip(fileBytes, 4);\n      const gView = new DataView(header.buffer);\n      if (gView.getUint32(0, true) === 1347635022) {\n        return "spz";\n      }\n      return void 0;\n    }\n    if (view.getUint32(0, true) === 67324752) {\n      if (tryPcSogsZip(fileBytes)) {\n        return "pcsogszip";\n      }\n      return void 0;\n    }\n    return void 0;\n  }\n  function getFileExtension(pathOrUrl) {\n    const noTrailing = pathOrUrl.split(/[?#]/, 1)[0];\n    const lastSlash = Math.max(\n      noTrailing.lastIndexOf("/"),\n      noTrailing.lastIndexOf("\\\\")\n    );\n    const filename = noTrailing.slice(lastSlash + 1);\n    const lastDot = filename.lastIndexOf(".");\n    if (lastDot <= 0 || lastDot === filename.length - 1) {\n      return "";\n    }\n    return filename.slice(lastDot + 1).toLowerCase();\n  }\n  function getSplatFileTypeFromPath(pathOrUrl) {\n    const extension = getFileExtension(pathOrUrl);\n    if (extension === "ply") {\n      return "ply";\n    }\n    if (extension === "spz") {\n      return "spz";\n    }\n    if (extension === "splat") {\n      return "splat";\n    }\n    if (extension === "ksplat") {\n      return "ksplat";\n    }\n    return void 0;\n  }\n  function tryPcSogs(input) {\n    try {\n      let text;\n      if (typeof input === "string") {\n        text = input;\n      } else {\n        const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;\n        if (fileBytes.length > 65536) {\n          return void 0;\n        }\n        text = new TextDecoder().decode(fileBytes);\n      }\n      const json = JSON.parse(text);\n      if (!json || typeof json !== "object" || Array.isArray(json)) {\n        return void 0;\n      }\n      for (const key of ["means", "scales", "quats", "sh0"]) {\n        if (!json[key] || typeof json[key] !== "object" || Array.isArray(json[key])) {\n          return void 0;\n        }\n        if (!json[key].shape || !json[key].files) {\n          return void 0;\n        }\n        if (key !== "quats" && (!json[key].mins || !json[key].maxs)) {\n          return void 0;\n        }\n      }\n      return json;\n    } catch {\n      return void 0;\n    }\n  }\n  function tryPcSogsZip(input) {\n    try {\n      const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;\n      let metaFilename = null;\n      const unzipped = unzipSync(fileBytes, {\n        filter: ({ name }) => {\n          const filename = name.split(/[\\\\/]/).pop();\n          if (filename === "meta.json") {\n            metaFilename = name;\n            return true;\n          }\n          return false;\n        }\n      });\n      if (!metaFilename) {\n        return void 0;\n      }\n      const json = tryPcSogs(unzipped[metaFilename]);\n      if (!json) {\n        return void 0;\n      }\n      return { name: metaFilename, json };\n    } catch {\n      return void 0;\n    }\n  }\n  class SplatData {\n    constructor({ maxSplats = 1 } = {}) {\n      this.numSplats = 0;\n      this.maxSplats = getTextureSize(maxSplats).maxSplats;\n      this.centers = new Float32Array(this.maxSplats * 3);\n      this.scales = new Float32Array(this.maxSplats * 3);\n      this.quaternions = new Float32Array(this.maxSplats * 4);\n      this.opacities = new Float32Array(this.maxSplats);\n      this.colors = new Float32Array(this.maxSplats * 3);\n    }\n    pushSplat() {\n      const index = this.numSplats;\n      this.ensureIndex(index);\n      this.numSplats += 1;\n      return index;\n    }\n    unpushSplat(index) {\n      if (index === this.numSplats - 1) {\n        this.numSplats -= 1;\n      } else {\n        throw new Error("Cannot unpush splat from non-last position");\n      }\n    }\n    ensureCapacity(numSplats) {\n      if (numSplats > this.maxSplats) {\n        const targetSplats = Math.max(numSplats, this.maxSplats * 2);\n        const newCenters = new Float32Array(targetSplats * 3);\n        const newScales = new Float32Array(targetSplats * 3);\n        const newQuaternions = new Float32Array(targetSplats * 4);\n        const newOpacities = new Float32Array(targetSplats);\n        const newColors = new Float32Array(targetSplats * 3);\n        newCenters.set(this.centers);\n        newScales.set(this.scales);\n        newQuaternions.set(this.quaternions);\n        newOpacities.set(this.opacities);\n        newColors.set(this.colors);\n        this.centers = newCenters;\n        this.scales = newScales;\n        this.quaternions = newQuaternions;\n        this.opacities = newOpacities;\n        this.colors = newColors;\n        if (this.sh1) {\n          const newSh1 = new Float32Array(targetSplats * 9);\n          newSh1.set(this.sh1);\n          this.sh1 = newSh1;\n        }\n        if (this.sh2) {\n          const newSh2 = new Float32Array(targetSplats * 15);\n          newSh2.set(this.sh2);\n          this.sh2 = newSh2;\n        }\n        if (this.sh3) {\n          const newSh3 = new Float32Array(targetSplats * 21);\n          newSh3.set(this.sh3);\n          this.sh3 = newSh3;\n        }\n        this.maxSplats = targetSplats;\n      }\n    }\n    ensureIndex(index) {\n      this.ensureCapacity(index + 1);\n    }\n    setCenter(index, x2, y, z) {\n      this.centers[index * 3] = x2;\n      this.centers[index * 3 + 1] = y;\n      this.centers[index * 3 + 2] = z;\n    }\n    setScale(index, scaleX, scaleY, scaleZ) {\n      this.scales[index * 3] = scaleX;\n      this.scales[index * 3 + 1] = scaleY;\n      this.scales[index * 3 + 2] = scaleZ;\n    }\n    setQuaternion(index, x2, y, z, w) {\n      this.quaternions[index * 4] = x2;\n      this.quaternions[index * 4 + 1] = y;\n      this.quaternions[index * 4 + 2] = z;\n      this.quaternions[index * 4 + 3] = w;\n    }\n    setOpacity(index, opacity) {\n      this.opacities[index] = opacity;\n    }\n    setColor(index, r, g, b) {\n      this.colors[index * 3] = r;\n      this.colors[index * 3 + 1] = g;\n      this.colors[index * 3 + 2] = b;\n    }\n    setSh1(index, sh1) {\n      if (!this.sh1) {\n        this.sh1 = new Float32Array(this.maxSplats * 9);\n      }\n      for (let j = 0; j < 9; ++j) {\n        this.sh1[index * 9 + j] = sh1[j];\n      }\n    }\n    setSh2(index, sh2) {\n      if (!this.sh2) {\n        this.sh2 = new Float32Array(this.maxSplats * 15);\n      }\n      for (let j = 0; j < 15; ++j) {\n        this.sh2[index * 15 + j] = sh2[j];\n      }\n    }\n    setSh3(index, sh3) {\n      if (!this.sh3) {\n        this.sh3 = new Float32Array(this.maxSplats * 21);\n      }\n      for (let j = 0; j < 21; ++j) {\n        this.sh3[index * 21 + j] = sh3[j];\n      }\n    }\n  }\n  async function unpackPcSogs(json, extraFiles, splatEncoding) {\n    if (json.quats.encoding !== "quaternion_packed") {\n      throw new Error("Unsupported quaternion encoding");\n    }\n    const numSplats = json.means.shape[0];\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    const meansPromise = Promise.all([\n      decodeImageRgba(extraFiles[json.means.files[0]]),\n      decodeImageRgba(extraFiles[json.means.files[1]])\n    ]).then((means) => {\n      for (let i2 = 0; i2 < numSplats; ++i2) {\n        const i4 = i2 * 4;\n        const fx = (means[0][i4 + 0] + (means[1][i4 + 0] << 8)) / 65535;\n        const fy = (means[0][i4 + 1] + (means[1][i4 + 1] << 8)) / 65535;\n        const fz = (means[0][i4 + 2] + (means[1][i4 + 2] << 8)) / 65535;\n        let x2 = json.means.mins[0] + (json.means.maxs[0] - json.means.mins[0]) * fx;\n        let y = json.means.mins[1] + (json.means.maxs[1] - json.means.mins[1]) * fy;\n        let z = json.means.mins[2] + (json.means.maxs[2] - json.means.mins[2]) * fz;\n        x2 = Math.sign(x2) * (Math.exp(Math.abs(x2)) - 1);\n        y = Math.sign(y) * (Math.exp(Math.abs(y)) - 1);\n        z = Math.sign(z) * (Math.exp(Math.abs(z)) - 1);\n        setPackedSplatCenter(packedArray, i2, x2, y, z);\n      }\n    });\n    const scalesPromise = decodeImageRgba(extraFiles[json.scales.files[0]]).then(\n      (scales) => {\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const fx = scales[i4 + 0] / 255;\n          const fy = scales[i4 + 1] / 255;\n          const fz = scales[i4 + 2] / 255;\n          const x2 = json.scales.mins[0] + (json.scales.maxs[0] - json.scales.mins[0]) * fx;\n          const y = json.scales.mins[1] + (json.scales.maxs[1] - json.scales.mins[1]) * fy;\n          const z = json.scales.mins[2] + (json.scales.maxs[2] - json.scales.mins[2]) * fz;\n          setPackedSplatScales(\n            packedArray,\n            i2,\n            Math.exp(x2),\n            Math.exp(y),\n            Math.exp(z),\n            splatEncoding\n          );\n        }\n      }\n    );\n    const quatsPromise = decodeImageRgba(extraFiles[json.quats.files[0]]).then(\n      (quats) => {\n        const SQRT2 = Math.sqrt(2);\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const r0 = (quats[i4 + 0] / 255 - 0.5) * SQRT2;\n          const r1 = (quats[i4 + 1] / 255 - 0.5) * SQRT2;\n          const r2 = (quats[i4 + 2] / 255 - 0.5) * SQRT2;\n          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));\n          const rOrder = quats[i4 + 3] - 252;\n          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;\n          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;\n          const quatZ = rOrder <= 2 ? r2 : rr;\n          const quatW = rOrder === 0 ? rr : r0;\n          setPackedSplatQuat(packedArray, i2, quatX, quatY, quatZ, quatW);\n        }\n      }\n    );\n    const sh0Promise = decodeImageRgba(extraFiles[json.sh0.files[0]]).then(\n      (sh0) => {\n        const SH_C02 = 0.28209479177387814;\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const f0 = sh0[i4 + 0] / 255;\n          const f1 = sh0[i4 + 1] / 255;\n          const f2 = sh0[i4 + 2] / 255;\n          const f3 = sh0[i4 + 3] / 255;\n          const dc0 = json.sh0.mins[0] + (json.sh0.maxs[0] - json.sh0.mins[0]) * f0;\n          const dc1 = json.sh0.mins[1] + (json.sh0.maxs[1] - json.sh0.mins[1]) * f1;\n          const dc2 = json.sh0.mins[2] + (json.sh0.maxs[2] - json.sh0.mins[2]) * f2;\n          const opa = json.sh0.mins[3] + (json.sh0.maxs[3] - json.sh0.mins[3]) * f3;\n          const r = SH_C02 * dc0 + 0.5;\n          const g = SH_C02 * dc1 + 0.5;\n          const b = SH_C02 * dc2 + 0.5;\n          const a = 1 / (1 + Math.exp(-opa));\n          setPackedSplatRgba(packedArray, i2, r, g, b, a, splatEncoding);\n        }\n      }\n    );\n    const promises = [meansPromise, scalesPromise, quatsPromise, sh0Promise];\n    if (json.shN) {\n      const useSH3 = json.shN.shape[1] >= 48 - 3;\n      const useSH2 = json.shN.shape[1] >= 27 - 3;\n      const useSH1 = json.shN.shape[1] >= 12 - 3;\n      if (useSH1) extra.sh1 = new Uint32Array(numSplats * 2);\n      if (useSH2) extra.sh2 = new Uint32Array(numSplats * 4);\n      if (useSH3) extra.sh3 = new Uint32Array(numSplats * 4);\n      const sh1 = new Float32Array(9);\n      const sh2 = new Float32Array(15);\n      const sh3 = new Float32Array(21);\n      const shN = json.shN;\n      const shNPromise = Promise.all([\n        decodeImage(extraFiles[json.shN.files[0]]),\n        decodeImage(extraFiles[json.shN.files[1]])\n      ]).then(([centroids, labels]) => {\n        for (let i2 = 0; i2 < numSplats; ++i2) {\n          const i4 = i2 * 4;\n          const label = labels.rgba[i4 + 0] + (labels.rgba[i4 + 1] << 8);\n          const col = (label & 63) * 15;\n          const row = label >>> 6;\n          const offset = row * centroids.width + col;\n          for (let d = 0; d < 3; ++d) {\n            if (useSH1) {\n              for (let k = 0; k < 3; ++k) {\n                sh1[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + k) * 4 + d] / 255;\n              }\n            }\n            if (useSH2) {\n              for (let k = 0; k < 5; ++k) {\n                sh2[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + 3 + k) * 4 + d] / 255;\n              }\n            }\n            if (useSH3) {\n              for (let k = 0; k < 7; ++k) {\n                sh3[k * 3 + d] = shN.mins + (shN.maxs - shN.mins) * centroids.rgba[(offset + 8 + k) * 4 + d] / 255;\n              }\n            }\n          }\n          if (useSH1)\n            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);\n          if (useSH2)\n            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);\n          if (useSH3)\n            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);\n        }\n      });\n      promises.push(shNPromise);\n    }\n    await Promise.all(promises);\n    return { packedArray, numSplats, extra };\n  }\n  let offscreenGlContext = null;\n  async function decodeImage(fileBytes) {\n    if (!offscreenGlContext) {\n      const canvas = new OffscreenCanvas(1, 1);\n      offscreenGlContext = canvas.getContext("webgl2");\n      if (!offscreenGlContext) {\n        throw new Error("Failed to create WebGL2 context");\n      }\n    }\n    const imageBlob = new Blob([fileBytes]);\n    const bitmap = await createImageBitmap(imageBlob, {\n      premultiplyAlpha: "none"\n    });\n    const gl = offscreenGlContext;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n    const data = new Uint8Array(bitmap.width * bitmap.height * 4);\n    gl.readPixels(\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data\n    );\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(framebuffer);\n    return { rgba: data, width: bitmap.width, height: bitmap.height };\n  }\n  async function decodeImageRgba(fileBytes) {\n    const { rgba } = await decodeImage(fileBytes);\n    return rgba;\n  }\n  async function unpackPcSogsZip(fileBytes, splatEncoding) {\n    var _a2;\n    const nameJson = tryPcSogsZip(fileBytes);\n    if (!nameJson) {\n      throw new Error("Invalid PC SOGS zip file");\n    }\n    const { name, json } = nameJson;\n    const lastSlash = name.lastIndexOf("/");\n    const lastBackslash = name.lastIndexOf("\\\\");\n    const prefix = name.slice(0, Math.max(lastSlash, lastBackslash) + 1);\n    const fileMap = /* @__PURE__ */ new Map();\n    const refFiles = [\n      ...json.means.files,\n      ...json.scales.files,\n      ...json.quats.files,\n      ...json.sh0.files,\n      ...((_a2 = json.shN) == null ? void 0 : _a2.files) ?? []\n    ];\n    for (const file of refFiles) {\n      fileMap.set(prefix + file, file);\n    }\n    const unzipped = await new Promise(\n      (resolve, reject) => {\n        unzip(\n          fileBytes,\n          {\n            filter: ({ name: name2 }) => {\n              return fileMap.has(name2);\n            }\n          },\n          (err2, files) => {\n            if (err2) {\n              reject(err2);\n            } else {\n              resolve(files);\n            }\n          }\n        );\n      }\n    );\n    const extraFiles = {};\n    for (const [full, name2] of fileMap.entries()) {\n      extraFiles[name2] = unzipped[full];\n    }\n    return await unpackPcSogs(json, extraFiles, splatEncoding);\n  }\n  class SpzReader {\n    constructor({ fileBytes }) {\n      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;\n      this.reader = new GunzipReader({ fileBytes: this.fileBytes });\n      const header = new DataView(this.reader.read(16).buffer);\n      if (header.getUint32(0, true) !== 1347635022) {\n        throw new Error("Invalid SPZ file");\n      }\n      this.version = header.getUint32(4, true);\n      if (this.version < 1 || this.version > 2) {\n        throw new Error(`Unsupported SPZ version: ${this.version}`);\n      }\n      this.numSplats = header.getUint32(8, true);\n      this.shDegree = header.getUint8(12);\n      this.fractionalBits = header.getUint8(13);\n      this.flags = header.getUint8(14);\n      this.flagAntiAlias = (this.flags & 1) !== 0;\n      this.reserved = header.getUint8(15);\n      this.parsed = false;\n    }\n    parseSplats(centerCallback, alphaCallback, rgbCallback, scalesCallback, quatCallback, shCallback) {\n      if (this.parsed) {\n        throw new Error("SPZ file already parsed");\n      }\n      this.parsed = true;\n      if (this.version === 1) {\n        const centerBytes = this.reader.read(this.numSplats * 3 * 2);\n        const centerUint16 = new Uint16Array(centerBytes.buffer);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const x2 = fromHalf(centerUint16[i3]);\n          const y = fromHalf(centerUint16[i3 + 1]);\n          const z = fromHalf(centerUint16[i3 + 2]);\n          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);\n        }\n      } else if (this.version === 2) {\n        const fixed = 1 << this.fractionalBits;\n        const centerBytes = this.reader.read(this.numSplats * 3 * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i9 = i2 * 9;\n          const x2 = ((centerBytes[i9 + 2] << 24 | centerBytes[i9 + 1] << 16 | centerBytes[i9] << 8) >> 8) / fixed;\n          const y = ((centerBytes[i9 + 5] << 24 | centerBytes[i9 + 4] << 16 | centerBytes[i9 + 3] << 8) >> 8) / fixed;\n          const z = ((centerBytes[i9 + 8] << 24 | centerBytes[i9 + 7] << 16 | centerBytes[i9 + 6] << 8) >> 8) / fixed;\n          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);\n        }\n      } else {\n        throw new Error("Unreachable");\n      }\n      {\n        const bytes = this.reader.read(this.numSplats);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          alphaCallback == null ? void 0 : alphaCallback(i2, bytes[i2] / 255);\n        }\n      }\n      {\n        const rgbBytes = this.reader.read(this.numSplats * 3);\n        const scale = SH_C0 / 0.15;\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const r = (rgbBytes[i3] / 255 - 0.5) * scale + 0.5;\n          const g = (rgbBytes[i3 + 1] / 255 - 0.5) * scale + 0.5;\n          const b = (rgbBytes[i3 + 2] / 255 - 0.5) * scale + 0.5;\n          rgbCallback == null ? void 0 : rgbCallback(i2, r, g, b);\n        }\n      }\n      {\n        const scalesBytes = this.reader.read(this.numSplats * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const scaleX = Math.exp(scalesBytes[i3] / 16 - 10);\n          const scaleY = Math.exp(scalesBytes[i3 + 1] / 16 - 10);\n          const scaleZ = Math.exp(scalesBytes[i3 + 2] / 16 - 10);\n          scalesCallback == null ? void 0 : scalesCallback(i2, scaleX, scaleY, scaleZ);\n        }\n      }\n      {\n        const quatBytes = this.reader.read(this.numSplats * 3);\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          const i3 = i2 * 3;\n          const quatX = quatBytes[i3] / 127.5 - 1;\n          const quatY = quatBytes[i3 + 1] / 127.5 - 1;\n          const quatZ = quatBytes[i3 + 2] / 127.5 - 1;\n          const quatW = Math.sqrt(\n            Math.max(0, 1 - quatX * quatX - quatY * quatY - quatZ * quatZ)\n          );\n          quatCallback == null ? void 0 : quatCallback(i2, quatX, quatY, quatZ, quatW);\n        }\n      }\n      if (shCallback && this.shDegree >= 1) {\n        const sh1 = new Float32Array(3 * 3);\n        const sh2 = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0;\n        const sh3 = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0;\n        const shBytes = this.reader.read(\n          this.numSplats * SH_DEGREE_TO_VECS[this.shDegree] * 3\n        );\n        let offset = 0;\n        for (let i2 = 0; i2 < this.numSplats; i2++) {\n          for (let j = 0; j < 9; ++j) {\n            sh1[j] = (shBytes[offset + j] - 128) / 128;\n          }\n          offset += 9;\n          if (sh2) {\n            for (let j = 0; j < 15; ++j) {\n              sh2[j] = (shBytes[offset + j] - 128) / 128;\n            }\n            offset += 15;\n          }\n          if (sh3) {\n            for (let j = 0; j < 21; ++j) {\n              sh3[j] = (shBytes[offset + j] - 128) / 128;\n            }\n            offset += 21;\n          }\n          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);\n        }\n      }\n    }\n  }\n  const SH_DEGREE_TO_VECS = { 1: 3, 2: 8, 3: 15 };\n  const SH_C0 = 0.28209479177387814;\n  const SPZ_MAGIC = 1347635022;\n  const SPZ_VERSION = 2;\n  const FLAG_ANTIALIASED = 1;\n  class SpzWriter {\n    constructor({\n      numSplats,\n      shDegree,\n      fractionalBits = 12,\n      flagAntiAlias = true\n    }) {\n      this.clippedCount = 0;\n      const splatSize = 9 + 1 + 3 + 3 + 3 + (shDegree >= 1 ? 9 : 0) + (shDegree >= 2 ? 15 : 0) + (shDegree >= 3 ? 21 : 0);\n      const bufferSize = 16 + numSplats * splatSize;\n      this.buffer = new ArrayBuffer(bufferSize);\n      this.view = new DataView(this.buffer);\n      this.view.setUint32(0, SPZ_MAGIC, true);\n      this.view.setUint32(4, SPZ_VERSION, true);\n      this.view.setUint32(8, numSplats, true);\n      this.view.setUint8(12, shDegree);\n      this.view.setUint8(13, fractionalBits);\n      this.view.setUint8(14, flagAntiAlias ? FLAG_ANTIALIASED : 0);\n      this.view.setUint8(15, 0);\n      this.numSplats = numSplats;\n      this.shDegree = shDegree;\n      this.fractionalBits = fractionalBits;\n      this.fraction = 1 << fractionalBits;\n      this.flagAntiAlias = flagAntiAlias;\n    }\n    setCenter(index, x2, y, z) {\n      const xRounded = Math.round(x2 * this.fraction);\n      const xInt = Math.max(-8388607, Math.min(8388607, xRounded));\n      const yRounded = Math.round(y * this.fraction);\n      const yInt = Math.max(-8388607, Math.min(8388607, yRounded));\n      const zRounded = Math.round(z * this.fraction);\n      const zInt = Math.max(-8388607, Math.min(8388607, zRounded));\n      const clipped = xRounded !== xInt || yRounded !== yInt || zRounded !== zInt;\n      if (clipped) {\n        this.clippedCount += 1;\n      }\n      const i9 = index * 9;\n      const base = 16 + i9;\n      this.view.setUint8(base, xInt & 255);\n      this.view.setUint8(base + 1, xInt >> 8 & 255);\n      this.view.setUint8(base + 2, xInt >> 16 & 255);\n      this.view.setUint8(base + 3, yInt & 255);\n      this.view.setUint8(base + 4, yInt >> 8 & 255);\n      this.view.setUint8(base + 5, yInt >> 16 & 255);\n      this.view.setUint8(base + 6, zInt & 255);\n      this.view.setUint8(base + 7, zInt >> 8 & 255);\n      this.view.setUint8(base + 8, zInt >> 16 & 255);\n    }\n    setAlpha(index, alpha) {\n      const base = 16 + this.numSplats * 9 + index;\n      this.view.setUint8(\n        base,\n        Math.max(0, Math.min(255, Math.round(alpha * 255)))\n      );\n    }\n    static scaleRgb(r) {\n      const v = ((r - 0.5) / (SH_C0 / 0.15) + 0.5) * 255;\n      return Math.max(0, Math.min(255, Math.round(v)));\n    }\n    setRgb(index, r, g, b) {\n      const base = 16 + this.numSplats * 10 + index * 3;\n      this.view.setUint8(base, SpzWriter.scaleRgb(r));\n      this.view.setUint8(base + 1, SpzWriter.scaleRgb(g));\n      this.view.setUint8(base + 2, SpzWriter.scaleRgb(b));\n    }\n    setScale(index, scaleX, scaleY, scaleZ) {\n      const base = 16 + this.numSplats * 13 + index * 3;\n      this.view.setUint8(\n        base,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleX) + 10) * 16)))\n      );\n      this.view.setUint8(\n        base + 1,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleY) + 10) * 16)))\n      );\n      this.view.setUint8(\n        base + 2,\n        Math.max(0, Math.min(255, Math.round((Math.log(scaleZ) + 10) * 16)))\n      );\n    }\n    setQuat(index, quatX, quatY, quatZ, quatW) {\n      const base = 16 + this.numSplats * 16 + index * 3;\n      const quatNeg = quatW < 0;\n      this.view.setUint8(\n        base,\n        Math.max(\n          0,\n          Math.min(255, Math.round(((quatNeg ? -quatX : quatX) + 1) * 127.5))\n        )\n      );\n      this.view.setUint8(\n        base + 1,\n        Math.max(\n          0,\n          Math.min(255, Math.round(((quatNeg ? -quatY : quatY) + 1) * 127.5))\n        )\n      );\n      this.view.setUint8(\n        base + 2,\n        Math.max(\n          0,\n          Math.min(255, Math.round(((quatNeg ? -quatZ : quatZ) + 1) * 127.5))\n        )\n      );\n    }\n    static quantizeSh(sh, bits2) {\n      const value = Math.round(sh * 128) + 128;\n      const bucketSize = 1 << 8 - bits2;\n      const quantized = Math.floor((value + bucketSize / 2) / bucketSize) * bucketSize;\n      return Math.max(0, Math.min(255, quantized));\n    }\n    setSh(index, sh1, sh2, sh3) {\n      const shVecs = SH_DEGREE_TO_VECS[this.shDegree] || 0;\n      const base1 = 16 + this.numSplats * 19 + index * shVecs * 3;\n      for (let j = 0; j < 9; ++j) {\n        this.view.setUint8(base1 + j, SpzWriter.quantizeSh(sh1[j], 5));\n      }\n      if (sh2) {\n        const base2 = base1 + 9;\n        for (let j = 0; j < 15; ++j) {\n          this.view.setUint8(base2 + j, SpzWriter.quantizeSh(sh2[j], 4));\n        }\n        if (sh3) {\n          const base3 = base2 + 15;\n          for (let j = 0; j < 21; ++j) {\n            this.view.setUint8(base3 + j, SpzWriter.quantizeSh(sh3[j], 4));\n          }\n        }\n      }\n    }\n    async finalize() {\n      const input = new Uint8Array(this.buffer);\n      const stream = new ReadableStream({\n        async start(controller) {\n          controller.enqueue(input);\n          controller.close();\n        }\n      });\n      const compressed = stream.pipeThrough(new CompressionStream("gzip"));\n      const response = new Response(compressed);\n      const buffer = await response.arrayBuffer();\n      console.log(\n        "Compressed",\n        input.length,\n        "bytes to",\n        buffer.byteLength,\n        "bytes"\n      );\n      return new Uint8Array(buffer);\n    }\n  }\n  async function transcodeSpz(input) {\n    var _a2, _b2, _c;\n    const splats = new SplatData();\n    const {\n      inputs,\n      clipXyz,\n      maxSh,\n      fractionalBits = 12,\n      opacityThreshold\n    } = input;\n    for (const input2 of inputs) {\n      let transformPos = function(pos) {\n        pos.multiplyScalar(scale);\n        pos.applyQuaternion(quaternion);\n        pos.add(translate);\n        return pos;\n      }, transformScales = function(scales) {\n        scales.multiplyScalar(scale);\n        return scales;\n      }, transformQuaternion = function(quat) {\n        quat.premultiply(quaternion);\n        return quat;\n      }, withinClip = function(p) {\n        return !clip || clip.containsPoint(p);\n      }, withinOpacity = function(opacity) {\n        return opacityThreshold !== void 0 ? opacity >= opacityThreshold : true;\n      };\n      const scale = ((_a2 = input2.transform) == null ? void 0 : _a2.scale) ?? 1;\n      const quaternion = new Quaternion().fromArray(\n        ((_b2 = input2.transform) == null ? void 0 : _b2.quaternion) ?? [0, 0, 0, 1]\n      );\n      const translate = new Vector3().fromArray(\n        ((_c = input2.transform) == null ? void 0 : _c.translate) ?? [0, 0, 0]\n      );\n      const clip = clipXyz ? new Box3(\n        new Vector3().fromArray(clipXyz.min),\n        new Vector3().fromArray(clipXyz.max)\n      ) : void 0;\n      let fileType = input2.fileType;\n      if (!fileType) {\n        fileType = getSplatFileType(input2.fileBytes);\n        if (!fileType && input2.pathOrUrl) {\n          fileType = getSplatFileTypeFromPath(input2.pathOrUrl);\n        }\n      }\n      switch (fileType) {\n        case SplatFileType.PLY: {\n          const ply = new PlyReader({ fileBytes: input2.fileBytes });\n          await ply.parseHeader();\n          let lastIndex = null;\n          ply.parseSplats(\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                lastIndex = splats.pushSplat();\n                splats.setCenter(lastIndex, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(lastIndex, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  lastIndex,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(lastIndex, opacity);\n                splats.setColor(lastIndex, r, g, b);\n              } else {\n                lastIndex = null;\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (sh1 && lastIndex !== null) {\n                splats.setSh1(lastIndex, sh1);\n              }\n              if (sh2 && lastIndex !== null) {\n                splats.setSh2(lastIndex, sh2);\n              }\n              if (sh3 && lastIndex !== null) {\n                splats.setSh3(lastIndex, sh3);\n              }\n            }\n          );\n          break;\n        }\n        case SplatFileType.SPZ: {\n          const spz2 = new SpzReader({ fileBytes: input2.fileBytes });\n          const mapping = new Int32Array(spz2.numSplats);\n          mapping.fill(-1);\n          const centers = new Float32Array(spz2.numSplats * 3);\n          const center = new Vector3();\n          spz2.parseSplats(\n            (index, x2, y, z) => {\n              const center2 = transformPos(new Vector3(x2, y, z));\n              centers[index * 3] = center2.x;\n              centers[index * 3 + 1] = center2.y;\n              centers[index * 3 + 2] = center2.z;\n            },\n            (index, alpha) => {\n              center.fromArray(centers, index * 3);\n              if (withinClip(center) && withinOpacity(alpha)) {\n                mapping[index] = splats.pushSplat();\n                splats.setCenter(mapping[index], center.x, center.y, center.z);\n                splats.setOpacity(mapping[index], alpha);\n              }\n            },\n            (index, r, g, b) => {\n              if (mapping[index] >= 0) {\n                splats.setColor(mapping[index], r, g, b);\n              }\n            },\n            (index, scaleX, scaleY, scaleZ) => {\n              if (mapping[index] >= 0) {\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(mapping[index], scales.x, scales.y, scales.z);\n              }\n            },\n            (index, quatX, quatY, quatZ, quatW) => {\n              if (mapping[index] >= 0) {\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  mapping[index],\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (mapping[index] >= 0) {\n                splats.setSh1(mapping[index], sh1);\n                if (sh2) {\n                  splats.setSh2(mapping[index], sh2);\n                }\n                if (sh3) {\n                  splats.setSh3(mapping[index], sh3);\n                }\n              }\n            }\n          );\n          break;\n        }\n        case SplatFileType.SPLAT:\n          decodeAntiSplat(\n            input2.fileBytes,\n            (numSplats) => {\n            },\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                const index2 = splats.pushSplat();\n                splats.setCenter(index2, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(index2, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  index2,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(index2, opacity);\n                splats.setColor(index2, r, g, b);\n              }\n            }\n          );\n          break;\n        case SplatFileType.KSPLAT: {\n          let lastIndex = null;\n          decodeKsplat(\n            input2.fileBytes,\n            (numSplats) => {\n            },\n            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n              const center = transformPos(new Vector3(x2, y, z));\n              if (withinClip(center) && withinOpacity(opacity)) {\n                lastIndex = splats.pushSplat();\n                splats.setCenter(lastIndex, center.x, center.y, center.z);\n                const scales = transformScales(\n                  new Vector3(scaleX, scaleY, scaleZ)\n                );\n                splats.setScale(lastIndex, scales.x, scales.y, scales.z);\n                const quaternion2 = transformQuaternion(\n                  new Quaternion(quatX, quatY, quatZ, quatW)\n                );\n                splats.setQuaternion(\n                  lastIndex,\n                  quaternion2.x,\n                  quaternion2.y,\n                  quaternion2.z,\n                  quaternion2.w\n                );\n                splats.setOpacity(lastIndex, opacity);\n                splats.setColor(lastIndex, r, g, b);\n              } else {\n                lastIndex = null;\n              }\n            },\n            (index, sh1, sh2, sh3) => {\n              if (lastIndex !== null) {\n                splats.setSh1(lastIndex, sh1);\n                if (sh2) {\n                  splats.setSh2(lastIndex, sh2);\n                }\n                if (sh3) {\n                  splats.setSh3(lastIndex, sh3);\n                }\n              }\n            }\n          );\n          break;\n        }\n        default:\n          throw new Error(`transcodeSpz not implemented for ${fileType}`);\n      }\n    }\n    const shDegree = Math.min(\n      maxSh ?? 3,\n      splats.sh3 ? 3 : splats.sh2 ? 2 : splats.sh1 ? 1 : 0\n    );\n    const spz = new SpzWriter({\n      numSplats: splats.numSplats,\n      shDegree,\n      fractionalBits,\n      flagAntiAlias: true\n    });\n    for (let i2 = 0; i2 < splats.numSplats; ++i2) {\n      const i3 = i2 * 3;\n      const i4 = i2 * 4;\n      spz.setCenter(\n        i2,\n        splats.centers[i3],\n        splats.centers[i3 + 1],\n        splats.centers[i3 + 2]\n      );\n      spz.setScale(\n        i2,\n        splats.scales[i3],\n        splats.scales[i3 + 1],\n        splats.scales[i3 + 2]\n      );\n      spz.setQuat(\n        i2,\n        splats.quaternions[i4],\n        splats.quaternions[i4 + 1],\n        splats.quaternions[i4 + 2],\n        splats.quaternions[i4 + 3]\n      );\n      spz.setAlpha(i2, splats.opacities[i2]);\n      spz.setRgb(\n        i2,\n        splats.colors[i3],\n        splats.colors[i3 + 1],\n        splats.colors[i3 + 2]\n      );\n      if (splats.sh1 && shDegree >= 1) {\n        spz.setSh(\n          i2,\n          splats.sh1.slice(i2 * 9, (i2 + 1) * 9),\n          shDegree >= 2 && splats.sh2 ? splats.sh2.slice(i2 * 15, (i2 + 1) * 15) : void 0,\n          shDegree >= 3 && splats.sh3 ? splats.sh3.slice(i2 * 21, (i2 + 1) * 21) : void 0\n        );\n      }\n    }\n    const spzBytes = await spz.finalize();\n    return { fileBytes: spzBytes, clippedCount: spz.clippedCount };\n  }\n  async function onMessage(event) {\n    const { name, args, id } = event.data;\n    let result = void 0;\n    let error = void 0;\n    try {\n      switch (name) {\n        case "unpackPly": {\n          const { packedArray, fileBytes, splatEncoding } = args;\n          const decoded = await unpackPly({\n            packedArray,\n            fileBytes,\n            splatEncoding\n          });\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodeSpz": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = unpackSpz(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodeAntiSplat": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = unpackAntiSplat(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray\n          };\n          break;\n        }\n        case "decodeKsplat": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = unpackKsplat(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodePcSogs": {\n          const { fileBytes, extraFiles, splatEncoding } = args;\n          const json = JSON.parse(\n            new TextDecoder().decode(fileBytes)\n          );\n          const decoded = await unpackPcSogs(json, extraFiles, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "decodePcSogsZip": {\n          const { fileBytes, splatEncoding } = args;\n          const decoded = await unpackPcSogsZip(fileBytes, splatEncoding);\n          result = {\n            id,\n            numSplats: decoded.numSplats,\n            packedArray: decoded.packedArray,\n            extra: decoded.extra\n          };\n          break;\n        }\n        case "sortSplats": {\n          const { totalSplats, readback, ordering } = args;\n          result = {\n            id,\n            readback,\n            ...sortSplats({ totalSplats, readback, ordering })\n          };\n          break;\n        }\n        case "sortDoubleSplats": {\n          const { numSplats, readback, ordering } = args;\n          {\n            result = {\n              id,\n              readback,\n              ordering,\n              activeSplats: sort_splats(numSplats, readback, ordering)\n            };\n          }\n          break;\n        }\n        case "sort32Splats": {\n          const { numSplats, readback, ordering } = args;\n          {\n            result = {\n              id,\n              readback,\n              ordering,\n              activeSplats: sort32_splats(numSplats, readback, ordering)\n            };\n          }\n          break;\n        }\n        case "transcodeSpz": {\n          const input = args;\n          const spzBytes = await transcodeSpz(input);\n          result = {\n            id,\n            fileBytes: spzBytes,\n            input\n          };\n          break;\n        }\n        default: {\n          throw new Error(`Unknown name: ${name}`);\n        }\n      }\n    } catch (e) {\n      error = e;\n      console.error(error);\n    }\n    self.postMessage(\n      { id, result, error },\n      { transfer: getArrayBuffers(result) }\n    );\n  }\n  async function unpackPly({\n    packedArray,\n    fileBytes,\n    splatEncoding\n  }) {\n    const ply = new PlyReader({ fileBytes });\n    await ply.parseHeader();\n    const numSplats = ply.numSplats;\n    const extra = {};\n    ply.parseSplats(\n      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {\n        setPackedSplat(\n          packedArray,\n          index,\n          x2,\n          y,\n          z,\n          scaleX,\n          scaleY,\n          scaleZ,\n          quatX,\n          quatY,\n          quatZ,\n          quatW,\n          opacity,\n          r,\n          g,\n          b,\n          splatEncoding\n        );\n      },\n      (index, sh1, sh2, sh3) => {\n        if (sh1) {\n          if (!extra.sh1) {\n            extra.sh1 = new Uint32Array(numSplats * 2);\n          }\n          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);\n        }\n        if (sh2) {\n          if (!extra.sh2) {\n            extra.sh2 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);\n        }\n        if (sh3) {\n          if (!extra.sh3) {\n            extra.sh3 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);\n        }\n      }\n    );\n    return { packedArray, numSplats, extra };\n  }\n  function unpackSpz(fileBytes, splatEncoding) {\n    const spz = new SpzReader({ fileBytes });\n    const numSplats = spz.numSplats;\n    const maxSplats = computeMaxSplats(numSplats);\n    const packedArray = new Uint32Array(maxSplats * 4);\n    const extra = {};\n    spz.parseSplats(\n      (index, x2, y, z) => {\n        setPackedSplatCenter(packedArray, index, x2, y, z);\n      },\n      (index, alpha) => {\n        setPackedSplatOpacity(packedArray, index, alpha);\n      },\n      (index, r, g, b) => {\n        setPackedSplatRgb(packedArray, index, r, g, b, splatEncoding);\n      },\n      (index, scaleX, scaleY, scaleZ) => {\n        setPackedSplatScales(\n          packedArray,\n          index,\n          scaleX,\n          scaleY,\n          scaleZ,\n          splatEncoding\n        );\n      },\n      (index, quatX, quatY, quatZ, quatW) => {\n        setPackedSplatQuat(packedArray, index, quatX, quatY, quatZ, quatW);\n      },\n      (index, sh1, sh2, sh3) => {\n        if (sh1) {\n          if (!extra.sh1) {\n            extra.sh1 = new Uint32Array(numSplats * 2);\n          }\n          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);\n        }\n        if (sh2) {\n          if (!extra.sh2) {\n            extra.sh2 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);\n        }\n        if (sh3) {\n          if (!extra.sh3) {\n            extra.sh3 = new Uint32Array(numSplats * 4);\n          }\n          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);\n        }\n      }\n    );\n    return { packedArray, numSplats, extra };\n  }\n  const DEPTH_INFINITY_F16 = 31744;\n  const DEPTH_SIZE_16 = DEPTH_INFINITY_F16 + 1;\n  let depthArray16 = null;\n  function sortSplats({\n    totalSplats,\n    readback,\n    ordering\n  }) {\n    if (!depthArray16) {\n      depthArray16 = new Uint32Array(DEPTH_SIZE_16);\n    }\n    depthArray16.fill(0);\n    const readbackUint32 = readback.map((layer) => new Uint32Array(layer.buffer));\n    const layerSize = readbackUint32[0].length;\n    const numLayers = Math.ceil(totalSplats / layerSize);\n    let layerBase = 0;\n    for (let layer = 0; layer < numLayers; ++layer) {\n      const readbackLayer = readbackUint32[layer];\n      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);\n      for (let i2 = 0; i2 < layerSplats; ++i2) {\n        const pri = readbackLayer[i2] & 32767;\n        if (pri < DEPTH_INFINITY_F16) {\n          depthArray16[pri] += 1;\n        }\n      }\n      layerBase += layerSplats;\n    }\n    let activeSplats = 0;\n    for (let j = 0; j < DEPTH_SIZE_16; ++j) {\n      const nextIndex = activeSplats + depthArray16[j];\n      depthArray16[j] = activeSplats;\n      activeSplats = nextIndex;\n    }\n    layerBase = 0;\n    for (let layer = 0; layer < numLayers; ++layer) {\n      const readbackLayer = readbackUint32[layer];\n      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);\n      for (let i2 = 0; i2 < layerSplats; ++i2) {\n        const pri = readbackLayer[i2] & 32767;\n        if (pri < DEPTH_INFINITY_F16) {\n          ordering[depthArray16[pri]] = layerBase + i2;\n          depthArray16[pri] += 1;\n        }\n      }\n      layerBase += layerSplats;\n    }\n    if (depthArray16[DEPTH_SIZE_16 - 1] !== activeSplats) {\n      throw new Error(\n        `Expected ${activeSplats} active splats but got ${depthArray16[DEPTH_SIZE_16 - 1]}`\n      );\n    }\n    return { activeSplats, ordering };\n  }\n  const messageBuffer = [];\n  function bufferMessage(event) {\n    messageBuffer.push(event);\n  }\n  async function initialize() {\n    self.addEventListener("message", bufferMessage);\n    await __wbg_init();\n    self.removeEventListener("message", bufferMessage);\n    self.addEventListener("message", onMessage);\n    for (const event of messageBuffer) {\n      onMessage(event);\n    }\n    messageBuffer.length = 0;\n  }\n  initialize().catch(console.error);\n})();\n//# sourceMappingURL=worker-C1ojSBY1.js.map\n',fO="undefined"!=typeof self&&self.Blob&&new Blob([gO],{type:"text/javascript;charset=utf-8"});function mO(t){let e;try{if(e=fO&&(self.URL||self.webkitURL).createObjectURL(fO),!e)throw"";const n=new Worker(e,{name:null==t?void 0:t.name});return n.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(e)}),n}catch(e){return new Worker("data:text/javascript;charset=utf-8,"+encodeURIComponent(gO),{name:null==t?void 0:t.name})}finally{e&&(self.URL||self.webkitURL).revokeObjectURL(e)}}class yO{constructor(){this.messages={},this.messageIdNext=0,this.worker=new mO,this.worker.onmessage=t=>this.onMessage(t)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const t=this.makeMessageId(),e=new Promise((e,n)=>{this.messages[t]={resolve:e,reject:n}});return{id:t,promise:e}}onMessage(t){const{id:e,result:n,error:i}=t.data,s=this.messages[e];s&&(delete this.messages[e],i?s.reject(i):s.resolve(n))}async call(t,e){const{id:n,promise:i}=this.makeMessagePromiseId();return this.worker.postMessage({name:t,args:e,id:n},{transfer:CP(e)}),i}}let IO=4,CO=0;const EO=[],vO=[];async function xO(t){const e=await async function(){const t=EO.shift();if(t)return t;if(CO<IO){const t=new yO;return CO+=1,t}return new Promise(t=>{vO.push(t)})}();try{return await t(e)}finally{!function(t){if(CO>IO)return void(CO-=1);const e=vO.shift();e?e(t):EO.push(t)}(e)}}class wO extends bA{constructor(t){super(t),this.fileLoader=new QA(t)}load(t,e,n,i){const s=this.manager.resolveURL((this.path??"")+(t??"")),r=new Headers(this.requestHeader),a=this.withCredentials?"include":"same-origin",o=new Request(s,{headers:r,credentials:a});let l=this.fileType;this.manager.itemStart(s),_O(o,n).then(async t=>{var i;const o=[new ProgressEvent("progress",{lengthComputable:!0,loaded:t.byteLength,total:t.byteLength})];function c(){if(n){const t=o.every(t=>t.lengthComputable||0===t.loaded&&0===t.total),e=o.reduce((t,e)=>t+e.loaded,0),i=o.reduce((t,e)=>t+e.total,0);n(new ProgressEvent("progress",{lengthComputable:t,loaded:e,total:i}))}}const A={},h=[],u=TO(t);if("pcsogs"===l&&void 0===u)throw new Error("Invalid PC SOGS file");if(void 0!==u){l="pcsogs";for(const t of["means","scales","quats","sh0","shN"]){const e=u[t];if(e)for(const t of e.files){const e=new URL(t,s).toString(),n=o.length;o.push(new ProgressEvent("progress")),this.manager.itemStart(e);const i=_O(new Request(e,{headers:r,credentials:a}),t=>{o[n]=t,c()}).then(e=>{A[t]=e}).catch(t=>{throw this.manager.itemError(e),t}).finally(()=>{this.manager.itemEnd(e)});h.push(i)}}}if(await Promise.all(h),e){const n=(null==(i=this.packedSplats)?void 0:i.splatEncoding)??RO,r=await QO({input:t,extraFiles:A,fileType:l,pathOrUrl:s,splatEncoding:n});this.packedSplats?(this.packedSplats.initialize(r),e(this.packedSplats)):e(new PO(r))}}).catch(t=>{this.manager.itemError(s),null==i||i(t)}).finally(()=>{this.manager.itemEnd(s)})}async loadAsync(t,e){return new Promise((n,i)=>{this.load(t,t=>{n(t)},e,i)})}parse(t){return new eO({packedSplats:t})}}async function _O(t,e){const n=await fetch(t);if(!n.ok)throw new Error(`${n.status} "${n.statusText}" fetching URL: ${t.url}`);if(!n.body)throw new Error(`Response body is null for URL: ${t.url}`);const i=n.body.getReader(),s=Number.parseInt(n.headers.get("Content-Length")||"0"),r=Number.isNaN(s)?0:s;let a=0;const o=[];for(;;){const{done:t,value:n}=await i.read();if(t)break;o.push(n),a+=n.length,e&&e(new ProgressEvent("progress",{lengthComputable:0!==r,loaded:a,total:r}))}const l=new Uint8Array(a);let c=0;for(const t of o)l.set(t,c),c+=t.length;return l.buffer}var BO=(t=>(t.PLY="ply",t.SPZ="spz",t.SPLAT="splat",t.KSPLAT="ksplat",t.PCSOGS="pcsogs",t.PCSOGSZIP="pcsogszip",t))(BO||{});function SO(t){const e=new DataView(t.buffer);if(7957616==(16777215&e.getUint32(0,!0)))return"ply";if(559903==(16777215&e.getUint32(0,!0))){const e=zP(t,4);return 1347635022===new DataView(e.buffer).getUint32(0,!0)?"spz":void 0}return 67324752===e.getUint32(0,!0)&&function(t){try{const e=t instanceof ArrayBuffer?new Uint8Array(t):t;let n=null;const i=function(t,e){for(var n={},i=t.length-22;101010256!=GD(t,i);--i)(!i||t.length-i>65558)&&ND(13);var s=zD(t,i+8);if(!s)return{};var r=GD(t,i+16),a=4294967295==r||65535==s;if(a){var o=GD(t,i-12);(a=101075792==GD(t,o))&&(s=GD(t,o+32),r=GD(t,o+48))}for(var l=e&&e.filter,c=0;c<s;++c){var A=jD(t,r,a),h=A[0],u=A[1],d=A[2],p=A[3],g=A[4],f=A[5],m=JD(t,f);r=g,l&&!l({name:p,size:u,originalSize:d,compression:h})||(h?8==h?n[p]=YD(t.subarray(m,m+u),{out:new dD(d)}):ND(14,"unknown compression type "+h):n[p]=LD(t,m,m+u))}return n}(e,{filter:({name:t})=>"meta.json"===t.split(/[\\/]/).pop()&&(n=t,!0)});if(!n)return;const s=TO(i[n]);if(!s)return;return{name:n,json:s}}catch{return}}(t)?"pcsogszip":void 0}function bO(t){const e=function(t){const e=t.split(/[?#]/,1)[0],n=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\")),i=e.slice(n+1),s=i.lastIndexOf(".");return s<=0||s===i.length-1?"":i.slice(s+1).toLowerCase()}(t);return"ply"===e?"ply":"spz"===e?"spz":"splat"===e?"splat":"ksplat"===e?"ksplat":void 0}function MO(t){return void 0!==TO(t)}function TO(t){try{let e;if("string"==typeof t)e=t;else{const n=t instanceof ArrayBuffer?new Uint8Array(t):t;if(n.length>65536)return;e=(new TextDecoder).decode(n)}const n=JSON.parse(e);if(!n||"object"!=typeof n||Array.isArray(n))return;for(const t of["means","scales","quats","sh0"]){if(!n[t]||"object"!=typeof n[t]||Array.isArray(n[t]))return;if(!n[t].shape||!n[t].files)return;if(!("quats"===t||n[t].mins&&n[t].maxs))return}return n}catch{return}}async function QO({input:t,extraFiles:e,fileType:n,pathOrUrl:i,splatEncoding:s}){const r=t instanceof ArrayBuffer?new Uint8Array(t):t;let a=n;switch(n||(a=SO(r),!a&&i&&(a=bO(i))),a){case"ply":{const t=new aO({fileBytes:r});await t.parseHeader();const e=_P(t.numSplats).maxSplats,n={fileBytes:r,packedArray:new Uint32Array(4*e),splatEncoding:s};return await xO(async t=>{const{packedArray:e,numSplats:i,extra:s}=await t.call("unpackPly",n);return{packedArray:e,numSplats:i,extra:s}})}case"spz":return await xO(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodeSpz",{fileBytes:r,splatEncoding:s});return{packedArray:e,numSplats:n,extra:i}});case"splat":return await xO(async t=>{const{packedArray:e,numSplats:n}=await t.call("decodeAntiSplat",{fileBytes:r,splatEncoding:s});return{packedArray:e,numSplats:n}});case"ksplat":return await xO(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodeKsplat",{fileBytes:r,splatEncoding:s});return{packedArray:e,numSplats:n,extra:i}});case"pcsogs":return await xO(async t=>{const{packedArray:n,numSplats:i,extra:a}=await t.call("decodePcSogs",{fileBytes:r,extraFiles:e,splatEncoding:s});return{packedArray:n,numSplats:i,extra:a}});case"pcsogszip":return await xO(async t=>{const{packedArray:e,numSplats:n,extra:i}=await t.call("decodePcSogsZip",{fileBytes:r,splatEncoding:s});return{packedArray:e,numSplats:n,extra:i}});default:throw new Error(`Unknown splat file type: ${a}`)}}class DO{constructor({maxSplats:t=1}={}){this.numSplats=0,this.maxSplats=_P(t).maxSplats,this.centers=new Float32Array(3*this.maxSplats),this.scales=new Float32Array(3*this.maxSplats),this.quaternions=new Float32Array(4*this.maxSplats),this.opacities=new Float32Array(this.maxSplats),this.colors=new Float32Array(3*this.maxSplats)}pushSplat(){const t=this.numSplats;return this.ensureIndex(t),this.numSplats+=1,t}unpushSplat(t){if(t!==this.numSplats-1)throw new Error("Cannot unpush splat from non-last position");this.numSplats-=1}ensureCapacity(t){if(t>this.maxSplats){const e=Math.max(t,2*this.maxSplats),n=new Float32Array(3*e),i=new Float32Array(3*e),s=new Float32Array(4*e),r=new Float32Array(e),a=new Float32Array(3*e);if(n.set(this.centers),i.set(this.scales),s.set(this.quaternions),r.set(this.opacities),a.set(this.colors),this.centers=n,this.scales=i,this.quaternions=s,this.opacities=r,this.colors=a,this.sh1){const t=new Float32Array(9*e);t.set(this.sh1),this.sh1=t}if(this.sh2){const t=new Float32Array(15*e);t.set(this.sh2),this.sh2=t}if(this.sh3){const t=new Float32Array(21*e);t.set(this.sh3),this.sh3=t}this.maxSplats=e}}ensureIndex(t){this.ensureCapacity(t+1)}setCenter(t,e,n,i){this.centers[3*t]=e,this.centers[3*t+1]=n,this.centers[3*t+2]=i}setScale(t,e,n,i){this.scales[3*t]=e,this.scales[3*t+1]=n,this.scales[3*t+2]=i}setQuaternion(t,e,n,i,s){this.quaternions[4*t]=e,this.quaternions[4*t+1]=n,this.quaternions[4*t+2]=i,this.quaternions[4*t+3]=s}setOpacity(t,e){this.opacities[t]=e}setColor(t,e,n,i){this.colors[3*t]=e,this.colors[3*t+1]=n,this.colors[3*t+2]=i}setSh1(t,e){this.sh1||(this.sh1=new Float32Array(9*this.maxSplats));for(let n=0;n<9;++n)this.sh1[9*t+n]=e[n]}setSh2(t,e){this.sh2||(this.sh2=new Float32Array(15*this.maxSplats));for(let n=0;n<15;++n)this.sh2[15*t+n]=e[n]}setSh3(t,e){this.sh3||(this.sh3=new Float32Array(21*this.maxSplats));for(let n=0;n<21;++n)this.sh3[21*t+n]=e[n]}}const RO={rgbMin:0,rgbMax:1,lnScaleMin:eR,lnScaleMax:nR,sh1Min:-1,sh1Max:1,sh2Min:-1,sh2Max:1,sh3Min:-1,sh3Max:1},UO=class t{constructor(t={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new LO({packedSplats:this}),this.dynoRgbMinMaxLnScaleMinMax=new NU({key:"rgbMinMaxLnScaleMinMax",value:new zi(0,1,eR,nR),update:t=>{var e,n,i,s;return t.set((null==(e=this.splatEncoding)?void 0:e.rgbMin)??0,(null==(n=this.splatEncoding)?void 0:n.rgbMax)??1,(null==(i=this.splatEncoding)?void 0:i.lnScaleMin)??eR,(null==(s=this.splatEncoding)?void 0:s.lnScaleMax)??nR),t}}),this.dynoSh1MinMax=new TU({key:"sh1MinMax",value:new di(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh1Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh1Max)??1),t}}),this.dynoSh2MinMax=new TU({key:"sh2MinMax",value:new di(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh2Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh2Max)??1),t}}),this.dynoSh3MinMax=new TU({key:"sh3MinMax",value:new di(-1,1),update:t=>{var e,n;return t.set((null==(e=this.splatEncoding)?void 0:e.sh3Min)??-1,(null==(n=this.splatEncoding)?void 0:n.sh3Max)??1),t}}),this.initialized=Promise.resolve(this),this.reinitialize(t)}reinitialize(t){this.isInitialized=!1,this.extra={},this.splatEncoding=t.splatEncoding,t.url||t.fileBytes||t.construct?this.initialized=this.asyncInitialize(t).then(()=>(this.isInitialized=!0,this)):(this.initialize(t),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(t){t.packedArray?(this.packedArray=t.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/aR)*aR,this.numSplats=Math.min(this.maxSplats,t.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=t.maxSplats??0,this.numSplats=0),this.extra=t.extra??{}}async asyncInitialize(t){const{url:e,fileBytes:n,construct:i}=t;if(e){const t=new wO;t.packedSplats=this,await t.loadAsync(e)}else if(n){const i=await QO({input:n,fileType:t.fileType,pathOrUrl:t.fileName??e,splatEncoding:t.splatEncoding??RO});this.initialize(i)}if(i){const t=i(this);t instanceof Promise&&await t}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(t){const e=t<=this.maxSplats?this.maxSplats:Math.max(t,2*this.maxSplats),n=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||e>n){this.maxSplats=_P(e).maxSplats;const t=new Uint32Array(4*this.maxSplats);this.packedArray&&t.set(this.packedArray),this.packedArray=t}return this.packedArray}ensureSplatsSh(t,e){let n,i;if(0===t)return this.ensureSplats(e);if(1===t)n=2,i="sh1";else if(2===t)n=4,i="sh2";else{if(3!==t)throw new Error(`Invalid level: ${t}`);n=4,i="sh3"}let s=this.extra[i]?this.extra[i].length/n:0;const r=e<=s?s:Math.max(e,2*s);if(!this.extra[i]||r>s){s=_P(r).maxSplats;const t=new Uint32Array(s*n);this.extra[i]&&t.set(this.extra[i]),this.extra[i]=t}return this.extra[i]}getSplat(t){if(!this.packedArray||t>=this.numSplats)throw new Error("Invalid index");return wP(this.packedArray,t,this.splatEncoding)}setSplat(t,e,n,i,s,r){vP(this.ensureSplats(t+1),t,e.x,e.y,e.z,n.x,n.y,n.z,i.x,i.y,i.z,i.w,s,r.r,r.g,r.b),this.numSplats=Math.max(this.numSplats,t+1)}pushSplat(t,e,n,i,s){vP(this.ensureSplats(this.numSplats+1),this.numSplats,t.x,t.y,t.z,e.x,e.y,e.z,n.x,n.y,n.z,n.w,i,s.r,s.g,s.b),++this.numSplats}forEachSplat(t){if(this.packedArray&&this.numSplats)for(let e=0;e<this.numSplats;++e){const n=wP(this.packedArray,e,this.splatEncoding);t(e,n.center,n.scales,n.quaternion,n.opacity,n.color)}}ensureGenerate(t){if(this.target&&(t??1)<=this.maxSplats)return!1;this.dispose();const e=_P(t??1),{width:n,height:i,depth:s}=e;return this.maxSplats=e.maxSplats,this.target=new Yi(n,i,s,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Dt,minFilter:Dt}),this.target.texture.format=Ae,this.target.texture.type=Wt,this.target.texture.internalFormat="RGBA32UI",this.target.scissorTest=!0,!0}generateMapping(t){let e=0;const n=t.map(t=>{const n=e,i=Math.ceil(t/aR)*aR;return e+=i,{base:n,count:t}});return{maxSplats:e,mapping:n}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():t.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:t,height:e,depth:n}=this.source.image;this.maxSplats!==t*e*n&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:t,height:e,depth:n}=_P(this.maxSplats);this.source=new Vi(this.packedArray,t,e,n),this.source.format=Ae,this.source.type=Wt,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!t.emptySource){const{width:e,height:n,depth:i,maxSplats:s}=_P(1),r=new Uint32Array(4*s);t.emptySource=new Vi(r,e,n,i),t.emptySource.format=Ae,t.emptySource.type=Wt,t.emptySource.internalFormat="RGBA32UI",t.emptySource.needsUpdate=!0}return t.emptySource}prepareProgramMaterial(e){let n=t.generatorProgram.get(e);if(!n){const i=VR({index:"int"},{output:"uvec4"},({index:t})=>{e.inputs.index=t;const n=e.outputs.gsplat;return{output:mU(n,this.dynoRgbMinMaxLnScaleMinMax)}});t.programTemplate||(t.programTemplate=new YP("precision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp usampler2D;\nprecision highp isampler2D;\nprecision highp sampler2DArray;\nprecision highp usampler2DArray;\nprecision highp isampler2DArray;\nprecision highp sampler3D;\nprecision highp usampler3D;\nprecision highp isampler3D;\n\n#include <splatDefines>\n\nuniform uint targetLayer;\nuniform int targetBase;\nuniform int targetCount;\n\nout uvec4 target;\n\n{{ GLOBALS }}\n\nvoid produceSplat(int index) {\n    {{ STATEMENTS }}\n}\n\nvoid main() {\n    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);\n    int index = targetIndex - targetBase;\n\n    if ((index >= 0) && (index < targetCount)) {\n        produceSplat(index);\n    } else {\n        target = uvec4(0u, 0u, 0u, 0u);\n    }\n}")),n=new VP({graph:i,inputs:{index:"index"},outputs:{output:"target"},template:t.programTemplate}),Object.assign(n.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),t.generatorProgram.set(e,n)}const i=n.prepareMaterial();return t.fullScreenQuad.material=i,{program:n,material:i}}saveRenderState(t){return{xrEnabled:t.xr.enabled,autoClear:t.autoClear}}resetRenderState(t,e){t.setRenderTarget(null),t.xr.enabled=e.xrEnabled,t.autoClear=e.autoClear}generate({generator:e,base:n,count:i,renderer:s}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(n+i>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:r,material:a}=this.prepareProgramMaterial(e);r.update();const o=this.saveRenderState(s),l=Math.ceil((n+i)/aR)*aR,c=aR*oR;for(a.uniforms.targetBase.value=n,a.uniforms.targetCount.value=i;n<l;){const e=Math.floor(n/c);a.uniforms.targetLayer.value=e;const i=e*c,r=Math.floor((n-i)/aR),o=Math.min(oR,Math.ceil((l-i)/aR));this.target.scissor.set(0,r,aR,o-r),s.setRenderTarget(this.target,e),s.xr.enabled=!1,s.autoClear=!1,t.fullScreenQuad.render(s),n+=aR*(o-r)}return this.resetRenderState(s,o),{nextBase:l}}};UO.emptySource=null,UO.programTemplate=null,UO.generatorProgram=new Map,UO.fullScreenQuad=new uD(new Jc({visible:!1}));let PO=UO;class LO extends vU{constructor({packedSplats:t}={}){super({key:"packedSplats",type:$R,globals:()=>[oU],value:{texture:PO.getEmpty(),numSplats:0,rgbMinMaxLnScaleMinMax:new zi(0,1,eR,nR)},update:t=>{var e,n,i,s,r,a,o,l,c,A;return t.texture=(null==(e=this.packedSplats)?void 0:e.getTexture())??PO.getEmpty(),t.numSplats=(null==(n=this.packedSplats)?void 0:n.numSplats)??0,t.rgbMinMaxLnScaleMinMax.set((null==(s=null==(i=this.packedSplats)?void 0:i.splatEncoding)?void 0:s.rgbMin)??0,(null==(a=null==(r=this.packedSplats)?void 0:r.splatEncoding)?void 0:a.rgbMax)??1,(null==(l=null==(o=this.packedSplats)?void 0:o.splatEncoding)?void 0:l.lnScaleMin)??eR,(null==(A=null==(c=this.packedSplats)?void 0:c.splatEncoding)?void 0:A.lnScaleMax)??nR),t}}),this.packedSplats=t}}class FO extends oh{constructor(t,e){super(),this.ordering=t,this.setAttribute("position",new Br(NO,3)),this.setIndex(new Br(kO,1)),this._maxInstanceCount=t.length,this.instanceCount=e,this.attribute=new oo(t,1,!1,1),this.attribute.setUsage(On),this.setAttribute("splatIndex",this.attribute)}update(t,e){this.ordering=t,this.attribute.array=t,this.instanceCount=e,this.attribute.addUpdateRange(0,e),this.attribute.needsUpdate=!0}}const NO=new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0]),kO=new Uint16Array([0,1,2,0,2,3]),OO=class t{constructor(t){if(this.lastTime=null,this.encodeLinear=!1,this.superXY=1,this.display=null,this.sorting=null,this.pending=null,this.sortingCheck=!1,this.readback16=new Uint16Array(0),this.readback32=new Uint32Array(0),this.spark=t.spark,this.camera=t.camera,this.viewToWorld=t.viewToWorld??new Es,t.target){const{width:e,height:n,doubleBuffer:i}=t.target,s=Math.max(1,Math.min(4,t.target.superXY??1));if(this.superXY=s,e*s>8192||n*s>8192)throw new Error("Target size too large");this.target=new Hi(e*s,n*s,{format:ne,type:Gt,colorSpace:hn}),i&&(this.back=new Hi(e*s,n*s,{format:ne,type:Gt,colorSpace:hn})),this.encodeLinear=!0}this.onTextureUpdated=t.onTextureUpdated,this.sortRadial=t.sortRadial??!0,this.sortDistance=t.sortDistance,this.sortCoorient=t.sortCoorient,this.depthBias=t.depthBias,this.sort360=t.sort360,this.sort32=t.sort32,this.stochastic=t.stochastic??!1,this.orderingFreelist=new EP({allocate:t=>new Uint32Array(t),valid:(t,e)=>t.length===e}),this.autoUpdate=!1,this.setAutoUpdate(t.autoUpdate??!1)}dispose(){var t;this.setAutoUpdate(!1),this.target&&(this.target.dispose(),this.target=void 0),this.back&&(this.back.dispose(),this.back=void 0),this.display&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.geometry.dispose(),this.display=null),(null==(t=this.pending)?void 0:t.accumulator)&&(this.spark.releaseAccumulator(this.pending.accumulator),this.pending=null)}setAutoUpdate(t){!this.autoUpdate&&t?this.spark.autoViewpoints.push(this):this.autoUpdate&&!t&&(this.spark.autoViewpoints=this.spark.autoViewpoints.filter(t=>t!==this)),this.autoUpdate=t}async prepare({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:s}){var r;for(n?this.viewToWorld=n:(this.camera=e??this.camera,this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone()));i??1;){const e=s?this.viewToWorld:void 0;if(this.spark.updateInternal({scene:t,originToWorld:e}))break;await new Promise(t=>setTimeout(t,10))}const a=this.spark.active;a!==(null==(r=this.display)?void 0:r.accumulator)&&(this.spark.active.refCount+=1),await this.sortUpdate({accumulator:a,viewToWorld:this.viewToWorld})}renderTarget({scene:t,camera:e}){var n;const i=this.back??this.target;if(!i)throw new Error("Must initialize SparkViewpoint with target");if(!(e=e??this.camera))throw new Error("Must provide camera");if(e instanceof da){const t=(new da).copy(e,!1);t.aspect=i.width/i.height,t.updateProjectionMatrix(),e=t}this.viewToWorld=e.matrixWorld.clone();try{this.spark.renderer.setRenderTarget(i),this.spark.prepareViewpoint(this),this.spark.renderer.render(t,e)}finally{this.spark.prepareViewpoint(this.spark.defaultView),this.spark.renderer.setRenderTarget(null)}i!==this.target&&([this.target,this.back]=[this.back,this.target]),null==(n=this.onTextureUpdated)||n.call(this,i.texture)}async readTarget(){if(!this.target)throw new Error("Must initialize SparkViewpoint with target");const{width:t,height:e}=this.target,n=t*e*4;(!this.superPixels||this.superPixels.length<n)&&(this.superPixels=new Uint8Array(n)),await this.spark.renderer.readRenderTargetPixelsAsync(this.target,0,0,t,e,this.superPixels);const{superXY:i}=this;if(1===i)return this.superPixels;const s=t/i,r=e/i,a=s*r*4;(!this.pixels||this.pixels.length<a)&&(this.pixels=new Uint8Array(a));const{superPixels:o,pixels:l}=this,c=i*i;for(let t=0;t<r;t++){const e=t*s;for(let n=0;n<s;n++){const s=n*i;let r=0,a=0,A=0,h=0;for(let e=0;e<i;e++){const n=(t*i+e)*this.target.width;for(let t=0;t<i;t++){const e=4*(n+s+t);r+=o[e],a+=o[e+1],A+=o[e+2],h+=o[e+3]}}const u=4*(e+n);l[u]=r/c,l[u+1]=a/c,l[u+2]=A/c,l[u+3]=h/c}}return l}async prepareRenderPixels({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:s}){return await this.prepare({scene:t,camera:e,viewToWorld:n,update:i,forceOrigin:s}),this.renderTarget({scene:t,camera:e}),this.readTarget()}autoPoll({accumulator:t}){var e,n,i,s;this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone());let r=!1,a=!1;if(this.display){if(t){r=!0;const{mappingVersion:e}=this.display.accumulator;t.mappingVersion===e&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=t,a=!0)}}else r=!0;const o=(null==(e=this.sorting)?void 0:e.viewToWorld)??(null==(n=this.display)?void 0:n.viewToWorld);o&&!FP({matrix1:this.viewToWorld,matrix2:o,maxDistance:this.sortDistance??.01,minCoorient:this.sortCoorient??this.sortRadial?.99:.999})&&(r=!0),r&&(t&&(t.refCount+=1),t&&(null==(i=this.pending)?void 0:i.accumulator)&&this.pending.accumulator!==(null==(s=this.display)?void 0:s.accumulator)&&this.spark.releaseAccumulator(this.pending.accumulator),this.pending={accumulator:t,viewToWorld:this.viewToWorld,displayed:a},this.driveSort())}async driveSort(){for(var t;;){if(this.sorting||!this.pending)return;const{viewToWorld:e,displayed:n}=this.pending;let i=this.pending.accumulator??(null==(t=this.display)?void 0:t.accumulator);if(i||(i=this.spark.active,i.refCount+=1),this.pending=null,!i)throw new Error("No accumulator to sort");this.sorting={viewToWorld:e},await this.sortUpdate({accumulator:i,viewToWorld:e,displayed:n}),this.sorting=null}}async sortUpdate({accumulator:e,viewToWorld:n,displayed:i=!1}){if(this.sortingCheck)throw new Error("Only one sort at a time");this.sortingCheck=!0,e=e??this.spark.active;const{numSplats:s,maxSplats:r}=e.splats;let a=0,o=this.orderingFreelist.alloc(r);if(this.stochastic){a=s;for(let t=0;t<s;++t)o[t]=t}else if(s>0){const{reader:i,doubleSortReader:l,sort32Reader:c,dynoSortRadial:A,dynoOrigin:h,dynoDirection:u,dynoDepthBias:d,dynoSort360:p,dynoSplats:g}=t.makeSorter(),f=this.sort32??!1;let m;if(f)this.readback32=i.ensureBuffer(r,this.readback32),m=this.readback32;else{const t=Math.ceil(r/2);this.readback16=i.ensureBuffer(t,this.readback16),m=this.readback16}const y=e.toWorld.clone().invert(),I=n.clone().premultiply(y);A.value=!!this.sort360||this.sortRadial,h.value.set(0,0,0).applyMatrix4(I),u.value.set(0,0,-1).applyMatrix4(I).sub(h.value).normalize(),d.value=this.depthBias??1,p.value=this.sort360??!1,g.packedSplats=e.splats;const C=f?c:l,E=f?s:Math.ceil(s/2);await i.renderReadback({renderer:this.spark.renderer,reader:C,count:E,readback:m});const v=await xO(async t=>{const e=f?"sort32Splats":"sortDoubleSplats";return t.call(e,{maxSplats:r,numSplats:s,readback:m,ordering:o})});f?this.readback32=v.readback:this.readback16=v.readback,o=v.ordering,a=v.activeSplats}this.updateDisplay({accumulator:e,viewToWorld:n,ordering:o,activeSplats:a,displayed:i}),this.sortingCheck=!1}updateDisplay({accumulator:t,viewToWorld:e,ordering:n,activeSplats:i,displayed:s=!1}){if(this.display){s||t===this.display.accumulator||(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=t),this.display.viewToWorld=e;const r=this.display.geometry.ordering;r.length===n.length?this.display.geometry.update(n,i):(this.display.geometry.dispose(),this.display.geometry=new FO(n,i)),this.orderingFreelist.free(r)}else this.display={accumulator:t,viewToWorld:e,geometry:new FO(n,i)};this.spark.viewpoint===this&&this.spark.prepareViewpoint(this)}static makeSorter(){if(!t.dynos){const e=new xU({value:!0}),n=new UU({value:new gi}),i=new UU({value:new gi}),s=new BU({value:1}),r=new xU({value:!1}),a=new LO,o=new Uk,l=VR({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("No index");const o={sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:s,sort360:r},l=_L(t,NR("int",2)),c=HO({gsplat:tU(a,l),...o}),A=HO({gsplat:tU(a,xL(l,NR("int",1))),...o}),h=mN({vectorType:"vec2",x:c,y:A});return{rgba8:LF(PF(h))}}),c=VR({index:"int"},{rgba8:"vec4"},({index:t})=>{if(!t)throw new Error("No index");const o={sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:s,sort360:r},l=HO({gsplat:tU(a,t),...o});return{rgba8:LF(UF(l))}});t.dynos={dynoSortRadial:e,dynoOrigin:n,dynoDirection:i,dynoDepthBias:s,dynoSort360:r,dynoSplats:a,reader:o,doubleSortReader:l,sort32Reader:c}}return t.dynos}};OO.EMPTY_TEXTURE=new Oi,OO.dynos=null;let zO=OO;const GO=JR("\n  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {\n    if (!isGsplatActive(gsplat.flags)) {\n      return INFINITY;\n    }\n\n    vec3 center = gsplat.center - sortOrigin;\n    float biasedDepth = dot(center, sortDirection) + sortDepthBias;\n    if (!sort360 && (biasedDepth <= 0.0)) {\n      return INFINITY;\n    }\n\n    return sortRadial ? length(center) : biasedDepth;\n  }\n");function HO({gsplat:t,sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:s,sort360:r}){return YR({inTypes:{gsplat:ZR,sortRadial:"bool",sortOrigin:"vec3",sortDirection:"vec3",sortDepthBias:"float",sort360:"bool"},outTypes:{metric:"float"},globals:()=>[aU,GO],inputs:{gsplat:t,sortRadial:e,sortOrigin:n,sortDirection:i,sortDepthBias:s,sort360:r},statements:({inputs:t,outputs:e})=>{const{gsplat:n,sortRadial:i,sortOrigin:s,sortDirection:r,sortDepthBias:a,sort360:o}=t;return WR(`\n        ${e.metric} = computeSort(${n}, ${i}, ${s}, ${r}, ${a}, ${o});\n      `)}}).outputs.metric}class VO{constructor(){this.splats=new PO,this.toWorld=new Es,this.mapping=[],this.refCount=0,this.splatsVersion=-1,this.mappingVersion=-1}ensureGenerate(t){this.splats.ensureGenerate(t)&&(this.mapping=[])}generateSplats({renderer:t,modifier:e,generators:n,forceUpdate:i,originToWorld:s}){const r=this.mapping.reduce((t,e)=>(t.set(e.node,e),t),new Map);let a=0,o=0;for(const{node:s,generator:l,version:c,base:A,count:h}of n){const n=r.get(s);if((i||l!==(null==n?void 0:n.generator)||c!==(null==n?void 0:n.version)||A!==(null==n?void 0:n.base)||h!==(null==n?void 0:n.count))&&l&&h>0){const n=e.apply(l);try{this.splats.generate({generator:n,base:A,count:h,renderer:t})}catch(t){s.generator=void 0,s.generatorError=t}a+=1}o=Math.max(o,A+h)}return this.splats.numSplats=o,this.toWorld=s,this.mapping=n,0!==a}hasCorrespondence(t){return this.mapping.length===t.mapping.length&&this.mapping.every(({node:e,base:n,count:i},s)=>{const{node:r,base:a,count:o}=t.mapping[s];return e===r&&n===a&&i===o})}}let YO,qO=null,WO=!1,JO=!1;const jO=xa.prototype.add;xa.prototype.add=function(t){return WO=WO||function(t){let e=!1;return t instanceof eO||(t.traverse(t=>{e=e||t instanceof eO}),e)}(t),JO=JO||t instanceof ZO,jO.call(this,t),this};const XO=xa.prototype.onBeforeRender;xa.prototype.onBeforeRender=function(t){if(WO){if(!JO){const e=YO||new ZO({renderer:t});this.add(e)}xa.prototype.onBeforeRender=XO,xa.prototype.add=jO}};const KO=class t extends ea{constructor(e){const n=t.makeUniforms(),i=(qO||(id.splatDefines="const float LN_SCALE_MIN = -12.0;\nconst float LN_SCALE_MAX = 9.0;\n\nconst uint SPLAT_TEX_WIDTH_BITS = 11u;\nconst uint SPLAT_TEX_HEIGHT_BITS = 11u;\nconst uint SPLAT_TEX_DEPTH_BITS = 11u;\nconst uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;\n\nconst uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;\nconst uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;\nconst uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;\n\nconst uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;\nconst uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;\nconst uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;\n\nconst uint F16_INF = 0x7c00u;\nconst float PI = 3.1415926535897932384626433832795;\n\nconst float INFINITY = 1.0 / 0.0;\nconst float NEG_INFINITY = -INFINITY;\n\nfloat sqr(float x) {\n    return x * x;\n}\n\nfloat pow4(float x) {\n    float x2 = x * x;\n    return x2 * x2;\n}\n\nfloat pow8(float x) {\n    float x4 = pow4(x);\n    return x4 * x4;\n}\n\nvec3 srgbToLinear(vec3 rgb) {\n    return pow(rgb, vec3(2.2));\n}\n\nvec3 linearToSrgb(vec3 rgb) {\n    return pow(rgb, vec3(1.0 / 2.2));\n}\n\nuint encodeQuatOctXy88R8(vec4 q) {\n    \n    if (q.w < 0.0) {\n        q = -q;\n    }\n    \n    float theta = 2.0 * acos(q.w);\n    float halfTheta = theta * 0.5;\n    float s = sin(halfTheta);\n    \n    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;\n    \n    \n    \n    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);\n    vec2 p = vec2(axis.x, axis.y) / sum;\n    \n    if (axis.z < 0.0) {\n        float oldPx = p.x;\n        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);\n        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);\n    }\n    \n    float u_f = p.x * 0.5 + 0.5;\n    float v_f = p.y * 0.5 + 0.5;\n    \n    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));\n    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));\n    \n    \n    \n    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));\n    \n    \n    return (angleInt << 16u) | (quantV << 8u) | quantU;\n}\n\nvec4 decodeQuatOctXy88R8(uint encoded) {\n    \n    uint quantU = encoded & uint(0xFFu);               \n    uint quantV = (encoded >> 8u) & uint(0xFFu);         \n    uint angleInt = encoded >> 16u;                      \n\n    \n    float u_f = float(quantU) / 255.0;\n    float v_f = float(quantV) / 255.0;\n    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);\n\n    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));\n    float t = max(-axis.z, 0.0);\n    axis.x += (axis.x >= 0.0) ? -t : t;\n    axis.y += (axis.y >= 0.0) ? -t : t;\n    axis = normalize(axis);\n    \n    \n    float theta = (float(angleInt) / 255.0) * 3.14159265359;\n    float halfTheta = theta * 0.5;\n    float s = sin(halfTheta);\n    float w = cos(halfTheta);\n    \n    return vec4(axis * s, w);\n}\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\nuvec4 packSplatEncoding(\n    vec3 center, vec3 scales, vec4 quaternion, vec4 rgba, vec4 rgbMinMaxLnScaleMinMax\n) {\n    float rgbMin = rgbMinMaxLnScaleMinMax.x;\n    float rgbMax = rgbMinMaxLnScaleMinMax.y;\n    vec3 encRgb = (rgba.rgb - vec3(rgbMin)) / (rgbMax - rgbMin);\n    uvec4 uRgba = uvec4(round(clamp(vec4(encRgb, rgba.a) * 255.0, 0.0, 255.0)));\n\n    uint uQuat = encodeQuatOctXy88R8(quaternion);\n    \n    \n    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);\n\n    \n    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;\n    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;\n    float lnScaleScale = 254.0 / (lnScaleMax - lnScaleMin);\n    uvec3 uScales = uvec3(\n        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,\n        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,\n        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u\n    );\n\n    \n    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);\n    uint word1 = packHalf2x16(center.xy);\n    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);\n    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);\n    return uvec4(word0, word1, word2, word3);\n}\n\nuvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {\n    return packSplatEncoding(center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));\n}\n\nvoid unpackSplatEncoding(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba, vec4 rgbMinMaxLnScaleMinMax) {\n    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;\n\n    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);\n    float rgbMin = rgbMinMaxLnScaleMinMax.x;\n    float rgbMax = rgbMinMaxLnScaleMinMax.y;\n    rgba = (vec4(uRgba) / 255.0);\n    rgba.rgb = rgba.rgb * (rgbMax - rgbMin) + rgbMin;\n\n    center = vec4(\n        unpackHalf2x16(word1),\n        unpackHalf2x16(word2 & 0xffffu)\n    ).xyz;\n\n    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);\n    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;\n    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;\n    float lnScaleScale = (lnScaleMax - lnScaleMin) / 254.0;\n    scales = vec3(\n        (uScales.x == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.x - 1u) * lnScaleScale),\n        (uScales.y == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.y - 1u) * lnScaleScale),\n        (uScales.z == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.z - 1u) * lnScaleScale)\n    );\n\n    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);\n    quaternion = decodeQuatOctXy88R8(uQuat);\n    \n    \n}\n\nvoid unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {\n    unpackSplatEncoding(packed, center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));\n}\n\nvec3 quatVec(vec4 q, vec3 v) {\n    \n    vec3 t = 2.0 * cross(q.xyz, v);\n    return v + q.w * t + cross(q.xyz, t);\n}\n\nvec4 quatQuat(vec4 q1, vec4 q2) {\n    return vec4(\n        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,\n        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,\n        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,\n        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z\n    );\n}\n\nmat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {\n    \n    return mat3(\n        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),\n        s.x * (2.0 * (q.x * q.y + q.w * q.z)),\n        s.x * (2.0 * (q.x * q.z - q.w * q.y)),\n        s.y * (2.0 * (q.x * q.y - q.w * q.z)),\n        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),\n        s.y * (2.0 * (q.y * q.z + q.w * q.x)),\n        s.z * (2.0 * (q.x * q.z + q.w * q.y)),\n        s.z * (2.0 * (q.y * q.z - q.w * q.x)),\n        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))\n    );\n}\n\nvec4 slerp(vec4 q1, vec4 q2, float t) {\n    \n    float cosHalfTheta = dot(q1, q2);\n\n    \n    if (abs(cosHalfTheta) >= 0.999) {\n        return q1;\n    }\n    \n    \n    \n    if (cosHalfTheta < 0.0) {\n        q2 = -q2;\n        cosHalfTheta = -cosHalfTheta;\n    }\n\n    \n    float halfTheta = acos(cosHalfTheta);\n    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    \n    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;\n    float ratioB = sin(t * halfTheta) / sinHalfTheta;\n\n    \n    return q1 * ratioA + q2 * ratioB;\n}\n\nivec3 splatTexCoord(int index) {\n    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;\n    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;\n    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;\n    return ivec3(x, y, z);\n}",qO={splatVertex:"precision highp float;\nprecision highp int;\nprecision highp usampler2DArray;\n\n#include <splatDefines>\n\nattribute uint splatIndex;\n\nout vec4 vRgba;\nout vec2 vSplatUv;\nout vec3 vNdc;\nflat out uint vSplatIndex;\n\nuniform vec2 renderSize;\nuniform uint numSplats;\nuniform vec4 renderToViewQuat;\nuniform vec3 renderToViewPos;\nuniform float maxStdDev;\nuniform float maxPixelRadius;\nuniform float time;\nuniform float deltaTime;\nuniform bool debugFlag;\nuniform float minAlpha;\nuniform bool stochastic;\nuniform bool enable2DGS;\nuniform float blurAmount;\nuniform float preBlurAmount;\nuniform float focalDistance;\nuniform float apertureAngle;\nuniform float clipXY;\nuniform float focalAdjustment;\n\nuniform usampler2DArray packedSplats;\nuniform vec4 rgbMinMaxLnScaleMinMax;\n\nvoid main() {\n    \n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n\n    if (uint(gl_InstanceID) >= numSplats) {\n        return;\n    }\n\n    ivec3 texCoord;\n    if (stochastic) {\n        texCoord = ivec3(\n            uint(gl_InstanceID) & SPLAT_TEX_WIDTH_MASK,\n            (uint(gl_InstanceID) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,\n            (uint(gl_InstanceID) >> SPLAT_TEX_LAYER_BITS)\n        );\n    } else {\n        if (splatIndex == 0xffffffffu) {\n            \n            return;\n        }\n        texCoord = ivec3(\n            splatIndex & SPLAT_TEX_WIDTH_MASK,\n            (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,\n            splatIndex >> SPLAT_TEX_LAYER_BITS\n        );\n    }\n    uvec4 packed = texelFetch(packedSplats, texCoord, 0);\n\n    vec3 center, scales;\n    vec4 quaternion, rgba;\n    unpackSplatEncoding(packed, center, scales, quaternion, rgba, rgbMinMaxLnScaleMinMax);\n\n    if (rgba.a < minAlpha) {\n        return;\n    }\n    bvec3 zeroScales = equal(scales, vec3(0.0));\n    if (all(zeroScales)) {\n        return;\n    }\n\n    \n    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;\n\n    \n    if (viewCenter.z >= 0.0) {\n        return;\n    }\n\n    \n    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);\n\n    \n    if (abs(clipCenter.z) >= clipCenter.w) {\n        return;\n    }\n\n    \n    float clip = clipXY * clipCenter.w;\n    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {\n        return;\n    }\n\n    \n    vSplatIndex = splatIndex;\n\n    \n    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);\n\n    if (enable2DGS && any(zeroScales)) {\n        vRgba = rgba;\n        vSplatUv = position.xy * maxStdDev;\n\n        vec3 offset;\n        if (zeroScales.z) {\n            offset = vec3(vSplatUv.xy * scales.xy, 0.0);\n        } else if (zeroScales.y) {\n            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);\n        } else {\n            offset = vec3(0.0, vSplatUv.xy * scales.yz);\n        }\n\n        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);\n        gl_Position = projectionMatrix * vec4(viewPos, 1.0);\n        vNdc = gl_Position.xyz / gl_Position.w;\n        return;\n    }\n\n    \n    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;\n\n    \n    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);\n    mat3 cov3D = RS * transpose(RS);\n\n    \n    vec2 scaledRenderSize = renderSize * focalAdjustment;\n    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);\n    float invZ = 1.0 / viewCenter.z;\n    vec2 J1 = focal * invZ;\n    vec2 J2 = -(J1 * viewCenter.xy) * invZ;\n    mat3 J = mat3(\n        J1.x, 0.0, J2.x,\n        0.0, J1.y, J2.y,\n        0.0, 0.0, 0.0\n    );\n\n    \n    \n    \n    \n    \n    \n    \n    mat3 cov2D = transpose(J) * cov3D * J;\n    float a = cov2D[0][0];\n    float d = cov2D[1][1];\n    float b = cov2D[0][1];\n\n    \n    a += preBlurAmount;\n    d += preBlurAmount;\n\n    float fullBlurAmount = blurAmount;\n    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {\n        float focusRadius = maxPixelRadius;\n        if (viewCenter.z < 0.0) {\n            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);\n            float apertureRadius = focal.x * tan(0.5 * apertureAngle);\n            focusRadius = focusBlur * apertureRadius;\n        }\n        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(maxPixelRadius));\n    }\n\n    \n    float detOrig = a * d - b * b;\n    a += fullBlurAmount;\n    d += fullBlurAmount;\n    float det = a * d - b * b;\n\n    \n    float blurAdjust = sqrt(max(0.0, detOrig / det));\n    rgba.a *= blurAdjust;\n    if (rgba.a < minAlpha) {\n        return;\n    }\n\n    \n    float eigenAvg = 0.5 * (a + d);\n    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));\n    float eigen1 = eigenAvg + eigenDelta;\n    float eigen2 = eigenAvg - eigenDelta;\n\n    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));\n    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);\n\n    float scale1 = position.x * min(maxPixelRadius, maxStdDev * sqrt(eigen1));\n    float scale2 = position.y * min(maxPixelRadius, maxStdDev * sqrt(eigen2));\n\n    \n    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;\n    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;\n    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);\n\n    vRgba = rgba;\n    vSplatUv = position.xy * maxStdDev;\n    vNdc = ndc;\n    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);\n}",splatFragment:"precision highp float;\nprecision highp int;\n\n#include <splatDefines>\n\nuniform float near;\nuniform float far;\nuniform bool encodeLinear;\nuniform float time;\nuniform bool debugFlag;\nuniform float maxStdDev;\nuniform float minAlpha;\nuniform bool stochastic;\nuniform bool disableFalloff;\nuniform float falloff;\n\nuniform bool splatTexEnable;\nuniform sampler3D splatTexture;\nuniform mat2 splatTexMul;\nuniform vec2 splatTexAdd;\nuniform float splatTexNear;\nuniform float splatTexFar;\nuniform float splatTexMid;\n\nout vec4 fragColor;\n\nin vec4 vRgba;\nin vec2 vSplatUv;\nin vec3 vNdc;\nflat in uint vSplatIndex;\n\nvoid main() {\n    vec4 rgba = vRgba;\n\n    float z = dot(vSplatUv, vSplatUv);\n    if (!splatTexEnable) {\n        if (z > (maxStdDev * maxStdDev)) {\n            discard;\n        }\n    } else {\n        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;\n        float ndcZ = vNdc.z;\n        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));\n        float clampedFar = max(splatTexFar, splatTexNear);\n        float clampedDepth = clamp(depth, splatTexNear, clampedFar);\n        float logDepth = log2(clampedDepth + 1.0);\n        float logNear = log2(splatTexNear + 1.0);\n        float logFar = log2(clampedFar + 1.0);\n\n        float texZ;\n        if (splatTexMid > 0.0) {\n            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);\n            float logMid = log2(clampedMid + 1.0);\n            texZ = (clampedDepth <= clampedMid) ?\n                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :\n                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);\n        } else {\n            texZ = (logDepth - logNear) / (logFar - logNear);\n        }\n\n        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));\n        rgba *= modulate;\n    }\n\n    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);\n\n    if (rgba.a < minAlpha) {\n        discard;\n    }\n    if (encodeLinear) {\n        rgba.rgb = srgbToLinear(rgba.rgb);\n    }\n\n    if (stochastic) {\n        const bool STEADY = false;\n        uint uTime = STEADY ? 0u : floatBitsToUint(time);\n        uvec2 coord = uvec2(gl_FragCoord.xy);\n        uint state = uTime + 0x9e3779b9u * coord.x + 0x85ebca6bu * coord.y + 0xc2b2ae35u * uint(vSplatIndex);\n        state = state * 747796405u + 2891336453u;\n        uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;\n        hash = (hash >> 22u) ^ hash;\n        float rand = float(hash) / 4294967296.0;\n        if (rand < rgba.a) {\n            fragColor = vec4(rgba.rgb, 1.0);\n        } else {\n            discard;\n        }\n    } else {\n        #ifdef PREMULTIPLIED_ALPHA\n            fragColor = vec4(rgba.rgb * rgba.a, rgba.a);\n        #else\n            fragColor = rgba;\n        #endif\n    }\n}"}),qO),s=e.premultipliedAlpha??!0,r=new la({glslVersion:jn,vertexShader:i.splatVertex,fragmentShader:i.splatFragment,uniforms:n,premultipliedAlpha:s,transparent:!0,depthTest:!0,depthWrite:!1,side:M});super($O,r),this.splatTexture=null,this.autoViewpoints=[],this.rotateToAccumulator=new NU({value:new pi}),this.translateToAccumulator=new UU({value:new gi}),this.lastFrame=-1,this.lastUpdateTime=null,this.defaultCameras=[],this.lastStochastic=null,this.pendingUpdate=null,this.envViewpoint=null,this.frustumCulled=!1,this.renderer=e.renderer,this.material=r,this.uniforms=n;const a=VR({gsplat:ZR},{gsplat:ZR},({gsplat:t})=>{if(!t)throw new Error("gsplat not defined");return{gsplat:t=rU(t,{rotate:this.rotateToAccumulator,translate:this.translateToAccumulator})}});this.modifier=new Kk(a),this.premultipliedAlpha=s,this.autoUpdate=e.autoUpdate??!0,this.preUpdate=e.preUpdate??!1,this.needsUpdate=!1,this.originDistance=e.originDistance??1,this.maxStdDev=e.maxStdDev??Math.sqrt(8),this.maxPixelRadius=e.maxPixelRadius??512,this.minAlpha=e.minAlpha??1/255*.5,this.enable2DGS=e.enable2DGS??!1,this.preBlurAmount=e.preBlurAmount??0,this.blurAmount=e.blurAmount??.3,this.focalDistance=e.focalDistance??0,this.apertureAngle=e.apertureAngle??0,this.falloff=e.falloff??1,this.clipXY=e.clipXY??1.4,this.focalAdjustment=e.focalAdjustment??1,this.splatEncoding=e.splatEncoding??{...RO},this.active=new VO,this.accumulatorCount=1,this.freeAccumulators=[];for(let t=0;t<1;++t)this.freeAccumulators.push(new VO),this.accumulatorCount+=1;this.defaultView=new zO({...e.view,autoUpdate:!0,spark:this}),this.viewpoint=this.defaultView,this.prepareViewpoint(this.viewpoint),this.clock=e.clock?QP(e.clock):new xh,YO=this}static makeUniforms(){return{renderSize:{value:new di},near:{value:.1},far:{value:1e3},numSplats:{value:0},renderToViewQuat:{value:new pi},renderToViewPos:{value:new gi},maxStdDev:{value:1},maxPixelRadius:{value:512},minAlpha:{value:1/255*.5},stochastic:{value:!1},enable2DGS:{value:!1},preBlurAmount:{value:0},blurAmount:{value:.3},focalDistance:{value:0},apertureAngle:{value:0},falloff:{value:1},clipXY:{value:1.4},focalAdjustment:{value:1},splatTexEnable:{value:!1},splatTexture:{type:"t",value:t.EMPTY_SPLAT_TEXTURE},splatTexMul:{value:new cu},splatTexAdd:{value:new di},splatTexNear:{value:.1},splatTexFar:{value:1e3},splatTexMid:{value:0},packedSplats:{type:"t",value:PO.getEmpty()},rgbMinMaxLnScaleMinMax:{value:new zi},time:{value:0},deltaTime:{value:0},encodeLinear:{value:!1},debugFlag:{value:!1}}}canAllocAccumulator(){return this.freeAccumulators.length>0||this.accumulatorCount<5}maybeAllocAccumulator(){let t=this.freeAccumulators.pop();if(void 0===t){if(this.accumulatorCount>=5)return null;t=new VO,this.accumulatorCount+=1}return t.refCount=1,t}releaseAccumulator(t){t.refCount-=1,0===t.refCount&&this.freeAccumulators.push(t)}newViewpoint(t){return new zO({...t,spark:this})}onBeforeRender(e,n,i){var s,r;const a=this.time??this.clock.getElapsedTime(),o=a-(this.viewpoint.lastTime??a);this.viewpoint.lastTime=a;const l=e.info.render.frame,c=l!==this.lastFrame;this.lastFrame=l;const A=this.viewpoint;if(A===this.defaultView){if(c)if(e.xr.isPresenting){const t=e.xr.getCamera().cameras;this.defaultCameras=t.map(t=>t.matrixWorld),this.defaultView.viewToWorld=function(t){if(0===t.length)return null;const e=new gi,n=new pi,i=new gi,s=[],r=[];for(const a of t)a.decompose(e,n,i),s.push(e),r.push(n);return(new Es).compose(RP(s),UP(r),new gi(1,1,1))}(this.defaultCameras)??new Es}else this.defaultView.viewToWorld=i.matrixWorld.clone(),this.defaultCameras=[this.defaultView.viewToWorld];this.autoUpdate&&this.update({scene:n,viewToWorld:this.defaultView.viewToWorld})}if(c&&(this.material.premultipliedAlpha!==this.premultipliedAlpha&&(this.material.premultipliedAlpha=this.premultipliedAlpha,this.material.needsUpdate=!0),this.uniforms.time.value=a,this.uniforms.deltaTime.value=o,this.uniforms.debugFlag.value=performance.now()/1e3%2<1,A.display&&A.stochastic&&(this.geometry.instanceCount=this.uniforms.numSplats.value)),A.target)this.uniforms.renderSize.value.set(A.target.width,A.target.height);else{const t=e.getDrawingBufferSize(this.uniforms.renderSize.value);if(1===t.x&&1===t.y){const n=null==(s=e.xr.getSession())?void 0:s.renderState.baseLayer;n&&(t.x=n.framebufferWidth,t.y=n.framebufferHeight)}}const h=i;if(this.uniforms.near.value=h.near,this.uniforms.far.value=h.far,this.uniforms.encodeLinear.value=A.encodeLinear,this.uniforms.maxStdDev.value=this.maxStdDev,this.uniforms.maxPixelRadius.value=this.maxPixelRadius,this.uniforms.minAlpha.value=this.minAlpha,this.uniforms.stochastic.value=A.stochastic,this.uniforms.enable2DGS.value=this.enable2DGS,this.uniforms.preBlurAmount.value=this.preBlurAmount,this.uniforms.blurAmount.value=this.blurAmount,this.uniforms.focalDistance.value=this.focalDistance,this.uniforms.apertureAngle.value=this.apertureAngle,this.uniforms.falloff.value=this.falloff,this.uniforms.clipXY.value=this.clipXY,this.uniforms.focalAdjustment.value=this.focalAdjustment,this.lastStochastic!==!A.stochastic&&(this.lastStochastic=!A.stochastic,this.material.transparent=!A.stochastic,this.material.depthWrite=A.stochastic,this.material.needsUpdate=!0),this.splatTexture){const{enable:e,texture:n,multiply:i,add:s,near:r,far:a,mid:o}=this.splatTexture;e&&n?(this.uniforms.splatTexEnable.value=!0,this.uniforms.splatTexture.value=n,i?this.uniforms.splatTexMul.value.fromArray(i.elements):this.uniforms.splatTexMul.value.set(.5/this.maxStdDev,0,0,.5/this.maxStdDev),this.uniforms.splatTexAdd.value.set((null==s?void 0:s.x)??.5,(null==s?void 0:s.y)??.5),this.uniforms.splatTexNear.value=r??this.uniforms.near.value,this.uniforms.splatTexFar.value=a??this.uniforms.far.value,this.uniforms.splatTexMid.value=o??0):(this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=t.EMPTY_SPLAT_TEXTURE)}else this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=t.EMPTY_SPLAT_TEXTURE;const u=(null==(r=A.display)?void 0:r.accumulator.toWorld)??new Es,d=i.matrixWorld.clone().invert();u.clone().premultiply(d).decompose(this.uniforms.renderToViewPos.value,this.uniforms.renderToViewQuat.value,new gi)}prepareViewpoint(t){var e,n,i,s;if(this.viewpoint=t??this.viewpoint,this.viewpoint.display){const{accumulator:t,geometry:r}=this.viewpoint.display;this.uniforms.numSplats.value=t.splats.numSplats,this.uniforms.packedSplats.value=t.splats.getTexture(),this.uniforms.rgbMinMaxLnScaleMinMax.value.set((null==(e=t.splats.splatEncoding)?void 0:e.rgbMin)??0,(null==(n=t.splats.splatEncoding)?void 0:n.rgbMax)??1,(null==(i=t.splats.splatEncoding)?void 0:i.lnScaleMin)??eR,(null==(s=t.splats.splatEncoding)?void 0:s.lnScaleMax)??nR),this.geometry=r,this.material.transparent=!this.viewpoint.stochastic,this.material.depthWrite=this.viewpoint.stochastic,this.material.needsUpdate=!0}else this.uniforms.numSplats.value=0,this.uniforms.packedSplats.value=PO.getEmpty(),this.geometry=$O}update({scene:t,viewToWorld:e}){const n=this.matrixWorld.clone();this.preUpdate?this.updateInternal({scene:t,originToWorld:n,viewToWorld:e}):(this.pendingUpdate={scene:t,originToWorld:n},setTimeout(()=>{if(this.pendingUpdate){const{scene:t,originToWorld:n}=this.pendingUpdate;this.pendingUpdate=null,this.updateInternal({scene:t,originToWorld:n,viewToWorld:e})}},1))}updateInternal({scene:t,originToWorld:e,viewToWorld:n}){var i;if(!this.canAllocAccumulator())return!1;e||(e=this.active.toWorld),n=n??e.clone();const s=this.time??this.clock.getElapsedTime(),r=s-(this.lastUpdateTime??s);this.lastUpdateTime=s;const a=this.active.mapping.reduce((t,e)=>(t.set(e.node,e),t),new Map),{generators:o,visibleGenerators:l,globalEdits:c}=this.compileScene(t);for(const t of o)null==(i=t.frameUpdate)||i.call(t,{object:t,time:s,deltaTime:r,viewToWorld:n,globalEdits:c});const A=new Set(l.map(t=>t.uuid));for(const t of o){const e=a.get(t),n=t.generator&&A.has(t.uuid)?t.numSplats:0;(this.needsUpdate||t.generator!==(null==e?void 0:e.generator)||n!==(null==e?void 0:e.count))&&t.updateVersion()}const h=!FP({matrix1:e,matrix2:this.active.toWorld,maxDistance:this.originDistance}),u=this.needsUpdate||h||o.length!==a.size||o.some(t=>{var e;return t.version!==(null==(e=a.get(t))?void 0:e.version)});this.needsUpdate=!1;let d=null;if(u){if(d=this.maybeAllocAccumulator(),!d)throw new Error("Unreachable");const t=!FP({matrix1:e,matrix2:this.active.toWorld,maxDistance:1e-5,minCoorient:.99999}),n=l.map((t,e)=>{const n=a.get(t);return n?[t.version-n.version,n.base,t]:[Number.POSITIVE_INFINITY,t.version,t]}).sort((t,e)=>t[0]!==e[0]?t[0]-e[0]:t[1]-e[1]).map(([t,e,n])=>n),i=n.map(t=>t.numSplats),{maxSplats:s,mapping:r}=d.splats.generateMapping(i),o=n.map((t,e)=>{const{base:n,count:i}=r[e];return{node:t,generator:t.generator,version:t.version,base:n,count:i}});e.clone().invert().decompose(this.translateToAccumulator.value,this.rotateToAccumulator.value,new gi),d.ensureGenerate(s),d.splats.splatEncoding={...this.splatEncoding},d.generateSplats({renderer:this.renderer,modifier:this.modifier,generators:o,forceUpdate:t,originToWorld:e}),d.splatsVersion=this.active.splatsVersion+1;const c=d.hasCorrespondence(this.active);d.mappingVersion=this.active.mappingVersion+(c?0:1),this.releaseAccumulator(this.active),this.active=d,this.prepareViewpoint()}return setTimeout(()=>{for(const t of this.autoViewpoints)t.autoPoll({accumulator:d??void 0})},1),!0}compileScene(t){const e=[];t.traverse(t=>{t instanceof $k&&e.push(t)});const n=[];t.traverseVisible(t=>{t instanceof $k&&n.push(t)});const i=new Set;return t.traverseVisible(t=>{if(t instanceof Yk){let e=t.parent;for(;null!=e&&!(e instanceof eO);)e=e.parent;null==e&&i.add(t)}}),{generators:e,visibleGenerators:n,globalEdits:Array.from(i)}}async renderEnvMap({renderer:e,scene:n,worldCenter:i,size:s=256,near:r=.1,far:a=1e3,hideObjects:o=[],update:l=!1}){var c,A;if(this.envViewpoint||(this.envViewpoint=this.newViewpoint({sort360:!0})),!t.cubeRender||t.cubeRender.target.width!==s||t.cubeRender.near!==r||t.cubeRender.far!==a){t.cubeRender&&t.cubeRender.target.dispose();const e=new ma(s,{format:ne,generateMipmaps:!0,minFilter:zt}),n=new ga(r,a,e);t.cubeRender={target:e,camera:n,near:r,far:a}}t.pmrem||(t.pmrem=new Bd(e??this.renderer));const h=(new Es).setPosition(i);await(null==(c=this.envViewpoint)?void 0:c.prepare({scene:n,viewToWorld:h,update:l}));const{target:u,camera:d}=t.cubeRender;d.position.copy(i);const p=new Map;for(const t of o)p.set(t,t.visible),t.visible=!1;this.prepareViewpoint(this.envViewpoint),d.update(e??this.renderer,n),this.prepareViewpoint(this.defaultView);for(const[t,e]of p.entries())t.visible=e;return null==(A=t.pmrem)?void 0:A.fromCubemap(u.texture).texture}recurseSetEnvMap(t,e){t.traverse(t=>{if(t instanceof ea)if(Array.isArray(t.material))for(const n of t.material)n instanceof jc&&(n.envMap=e);else t.material instanceof jc&&(t.material.envMap=e)})}getRgba({generator:t,rgba:e}){const n=this.active.mapping.find(({node:e})=>e===t);if(!n)throw new Error("Generator not found");return(e=e??new Lk).fromPackedSplats({packedSplats:this.active.splats,base:n.base,count:n.count,renderer:this.renderer}),e}async readRgba({generator:t,rgba:e}){return(e=this.getRgba({generator:t,rgba:e})).read()}};KO.cubeRender=null,KO.pmrem=null,KO.EMPTY_SPLAT_TEXTURE=new qi;let ZO=KO;const $O=new FO(new Uint32Array(1),0);function tz(t,e,n){const i=Math.floor(t.length/32);if(32*i!==t.length)throw new Error("Invalid .splat file size");const s=new Float32Array(t.buffer);for(let e=0;e<i;++e){const i=32*e,r=8*e,a=s[r+0],o=s[r+1],l=s[r+2],c=s[r+3],A=s[r+4],h=s[r+5],u=t[i+24]/255,d=t[i+25]/255,p=t[i+26]/255,g=t[i+27]/255,f=(t[i+28]-128)/128;n(e,a,o,l,c,A,h,(t[i+29]-128)/128,(t[i+30]-128)/128,(t[i+31]-128)/128,f,g,u,d,p)}}VR({packedSplats:$R,index:"int"},{gsplat:ZR},({packedSplats:t,index:e})=>{if(!t||!e)throw new Error("Invalid input");return{gsplat:tU(t,e)}});const ez={0:{bytesPerCenter:12,bytesPerScale:12,bytesPerRotation:16,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:4,scaleOffsetBytes:12,rotationOffsetBytes:24,colorOffsetBytes:40,sphericalHarmonicsOffsetBytes:44,scaleRange:1},1:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:2,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767},2:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:1,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767}},nz={0:0,1:9,2:24,3:45};function iz(t,e,n,i){var s;const r=4096,a=1024;let o=0;const l=new DataView(t.buffer,o,r);o+=r;const c=l.getUint8(0),A=l.getUint8(1);if(0!==c||A<1)throw new Error(`Unsupported .ksplat version: ${c}.${A}`);const h=l.getUint32(4,!0);l.getUint32(16,!0);const u=l.getUint16(20,!0);if(u<0||u>2)throw new Error(`Invalid .ksplat compression level: ${u}`);const d=l.getFloat32(36,!0)||-1.5,p=l.getFloat32(40,!0)||1.5;let g=r+h*a;for(let e=0;e<h;++e){let e=function(t,e){if(0===u)return W.getFloat32(t+U+4*e,!0);if(1===u)return gP(W.getUint16(t+U+2*e,!0));const n=W.getUint8(t+U+e)/255;return d+n*(p-d)};const r=new DataView(t.buffer,o,a);o+=a;const l=r.getUint32(0,!0),c=r.getUint32(4,!0),A=r.getUint32(8,!0),h=r.getUint32(12,!0),f=r.getFloat32(16,!0),m=r.getUint16(20,!0),y=(r.getUint32(24,!0)||(null==(s=ez[u])?void 0:s.scaleRange))??1,I=r.getUint32(32,!0),C=I*A,E=r.getUint32(36,!0),v=4*E,x=m*h+v,w=r.getUint16(40,!0),_=nz[w],{bytesPerCenter:B,bytesPerScale:S,bytesPerRotation:b,bytesPerColor:M,bytesPerSphericalHarmonicsComponent:T,scaleOffsetBytes:Q,rotationOffsetBytes:D,colorOffsetBytes:R,sphericalHarmonicsOffsetBytes:U}=ez[u],P=B+S+b+M+_*T,L=P*c,F=L+x,N=[0,3,6,1,4,7,2,5,8],k=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],O=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],z=w>=1?new Float32Array(9):void 0,G=w>=2?new Float32Array(15):void 0,H=w>=3?new Float32Array(21):void 0,V=f/2/y,Y=g+v,q=g+x,W=new DataView(t.buffer,q,L),J=new Float32Array(t.buffer,Y,3*h),j=new Uint32Array(t.buffer,g,E);let X=I,K=C;for(let t=0;t<l;++t){const s=t*P;let r;if(t<C)r=Math.floor(t/A);else{const e=j[X-I];t>=K+e&&(X+=1,K+=e),r=X}const a=0===u?W.getFloat32(s+0,!0):(W.getUint16(s+0,!0)-y)*V+J[3*r+0],o=0===u?W.getFloat32(s+4,!0):(W.getUint16(s+2,!0)-y)*V+J[3*r+1],l=0===u?W.getFloat32(s+8,!0):(W.getUint16(s+4,!0)-y)*V+J[3*r+2],c=0===u?W.getFloat32(s+Q+0,!0):gP(W.getUint16(s+Q+0,!0)),h=0===u?W.getFloat32(s+Q+4,!0):gP(W.getUint16(s+Q+2,!0)),d=0===u?W.getFloat32(s+Q+8,!0):gP(W.getUint16(s+Q+4,!0)),p=0===u?W.getFloat32(s+D+0,!0):gP(W.getUint16(s+D+0,!0)),g=0===u?W.getFloat32(s+D+4,!0):gP(W.getUint16(s+D+2,!0)),f=0===u?W.getFloat32(s+D+8,!0):gP(W.getUint16(s+D+4,!0)),m=0===u?W.getFloat32(s+D+12,!0):gP(W.getUint16(s+D+6,!0)),E=W.getUint8(s+R+0)/255,v=W.getUint8(s+R+1)/255,x=W.getUint8(s+R+2)/255;if(n(t,a,o,l,c,h,d,g,f,m,p,W.getUint8(s+R+3)/255,E,v,x),w>=1&&z){for(const[t,n]of N.entries())z[t]=e(s,n);if(G)for(const[t,n]of k.entries())G[t]=e(s,n);if(H)for(const[t,n]of O.entries())H[t]=e(s,n);null==i||i(t,z,G,H)}}g+=F}}class sz{constructor({fileBytes:t}){this.fileBytes=t instanceof ArrayBuffer?new Uint8Array(t):t,this.reader=new GP({fileBytes:this.fileBytes});const e=new DataView(this.reader.read(16).buffer);if(1347635022!==e.getUint32(0,!0))throw new Error("Invalid SPZ file");if(this.version=e.getUint32(4,!0),this.version<1||this.version>2)throw new Error(`Unsupported SPZ version: ${this.version}`);this.numSplats=e.getUint32(8,!0),this.shDegree=e.getUint8(12),this.fractionalBits=e.getUint8(13),this.flags=e.getUint8(14),this.flagAntiAlias=!!(1&this.flags),this.reserved=e.getUint8(15),this.parsed=!1}parseSplats(t,e,n,i,s,r){if(this.parsed)throw new Error("SPZ file already parsed");if(this.parsed=!0,1===this.version){const e=this.reader.read(3*this.numSplats*2),n=new Uint16Array(e.buffer);for(let e=0;e<this.numSplats;e++){const i=3*e,s=gP(n[i]),r=gP(n[i+1]),a=gP(n[i+2]);null==t||t(e,s,r,a)}}else{if(2!==this.version)throw new Error("Unreachable");{const e=1<<this.fractionalBits,n=this.reader.read(3*this.numSplats*3);for(let i=0;i<this.numSplats;i++){const s=9*i,r=((n[s+2]<<24|n[s+1]<<16|n[s]<<8)>>8)/e,a=((n[s+5]<<24|n[s+4]<<16|n[s+3]<<8)>>8)/e,o=((n[s+8]<<24|n[s+7]<<16|n[s+6]<<8)>>8)/e;null==t||t(i,r,a,o)}}}{const t=this.reader.read(this.numSplats);for(let n=0;n<this.numSplats;n++)null==e||e(n,t[n]/255)}{const t=this.reader.read(3*this.numSplats),e=az/.15;for(let i=0;i<this.numSplats;i++){const s=3*i,r=(t[s]/255-.5)*e+.5,a=(t[s+1]/255-.5)*e+.5,o=(t[s+2]/255-.5)*e+.5;null==n||n(i,r,a,o)}}{const t=this.reader.read(3*this.numSplats);for(let e=0;e<this.numSplats;e++){const n=3*e,s=Math.exp(t[n]/16-10),r=Math.exp(t[n+1]/16-10),a=Math.exp(t[n+2]/16-10);null==i||i(e,s,r,a)}}{const t=this.reader.read(3*this.numSplats);for(let e=0;e<this.numSplats;e++){const n=3*e,i=t[n]/127.5-1,r=t[n+1]/127.5-1,a=t[n+2]/127.5-1,o=Math.sqrt(Math.max(0,1-i*i-r*r-a*a));null==s||s(e,i,r,a,o)}}if(r&&this.shDegree>=1){const t=new Float32Array(9),e=this.shDegree>=2?new Float32Array(15):void 0,n=this.shDegree>=3?new Float32Array(21):void 0,i=this.reader.read(this.numSplats*rz[this.shDegree]*3);let s=0;for(let a=0;a<this.numSplats;a++){for(let e=0;e<9;++e)t[e]=(i[s+e]-128)/128;if(s+=9,e){for(let t=0;t<15;++t)e[t]=(i[s+t]-128)/128;s+=15}if(n){for(let t=0;t<21;++t)n[t]=(i[s+t]-128)/128;s+=21}null==r||r(a,t,e,n)}}}}const rz={1:3,2:8,3:15},az=.28209479177387814;class oz{constructor({numSplats:t,shDegree:e,fractionalBits:n=12,flagAntiAlias:i=!0}){this.clippedCount=0;const s=16+t*(19+(e>=1?9:0)+(e>=2?15:0)+(e>=3?21:0));this.buffer=new ArrayBuffer(s),this.view=new DataView(this.buffer),this.view.setUint32(0,1347635022,!0),this.view.setUint32(4,2,!0),this.view.setUint32(8,t,!0),this.view.setUint8(12,e),this.view.setUint8(13,n),this.view.setUint8(14,i?1:0),this.view.setUint8(15,0),this.numSplats=t,this.shDegree=e,this.fractionalBits=n,this.fraction=1<<n,this.flagAntiAlias=i}setCenter(t,e,n,i){const s=Math.round(e*this.fraction),r=Math.max(-8388607,Math.min(8388607,s)),a=Math.round(n*this.fraction),o=Math.max(-8388607,Math.min(8388607,a)),l=Math.round(i*this.fraction),c=Math.max(-8388607,Math.min(8388607,l));(s!==r||a!==o||l!==c)&&(this.clippedCount+=1);const A=16+9*t;this.view.setUint8(A,255&r),this.view.setUint8(A+1,r>>8&255),this.view.setUint8(A+2,r>>16&255),this.view.setUint8(A+3,255&o),this.view.setUint8(A+4,o>>8&255),this.view.setUint8(A+5,o>>16&255),this.view.setUint8(A+6,255&c),this.view.setUint8(A+7,c>>8&255),this.view.setUint8(A+8,c>>16&255)}setAlpha(t,e){const n=16+9*this.numSplats+t;this.view.setUint8(n,Math.max(0,Math.min(255,Math.round(255*e))))}static scaleRgb(t){const e=255*((t-.5)/(az/.15)+.5);return Math.max(0,Math.min(255,Math.round(e)))}setRgb(t,e,n,i){const s=16+10*this.numSplats+3*t;this.view.setUint8(s,oz.scaleRgb(e)),this.view.setUint8(s+1,oz.scaleRgb(n)),this.view.setUint8(s+2,oz.scaleRgb(i))}setScale(t,e,n,i){const s=16+13*this.numSplats+3*t;this.view.setUint8(s,Math.max(0,Math.min(255,Math.round(16*(Math.log(e)+10))))),this.view.setUint8(s+1,Math.max(0,Math.min(255,Math.round(16*(Math.log(n)+10))))),this.view.setUint8(s+2,Math.max(0,Math.min(255,Math.round(16*(Math.log(i)+10)))))}setQuat(t,e,n,i,s){const r=16+16*this.numSplats+3*t,a=s<0;this.view.setUint8(r,Math.max(0,Math.min(255,Math.round(127.5*((a?-e:e)+1))))),this.view.setUint8(r+1,Math.max(0,Math.min(255,Math.round(127.5*((a?-n:n)+1))))),this.view.setUint8(r+2,Math.max(0,Math.min(255,Math.round(127.5*((a?-i:i)+1)))))}static quantizeSh(t,e){const n=Math.round(128*t)+128,i=1<<8-e,s=Math.floor((n+i/2)/i)*i;return Math.max(0,Math.min(255,s))}setSh(t,e,n,i){const s=rz[this.shDegree]||0,r=16+19*this.numSplats+t*s*3;for(let t=0;t<9;++t)this.view.setUint8(r+t,oz.quantizeSh(e[t],5));if(n){const t=r+9;for(let e=0;e<15;++e)this.view.setUint8(t+e,oz.quantizeSh(n[e],4));if(i){const e=t+15;for(let t=0;t<21;++t)this.view.setUint8(e+t,oz.quantizeSh(i[t],4))}}}async finalize(){const t=new Uint8Array(this.buffer),e=new ReadableStream({async start(e){e.enqueue(t),e.close()}}).pipeThrough(new CompressionStream("gzip")),n=new Response(e),i=await n.arrayBuffer();return console.log("Compressed",t.length,"bytes to",i.byteLength,"bytes"),new Uint8Array(i)}}async function lz(t){var e,n,i;const s=new DO,{inputs:r,clipXyz:a,maxSh:o,fractionalBits:l=12,opacityThreshold:c}=t;for(const t of r){let r=function(t){return t.multiplyScalar(u),t.applyQuaternion(d),t.add(p),t},o=function(t){return t.multiplyScalar(u),t},l=function(t){return t.premultiply(d),t},A=function(t){return!g||g.containsPoint(t)},h=function(t){return void 0===c||t>=c};const u=(null==(e=t.transform)?void 0:e.scale)??1,d=(new pi).fromArray((null==(n=t.transform)?void 0:n.quaternion)??[0,0,0,1]),p=(new gi).fromArray((null==(i=t.transform)?void 0:i.translate)??[0,0,0]),g=a?new Ji((new gi).fromArray(a.min),(new gi).fromArray(a.max)):void 0;let f=t.fileType;switch(f||(f=SO(t.fileBytes),!f&&t.pathOrUrl&&(f=bO(t.pathOrUrl))),f){case BO.PLY:{const e=new aO({fileBytes:t.fileBytes});await e.parseHeader();let n=null;e.parseSplats((t,e,i,a,c,u,d,p,g,f,m,y,I,C,E)=>{const v=r(new gi(e,i,a));if(A(v)&&h(y)){n=s.pushSplat(),s.setCenter(n,v.x,v.y,v.z);const t=o(new gi(c,u,d));s.setScale(n,t.x,t.y,t.z);const e=l(new pi(p,g,f,m));s.setQuaternion(n,e.x,e.y,e.z,e.w),s.setOpacity(n,y),s.setColor(n,I,C,E)}else n=null},(t,e,i,r)=>{e&&null!==n&&s.setSh1(n,e),i&&null!==n&&s.setSh2(n,i),r&&null!==n&&s.setSh3(n,r)});break}case BO.SPZ:{const e=new sz({fileBytes:t.fileBytes}),n=new Int32Array(e.numSplats);n.fill(-1);const i=new Float32Array(3*e.numSplats),a=new gi;e.parseSplats((t,e,n,s)=>{const a=r(new gi(e,n,s));i[3*t]=a.x,i[3*t+1]=a.y,i[3*t+2]=a.z},(t,e)=>{a.fromArray(i,3*t),A(a)&&h(e)&&(n[t]=s.pushSplat(),s.setCenter(n[t],a.x,a.y,a.z),s.setOpacity(n[t],e))},(t,e,i,r)=>{n[t]>=0&&s.setColor(n[t],e,i,r)},(t,e,i,r)=>{if(n[t]>=0){const a=o(new gi(e,i,r));s.setScale(n[t],a.x,a.y,a.z)}},(t,e,i,r,a)=>{if(n[t]>=0){const o=l(new pi(e,i,r,a));s.setQuaternion(n[t],o.x,o.y,o.z,o.w)}},(t,e,i,r)=>{n[t]>=0&&(s.setSh1(n[t],e),i&&s.setSh2(n[t],i),r&&s.setSh3(n[t],r))});break}case BO.SPLAT:tz(t.fileBytes,0,(t,e,n,i,a,c,u,d,p,g,f,m,y,I,C)=>{const E=r(new gi(e,n,i));if(A(E)&&h(m)){const t=s.pushSplat();s.setCenter(t,E.x,E.y,E.z);const e=o(new gi(a,c,u));s.setScale(t,e.x,e.y,e.z);const n=l(new pi(d,p,g,f));s.setQuaternion(t,n.x,n.y,n.z,n.w),s.setOpacity(t,m),s.setColor(t,y,I,C)}});break;case BO.KSPLAT:{let e=null;iz(t.fileBytes,0,(t,n,i,a,c,u,d,p,g,f,m,y,I,C,E)=>{const v=r(new gi(n,i,a));if(A(v)&&h(y)){e=s.pushSplat(),s.setCenter(e,v.x,v.y,v.z);const t=o(new gi(c,u,d));s.setScale(e,t.x,t.y,t.z);const n=l(new pi(p,g,f,m));s.setQuaternion(e,n.x,n.y,n.z,n.w),s.setOpacity(e,y),s.setColor(e,I,C,E)}else e=null},(t,n,i,r)=>{null!==e&&(s.setSh1(e,n),i&&s.setSh2(e,i),r&&s.setSh3(e,r))});break}default:throw new Error(`transcodeSpz not implemented for ${f}`)}}const A=Math.min(o??3,s.sh3?3:s.sh2?2:s.sh1?1:0),h=new oz({numSplats:s.numSplats,shDegree:A,fractionalBits:l,flagAntiAlias:!0});for(let t=0;t<s.numSplats;++t){const e=3*t,n=4*t;h.setCenter(t,s.centers[e],s.centers[e+1],s.centers[e+2]),h.setScale(t,s.scales[e],s.scales[e+1],s.scales[e+2]),h.setQuat(t,s.quaternions[n],s.quaternions[n+1],s.quaternions[n+2],s.quaternions[n+3]),h.setAlpha(t,s.opacities[t]),h.setRgb(t,s.colors[e],s.colors[e+1],s.colors[e+2]),s.sh1&&A>=1&&h.setSh(t,s.sh1.slice(9*t,9*(t+1)),A>=2&&s.sh2?s.sh2.slice(15*t,15*(t+1)):void 0,A>=3&&s.sh3?s.sh3.slice(21*t,21*(t+1)):void 0)}return{fileBytes:await h.finalize(),clippedCount:h.clippedCount}}class cz{constructor(t){this.mesh=t.mesh,this.numSplats=t.numSplats??this.mesh.numSplats;const{width:e,height:n,depth:i,maxSplats:s}=_P(this.numSplats);this.skinData=new Uint16Array(4*s),this.skinTexture=new Vi(this.skinData,e,n,i),this.skinTexture.format=Ae,this.skinTexture.type=Yt,this.skinTexture.internalFormat="RGBA16UI",this.skinTexture.needsUpdate=!0,this.numBones=t.numBones??256,this.boneData=new Float32Array(16*this.numBones),this.boneTexture=new io(this.boneData,4,this.numBones,ne,Jt),this.boneTexture.internalFormat="RGBA32F",this.boneTexture.needsUpdate=!0,this.uniform=new vU({key:"skinning",type:Az,globals:()=>[hz],value:{numSplats:this.numSplats,numBones:this.numBones,skinTexture:this.skinTexture,boneTexture:this.boneTexture}})}modify(t){return function(t,e){return new GR({inTypes:{gsplat:ZR,skinning:Az},outTypes:{gsplat:ZR},globals:()=>[hz,uz],inputs:{gsplat:t,skinning:e},statements:({inputs:t,outputs:e})=>{const{skinning:n}=t,{gsplat:i}=e;return WR(`\n        ${i} = ${t.gsplat};\n        if (isGsplatActive(${i}.flags)) {\n          applyGsplatSkinning(\n            ${n}.numSplats, ${n}.numBones,\n            ${n}.skinTexture, ${n}.boneTexture,\n            ${i}.index, ${i}.center, ${i}.quaternion\n          );\n        }\n      `)}}).outputs.gsplat}(t,this.uniform)}setRestQuatPos(t,e,n){const i=16*t;this.boneData[i+0]=e.x,this.boneData[i+1]=e.y,this.boneData[i+2]=e.z,this.boneData[i+3]=e.w,this.boneData[i+4]=n.x,this.boneData[i+5]=n.y,this.boneData[i+6]=n.z,this.boneData[i+7]=0,this.boneData[i+8]=0,this.boneData[i+9]=0,this.boneData[i+10]=0,this.boneData[i+11]=1,this.boneData[i+12]=0,this.boneData[i+13]=0,this.boneData[i+14]=0,this.boneData[i+15]=0}setBoneQuatPos(t,e,n){const i=16*t,s=new pi(this.boneData[i+0],this.boneData[i+1],this.boneData[i+2],this.boneData[i+3]),r=new gi(this.boneData[i+4],this.boneData[i+5],this.boneData[i+6]),a=s.clone().invert(),o=n.clone().sub(r);o.applyQuaternion(a),a.multiply(e);const l=new pi(o.x,o.y,o.z,0).multiply(s);this.boneData[i+8]=a.x,this.boneData[i+9]=a.y,this.boneData[i+10]=a.z,this.boneData[i+11]=a.w,this.boneData[i+12]=.5*l.x,this.boneData[i+13]=.5*l.y,this.boneData[i+14]=.5*l.z,this.boneData[i+15]=.5*l.w}setSplatBones(t,e,n){const i=4*t;this.skinData[i+0]=Math.min(255,Math.max(0,Math.round(255*n.x)))+(e.x<<8),this.skinData[i+1]=Math.min(255,Math.max(0,Math.round(255*n.y)))+(e.y<<8),this.skinData[i+2]=Math.min(255,Math.max(0,Math.round(255*n.z)))+(e.z<<8),this.skinData[i+3]=Math.min(255,Math.max(0,Math.round(255*n.w)))+(e.w<<8)}updateBones(){this.boneTexture.needsUpdate=!0,this.mesh.needsUpdate=!0}}const Az={type:"GsplatSkinning"},hz=JR("\n  struct GsplatSkinning {\n    int numSplats;\n    int numBones;\n    usampler2DArray skinTexture;\n    sampler2D boneTexture;\n  };\n"),uz=JR("\n  void applyGsplatSkinning(\n    int numSplats, int numBones,\n    usampler2DArray skinTexture, sampler2D boneTexture,\n    int splatIndex, inout vec3 center, inout vec4 quaternion\n  ) {\n    if ((splatIndex < 0) || (splatIndex >= numSplats)) {\n      return;\n    }\n\n    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);\n\n    float weights[4];\n    weights[0] = float(skinData.x & 0xffu) / 255.0;\n    weights[1] = float(skinData.y & 0xffu) / 255.0;\n    weights[2] = float(skinData.z & 0xffu) / 255.0;\n    weights[3] = float(skinData.w & 0xffu) / 255.0;\n\n    uint boneIndices[4];\n    boneIndices[0] = (skinData.x >> 8u) & 0xffu;\n    boneIndices[1] = (skinData.y >> 8u) & 0xffu;\n    boneIndices[2] = (skinData.z >> 8u) & 0xffu;\n    boneIndices[3] = (skinData.w >> 8u) & 0xffu;\n\n    vec4 quat = vec4(0.0);\n    vec4 dual = vec4(0.0);\n    for (int i = 0; i < 4; i++) {\n      if (weights[i] > 0.0) {\n        int boneIndex = int(boneIndices[i]);\n        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);\n        vec4 boneDual = vec4(0.0);\n        if (boneIndex < numBones) {\n          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);\n          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);\n        }\n\n        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {\n          // Flip sign if next blend is pointing in the opposite direction\n          boneQuat = -boneQuat;\n          boneDual = -boneDual;\n        }\n        quat += weights[i] * boneQuat;\n        dual += weights[i] * boneDual;\n      }\n    }\n\n    // Normalize dual quaternion\n    float norm = length(quat);\n    quat /= norm;\n    dual /= norm;\n    vec3 translate = vec3(\n      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),\n      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),\n      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)\n    );\n\n    center = quatVec(quat, center) + translate;\n    quaternion = quatQuat(quat, quaternion);\n  }\n");function dz({splats:t,extents:e,stepSize:n=1,pointRadius:i=.01,pointShadowScale:s=2,opacity:r=1,color:a}){const o=1e-6,l=new gi,c=new gi,A=new pi(0,0,0,1);null==a&&(a=(t,e)=>t.set(.55+.45*Math.cos(1*e.x),.55+.45*Math.cos(1*e.y),.55+.45*Math.cos(1*e.z)));const h=new dr;for(let u=e.min.z;u<e.max.z+o;u+=n)for(let d=e.min.y;d<e.max.y+o;d+=n)for(let p=e.min.x;p<e.max.x+o;p+=n){l.set(p,d,u);for(let e=0;e<2;++e)c.setScalar(i*(e?1:s)),e?"function"==typeof a?a(h,l):h.copy(a):h.setScalar(0),t.pushSplat(l,c,A,r,h)}}function pz({splats:t,scale:e=.25,axisRadius:n=.0075,axisShadowScale:i=2,origins:s=[new gi]}){const r=new gi,a=new gi,o=new pi(0,0,0,1),l=new dr;for(const c of s)for(let s=0;s<3;++s){r.set(c.x+(0===s?e:0),c.y+(1===s?e:0),c.z+(2===s?e:0));for(let c=0;c<2;++c)a.set((0===s?e:n)*(c?1:i),(1===s?e:n)*(c?1:i),(2===s?e:n)*(c?1:i)),l.setRGB(0===c?0:0===s?1:0,0===c?0:1===s?1:0,0===c?0:2===s?1:0),t.pushSplat(r,a,o,1,l)}}function gz({splats:t,origin:e=new gi,radius:n=1,maxDepth:i=3,filter:s=null,pointRadius:r=.02,pointThickness:a=.001,color:o=new dr(1,1,1)}){const l={};function c(t){if(s&&!s(t))return;const e=`${t.x},${t.y},${t.z}`;l[e]||(l[e]=t)}function A(t,e,n,s){if(c(e),c(n),c(s),t>=i)return;const r=(new gi).addVectors(e,n).normalize(),a=(new gi).addVectors(n,s).normalize(),o=(new gi).addVectors(s,e).normalize();A(t+1,e,r,o),A(t+1,r,n,a),A(t+1,o,a,s),A(t+1,r,a,o)}for(const t of[-1,1])for(const e of[-1,1])for(const n of[-1,1])A(0,new gi(t,0,0),new gi(0,e,0),new gi(0,0,n));const h=Object.values(l),u=new gi(r,r,a),d=new pi,p="function"==typeof o?new dr:o;for(const i of h)d.setFromUnitVectors(new gi(0,0,-1),i),"function"==typeof o&&o(p,i),i.multiplyScalar(n),i.add(e),t.pushSplat(i,u,d,1,p)}function fz({text:t,font:e,fontSize:n,color:i,rgb:s,dotRadius:r,textAlign:a,lineHeight:o,objectScale:l}){e=e??"Arial",n=n??32,i=i??new dr(1,1,1),r=r??.8,a=a??"start",o=o??1,l=l??1;const c=t.split("\n"),A=document.createElement("canvas"),h=A.getContext("2d");if(!h)throw new Error("Failed to create canvas context");h.font=`${n}px ${e}`,h.textAlign=a;const u=h.measureText(""),d=u.fontBoundingBoxAscent+u.fontBoundingBoxDescent;let p=Number.POSITIVE_INFINITY,g=Number.NEGATIVE_INFINITY,f=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY;for(let t=0;t<c.length;++t){const e=h.measureText(c[t]),n=d*o*t;p=Math.min(p,-e.actualBoundingBoxLeft),g=Math.max(g,e.actualBoundingBoxRight),f=Math.min(f,n-e.actualBoundingBoxAscent),m=Math.max(m,n+e.actualBoundingBoxDescent)}const y=Math.floor(p),I=Math.floor(f),C=Math.ceil(g)-y,E=Math.ceil(m)-I;A.width=C,A.height=E,h.font=`${n}px ${e}`,h.textAlign=a,h.textBaseline="alphabetic",h.fillStyle="#FFFFFF";for(let t=0;t<c.length;++t){const e=d*o*t-I;h.fillText(c[t],-y,e)}const v=h.getImageData(0,0,C,E),x=new Uint8Array(v.data.buffer),w=new PO,_=new gi,B=(new gi).setScalar(r*l),S=new pi(0,0,0,1);s=s??new dr(1,1,1);let b=0;for(let t=0;t<E;++t)for(let e=0;e<C;++e){const n=x[b+3];if(n>0){const i=n/255;_.set(e-.5*(C-1),.5*(E-1)-t,0),_.multiplyScalar(l),w.pushSplat(_,B,S,i,s)}b+=4}const M=new eO({packedSplats:w});return M.recolor=i,M}function mz({url:t,dotRadius:e,subXY:n,forEachSplat:i}){return e=e??.8,n=Math.max(1,Math.floor(n??1)),new eO({constructSplats:async s=>new Promise((r,a)=>{const o=new Image;o.crossOrigin="anonymous",o.onerror=a,o.onload=()=>{const{width:t,height:l}=o,c=document.createElement("canvas");c.width=t,c.height=l;const A=c.getContext("2d");if(!A)return void a(new Error("Failed to create canvas context"));A.imageSmoothingEnabled=!0,A.imageSmoothingQuality="high";const h=Math.round(t/n),u=Math.round(l/n);A.drawImage(o,0,0,h,u);try{const t=A.getImageData(0,0,h,u),n=new Uint8Array(t.data.buffer),a=new gi,o=(new gi).setScalar(e),l=new pi(0,0,0,1),c=new dr;let d=0;for(let t=0;t<u;++t)for(let r=0;r<h;++r){const A=4*d,p=n[A+3];if(p>0){let g=p/255;c.set(n[A+0]/255,n[A+1]/255,n[A+2]/255),a.set(r-.5*(h-1),.5*(u-1)-t,0),o.setScalar(e),l.set(0,0,0,1);let f=!0;if(i){const t=i(h,u,d,a,o,l,g,c);g=t??g,f=null!==t}f&&s.pushSplat(a,o,l,g,c)}d+=1}r()}catch(t){a(t)}},o.src=t})})}const yz={box:new Ji(new gi(-1,-1,-1),new gi(1,1,1)),density:100,fallDirection:new gi(-1,-3,1).normalize(),fallVelocity:.02,wanderScale:.04,wanderVariance:2,color1:new dr(1,1,1),color2:new dr(.5,.5,1),minScale:.001,maxScale:.005,anisoScale:new gi(1,1,1)},Iz={box:new Ji(new gi(-2,-1,-2),new gi(2,5,2)),density:10,fallDirection:new gi(0,-1,0),fallVelocity:2,wanderScale:.1,wanderVariance:1,color1:new dr(1,1,1),color2:new dr(.25,.25,.5),minScale:.005,maxScale:.01,anisoScale:new gi(.1,1,.1)},Cz=Object.freeze(Object.defineProperty({__proto__:null,DEFAULT_RAIN:Iz,DEFAULT_SNOW:yz,snowBox:function({box:t,minY:e,numSplats:n,density:i,anisoScale:s,minScale:r,maxScale:a,fallDirection:o,fallVelocity:l,wanderScale:c,wanderVariance:A,color1:h,color2:u,opacity:d,onFrame:p}){const g=((t=t??new Ji(new gi(-1,-1,-1),new gi(1,1,1))).max.x-t.min.x)*(t.max.y-t.min.y)*(t.max.z-t.min.z);i=i??100,n=n??Math.max(1,Math.min(1e6,Math.round(g*i)));const f=CU(r??.001),m=CU(a??.005),y=EU(((null==s?void 0:s.clone())??new gi(1,1,1)).normalize()),I=EU((o??new gi(0,-1,0)).normalize()),C=CU(l??.02),E=CU(c??.01),v=CU(A??2),x=EU(h??new dr(1,1,1)),w=EU(u??new dr(.5,.5,1)),_=CU(d??1),B=CU(0),S=EU(new gi(0,0,0)),b=EU(t.min),M=EU(t.max),T=CU(e??Number.NEGATIVE_INFINITY),Q=wL(M,b),D=new $k({numSplats:n,generator:VR({index:"int"},{gsplat:ZR},({index:t})=>{if(!t)throw new Error("index not defined");const e=VN(t),n=fN(e).outputs.w;let i=QF(e),s=TL(_L(n,NR("float",100)));s=fk(_L(LR("float","PI"),s)),s=xL(f,_L(s,wL(m,f)));const r=_L(s,y),a=TL(_L(n,NR("float",10))),o=TL(n),l=DL(x,w,o),c=_L(l,a),A=VN(mN({vectorType:"ivec2",x:t,y:NR("int",6837)}));let h=QF(A),u=_L(fN(A).outputs.w,v);u=xL(B,u),i=xL(i,S);const d=bL(i,NR("vec3",new gi(1,1,1)));i=xL(b,_L(Q,d));const p=NR("vec4",new pi(0,0,0,1));h=fk(xL(QF(u),h)),h=_L(h,E);let g=xL(i,h),I=fN(g).outputs.y;I=QL(T,I),g=mN({vector:g,y:I});let C=iU({flags:LR("uint","GSPLAT_FLAG_ACTIVE"),index:t,center:g,scales:r,quaternion:p,rgb:c,opacity:_});return C=R.applyGsplat(C),{gsplat:C}},{globals:()=>[aU]}),update:({object:t,time:e,deltaTime:n})=>{B.value=e,R.update(D);const i=I.value.clone().multiplyScalar(C.value*n);S.value.add(i),t.visible=_.value>0,null==p||p({object:t,time:e,deltaTime:n}),D.updateVersion()}}),R=new Zk;return{snow:D,min:b,max:M,minY:T,color1:x,color2:w,opacity:_,fallVelocity:C,wanderVariance:v,wanderScale:E,fallDirection:I,minScale:f,maxScale:m,anisoScale:y}},staticBox:function({box:t,cells:e,dotScale:n,color:i,opacity:s}){e.x=Math.max(1,Math.round(e.x)),e.y=Math.max(1,Math.round(e.y)),e.z=Math.max(1,Math.round(e.z)),s=s??1;const r=e.x*e.y*e.z,a=NR("int",e.x),o=NR("int",e.y);NR("int",e.z);const l=CU(0),c=new $k({numSplats:r,generator:VR({index:"int"},{gsplat:ZR},({index:r})=>{if(!r)throw new Error("index is undefined");const c=SL(r,a),h=BL(r,a),u=SL(h,o),d=BL(h,o),p=mN({vectorType:"ivec3",x:c,y:u,z:d}),g=RF(l),f=mN({vectorType:"ivec2",x:r,y:g}),m=HN(f),y=NR("vec3",t.min),I=NR("vec3",t.max),C=wL(I,y),E=BL(xL(QF(p),m),NR("vec3",e));let v,x,w;i?(v=NR("float",i.r),x=NR("float",i.g),w=NR("float",i.b)):({r:v,g:x,b:w}=fN(E).outputs);const _=mN({vectorType:"vec4",r:v,g:x,b:w,a:NR("float",s)}),B=xL(y,_L(C,E)),S=QF(NR("float",n)),b=NR("vec4",new pi(0,0,0,1));let M=iU({flags:LR("uint","GSPLAT_FLAG_ACTIVE"),index:r,center:B,scales:S,quaternion:b,rgba:_});return M=A.applyGsplat(M),{gsplat:M}},{globals:()=>[aU]}),update:({time:t})=>{l.value=t,A.update(c),c.updateVersion()}}),A=new Zk;return c}},Symbol.toStringTag,{value:"Module"}));function Ez(t){return VR({gsplat:ZR},{gsplat:ZR},({gsplat:e})=>{if(!e)throw new Error("No gsplat input");let n=sU(e);const i=t.applyGsplat(e),s=nU(i).outputs.center,r=sU(i),a=pN(s,r),o=AF(a,NR("float",0));n=hF(o,ML(n),n);const l=xL(_L(n,NR("float",.5)),NR("float",.5));return{gsplat:e=iU({gsplat:e,rgb:l})}})}function vz(t,e,n,i){return VR({gsplat:ZR},{gsplat:ZR},({gsplat:s})=>{if(!s)throw new Error("No gsplat input");let{center:r}=nU(s).outputs;r=t.apply(r);const{z:a}=fN(r).outputs;let o=YN(ML(a),e,n);return o=hF(i,wL(NR("float",1),o),o),{gsplat:s=iU({gsplat:s,r:o,g:o,b:o})}})}const xz=Object.freeze(Object.defineProperty({__proto__:null,makeDepthColorModifier:vz,makeNormalColorModifier:Ez,setDepthColor:function(t,e,n,i){t.enableWorldToView=!0;const s=NR("float",e),r=NR("float",n),a=NR("bool",i??!1);return t.worldModifier=vz(t.context.worldToView,s,r,a),t.updateGenerator(),{minDepth:s,maxDepth:r,reverse:a}},setWorldNormalColor:function(t){t.enableWorldToView=!0,t.worldModifier=Ez(t.context.worldToView),t.updateGenerator()}},Symbol.toStringTag,{value:"Module"})),wz=class t{static createButton(e,n={}){const i=navigator.xr;if(!i)return null;const s=i,r=document.createElement("button");function a(){r.style.display="none",r.style.cursor="auto",r.style.left="calc(50% - 75px)",r.style.width="150px",r.onmouseenter=null,r.onmouseleave=null,r.onclick=null}var o;return e.xr.enabled=!0,e.xr.setReferenceSpaceType("local"),r.id="VRButton",r.style.display="none",(o=r).style.position="absolute",o.style.bottom="20px",o.style.padding="12px 6px",o.style.border="1px solid #fff",o.style.borderRadius="4px",o.style.background="rgba(0,0,0,0.1)",o.style.color="#fff",o.style.font="normal 13px sans-serif",o.style.textAlign="center",o.style.opacity="0.5",o.style.outline="none",o.style.zIndex="999",s.isSessionSupported("immersive-vr").then(i=>{i?function(){let t=null;async function i(n){console.log("onSessionStarted"),n.addEventListener("end",a),await e.xr.setSession(n),r.textContent="EXIT VR",t=n}function a(){console.log("onSessionEnded"),null==t||t.removeEventListener("end",a),r.textContent="ENTER VR",t=null}r.style.display="",r.style.cursor="pointer",r.style.left="calc(50% - 100px)",r.style.width="200px",r.style.height="100px",r.textContent="ENTER VR";const o={...n,optionalFeatures:[...n.optionalFeatures||[]]};r.onmouseenter=()=>{r.style.opacity="1.0"},r.onmouseleave=()=>{r.style.opacity="0.5"},r.onclick=()=>{null===t?(console.log("requesting session"),s.requestSession("immersive-vr",o).then(i)):(console.log("ending session"),t.end())}}():(a(),r.textContent="VR NOT SUPPORTED"),i&&t.xrSessionIsGranted&&r.click()}).catch(function(t){a(),console.warn("Exception when trying to call xr.isSessionSupported",t),r.textContent="VR NOT ALLOWED"}),r}static registerSessionGrantedListener(){const e=navigator.xr;if(!e)return null;const n=e;/WebXRViewer\//i.test(navigator.userAgent)||n.addEventListener("sessiongranted",()=>{t.xrSessionIsGranted=!0})}};wz.xrSessionIsGranted=!1;let _z=wz;_z.registerSessionGrantedListener();var Bz=(t=>(t.w="wrist",t.t0="thumb-metacarpal",t.t1="thumb-phalanx-proximal",t.t2="thumb-phalanx-distal",t.t3="thumb-tip",t.i0="index-finger-metacarpal",t.i1="index-finger-phalanx-proximal",t.i2="index-finger-phalanx-intermediate",t.i3="index-finger-phalanx-distal",t.i4="index-finger-tip",t.m0="middle-finger-metacarpal",t.m1="middle-finger-phalanx-proximal",t.m2="middle-finger-phalanx-intermediate",t.m3="middle-finger-phalanx-distal",t.m4="middle-finger-tip",t.r0="ring-finger-metacarpal",t.r1="ring-finger-phalanx-proximal",t.r2="ring-finger-phalanx-intermediate",t.r3="ring-finger-phalanx-distal",t.r4="ring-finger-tip",t.p0="pinky-finger-metacarpal",t.p1="pinky-finger-phalanx-proximal",t.p2="pinky-finger-phalanx-intermediate",t.p3="pinky-finger-phalanx-distal",t.p4="pinky-finger-tip",t))(Bz||{});const Sz=Object.keys(Bz),bz=Sz.length,Mz={w:0,t0:1,t1:2,t2:3,t3:4,i0:5,i1:6,i2:7,i3:8,i4:9,m0:10,m1:11,m2:12,m3:13,m4:14,r0:15,r1:16,r2:17,r3:18,r4:19,p0:20,p1:21,p2:22,p3:23,p4:24},Tz={w:.02,t0:.02,t1:.014,t2:.0115,t3:.0085,i0:.022,i1:.012,i2:.0085,i3:.0075,i4:.0065,m0:.021,m1:.012,m2:.008,m3:.0075,m4:.0065,r0:.019,r1:.011,r2:.0075,r3:.007,r4:.006,p0:.012,p1:.01,p2:.007,p3:.0065,p4:.0055},Qz=[["w","t0","t1","t2","t3"],["w","i0","i1","i2","i3","i4"],["w","m0","m1","m2","m3","m4"],["w","r0","r1","r2","r3","r4"],["w","p0","p1","p2","p3","p4"]],Dz=[[8,10,8,6],[8,19,14,8,6],[8,19,14,8,6],[8,19,14,8,6],[8,19,14,8,6]],Rz=["t3","i4","m4","r4","p4"],Uz=["i4","m4","r4","p4"];var Pz=(t=>(t.left="left",t.right="right",t))(Pz||{});const Lz=Object.keys(Pz);class Fz{constructor(){this.hands={},this.last={},this.values={},this.tests={},this.lastTests={},this.updated=!1}update({xr:t,xrFrame:e}){const n=t.getSession();if(!n)return;const i=t.getReferenceSpace();if(i&&e.getJointPose){this.last=this.hands,this.lastTests=this.tests,this.hands={},this.values={},this.tests={};for(const t of n.inputSources){if(!t.hand)continue;const n=t.handedness;this.hands[n]={};for(const s of Sz){const r=t.hand.get(Bz[s]);if(r){const t=e.getJointPose(r,i);if(t){const{position:e,orientation:i}=t.transform;this.hands[n][s]={position:new gi(e.x,e.y,e.z),quaternion:new pi(i.x,i.y,i.z,i.w),radius:t.radius||.001}}}}}for(const t of Lz)for(const{key:e,value:n}of[{key:`${t}AllTips`,value:this.allTipsTouching(t)},{key:`${t}IndexThumb`,value:this.touching(t,"i4",t,"t3")},{key:`${t}MiddleThumb`,value:this.touching(t,"m4",t,"t3")},{key:`${t}RingThumb`,value:this.touching(t,"r4",t,"t3")},{key:`${t}PinkyThumb`,value:this.touching(t,"p4",t,"t3")},{key:`${t}TriTips`,value:this.triTipsTouching(t)}])this.values[e]=n,this.tests[e]=1===n||0!==n&&(this.lastTests[e]??!1)}}makeGhostMesh(){const t=new gi,e=new gi(.01,.01,.01),n=new pi(0,0,0,1),i=new dr(1,1,1),s=3*Math.PI;new dr(1,1,1);let r=1;const a=new eO({onFrame:()=>{let o=0;for(const l of Lz){const c=this.hands[l];for(const[A,h]of Qz.entries())for(let u=1;u<h.length;++u){const d=2*Dz[A][u-1],p=u+1===h.length,g=null==c?void 0:c[h[u-1]],f=null==c?void 0:c[h[u]];for(let c=0;c<d;++c){const A=(c+.5)/d;if(r=0,g&&f){t.copy(g.position).lerp(f.position,A),n.copy(g.quaternion).slerp(f.quaternion,A);let a=(1-A)*Tz[h[u-1]]+A*Tz[h[u]];p&&A>.8&&(a*=Math.sqrt(1-((A-.8)/.2)**2)),e.set(.65*a,.5*a,.003),i.set(.55+.45*Math.sin(t.x*s),.55+.45*Math.sin(t.y*s),.55+.45*Math.sin(t.z*s)),"right"===l&&i.set(1-i.r,1-i.g,1-i.b),r=.75}a.packedSplats.setSplat(o,t,e,n,r,i),o+=1}}}a.packedSplats.numSplats=o,a.packedSplats.needsUpdate=!0,a.numSplats=o,a.updateVersion()}});return a}distance(t,e,n,i,s=!1){const r=s?this.last[t]:this.hands[t],a=s?this.last[n]:this.hands[n],o=null==r?void 0:r[e],l=null==a?void 0:a[i];return o&&l?o.position.distanceTo(l.position):Number.POSITIVE_INFINITY}separation(t,e,n,i,s=!1){const r=this.distance(t,e,n,i,s);return r===Number.POSITIVE_INFINITY?Number.POSITIVE_INFINITY:r-Tz[e]-Tz[i]}touching(t,e,n,i,s=!1){const r=this.separation(t,e,n,i,s);return r===Number.POSITIVE_INFINITY?Number.POSITIVE_INFINITY:1-Math.max(0,Math.min(1,r/.01-0))}allTipsTouching(t,e=!1){return Math.min(this.touching(t,"t3",t,"i4",e),this.touching(t,"i4",t,"m4",e),this.touching(t,"m4",t,"r4",e),this.touching(t,"r4",t,"p4",e))}triTipsTouching(t,e=!1){return Math.min(this.touching(t,"t3",t,"i4",e),this.touching(t,"i4",t,"m4",e),this.touching(t,"m4",t,"t3",e))}}class Nz{constructor({xrHands:t,control:e,moveInertia:n,rotateInertia:i}){this.lastGrip={},this.lastPivot=new gi,this.rotateVelocity=0,this.velocity=new gi,this.xrHands=t,this.control=e,this.moveInertia=n??.5,this.rotateInertia=i??.5}update(t){var e,n,i,s,r;const a={};for(const t of Lz){const o=this.xrHands.hands[t];o&&this.xrHands.tests[`${t}MiddleThumb`]&&(a[t]=(new gi).add((null==(e=o.t3)?void 0:e.position)??new gi).add((null==(n=o.i4)?void 0:n.position)??new gi).add((null==(i=o.m4)?void 0:i.position)??new gi).add((null==(s=o.r4)?void 0:s.position)??new gi).add((null==(r=o.p4)?void 0:r.position)??new gi).multiplyScalar(.2))}if(a.left&&a.right&&this.lastGrip.left&&this.lastGrip.right){const e=a.left.clone().add(a.right).multiplyScalar(.5),n=this.lastGrip.left.clone().add(this.lastGrip.right).multiplyScalar(.5);this.lastPivot=e;const i=e.clone().applyMatrix4(this.control.matrix);i.sub(n.clone().applyMatrix4(this.control.matrix)),i.multiplyScalar(1/t),this.velocity.lerp(i,1-Math.exp(-20*t));let s=Math.atan2(a.left.z-e.z,a.left.x-e.x)-Math.atan2(this.lastGrip.left.z-n.z,this.lastGrip.left.x-n.x);s>Math.PI?s-=2*Math.PI:s<-Math.PI&&(s+=2*Math.PI);const r=s/t,o=Math.exp(-20*t);this.rotateVelocity=this.rotateVelocity*o+r*(1-o)}else if(this.rotateVelocity*=Math.exp(-t/this.rotateInertia),a.left&&this.lastGrip.left){const e=a.left.clone().applyMatrix4(this.control.matrix);e.sub(this.lastGrip.left.clone().applyMatrix4(this.control.matrix)),e.multiplyScalar(1/t),this.velocity.lerp(e,1-Math.exp(-20*t))}else if(a.right&&this.lastGrip.right){const e=a.right.clone().applyMatrix4(this.control.matrix);e.sub(this.lastGrip.right.clone().applyMatrix4(this.control.matrix)),e.multiplyScalar(1/t),this.velocity.lerp(e,1-Math.exp(-20*t))}else this.velocity.multiplyScalar(Math.exp(-t/this.moveInertia));const o=this.lastPivot.clone().negate(),l=(new Es).makeTranslation(o).premultiply((new Es).makeRotationY(this.rotateVelocity*t)).premultiply((new Es).makeTranslation(this.lastPivot));this.control.matrix.multiply(l),this.control.matrix.decompose(this.control.position,this.control.quaternion,this.control.scale),this.control.updateMatrixWorld(!0),this.control.position.sub(this.velocity.clone().multiplyScalar(t)),this.lastGrip=a}}const kz={KeyW:new gi(0,0,-1),KeyS:new gi(0,0,1),KeyA:new gi(-1,0,0),KeyD:new gi(1,0,0),KeyR:new gi(0,1,0),KeyF:new gi(0,-1,0)},Oz={ArrowUp:new gi(0,0,-1),ArrowDown:new gi(0,0,1),ArrowLeft:new gi(-1,0,0),ArrowRight:new gi(1,0,0),PageUp:new gi(0,1,0),PageDown:new gi(0,-1,0)},zz={KeyQ:new gi(0,0,1),KeyE:new gi(0,0,-1)},Gz={Home:new gi(0,-1,0),End:new gi(0,1,0),Insert:new gi(-1,0,0),Delete:new gi(1,0,0)};class Hz{constructor({canvas:t}){this.lastTime=0,this.fpsMovement=new Vz({}),this.pointerControls=new Yz({canvas:t})}update(t){const e=performance.now(),n=(e-(this.lastTime||e))/1e3;this.lastTime=e,this.fpsMovement.update(n,t),this.pointerControls.update(n,t)}}class Vz{constructor({moveSpeed:t,rollSpeed:e,stickThreshold:n,rotateSpeed:i,keycodeMoveMapping:s,keycodeRotateMapping:r,gamepadMapping:a,capsMultiplier:o,shiftMultiplier:l,ctrlMultiplier:c,xr:A}={}){this.enable=!0,this.moveSpeed=t??1,this.rollSpeed=e??2,this.stickThreshold=n??.1,this.rotateSpeed=i??2,this.keycodeMoveMapping=s??{...kz,...Oz},this.keycodeRotateMapping=r??{...zz,...Gz},this.gamepadMapping=a??{4:"rollLeft",5:"rollRight",6:"ctrl",7:"shift"},this.capsMultiplier=o??10,this.shiftMultiplier=l??5,this.ctrlMultiplier=c??.2,this.xr=A,this.keydown={},this.keycode={},document.addEventListener("keydown",t=>{this.keydown[t.key]=!0,this.keycode[t.code]=!0}),document.addEventListener("keyup",t=>{this.keydown[t.key]=!1,this.keycode[t.code]=!1}),window.addEventListener("blur",()=>{this.keydown={},this.keycode={}})}update(t,e){var n,i;if(!this.enable)return;const s=[new di,new di],r=navigator.getGamepads()[0];r&&(s[0].set(r.axes[0],r.axes[1]),s[1].set(r.axes[2],r.axes[3]));const a=(null==r?void 0:r.buttons.map(t=>t.pressed))||[],o=Array.from((null==(i=null==(n=this.xr)?void 0:n.getSession())?void 0:i.inputSources)??[]);for(const t of o){const e=t.gamepad;if(e)switch(t.handedness){case"none":s[0].x+=e.axes[0],s[0].y+=e.axes[1],s[1].x+=e.axes[2],s[1].y+=e.axes[3];break;case"left":s[0].x+=e.axes[2],s[0].y+=e.axes[3];break;case"right":s[1].x+=e.axes[2],s[1].y+=e.axes[3]}}for(const t of s)t.x=Math.abs(t.x)>=this.stickThreshold?t.x:0,t.y=Math.abs(t.y)>=this.stickThreshold?t.y:0;const l=new gi(s[1].x,s[1].y,0).multiplyScalar(this.rotateSpeed);for(const[t,e]of Object.entries(this.keycodeRotateMapping))this.keycode[t]&&l.add(e);for(const t in this.gamepadMapping)if(a[Number.parseInt(t)])switch(this.gamepadMapping[t]){case"rollLeft":l.z+=1;break;case"rollRight":l.z-=1}if(l.multiply(new gi(this.rotateSpeed,this.rotateSpeed,this.rollSpeed)),l.manhattanLength()>0){l.multiplyScalar(t);const n=(new Qs).setFromQuaternion(e.quaternion,"YXZ");n.y-=l.x,n.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,n.x-l.y)),n.z=Math.max(-Math.PI,Math.min(Math.PI,n.z+l.z)),e.quaternion.setFromEuler(n)}const c=new gi(s[0].x,0,s[0].y);for(const[t,e]of Object.entries(this.keycodeMoveMapping))this.keycode[t]&&c.add(e);let A=1;this.keydown.CapsLock&&(A*=this.capsMultiplier),(this.keycode.ShiftLeft||this.keycode.ShiftRight)&&(A*=this.shiftMultiplier),(this.keycode.ControlLeft||this.keycode.ControlRight)&&(A*=this.ctrlMultiplier);for(const t in this.gamepadMapping)if(a[Number.parseInt(t)])switch(this.gamepadMapping[t]){case"shift":A*=this.shiftMultiplier;break;case"ctrl":A*=this.ctrlMultiplier}c.applyQuaternion(e.quaternion),e.position.add(c.multiplyScalar(this.moveSpeed*A*t))}}class Yz{constructor({canvas:t,rotateSpeed:e,slideSpeed:n,scrollSpeed:i,swapRotateSlide:s,reverseRotate:r,reverseSlide:a,reverseSwipe:o,reverseScroll:l,moveInertia:c,rotateInertia:A,pointerRollScale:h,doublePress:u}){this.enable=!0,this.canvas=t,this.rotateSpeed=e??.002,this.slideSpeed=n??.006,this.scrollSpeed=i??.0015,this.swapRotateSlide=s??!1,this.reverseRotate=r??!1,this.reverseSlide=a??!1,this.reverseSwipe=o??!1,this.reverseScroll=l??!1,this.moveInertia=c??.15,this.rotateInertia=A??.15,this.pointerRollScale=h??1,this.doublePress=u??(()=>{}),this.doublePressLimitMs=400,this.doublePressDistance=50,this.lastUp=null,this.rotating=null,this.sliding=null,this.dualPress=!1,this.scroll=new gi,this.rotateVelocity=new gi,this.moveVelocity=new gi,t.addEventListener("pointerdown",e=>{const n=this.getPointerPosition(e),i=n.clone(),s=n.clone(),r=!this.swapRotateSlide&&!this.rotating&&("mouse"!==e.pointerType||0===e.button)||this.swapRotateSlide&&this.sliding&&!this.rotating&&("mouse"!==e.pointerType||1===e.button),{pointerId:a,timeStamp:o}=e;if(r)this.rotating={initial:i,last:s,position:n,pointerId:a,timeStamp:o},t.setPointerCapture(e.pointerId),this.dualPress=!1;else if(!this.sliding){const r="mouse"===e.pointerType?e.button:void 0;this.sliding={initial:i,last:s,position:n,pointerId:a,button:r,timeStamp:o},t.setPointerCapture(e.pointerId),this.dualPress=null!=this.rotating&&o-this.rotating.timeStamp<200}});const d=e=>{var n,i;(null==(n=this.rotating)?void 0:n.pointerId)===e.pointerId?(this.rotating=null,t.releasePointerCapture(e.pointerId),this.dualPress&&this.sliding&&(t.releasePointerCapture(this.sliding.pointerId),this.sliding=null)):(null==(i=this.sliding)?void 0:i.pointerId)===e.pointerId&&(this.sliding=null,t.releasePointerCapture(e.pointerId),this.dualPress&&this.rotating&&(t.releasePointerCapture(this.rotating.pointerId),this.rotating=null));const s=this.getPointerPosition(e),r=this.lastUp;if(this.lastUp={position:s,time:e.timeStamp},r&&r.position.distanceTo(s)<this.doublePressDistance){const t=e.timeStamp-r.time;t<this.doublePressLimitMs&&(this.lastUp=null,this.doublePress({position:s,intervalMs:t}))}};document.addEventListener("pointerup",d),document.addEventListener("pointercancel",d),document.addEventListener("pointermove",t=>{var e,n;(null==(e=this.rotating)?void 0:e.pointerId)===t.pointerId?this.rotating.position=this.getPointerPosition(t):(null==(n=this.sliding)?void 0:n.pointerId)===t.pointerId&&(this.sliding.position=this.getPointerPosition(t))}),t.addEventListener("contextmenu",t=>{t.preventDefault()}),t.addEventListener("wheel",t=>{this.scroll.add(new gi(t.deltaX,t.deltaY,t.deltaZ)),t.preventDefault()})}getPointerPosition(t){const e=this.canvas.getBoundingClientRect();return new di(t.clientX-e.left,t.clientY-e.top)}update(t,e){if(!this.enable)return;if(this.dualPress&&this.rotating&&this.sliding){const n=[this.rotating.position.clone().sub(this.rotating.last),this.sliding.position.clone().sub(this.sliding.last)],i=n[0].dot(n[1]);if(i>=.2){const i=n[0].clone().add(n[1]),s=new gi(i.x,-i.y,0);s.multiplyScalar(this.slideSpeed*(this.reverseSwipe?1:-1)),s.applyQuaternion(e.quaternion),e.position.add(s),this.moveVelocity=s.clone().multiplyScalar(1/t)}else if(i<=-.2){const i=this.sliding.last.clone().sub(this.rotating.last),s=i.length();i.multiplyScalar(1/s).normalize();const r=new di(-i.y,i.x),a=[n[0].dot(i),n[1].dot(i)],o=[n[0].dot(r),n[1].dot(r)],l=this.rotating.last.clone().add(this.sliding.last).multiplyScalar(.5);let c=new gi;if(e instanceof ca){const t=new di(l.x/this.canvas.clientWidth*2-1,-l.y/this.canvas.clientHeight*2+1),n=new nu;n.setFromCamera(t,e),c=n.ray.direction}const A=a[1]-a[0],h=c.multiplyScalar(A*this.slideSpeed);e.position.add(h),this.moveVelocity=h.clone().multiplyScalar(1/t);const u=[Math.atan(o[0]/(-.5*s)),Math.atan(o[1]/(.5*s))],d=.5*(u[0]+u[1])*this.pointerRollScale,p=(new Qs).setFromQuaternion(e.quaternion,"YXZ");p.z=Math.max(-Math.PI,Math.min(Math.PI,p.z+.5*d)),e.quaternion.setFromEuler(p)}this.rotating.last.copy(this.rotating.position),this.sliding.last.copy(this.sliding.position)}else{const n=new gi;if(this.rotating&&!this.dualPress){const e=this.rotating.position.clone().sub(this.rotating.last);this.rotating.last.copy(this.rotating.position),n.set(e.x,e.y,0),n.multiplyScalar(this.rotateSpeed*(this.reverseRotate?-1:1)),this.rotateVelocity=n.clone().multiplyScalar(1/t)}else this.rotateVelocity.multiplyScalar(Math.exp(-t/this.rotateInertia)),n.addScaledVector(this.rotateVelocity,t);const i=(new Qs).setFromQuaternion(e.quaternion,"YXZ");if(i.y-=n.x,i.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,i.x-n.y)),i.z*=Math.exp(-0*t),e.quaternion.setFromEuler(i),this.sliding&&!this.dualPress){const n=this.sliding.position.clone().sub(this.sliding.last);this.sliding.last.copy(this.sliding.position);const i=2!==this.sliding.button?new gi(n.x,0,n.y):new gi(n.x,-n.y,0);i.multiplyScalar(this.slideSpeed*(this.reverseSlide?-1:1)),i.applyQuaternion(e.quaternion),e.position.add(i),this.moveVelocity=i.clone().multiplyScalar(1/t)}else this.moveVelocity.multiplyScalar(Math.exp(-t/this.moveInertia)),e.position.addScaledVector(this.moveVelocity,t)}const n=this.scroll.multiplyScalar(this.scrollSpeed);n.set(n.x,n.z,n.y),this.reverseScroll&&n.multiplyScalar(-1),n.applyQuaternion(e.quaternion),e.position.add(n),this.scroll.set(0,0,0)}}Hr.prototype.computeBoundsTree=nS,Hr.prototype.disposeBoundsTree=iS,ea.prototype.raycast=$B,i.OrbitControls=class extends Zu{constructor(t,e=null){super(t,e),this.state=Gf,this.target=new gi,this.cursor=new gi,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:m.ROTATE,MIDDLE:m.DOLLY,RIGHT:m.PAN},this.touches={ONE:y.ROTATE,TWO:y.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new gi,this._lastQuaternion=new pi,this._lastTargetPosition=new gi,this._quat=(new pi).setFromUnitVectors(t.up,new gi(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new ou,this._sphericalDelta=new ou,this._scale=1,this._panOffset=new gi,this._rotateStart=new di,this._rotateEnd=new di,this._rotateDelta=new di,this._panStart=new di,this._panEnd=new di,this._panDelta=new di,this._dollyStart=new di,this._dollyEnd=new di,this._dollyDelta=new di,this._dollyDirection=new gi,this._mouse=new di,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Yf.bind(this),this._onPointerDown=Vf.bind(this),this._onPointerUp=qf.bind(this),this._onContextMenu=$f.bind(this),this._onMouseWheel=jf.bind(this),this._onKeyDown=Xf.bind(this),this._onTouchStart=Kf.bind(this),this._onTouchMove=Zf.bind(this),this._onMouseDown=Wf.bind(this),this._onMouseMove=Jf.bind(this),this._interceptControlDown=tm.bind(this),this._interceptControlUp=em.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Uf),this.update(),this.state=Gf}update(t=null){const e=this.object.position;Of.copy(e).sub(this.target),Of.applyQuaternion(this._quat),this._spherical.setFromVector3(Of),this.autoRotate&&this.state===Gf&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=zf:n>Math.PI&&(n-=zf),i<-Math.PI?i+=zf:i>Math.PI&&(i-=zf),this._spherical.theta=n<=i?Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=t!=this._spherical.radius}if(Of.setFromSpherical(this._spherical),Of.applyQuaternion(this._quatInverse),e.copy(this.target).add(Of),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=Of.length();t=this._clampDistance(e*this._scale);const n=e-t;this.object.position.addScaledVector(this._dollyDirection,n),this.object.updateMatrixWorld(),s=!!n}else if(this.object.isOrthographicCamera){const e=new gi(this._mouse.x,this._mouse.y,0);e.unproject(this.object);const n=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=n!==this.object.zoom;const i=new gi(this._mouse.x,this._mouse.y,0);i.unproject(this.object),this.object.position.sub(i).add(e),this.object.updateMatrixWorld(),t=Of.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(Ff.origin.copy(this.object.position),Ff.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Ff.direction))<kf?this.object.lookAt(this.target):(Nf.setFromNormalAndCoplanarPoint(this.object.up,this.target),Ff.intersectPlane(Nf,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,!!(s||this._lastPosition.distanceToSquared(this.object.position)>Hf||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Hf||this._lastTargetPosition.distanceToSquared(this.target)>Hf)&&(this.dispatchEvent(Uf),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?zf/60*this.autoRotateSpeed*t:zf/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){Of.setFromMatrixColumn(e,0),Of.multiplyScalar(-t),this._panOffset.add(Of)}_panUp(t,e){!0===this.screenSpacePanning?Of.setFromMatrixColumn(e,1):(Of.setFromMatrixColumn(e,0),Of.crossVectors(this.object.up,Of)),Of.multiplyScalar(t),this._panOffset.add(Of)}_pan(t,e){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Of.copy(i).sub(this.target);let s=Of.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*s/n.clientHeight,this.object.matrix),this._panUp(2*e*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=t-n.left,s=e-n.top,r=n.width,a=n.height;this._mouse.x=i/r*2-1,this._mouse.y=-s/a*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(zf*this._rotateDelta.x/e.clientHeight),this._rotateUp(zf*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(zf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-zf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(zf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-zf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(n,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,s=Math.sqrt(n*n+i*i);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateEnd.set(n,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(zf*this._rotateDelta.x/e.clientHeight),this._rotateUp(zf*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,s=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=.5*(t.pageX+e.x),a=.5*(t.pageY+e.y);this._updateZoomParameters(r,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new di,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,n={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}},i.EffectComposer=class{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),void 0===e){const n=t.getSize(new di);this._width=n.width,this._height=n.height,(e=new Hi(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:jt})).texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new zg(Lg),this.copyPass.material.blending=T,this.clock=new xh}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);-1!==e&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){void 0===t&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let n=!1;for(let e=0,i=this.passes.length;e<i;e++){const i=this.passes[e];if(!1!==i.enabled){if(i.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(e),i.render(this.renderer,this.writeBuffer,this.readBuffer,t,n),i.needsSwap){if(n){const e=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(e.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),n.setFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Gg&&(i instanceof Gg?n=!0:i instanceof Hg&&(n=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(void 0===t){const e=this.renderer.getSize(new di);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,(t=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let t=0;t<this.passes.length;t++)this.passes[t].setSize(n,i)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}},i.RenderPass=class extends Fg{constructor(t,e,n=null,i=null,s=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new dr}render(t,e,n){const i=t.autoClear;let s,r;t.autoClear=!1,null!==this.overrideMaterial&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),null!==this.clearAlpha&&(s=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:n),!0===this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),null!==this.clearColor&&t.setClearColor(this._oldClearColor),null!==this.clearAlpha&&t.setClearAlpha(s),null!==this.overrideMaterial&&(this.scene.overrideMaterial=r),t.autoClear=i}},i.ShaderPass=zg,i.GammaCorrectionShader={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor = sRGBTransferOETF( tex );\n\n\t\t}"},i.SAOPass=Jg,i.GTAOPass=of,i.SobelOperatorShader=Af,i.SSRPass=mf,i.BokehPass=class extends Fg{constructor(t,e,n){super(),this.scene=t,this.camera=e;const i=void 0!==n.focus?n.focus:1,s=void 0!==n.aperture?n.aperture:.025,r=void 0!==n.maxblur?n.maxblur:1;this._renderTargetDepth=new Hi(1,1,{minFilter:Dt,magFilter:Dt,type:jt}),this._renderTargetDepth.texture.name="BokehPass.depth",this._materialDepth=new eA,this._materialDepth.depthPacking=rn,this._materialDepth.blending=T;const a=oa.clone(If);a.tDepth.value=this._renderTargetDepth.texture,a.focus.value=i,a.aspect.value=e.aspect,a.aperture.value=s,a.maxblur.value=r,a.nearClip.value=e.near,a.farClip.value=e.far,this.materialBokeh=new la({defines:Object.assign({},yf),uniforms:a,vertexShader:Cf,fragmentShader:Ef}),this.uniforms=a,this._fsQuad=new Og(this.materialBokeh),this._oldClearColor=new dr}render(t,e,n){this.scene.overrideMaterial=this._materialDepth,t.getClearColor(this._oldClearColor);const i=t.getClearAlpha(),s=t.autoClear;t.autoClear=!1,t.setClearColor(16777215),t.setClearAlpha(1),t.setRenderTarget(this._renderTargetDepth),t.clear(),t.render(this.scene,this.camera),this.uniforms.tColor.value=n.texture,this.uniforms.nearClip.value=this.camera.near,this.uniforms.farClip.value=this.camera.far,this.renderToScreen?(t.setRenderTarget(null),this._fsQuad.render(t)):(t.setRenderTarget(e),t.clear(),this._fsQuad.render(t)),this.scene.overrideMaterial=null,t.setClearColor(this._oldClearColor),t.setClearAlpha(i),t.autoClear=s}setSize(t,e){this.materialBokeh.uniforms.aspect.value=t/e,this._renderTargetDepth.setSize(t,e)}dispose(){this._renderTargetDepth.dispose(),this._materialDepth.dispose(),this.materialBokeh.dispose(),this._fsQuad.dispose()}},i.CSM=class{constructor(t){this.camera=t.camera,this.parent=t.parent,this.cascades=t.cascades||3,this.maxFar=t.maxFar||1e5,this.mode=t.mode||"practical",this.shadowMapSize=t.shadowMapSize||2048,this.shadowBias=t.shadowBias||1e-6,this.lightDirection=t.lightDirection||new gi(1,-1,1).normalize(),this.lightIntensity=t.lightIntensity||3,this.lightNear=t.lightNear||1,this.lightFar=t.lightFar||2e3,this.lightMargin=t.lightMargin||200,this.customSplitsCallback=t.customSplitsCallback,this.fade=!1,this.mainFrustum=new xf({webGL:!0}),this.frustums=[],this.breaks=[],this.lights=[],this.shaders=new Map,this._createLights(),this.updateFrustums(),this._injectInclude()}_createLights(){for(let t=0;t<this.cascades;t++){const t=new th(16777215,this.lightIntensity);t.castShadow=!0,t.shadow.mapSize.width=this.shadowMapSize,t.shadow.mapSize.height=this.shadowMapSize,t.shadow.camera.near=this.lightNear,t.shadow.camera.far=this.lightFar,t.shadow.bias=this.shadowBias,this.parent.add(t),this.parent.add(t.target),this.lights.push(t)}}_initCascades(){const t=this.camera;t.updateProjectionMatrix(),this.mainFrustum.setFromProjectionMatrix(t.projectionMatrix,this.maxFar),this.mainFrustum.split(this.breaks,this.frustums)}_updateShadowBounds(){const t=this.frustums;for(let e=0;e<t.length;e++){const t=this.lights[e].shadow.camera,n=this.frustums[e],i=n.vertices.near,s=n.vertices.far,r=s[0];let a;a=r.distanceTo(s[2])>r.distanceTo(i[2])?s[2]:i[2];let o=r.distanceTo(a);if(this.fade){const t=this.camera,e=Math.max(t.far,this.maxFar),i=n.vertices.far[0].z/(e-t.near);o+=.25*Math.pow(i,2)*(e-t.near)}t.left=-o/2,t.right=o/2,t.top=o/2,t.bottom=-o/2,t.updateProjectionMatrix()}}_getBreaks(){const t=this.camera,e=Math.min(t.far,this.maxFar);switch(this.breaks.length=0,this.mode){case"uniform":n(this.cascades,t.near,e,this.breaks);break;case"logarithmic":i(this.cascades,t.near,e,this.breaks);break;case"practical":!function(t,e,s,r,a){Mf.length=0,Tf.length=0,i(t,e,s,Tf),n(t,e,s,Mf);for(let e=1;e<t;e++)a.push(ui.lerp(Mf[e-1],Tf[e-1],.5));a.push(1)}(this.cascades,t.near,e,0,this.breaks);break;case"custom":void 0===this.customSplitsCallback&&console.error("CSM: Custom split scheme callback not defined."),this.customSplitsCallback(this.cascades,t.near,e,this.breaks)}function n(t,e,n,i){for(let s=1;s<t;s++)i.push((e+(n-e)*s/t)/n);i.push(1)}function i(t,e,n,i){for(let s=1;s<t;s++)i.push(e*(n/e)**(s/t)/n);i.push(1)}}update(){const t=this.camera,e=this.frustums;Qf.lookAt(new gi,this.lightDirection,Rf),Df.copy(Qf).invert();for(let n=0;n<e.length;n++){const i=this.lights[n],s=i.shadow.camera,r=(s.right-s.left)/this.shadowMapSize,a=(s.top-s.bottom)/this.shadowMapSize;_f.multiplyMatrices(Df,t.matrixWorld),e[n].toSpace(_f,Bf);const o=Bf.vertices.near,l=Bf.vertices.far;bf.makeEmpty();for(let t=0;t<4;t++)bf.expandByPoint(o[t]),bf.expandByPoint(l[t]);bf.getCenter(Sf),Sf.z=bf.max.z+this.lightMargin,Sf.x=Math.floor(Sf.x/r)*r,Sf.y=Math.floor(Sf.y/a)*a,Sf.applyMatrix4(Qf),i.position.copy(Sf),i.target.position.copy(Sf),i.target.position.x+=this.lightDirection.x,i.target.position.y+=this.lightDirection.y,i.target.position.z+=this.lightDirection.z}}_injectInclude(){id.lights_fragment_begin=wf.lights_fragment_begin,id.lights_pars_begin=wf.lights_pars_begin}setupMaterial(t){t.defines=t.defines||{},t.defines.USE_CSM=1,t.defines.CSM_CASCADES=this.cascades,this.fade&&(t.defines.CSM_FADE="");const e=[],n=this,i=this.shaders;t.onBeforeCompile=function(s){const r=Math.min(n.camera.far,n.maxFar);n._getExtendedBreaks(e),s.uniforms.CSM_cascades={value:e},s.uniforms.cameraNear={value:n.camera.near},s.uniforms.shadowFar={value:r},i.set(t,s)},i.set(t,null)}_updateUniforms(){const t=Math.min(this.camera.far,this.maxFar);this.shaders.forEach(function(e,n){if(null!==e){const n=e.uniforms;this._getExtendedBreaks(n.CSM_cascades.value),n.cameraNear.value=this.camera.near,n.shadowFar.value=t}!this.fade&&"CSM_FADE"in n.defines?(delete n.defines.CSM_FADE,n.needsUpdate=!0):this.fade&&!("CSM_FADE"in n.defines)&&(n.defines.CSM_FADE="",n.needsUpdate=!0)},this)}_getExtendedBreaks(t){for(;t.length<this.breaks.length;)t.push(new di);t.length=this.breaks.length;for(let e=0;e<this.cascades;e++){const n=this.breaks[e],i=this.breaks[e-1]||0;t[e].x=i,t[e].y=n}}updateFrustums(){this._getBreaks(),this._initCascades(),this._updateShadowBounds(),this._updateUniforms()}remove(){for(let t=0;t<this.lights.length;t++)this.parent.remove(this.lights[t].target),this.parent.remove(this.lights[t])}dispose(){const t=this.shaders;t.forEach(function(t,e){delete e.onBeforeCompile,delete e.defines.USE_CSM,delete e.defines.CSM_CASCADES,delete e.defines.CSM_FADE,null!==t&&(delete t.uniforms.CSM_cascades,delete t.uniforms.cameraNear,delete t.uniforms.shadowFar),e.needsUpdate=!0}),t.clear()}},i.GLTFLoader=am,i.GLTFExporter=ty,i.OBJExporter=class{parse(t){let e="",n=0,i=0,s=0;const r=new gi,a=new dr,o=new gi,l=new di,c=[];return t.traverse(function(t){!0===t.isMesh&&function(t){let a=0,A=0,h=0;const u=t.geometry,d=new yi,p=u.getAttribute("position"),g=u.getAttribute("normal"),f=u.getAttribute("uv"),m=u.getIndex();if(e+="o "+t.name+"\n",t.material&&t.material.name&&(e+="usemtl "+t.material.name+"\n"),void 0!==p)for(let n=0,i=p.count;n<i;n++,a++)r.fromBufferAttribute(p,n),r.applyMatrix4(t.matrixWorld),e+="v "+r.x+" "+r.y+" "+r.z+"\n";if(void 0!==f)for(let t=0,n=f.count;t<n;t++,h++)l.fromBufferAttribute(f,t),e+="vt "+l.x+" "+l.y+"\n";if(void 0!==g){d.getNormalMatrix(t.matrixWorld);for(let t=0,n=g.count;t<n;t++,A++)o.fromBufferAttribute(g,t),o.applyMatrix3(d).normalize(),e+="vn "+o.x+" "+o.y+" "+o.z+"\n"}if(null!==m)for(let t=0,r=m.count;t<r;t+=3){for(let e=0;e<3;e++){const r=m.getX(t+e)+1;c[e]=n+r+(g||f?"/"+(f?i+r:"")+(g?"/"+(s+r):""):"")}e+="f "+c.join(" ")+"\n"}else for(let t=0,r=p.count;t<r;t+=3){for(let e=0;e<3;e++){const r=t+e+1;c[e]=n+r+(g||f?"/"+(f?i+r:"")+(g?"/"+(s+r):""):"")}e+="f "+c.join(" ")+"\n"}n+=a,i+=h,s+=A}(t),!0===t.isLine&&function(t){let i=0;const s=t.geometry,a=t.type,o=s.getAttribute("position");if(e+="o "+t.name+"\n",void 0!==o)for(let n=0,s=o.count;n<s;n++,i++)r.fromBufferAttribute(o,n),r.applyMatrix4(t.matrixWorld),e+="v "+r.x+" "+r.y+" "+r.z+"\n";if("Line"===a){e+="l ";for(let t=1,i=o.count;t<=i;t++)e+=n+t+" ";e+="\n"}if("LineSegments"===a)for(let t=1,i=t+1,s=o.count;t<s;t+=2,i=t+1)e+="l "+(n+t)+" "+(n+i)+"\n";n+=i}(t),!0===t.isPoints&&function(t){let i=0;const s=t.geometry,o=s.getAttribute("position"),l=s.getAttribute("color");if(e+="o "+t.name+"\n",void 0!==o){for(let n=0,s=o.count;n<s;n++,i++)r.fromBufferAttribute(o,n),r.applyMatrix4(t.matrixWorld),e+="v "+r.x+" "+r.y+" "+r.z,void 0!==l&&(a.fromBufferAttribute(l,n),Ti.workingToColorSpace(a,hn),e+=" "+a.r+" "+a.g+" "+a.b),e+="\n";e+="p ";for(let t=1,i=o.count;t<=i;t++)e+=n+t+" ";e+="\n"}n+=i}(t)}),e}},i.DRACOLoader=class extends bA{constructor(t){super(t),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(t){return this.decoderPath=t,this}setDecoderConfig(t){return this.decoderConfig=t,this}setWorkerLimit(t){return this.workerLimit=t,this}load(t,e,n,i){const s=new QA(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,t=>{this.parse(t,e,i)},n,i)}parse(t,e,n=()=>{}){this.decodeDracoFile(t,e,null,null,hn,n).catch(n)}decodeDracoFile(t,e,n,i,s=un,r=()=>{}){const a={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:s};return this.decodeGeometry(t,a).then(e).catch(r)}decodeGeometry(t,e){const n=JSON.stringify(e);if(My.has(t)){const e=My.get(t);if(e.key===n)return e.promise;if(0===t.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const s=this.workerNextTaskID++,r=t.byteLength,a=this._getWorker(s,r).then(n=>(i=n,new Promise((n,r)=>{i._callbacks[s]={resolve:n,reject:r},i.postMessage({type:"decode",id:s,taskConfig:e,buffer:t},[t])}))).then(t=>this._createGeometry(t.geometry));return a.catch(()=>!0).then(()=>{i&&s&&this._releaseTask(i,s)}),My.set(t,{key:n,promise:a}),a}_createGeometry(t){const e=new Hr;t.index&&e.setIndex(new Br(t.index.array,1));for(let n=0;n<t.attributes.length;n++){const i=t.attributes[n],s=i.name,r=i.array,a=i.itemSize,o=new Br(r,a);"color"===s&&(this._assignVertexColorSpace(o,i.vertexColorSpace),o.normalized=r instanceof Float32Array==0),e.setAttribute(s,o)}return e}_assignVertexColorSpace(t,e){if(e!==hn)return;const n=new dr;for(let e=0,i=t.count;e<i;e++)n.fromBufferAttribute(t,e),Ti.colorSpaceToWorking(n,hn),t.setXYZ(e,n.r,n.g,n.b)}_loadLibrary(t,e){const n=new QA(this.manager);return n.setPath(this.decoderPath),n.setResponseType(e),n.setWithCredentials(this.withCredentials),new Promise((e,i)=>{n.load(t,e,void 0,i)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const t="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,e=[];return t?e.push(this._loadLibrary("draco_decoder.js","text")):(e.push(this._loadLibrary("draco_wasm_wrapper.js","text")),e.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(e).then(e=>{const n=e[0];t||(this.decoderConfig.wasmBinary=e[1]);const i=Ty.toString(),s=["/* draco decoder */",n,"","/* worker */",i.substring(i.indexOf("{")+1,i.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([s]))}),this.decoderPending}_getWorker(t,e){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const t=new Worker(this.workerSourceURL);t._callbacks={},t._taskCosts={},t._taskLoad=0,t.postMessage({type:"init",decoderConfig:this.decoderConfig}),t.onmessage=function(e){const n=e.data;switch(n.type){case"decode":t._callbacks[n.id].resolve(n);break;case"error":t._callbacks[n.id].reject(n);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+n.type+'"')}},this.workerPool.push(t)}else this.workerPool.sort(function(t,e){return t._taskLoad>e._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[t]=e,n._taskLoad+=e,n})}_releaseTask(t,e){t._taskLoad-=t._taskCosts[e],delete t._callbacks[e],delete t._taskCosts[e]}debug(){console.log("Task load: ",this.workerPool.map(t=>t._taskLoad))}dispose(){for(let t=0;t<this.workerPool.length;++t)this.workerPool[t].terminate();return this.workerPool.length=0,""!==this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),this}},i.KTX2Loader=EE,i.USDZExporter=class{constructor(){this.textureUtils=null}setTextureUtils(t){this.textureUtils=t}parse(t,e,n,i){this.parseAsync(t,i).then(e).catch(n)}async parseAsync(t,e={}){e=Object.assign({ar:{anchoring:{type:"plane"},planeAnchoring:{alignment:"horizontal"}},includeAnchoringProperties:!0,onlyVisible:!0,quickLookCompatible:!1,maxTextureSize:1024},e);const n=new Set,i={},s="model.usda";i[s]=null;const r=new TI("Root","Xform"),a=new TI("Scenes","Scope");a.addMetadata("kind",'"sceneLibrary"'),r.addChild(a);const o="Scene",l=new TI(o,"Xform");let c;l.addMetadata("customData",["bool preliminary_collidesWithEnvironment = 0",`string sceneName = "${o}"`]),l.addMetadata("sceneName",`"${o}"`),e.includeAnchoringProperties&&(l.addProperty(`token preliminary:anchoring:type = "${e.ar.anchoring.type}"`),l.addProperty(`token preliminary:planeAnchoring:alignment = "${e.ar.planeAnchoring.alignment}"`)),a.addChild(l);const A={},h={};UI(t,l,A,n,i,e);const u=function(t,e,n=!1){const i=new TI("Materials");for(const s in t){const r=t[s];i.addChild(GI(r,e,n))}return i}(A,h,e.quickLookCompatible);c='#usda 1.0\n(\n\tcustomLayerData = {\n\t\tstring creator = "Three.js USDZExporter"\n\t}\n\tdefaultPrim = "Root"\n\tmetersPerUnit = 1\n\tupAxis = "Y"\n)\n\n'+r.toString()+"\n\n"+u.toString(),i[s]=SI(c),c=null;for(const t in h){let n=h[t];if(!0===n.isCompressedTexture){if(null===this.textureUtils)throw new Error("THREE.USDZExporter: setTextureUtils() must be called to process compressed textures.");n=await this.textureUtils.decompress(n)}const s=DI(n.image,n.flipY,e.maxTextureSize),r=await new Promise(t=>s.toBlob(t,"image/png",1));i[`textures/Texture_${t}.png`]=new Uint8Array(await r.arrayBuffer())}let d=0;for(const t in i){const e=i[t];d+=34+t.length;const n=63&d;if(4!==n){const s=new Uint8Array(64-n);i[t]=[e,{extra:{12345:s}}]}d=e.length}return function(t,e){e||(e={});var n={},i=[];wI(t,"",n,e);var s=0,r=0;for(var a in n){var o=n[a],l=o[0],c=o[1],A=0==c.level?0:8,h=(x=SI(a)).length,u=c.comment,d=u&&SI(u),p=d&&d.length,g=bI(c.extra);h>65535&&aI(11);var f=A?vI(l,c):l,m=f.length,y=yI();y.p(l),i.push(CI(c,{size:l.length,crc:y.d(),c:f,f:x,m:d,u:h!=a.length||d&&u.length!=p,o:s,compression:A})),s+=30+h+g+m,r+=76+2*(h+g)+(p||0)+m}for(var I=new Qy(r+22),C=s,E=r-s,v=0;v<i.length;++v){var x=i[v];MI(I,x.o,x,x.f,x.u,x.c.length);var w=30+x.f.length+bI(x.extra);I.set(x.c,x.o+w),MI(I,s,x,x.f,x.u,x.c.length,x.o,x.m),s+=16+w+(x.m?x.m.length:0)}return function(t,e,n,i,s){EI(t,e,101010256),EI(t,e+8,n),EI(t,e+10,n),EI(t,e+12,i),EI(t,e+16,s)}(I,s,i.length,E,C),I}(i,{level:0})}},i.Line2=class extends mC{constructor(t=new yC,e=new tC({color:16777215*Math.random()})){super(t,e),this.isLine2=!0,this.type="Line2"}},i.LineMaterial=tC,i.LineGeometry=yC,i.ConvexGeometry=class extends Hr{constructor(t=[]){super();const e=[],n=[],i=(new wC).setFromPoints(t).faces;for(let t=0;t<i.length;t++){const s=i[t];let r=s.edge;do{const t=r.head().point;e.push(t.x,t.y,t.z),n.push(s.normal.x,s.normal.y,s.normal.z),r=r.next}while(r!==s.edge)}this.setAttribute("position",new Pr(e,3)),this.setAttribute("normal",new Pr(n,3))}},i.BufferGeometryUtils=s.BufferGeometryUtils,i.GeometryUtils=r.GeometryUtils,i.UnrealBloomPass=cf,i.Reflector=MC,i.RGBELoader=class extends FA{constructor(t){super(t),this.type=jt}parse(t){const e=function(t,e){switch(t){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(e||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(e||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(e||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(e||""))}},n=function(t,e,n){e=e||1024;let i=t.pos,s=-1,r=0,a="",o=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));for(;0>(s=o.indexOf("\n"))&&r<e&&i<t.byteLength;)a+=o,r+=o.length,i+=128,o+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));return-1<s&&(!1!==n&&(t.pos+=r+s+1),a+o.slice(0,s))},i=function(t,e,n,i){const s=t[e+3],r=Math.pow(2,s-128)/255;n[i+0]=t[e+0]*r,n[i+1]=t[e+1]*r,n[i+2]=t[e+2]*r,n[i+3]=1},s=function(t,e,n,i){const s=t[e+3],r=Math.pow(2,s-128)/255;n[i+0]=vr.toHalfFloat(Math.min(t[e+0]*r,65504)),n[i+1]=vr.toHalfFloat(Math.min(t[e+1]*r,65504)),n[i+2]=vr.toHalfFloat(Math.min(t[e+2]*r,65504)),n[i+3]=vr.toHalfFloat(1)},r=new Uint8Array(t);r.pos=0;const a=function(t){const i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*FORMAT=(\S+)\s*$/,a=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;for((t.pos>=t.byteLength||!(l=n(t)))&&e(1,"no header found"),(c=l.match(/^#\?(\S+)/))||e(3,"bad initial token"),o.valid|=1,o.programtype=c[1],o.string+=l+"\n";l=n(t),!1!==l;)if(o.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(i))&&(o.gamma=parseFloat(c[1])),(c=l.match(s))&&(o.exposure=parseFloat(c[1])),(c=l.match(r))&&(o.valid|=2,o.format=c[1]),(c=l.match(a))&&(o.valid|=4,o.height=parseInt(c[1],10),o.width=parseInt(c[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=l+"\n";return 2&o.valid||e(3,"missing format specifier"),4&o.valid||e(3,"missing image size specifier"),o}(r),o=a.width,l=a.height,c=function(t,n,i){const s=n;if(s<8||s>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);s!==(t[2]<<8|t[3])&&e(3,"wrong scanline width");const r=new Uint8Array(4*n*i);r.length||e(4,"unable to allocate buffer space");let a=0,o=0;const l=4*s,c=new Uint8Array(4),A=new Uint8Array(l);let h=i;for(;h>0&&o<t.byteLength;){o+4>t.byteLength&&e(1),c[0]=t[o++],c[1]=t[o++],c[2]=t[o++],c[3]=t[o++],2==c[0]&&2==c[1]&&(c[2]<<8|c[3])==s||e(3,"bad rgbe scanline format");let n,i=0;for(;i<l&&o<t.byteLength;){n=t[o++];const s=n>128;if(s&&(n-=128),(0===n||i+n>l)&&e(3,"bad scanline data"),s){const e=t[o++];for(let t=0;t<n;t++)A[i++]=e}else A.set(t.subarray(o,o+n),i),i+=n,o+=n}const u=s;for(let t=0;t<u;t++){let e=0;r[a]=A[t+e],e+=s,r[a+1]=A[t+e],e+=s,r[a+2]=A[t+e],e+=s,r[a+3]=A[t+e],a+=4}h--}return r}(r.subarray(r.pos),o,l);let A,h,u;switch(this.type){case Jt:u=c.length/4;const t=new Float32Array(4*u);for(let e=0;e<u;e++)i(c,4*e,t,4*e);A=t,h=Jt;break;case jt:u=c.length/4;const e=new Uint16Array(4*u);for(let t=0;t<u;t++)s(c,4*t,e,4*t);A=e,h=jt;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:o,height:l,data:A,header:a.string,gamma:a.gamma,exposure:a.exposure,type:h}}setDataType(t){return this.type=t,this}load(t,e,n,i){return super.load(t,function(t,n){switch(t.type){case Jt:case jt:t.colorSpace=un,t.minFilter=Ft,t.magFilter=Ft,t.generateMipmaps=!1,t.flipY=!0}e&&e(t,n)},n,i)}},i.EXRLoader=class extends FA{constructor(t){super(t),this.type=jt,this.outputFormat=ne}parse(t){const e=65536,n=14,i=65537,s=Math.pow(2.7182818,2.2),r={l:0,c:0,lc:0};function a(t,e,n,i,s){for(;n<t;)e=e<<8|O(i,s),n+=8;n-=t,r.l=e>>n&(1<<t)-1,r.c=e,r.lc=n}const o=new Array(59);function l(t){return 63&t}function c(t){return t>>6}const A={c:0,lc:0};function h(t,e,n,i){t=t<<8|O(n,i),e+=8,A.c=t,A.lc=e}const u={c:0,lc:0};function d(t,e,n,i,s,r,a,o,l){if(t==e){i<8&&(h(n,i,s,r),n=A.c,i=A.lc);let t=n>>(i-=8);if(t=new Uint8Array([t])[0],o.value+t>l)return!1;const e=a[o.value-1];for(;t-- >0;)a[o.value++]=e}else{if(!(o.value<l))return!1;a[o.value++]=t}u.c=n,u.lc=i}function p(t){return 65535&t}function g(t){const e=p(t);return e>32767?e-65536:e}const f={a:0,b:0};function m(t,e){const n=g(t),i=g(e),s=n+(1&i)+(i>>1),r=s,a=s-i;f.a=r,f.b=a}function y(t,e){const n=p(t),i=p(e),s=n-(i>>1)&65535,r=i+s-32768&65535;f.a=r,f.b=s}function I(t,e,n,i,s,r,a){const o=a<16384,l=n>s?s:n;let c,A,h=1;for(;h<=l;)h<<=1;for(h>>=1,c=h,h>>=1;h>=1;){A=0;const a=A+r*(s-c),l=r*h,u=r*c,d=i*h,p=i*c;let g,I,C,E;for(;A<=a;A+=u){let s=A;const r=A+i*(n-c);for(;s<=r;s+=p){const n=s+d,i=s+l,r=i+d;o?(m(t[s+e],t[i+e]),g=f.a,C=f.b,m(t[n+e],t[r+e]),I=f.a,E=f.b,m(g,I),t[s+e]=f.a,t[n+e]=f.b,m(C,E),t[i+e]=f.a,t[r+e]=f.b):(y(t[s+e],t[i+e]),g=f.a,C=f.b,y(t[n+e],t[r+e]),I=f.a,E=f.b,y(g,I),t[s+e]=f.a,t[n+e]=f.b,y(C,E),t[i+e]=f.a,t[r+e]=f.b)}if(n&h){const n=s+l;o?m(t[s+e],t[n+e]):y(t[s+e],t[n+e]),g=f.a,t[n+e]=f.b,t[s+e]=g}}if(s&h){let s=A;const r=A+i*(n-c);for(;s<=r;s+=p){const n=s+d;o?m(t[s+e],t[n+e]):y(t[s+e],t[n+e]),g=f.a,t[n+e]=f.b,t[s+e]=g}}c=h,h>>=1}return A}function C(t,e,s,p,g,f){const m=s.value,y=k(e,s),I=k(e,s);s.value+=4;const C=k(e,s);if(s.value+=4,y<0||y>=i||I<0||I>=i)throw new Error("Something wrong with HUF_ENCSIZE");const E=new Array(i),v=new Array(16384);if(function(t){for(let e=0;e<16384;e++)t[e]={},t[e].len=0,t[e].lit=0,t[e].p=null}(v),function(t,e,n,s,l,c){const A=e;let h=0,u=0;for(;s<=l;s++){if(A.value-e.value>n)return!1;a(6,h,u,t,A);const i=r.l;if(h=r.c,u=r.lc,c[s]=i,63==i){if(A.value-e.value>n)throw new Error("Something wrong with hufUnpackEncTable");a(8,h,u,t,A);let i=r.l+6;if(h=r.c,u=r.lc,s+i>l+1)throw new Error("Something wrong with hufUnpackEncTable");for(;i--;)c[s++]=0;s--}else if(i>=59){let t=i-59+2;if(s+t>l+1)throw new Error("Something wrong with hufUnpackEncTable");for(;t--;)c[s++]=0;s--}}!function(t){for(let t=0;t<=58;++t)o[t]=0;for(let e=0;e<i;++e)o[t[e]]+=1;let e=0;for(let t=58;t>0;--t){const n=e+o[t]>>1;o[t]=e,e=n}for(let e=0;e<i;++e){const n=t[e];n>0&&(t[e]=n|o[n]++<<6)}}(c)}(t,s,p-(s.value-m),y,I,E),C>8*(p-(s.value-m)))throw new Error("Something wrong with hufUncompress");!function(t,e,i,s){for(;e<=i;e++){const i=c(t[e]),r=l(t[e]);if(i>>r)throw new Error("Invalid table entry");if(r>n){const t=s[i>>r-n];if(t.len)throw new Error("Invalid table entry");if(t.lit++,t.p){const e=t.p;t.p=new Array(t.lit);for(let n=0;n<t.lit-1;++n)t.p[n]=e[n]}else t.p=new Array(1);t.p[t.lit-1]=e}else if(r){let t=0;for(let a=1<<n-r;a>0;a--){const a=s[(i<<n-r)+t];if(a.len||a.p)throw new Error("Invalid table entry");a.len=r,a.lit=e,t++}}}}(E,y,I,v),function(t,e,i,s,r,a,o,p,g){let f=0,m=0;const y=o,I=Math.trunc(s.value+(r+7)/8);for(;s.value<I;)for(h(f,m,i,s),f=A.c,m=A.lc;m>=n;){const r=e[f>>m-n&16383];if(r.len)m-=r.len,d(r.lit,a,f,m,i,s,p,g,y),f=u.c,m=u.lc;else{if(!r.p)throw new Error("hufDecode issues");let e;for(e=0;e<r.lit;e++){const n=l(t[r.p[e]]);for(;m<n&&s.value<I;)h(f,m,i,s),f=A.c,m=A.lc;if(m>=n&&c(t[r.p[e]])==(f>>m-n&(1<<n)-1)){m-=n,d(r.p[e],a,f,m,i,s,p,g,y),f=u.c,m=u.lc;break}}if(e==r.lit)throw new Error("hufDecode issues")}}const C=8-r&7;for(f>>=C,m-=C;m>0;){const t=e[f<<n-m&16383];if(!t.len)throw new Error("hufDecode issues");m-=t.len,d(t.lit,a,f,m,i,s,p,g,y),f=u.c,m=u.lc}}(E,v,t,s,C,I,f,g,{value:0})}function E(t){for(let e=1;e<t.length;e++){const n=t[e-1]+t[e]-128;t[e]=n}}function v(t,e){let n=0,i=Math.floor((t.length+1)/2),s=0;const r=t.length-1;for(;!(s>r||(e[s++]=t[n++],s>r));)e[s++]=t[i++]}function x(t){let e=t.byteLength;const n=new Array;let i=0;const s=new DataView(t);for(;e>0;){const t=s.getInt8(i++);if(t<0){const r=-t;e-=r+1;for(let t=0;t<r;t++)n.push(s.getUint8(i++))}else{const r=t;e-=2;const a=s.getUint8(i++);for(let t=0;t<r+1;t++)n.push(a)}}return n}function w(t,e,n,i,s,r){const a=new DataView(r.buffer),o=n[t],l=o.width,c=o.height,A=Math.ceil(l/8),h=Math.ceil(c/8),u=Math.floor(l/8),d=l-8*(A-1),p=c-8*(h-1),g={value:0};let f=0;const m=new Float32Array(64),y=new Uint16Array(64),I=new Uint16Array(64*A);for(let n=0;n<h;++n){let r=8;n==h-1&&(r=p);for(let t=0;t<A;++t)y.fill(0),y[0]=s[f++],_(g,i,y),B(y,m),S(m),M(m,I,64*t);for(let i=8*n;i<8*n+r;++i){let n=e[t][i];for(let t=0;t<u;++t){const e=64*t+8*(7&i);for(let t=0;t<8;++t)a.setUint16(n+2*t*o.type,I[e+t],!0);n+=16*o.type}if(A!=u){const t=64*u+8*(7&i);for(let e=0;e<d;++e)a.setUint16(n+2*e*o.type,I[t+e],!0)}}}o.decoded=!0}function _(t,e,n){let i,s=1;for(;s<64;)i=e[t.value],65280==i?s=64:i>>8==255?s+=255&i:(n[s]=i,s++),t.value++}function B(t,e){e[0]=Y(t[0]),e[1]=Y(t[1]),e[2]=Y(t[5]),e[3]=Y(t[6]),e[4]=Y(t[14]),e[5]=Y(t[15]),e[6]=Y(t[27]),e[7]=Y(t[28]),e[8]=Y(t[2]),e[9]=Y(t[4]),e[10]=Y(t[7]),e[11]=Y(t[13]),e[12]=Y(t[16]),e[13]=Y(t[26]),e[14]=Y(t[29]),e[15]=Y(t[42]),e[16]=Y(t[3]),e[17]=Y(t[8]),e[18]=Y(t[12]),e[19]=Y(t[17]),e[20]=Y(t[25]),e[21]=Y(t[30]),e[22]=Y(t[41]),e[23]=Y(t[43]),e[24]=Y(t[9]),e[25]=Y(t[11]),e[26]=Y(t[18]),e[27]=Y(t[24]),e[28]=Y(t[31]),e[29]=Y(t[40]),e[30]=Y(t[44]),e[31]=Y(t[53]),e[32]=Y(t[10]),e[33]=Y(t[19]),e[34]=Y(t[23]),e[35]=Y(t[32]),e[36]=Y(t[39]),e[37]=Y(t[45]),e[38]=Y(t[52]),e[39]=Y(t[54]),e[40]=Y(t[20]),e[41]=Y(t[22]),e[42]=Y(t[33]),e[43]=Y(t[38]),e[44]=Y(t[46]),e[45]=Y(t[51]),e[46]=Y(t[55]),e[47]=Y(t[60]),e[48]=Y(t[21]),e[49]=Y(t[34]),e[50]=Y(t[37]),e[51]=Y(t[47]),e[52]=Y(t[50]),e[53]=Y(t[56]),e[54]=Y(t[59]),e[55]=Y(t[61]),e[56]=Y(t[35]),e[57]=Y(t[36]),e[58]=Y(t[48]),e[59]=Y(t[49]),e[60]=Y(t[57]),e[61]=Y(t[58]),e[62]=Y(t[62]),e[63]=Y(t[63])}function S(t){const e=.5*Math.cos(.7853975),n=.5*Math.cos(3.14159/16),i=.5*Math.cos(3.14159/8),s=.5*Math.cos(3*3.14159/16),r=.5*Math.cos(.981746875),a=.5*Math.cos(3*3.14159/8),o=.5*Math.cos(1.374445625),l=new Array(4),c=new Array(4),A=new Array(4),h=new Array(4);for(let u=0;u<8;++u){const d=8*u;l[0]=i*t[d+2],l[1]=a*t[d+2],l[2]=i*t[d+6],l[3]=a*t[d+6],c[0]=n*t[d+1]+s*t[d+3]+r*t[d+5]+o*t[d+7],c[1]=s*t[d+1]-o*t[d+3]-n*t[d+5]-r*t[d+7],c[2]=r*t[d+1]-n*t[d+3]+o*t[d+5]+s*t[d+7],c[3]=o*t[d+1]-r*t[d+3]+s*t[d+5]-n*t[d+7],A[0]=e*(t[d+0]+t[d+4]),A[3]=e*(t[d+0]-t[d+4]),A[1]=l[0]+l[3],A[2]=l[1]-l[2],h[0]=A[0]+A[1],h[1]=A[3]+A[2],h[2]=A[3]-A[2],h[3]=A[0]-A[1],t[d+0]=h[0]+c[0],t[d+1]=h[1]+c[1],t[d+2]=h[2]+c[2],t[d+3]=h[3]+c[3],t[d+4]=h[3]-c[3],t[d+5]=h[2]-c[2],t[d+6]=h[1]-c[1],t[d+7]=h[0]-c[0]}for(let u=0;u<8;++u)l[0]=i*t[16+u],l[1]=a*t[16+u],l[2]=i*t[48+u],l[3]=a*t[48+u],c[0]=n*t[8+u]+s*t[24+u]+r*t[40+u]+o*t[56+u],c[1]=s*t[8+u]-o*t[24+u]-n*t[40+u]-r*t[56+u],c[2]=r*t[8+u]-n*t[24+u]+o*t[40+u]+s*t[56+u],c[3]=o*t[8+u]-r*t[24+u]+s*t[40+u]-n*t[56+u],A[0]=e*(t[u]+t[32+u]),A[3]=e*(t[u]-t[32+u]),A[1]=l[0]+l[3],A[2]=l[1]-l[2],h[0]=A[0]+A[1],h[1]=A[3]+A[2],h[2]=A[3]-A[2],h[3]=A[0]-A[1],t[0+u]=h[0]+c[0],t[8+u]=h[1]+c[1],t[16+u]=h[2]+c[2],t[24+u]=h[3]+c[3],t[32+u]=h[3]-c[3],t[40+u]=h[2]-c[2],t[48+u]=h[1]-c[1],t[56+u]=h[0]-c[0]}function b(t){for(let e=0;e<64;++e){const n=t[0][e],i=t[1][e],s=t[2][e];t[0][e]=n+1.5747*s,t[1][e]=n-.1873*i-.4682*s,t[2][e]=n+1.8556*i}}function M(t,e,n){for(let i=0;i<64;++i)e[n+i]=vr.toHalfFloat(T(t[i]))}function T(t){return t<=1?Math.sign(t)*Math.pow(Math.abs(t),2.2):Math.sign(t)*Math.pow(s,Math.abs(t)-1)}function Q(t){return new DataView(t.array.buffer,t.offset.value,t.size)}function D(t){const e=t.viewer.buffer.slice(t.offset.value,t.offset.value+t.size),n=new Uint8Array(x(e)),i=new Uint8Array(n.length);return E(n),v(n,i),new DataView(i.buffer)}function R(t){const e=xI(t.array.slice(t.offset.value,t.offset.value+t.size)),n=new Uint8Array(e.length);return E(e),v(e,n),new DataView(n.buffer)}function U(t){const n=t.viewer,i={value:t.offset.value},s=new Uint16Array(t.columns*t.lines*(t.inputChannels.length*t.type)),r=new Uint8Array(8192);let a=0;const o=new Array(t.inputChannels.length);for(let e=0,n=t.inputChannels.length;e<n;e++)o[e]={},o[e].start=a,o[e].end=o[e].start,o[e].nx=t.columns,o[e].ny=t.lines,o[e].size=t.type,a+=o[e].nx*o[e].ny*o[e].size;const l=q(n,i),c=q(n,i);if(c>=8192)throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");if(l<=c)for(let t=0;t<c-l+1;t++)r[t+l]=z(n,i);const A=new Uint16Array(e),h=function(t,n){let i=0;for(let s=0;s<e;++s)(0==s||t[s>>3]&1<<(7&s))&&(n[i++]=s);const s=i-1;for(;i<e;)n[i++]=0;return s}(r,A),u=k(n,i);C(t.array,n,i,u,s,a);for(let e=0;e<t.inputChannels.length;++e){const t=o[e];for(let n=0;n<o[e].size;++n)I(s,t.start+n,t.nx,t.size,t.ny,t.nx*t.size,h)}!function(t,e,n){for(let i=0;i<n;++i)e[i]=t[e[i]]}(A,s,a);let d=0;const p=new Uint8Array(s.buffer.byteLength);for(let e=0;e<t.lines;e++)for(let e=0;e<t.inputChannels.length;e++){const t=o[e],n=t.nx*t.size,i=new Uint8Array(s.buffer,2*t.end,2*n);p.set(i,d),d+=2*n,t.end+=n}return new DataView(p.buffer)}function P(t){const e=xI(t.array.slice(t.offset.value,t.offset.value+t.size)),n=t.inputChannels.length*t.lines*t.columns*t.totalBytes,i=new ArrayBuffer(n),s=new DataView(i);let r=0,a=0;const o=new Array(4);for(let n=0;n<t.lines;n++)for(let n=0;n<t.inputChannels.length;n++){let i=0;switch(t.inputChannels[n].pixelType){case 1:o[0]=r,o[1]=o[0]+t.columns,r=o[1]+t.columns;for(let n=0;n<t.columns;++n)i+=e[o[0]++]<<8|e[o[1]++],s.setUint16(a,i,!0),a+=2;break;case 2:o[0]=r,o[1]=o[0]+t.columns,o[2]=o[1]+t.columns,r=o[2]+t.columns;for(let n=0;n<t.columns;++n)i+=e[o[0]++]<<24|e[o[1]++]<<16|e[o[2]++]<<8,s.setUint32(a,i,!0),a+=4}}return s}function L(t){const e=t.viewer,n={value:t.offset.value},i=new Uint8Array(t.columns*t.lines*(t.inputChannels.length*t.type*2)),s={version:G(e,n),unknownUncompressedSize:G(e,n),unknownCompressedSize:G(e,n),acCompressedSize:G(e,n),dcCompressedSize:G(e,n),rleCompressedSize:G(e,n),rleUncompressedSize:G(e,n),rleRawSize:G(e,n),totalAcUncompressedCount:G(e,n),totalDcUncompressedCount:G(e,n),acCompression:G(e,n)};if(s.version<2)throw new Error("EXRLoader.parse: "+et.compression+" version "+s.version+" is unsupported");const r=new Array;let a=q(e,n)-2;for(;a>0;){const t=F(e.buffer,n),i=z(e,n),s=i>>2&3,o=new Int8Array([(i>>4)-1])[0],l=z(e,n);r.push({name:t,index:o,type:l,compression:s}),a-=t.length+3}const o=et.channels,l=new Array(t.inputChannels.length);for(let e=0;e<t.inputChannels.length;++e){const n=l[e]={},i=o[e];n.name=i.name,n.compression=0,n.decoded=!1,n.type=i.pixelType,n.pLinear=i.pLinear,n.width=t.columns,n.height=t.lines}const c={idx:new Array(3)};for(let e=0;e<t.inputChannels.length;++e){const t=l[e];for(let n=0;n<r.length;++n){const i=r[n];t.name==i.name&&(t.compression=i.compression,i.index>=0&&(c.idx[i.index]=e),t.offset=e)}}let A,h,u;if(s.acCompressedSize>0)switch(s.acCompression){case 0:A=new Uint16Array(s.totalAcUncompressedCount),C(t.array,e,n,s.acCompressedSize,A,s.totalAcUncompressedCount);break;case 1:const i=xI(t.array.slice(n.value,n.value+s.totalAcUncompressedCount));A=new Uint16Array(i.buffer),n.value+=s.totalAcUncompressedCount}if(s.dcCompressedSize>0){const e={array:t.array,offset:n,size:s.dcCompressedSize};h=new Uint16Array(R(e).buffer),n.value+=s.dcCompressedSize}s.rleRawSize>0&&(u=x(xI(t.array.slice(n.value,n.value+s.rleCompressedSize)).buffer),n.value+=s.rleCompressedSize);let d=0;const p=new Array(l.length);for(let t=0;t<p.length;++t)p[t]=new Array;for(let e=0;e<t.lines;++e)for(let e=0;e<l.length;++e)p[e].push(d),d+=l[e].width*t.type*2;void 0!==c.idx[0]&&l[c.idx[0]]&&function(t,e,n,i,s,r){let a=new DataView(r.buffer);const o=n[t.idx[0]].width,l=n[t.idx[0]].height,c=Math.floor(o/8),A=Math.ceil(o/8),h=Math.ceil(l/8),u=o-8*(A-1),d=l-8*(h-1),p={value:0},g=new Array(3),f=new Array(3),m=new Array(3),y=new Array(3),I=new Array(3);for(let n=0;n<3;++n)I[n]=e[t.idx[n]],g[n]=n<1?0:g[n-1]+A*h,f[n]=new Float32Array(64),m[n]=new Uint16Array(64),y[n]=new Uint16Array(64*A);for(let e=0;e<h;++e){let r=8;e==h-1&&(r=d);let o=8;for(let t=0;t<A;++t){t==A-1&&(o=u);for(let t=0;t<3;++t)m[t].fill(0),m[t][0]=s[g[t]++],_(p,i,m[t]),B(m[t],f[t]),S(f[t]);b(f);for(let e=0;e<3;++e)M(f[e],y[e],64*t)}let l=0;for(let i=0;i<3;++i){const s=n[t.idx[i]].type;for(let t=8*e;t<8*e+r;++t){l=I[i][t];for(let e=0;e<c;++e){const n=64*e+8*(7&t);a.setUint16(l+0*s,y[i][n+0],!0),a.setUint16(l+2*s,y[i][n+1],!0),a.setUint16(l+4*s,y[i][n+2],!0),a.setUint16(l+6*s,y[i][n+3],!0),a.setUint16(l+8*s,y[i][n+4],!0),a.setUint16(l+10*s,y[i][n+5],!0),a.setUint16(l+12*s,y[i][n+6],!0),a.setUint16(l+14*s,y[i][n+7],!0),l+=16*s}}if(c!=A)for(let t=8*e;t<8*e+r;++t){const e=I[i][t]+8*c*2*s,n=64*c+8*(7&t);for(let t=0;t<o;++t)a.setUint16(e+2*t*s,y[i][n+t],!0)}}}const C=new Uint16Array(o);a=new DataView(r.buffer);for(let e=0;e<3;++e){n[t.idx[e]].decoded=!0;const i=n[t.idx[e]].type;if(2==n[e].type)for(let t=0;t<l;++t){const n=I[e][t];for(let t=0;t<o;++t)C[t]=a.getUint16(n+2*t*i,!0);for(let t=0;t<o;++t)a.setFloat32(n+2*t*i,Y(C[t]),!0)}}}(c,p,l,A,h,i);for(let e=0;e<l.length;++e){const n=l[e];if(!n.decoded)switch(n.compression){case 2:let s=0,r=0;for(let a=0;a<t.lines;++a){let t=p[e][s];for(let e=0;e<n.width;++e){for(let e=0;e<2*n.type;++e)i[t++]=u[r+e*n.width*n.height];r++}s++}break;case 1:w(e,p,l,A,h,i);break;default:throw new Error("EXRLoader.parse: unsupported channel compression")}}return new DataView(i.buffer)}function F(t,e){const n=new Uint8Array(t);let i=0;for(;0!=n[e.value+i];)i+=1;const s=(new TextDecoder).decode(n.slice(e.value,e.value+i));return e.value=e.value+i+1,s}function N(t,e){const n=t.getInt32(e.value,!0);return e.value=e.value+4,n}function k(t,e){const n=t.getUint32(e.value,!0);return e.value=e.value+4,n}function O(t,e){const n=t[e.value];return e.value=e.value+1,n}function z(t,e){const n=t.getUint8(e.value);return e.value=e.value+1,n}const G=function(t,e){let n;return n="getBigInt64"in DataView.prototype?Number(t.getBigInt64(e.value,!0)):t.getUint32(e.value+4,!0)+Number(t.getUint32(e.value,!0)<<32),e.value+=8,n};function H(t,e){const n=t.getFloat32(e.value,!0);return e.value+=4,n}function V(t,e){return vr.toHalfFloat(H(t,e))}function Y(t){const e=(31744&t)>>10,n=1023&t;return(t>>15?-1:1)*(e?31===e?n?NaN:1/0:Math.pow(2,e-15)*(1+n/1024):n/1024*6103515625e-14)}function q(t,e){const n=t.getUint16(e.value,!0);return e.value+=2,n}function W(t,e){return Y(q(t,e))}function J(t,e,n,i,s){return"string"===i||"stringvector"===i||"iccProfile"===i?function(t,e,n){const i=(new TextDecoder).decode(new Uint8Array(t).slice(e.value,e.value+n));return e.value=e.value+n,i}(e,n,s):"chlist"===i?function(t,e,n,i){const s=n.value,r=[];for(;n.value<s+i-1;){const i=F(e,n),s=N(t,n),a=z(t,n);n.value+=3;const o=N(t,n),l=N(t,n);r.push({name:i,pixelType:s,pLinear:a,xSampling:o,ySampling:l})}return n.value+=1,r}(t,e,n,s):"chromaticities"===i?function(t,e){return{redX:H(t,e),redY:H(t,e),greenX:H(t,e),greenY:H(t,e),blueX:H(t,e),blueY:H(t,e),whiteX:H(t,e),whiteY:H(t,e)}}(t,n):"compression"===i?function(t,e){return["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"][z(t,e)]}(t,n):"box2i"===i?function(t,e){return{xMin:N(t,e),yMin:N(t,e),xMax:N(t,e),yMax:N(t,e)}}(t,n):"envmap"===i?function(t,e){return["ENVMAP_LATLONG","ENVMAP_CUBE"][z(t,e)]}(t,n):"tiledesc"===i?function(t,e){const n=k(t,e),i=k(t,e),s=z(t,e);return{xSize:n,ySize:i,levelMode:["ONE_LEVEL","MIPMAP_LEVELS","RIPMAP_LEVELS"][15&s],roundingMode:["ROUND_DOWN","ROUND_UP"][s>>4]}}(t,n):"lineOrder"===i?function(t,e){return["INCREASING_Y","DECREASING_Y","RANDOM_Y"][z(t,e)]}(t,n):"float"===i?H(t,n):"v2f"===i?function(t,e){return[H(t,e),H(t,e)]}(t,n):"v3f"===i?function(t,e){return[H(t,e),H(t,e),H(t,e)]}(t,n):"int"===i?N(t,n):"rational"===i?function(t,e){return[N(t,e),k(t,e)]}(t,n):"timecode"===i?function(t,e){return[k(t,e),k(t,e)]}(t,n):"preview"===i?(n.value+=s,"skipped"):void(n.value+=s)}function j(t,e,n,i){const s=new Array(t);for(let r=0;r<t;r++){const t=1<<r;let a=e/t|0;"ROUND_UP"==i&&a*t<e&&(a+=1);const o=Math.max(a,1);s[r]=(o+n-1)/n|0}return s}function X(){const t=this,e=t.offset,n={value:0};for(let i=0;i<t.tileCount;i++){const i=N(t.viewer,e),s=N(t.viewer,e);e.value+=8,t.size=k(t.viewer,e);const r=i*t.blockWidth,a=s*t.blockHeight;t.columns=r+t.blockWidth>t.width?t.width-r:t.blockWidth,t.lines=a+t.blockHeight>t.height?t.height-a:t.blockHeight;const o=t.columns*t.totalBytes,l=t.size<t.lines*o?t.uncompress(t):Q(t);e.value+=t.size;for(let e=0;e<t.lines;e++){const i=e*t.columns*t.totalBytes;for(let s=0;s<t.inputChannels.length;s++){const o=et.channels[s].name,c=t.channelByteOffsets[o]*t.columns,A=t.decodeChannels[o];if(void 0===A)continue;n.value=i+c;const h=(t.height-(1+a+e))*t.outLineWidth;for(let e=0;e<t.columns;e++){const i=h+(e+r)*t.outputChannels+A;t.byteArray[i]=t.getter(l,n)}}}}}function K(){const t=this,e=t.offset,n={value:0};for(let i=0;i<t.height/t.blockHeight;i++){const s=N(t.viewer,e)-et.dataWindow.yMin;t.size=k(t.viewer,e),t.lines=s+t.blockHeight>t.height?t.height-s:t.blockHeight;const r=t.columns*t.totalBytes,a=t.size<t.lines*r?t.uncompress(t):Q(t);e.value+=t.size;for(let e=0;e<t.blockHeight;e++){const s=i*t.blockHeight,o=e+t.scanOrder(s);if(o>=t.height)continue;const l=e*r,c=(t.height-1-o)*t.outLineWidth;for(let e=0;e<t.inputChannels.length;e++){const i=et.channels[e].name,s=t.channelByteOffsets[i]*t.columns,r=t.decodeChannels[i];if(void 0!==r){n.value=l+s;for(let e=0;e<t.columns;e++){const i=c+e*t.outputChannels+r;t.byteArray[i]=t.getter(a,n)}}}}}}const Z={value:0},$=new DataView(t),tt=new Uint8Array(t),et=function(t,e,n){const i={};if(20000630!=t.getUint32(0,!0))throw new Error("THREE.EXRLoader: Provided file doesn't appear to be in OpenEXR format.");i.version=t.getUint8(4);const s=t.getUint8(5);i.spec={singleTile:!!(2&s),longName:!!(4&s),deepFormat:!!(8&s),multiPart:!!(16&s)},n.value=8;let r=!0;for(;r;){const s=F(e,n);if(""===s)r=!1;else{const r=F(e,n),a=J(t,e,n,r,k(t,n));void 0===a?console.warn(`THREE.EXRLoader: Skipped unknown header attribute type '${r}'.`):i[s]=a}}if(-7&s)throw console.error("THREE.EXRHeader:",i),new Error("THREE.EXRLoader: Provided file is currently unsupported.");return i}($,t,Z),nt=function(t,e,n,i,s,r){const a={size:0,viewer:e,array:n,offset:i,width:t.dataWindow.xMax-t.dataWindow.xMin+1,height:t.dataWindow.yMax-t.dataWindow.yMin+1,inputChannels:t.channels,channelByteOffsets:{},shouldExpand:!1,scanOrder:null,totalBytes:null,columns:null,lines:null,type:null,uncompress:null,getter:null,format:null,colorSpace:un};switch(t.compression){case"NO_COMPRESSION":a.blockHeight=1,a.uncompress=Q;break;case"RLE_COMPRESSION":a.blockHeight=1,a.uncompress=D;break;case"ZIPS_COMPRESSION":a.blockHeight=1,a.uncompress=R;break;case"ZIP_COMPRESSION":a.blockHeight=16,a.uncompress=R;break;case"PIZ_COMPRESSION":a.blockHeight=32,a.uncompress=U;break;case"PXR24_COMPRESSION":a.blockHeight=16,a.uncompress=P;break;case"DWAA_COMPRESSION":a.blockHeight=32,a.uncompress=L;break;case"DWAB_COMPRESSION":a.blockHeight=256,a.uncompress=L;break;default:throw new Error("EXRLoader.parse: "+t.compression+" is unsupported")}const o={};for(const e of t.channels)switch(e.name){case"Y":case"R":case"G":case"B":case"A":o[e.name]=!0,a.type=e.pixelType}let l=!1,c=!1;if(o.R&&o.G&&o.B)a.outputChannels=4;else{if(!o.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");a.outputChannels=1}switch(a.outputChannels){case 4:r==ne?(l=!o.A,a.format=ne,a.colorSpace=un,a.outputChannels=4,a.decodeChannels={R:0,G:1,B:2,A:3}):r==oe?(a.format=oe,a.colorSpace=un,a.outputChannels=2,a.decodeChannels={R:0,G:1}):r==re?(a.format=re,a.colorSpace=un,a.outputChannels=1,a.decodeChannels={R:0}):c=!0;break;case 1:r==ne?(l=!0,a.format=ne,a.colorSpace=un,a.outputChannels=4,a.shouldExpand=!0,a.decodeChannels={Y:0}):r==oe?(a.format=oe,a.colorSpace=un,a.outputChannels=2,a.shouldExpand=!0,a.decodeChannels={Y:0}):r==re?(a.format=re,a.colorSpace=un,a.outputChannels=1,a.decodeChannels={Y:0}):c=!0;break;default:c=!0}if(c)throw new Error("EXRLoader.parse: invalid output format for specified file.");if(1==a.type)switch(s){case Jt:a.getter=W;break;case jt:a.getter=q}else{if(2!=a.type)throw new Error("EXRLoader.parse: unsupported pixelType "+a.type+" for "+t.compression+".");switch(s){case Jt:a.getter=H;break;case jt:a.getter=V}}a.columns=a.width;const A=a.width*a.height*a.outputChannels;switch(s){case Jt:a.byteArray=new Float32Array(A),l&&a.byteArray.fill(1,0,A);break;case jt:a.byteArray=new Uint16Array(A),l&&a.byteArray.fill(15360,0,A);break;default:console.error("THREE.EXRLoader: unsupported type: ",s)}let h=0;for(const e of t.channels)void 0!==a.decodeChannels[e.name]&&(a.channelByteOffsets[e.name]=h),h+=2*e.pixelType;if(a.totalBytes=h,a.outLineWidth=a.width*a.outputChannels,"INCREASING_Y"===t.lineOrder?a.scanOrder=t=>t:a.scanOrder=t=>a.height-1-t,t.spec.singleTile){a.blockHeight=t.tiles.ySize,a.blockWidth=t.tiles.xSize;const n=function(t,e,n){let i=0;switch(t.levelMode){case"ONE_LEVEL":i=1;break;case"MIPMAP_LEVELS":i=function(t,e){const n=Math.log2(t);return"ROUND_DOWN"==e?Math.floor(n):Math.ceil(n)}(Math.max(e,n),t.roundingMode)+1;break;case"RIPMAP_LEVELS":throw new Error("THREE.EXRLoader: RIPMAP_LEVELS tiles currently unsupported.")}return i}(t.tiles,a.width,a.height),s=j(n,a.width,t.tiles.xSize,t.tiles.roundingMode),r=j(n,a.height,t.tiles.ySize,t.tiles.roundingMode);a.tileCount=s[0]*r[0];for(let t=0;t<n;t++)for(let n=0;n<r[t];n++)for(let n=0;n<s[t];n++)G(e,i);a.decode=X.bind(a)}else{a.blockWidth=a.width;const t=Math.ceil(a.height/a.blockHeight);for(let n=0;n<t;n++)G(e,i);a.decode=K.bind(a)}return a}(et,$,tt,Z,this.type,this.outputFormat);if(nt.decode(),nt.shouldExpand){const t=nt.byteArray;if(this.outputFormat==ne)for(let e=0;e<t.length;e+=4)t[e+2]=t[e+1]=t[e];else if(this.outputFormat==oe)for(let e=0;e<t.length;e+=2)t[e+1]=t[e]}return{header:et,width:nt.width,height:nt.height,data:nt.byteArray,format:nt.format,colorSpace:nt.colorSpace,type:this.type}}setDataType(t){return this.type=t,this}setOutputFormat(t){return this.outputFormat=t,this}load(t,e,n,i){return super.load(t,function(t,n){t.colorSpace=n.colorSpace,t.minFilter=Ft,t.magFilter=Ft,t.generateMipmaps=!1,t.flipY=!1,e&&e(t,n)},n,i)}},i.LightProbeHelper=class extends ea{constructor(t,e=1){const n=new la({type:"LightProbeHelperMaterial",uniforms:{sh:{value:t.sh.coefficients},intensity:{value:t.intensity}},vertexShader:"\n\n\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvNormal = normalize( normalMatrix * normal );\n\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t",fragmentShader:"\n\n\t\t\t\t#define RECIPROCAL_PI 0.318309886\n\n\t\t\t\tvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\t\t\t\t\t// matrix is assumed to be orthogonal\n\n\t\t\t\t\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\t// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf,\n\t\t\t\tvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t\t\t\t\t// normal is assumed to have unit length,\n\n\t\t\t\t\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t\t\t// band 0,\n\t\t\t\t\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t\t\t\t\t// band 1,\n\t\t\t\t\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\t\t\t\t\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\t\t\t\t\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t\t\t\t\t// band 2,\n\t\t\t\t\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\t\t\t\t\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\t\t\t\t\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\t\t\t\t\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\t\t\t\t\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\tuniform vec3 sh[ 9 ]; // sh coefficients\n\n\t\t\t\tuniform float intensity; // light probe intensity\n\n\t\t\t\tvarying vec3 vNormal;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 normal = normalize( vNormal );\n\n\t\t\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t\t\t\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );\n\n\t\t\t\t\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;\n\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( outgoingLight, 1.0 ) );\n\n\t\t\t\t}\n\n\t\t\t"});super(new kc(1,32,16),n),this.lightProbe=t,this.size=e,this.type="LightProbeHelper",this.onBeforeRender()}dispose(){this.geometry.dispose(),this.material.dispose()}onBeforeRender(){this.position.copy(this.lightProbe.position),this.scale.set(1,1,1).multiplyScalar(this.size),this.material.uniforms.intensity.value=this.lightProbe.intensity}},i.LightProbeGenerator=class{static fromCubeTexture(t){let e=0;const n=new gi,i=new gi,s=new dr,r=[0,0,0,0,0,0,0,0,0],a=new ih,o=a.coefficients;for(let a=0;a<6;a++){const l=t.image[a],c=l.width,A=l.height,h=document.createElement("canvas");h.width=c,h.height=A;const u=h.getContext("2d");u.drawImage(l,0,0,c,A);const d=u.getImageData(0,0,c,A),p=d.data,g=d.width,f=2/g;for(let l=0,c=p.length;l<c;l+=4){s.setRGB(p[l]/255,p[l+1]/255,p[l+2]/255),TC(s,t.colorSpace);const c=l/4,A=(c%g+.5)*f-1,h=1-(Math.floor(c/g)+.5)*f;switch(a){case 0:n.set(-1,h,-A);break;case 1:n.set(1,h,A);break;case 2:n.set(-A,1,-h);break;case 3:n.set(-A,-1,h);break;case 4:n.set(-A,h,1);break;case 5:n.set(A,h,-1)}const u=n.lengthSq(),d=4/(Math.sqrt(u)*u);e+=d,i.copy(n).normalize(),ih.getBasisAt(i,r);for(let t=0;t<9;t++)o[t].x+=r[t]*s.r*d,o[t].y+=r[t]*s.g*d,o[t].z+=r[t]*s.b*d}}const l=4*Math.PI/e;for(let t=0;t<9;t++)o[t].x*=l,o[t].y*=l,o[t].z*=l;return new sh(a)}static async fromCubeRenderTarget(t,e){const n=t.coordinateSystem===Xn?-1:1;let i=0;const s=new gi,r=new gi,a=new dr,o=[0,0,0,0,0,0,0,0,0],l=new ih,c=l.coefficients,A=e.texture.type,h=e.width;let u;t.isWebGLRenderer&&(u=A===Jt?new Float32Array(h*h*4):A===jt?new Uint16Array(h*h*4):new Uint8Array(h*h*4));for(let l=0;l<6;l++){t.isWebGLRenderer?await t.readRenderTargetPixelsAsync(e,0,0,h,h,u,l):u=await t.readRenderTargetPixelsAsync(e,0,0,h,h,0,l);const d=2/h;for(let t=0,p=u.length;t<p;t+=4){let p,g,f;A===Jt?(p=u[t],g=u[t+1],f=u[t+2]):A===jt?(p=vr.fromHalfFloat(u[t]),g=vr.fromHalfFloat(u[t+1]),f=vr.fromHalfFloat(u[t+2])):(p=u[t]/255,g=u[t+1]/255,f=u[t+2]/255),a.setRGB(p,g,f),TC(a,e.texture.colorSpace);const m=t/4,y=(1-(m%h+.5)*d)*n,I=1-(Math.floor(m/h)+.5)*d;switch(l){case 0:s.set(-1*n,I,y*n);break;case 1:s.set(1*n,I,-y*n);break;case 2:s.set(y,1,-I);break;case 3:s.set(y,-1,I);break;case 4:s.set(y,I,1);break;case 5:s.set(-y,I,-1)}const C=s.lengthSq(),E=4/(Math.sqrt(C)*C);i+=E,r.copy(s).normalize(),ih.getBasisAt(r,o);for(let t=0;t<9;t++)c[t].x+=o[t]*a.r*E,c[t].y+=o[t]*a.g*E,c[t].z+=o[t]*a.b*E}}const d=4*Math.PI/i;for(let t=0;t<9;t++)c[t].x*=d,c[t].y*=d,c[t].z*=d;return new sh(l)}},i.XREstimatedLight=class extends ya{constructor(t,e=!0){super(),this.lightProbe=new sh,this.lightProbe.intensity=0,this.add(this.lightProbe),this.directionalLight=new th,this.directionalLight.intensity=0,this.add(this.directionalLight),this.environment=null;let n=null,i=!1;t.xr.addEventListener("sessionstart",()=>{const s=t.xr.getSession();"requestLightProbe"in s&&s.requestLightProbe({reflectionFormat:s.preferredReflectionFormat}).then(s=>{n=new QC(this,t,s,e,()=>{i=!0,this.dispatchEvent({type:"estimationstart"})})})}),t.xr.addEventListener("sessionend",()=>{n&&(n.dispose(),n=null),i&&this.dispatchEvent({type:"estimationend"})}),this.dispose=()=>{n&&(n.dispose(),n=null),this.remove(this.lightProbe),this.lightProbe=null,this.remove(this.directionalLight),this.directionalLight=null,this.environment=null}}},i.TransformControls=class extends Zu{constructor(t,e=null){super(void 0,e);const n=new ev(this);this._root=n;const i=new nv;this._gizmo=i,n.add(i);const s=new iv;this._plane=s,n.add(s);const r=this;function a(t,e){let n=e;Object.defineProperty(r,t,{get:function(){return void 0!==n?n:e},set:function(e){n!==e&&(n=e,s[t]=e,i[t]=e,r.dispatchEvent({type:t+"-changed",value:e}),r.dispatchEvent(QE))}}),r[t]=e,s[t]=e,i[t]=e}a("camera",t),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const o=new gi,l=new gi,c=new pi,A=new pi,h=new gi,u=new pi,d=new gi,p=new gi,g=new gi,f=new gi;a("worldPosition",o),a("worldPositionStart",l),a("worldQuaternion",c),a("worldQuaternionStart",A),a("cameraPosition",h),a("cameraQuaternion",u),a("pointStart",d),a("pointEnd",p),a("rotationAxis",g),a("rotationAngle",0),a("eye",f),this._offset=new gi,this._startNorm=new gi,this._endNorm=new gi,this._cameraScale=new gi,this._parentPosition=new gi,this._parentQuaternion=new pi,this._parentQuaternionInv=new pi,this._parentScale=new gi,this._worldScaleStart=new gi,this._worldQuaternionInv=new pi,this._worldScale=new gi,this._positionStart=new gi,this._quaternionStart=new pi,this._scaleStart=new gi,this._getPointer=PE.bind(this),this._onPointerDown=FE.bind(this),this._onPointerHover=LE.bind(this),this._onPointerMove=NE.bind(this),this._onPointerUp=kE.bind(this),null!==e&&this.connect(e)}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(t){if(void 0===this.object||!0===this.dragging)return;null!==t&&BE.setFromCamera(t,this.camera);const e=OE(this._gizmo.picker[this.mode],BE);this.axis=e?e.object.name:null}pointerDown(t){if(void 0!==this.object&&!0!==this.dragging&&(null==t||0===t.button)&&null!==this.axis){null!==t&&BE.setFromCamera(t,this.camera);const e=OE(this._plane,BE,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,DE.mode=this.mode,this.dispatchEvent(DE)}}pointerMove(t){const e=this.axis,n=this.mode,i=this.object;let s=this.space;if("scale"===n?s="local":"E"!==e&&"XYZE"!==e&&"XYZ"!==e||(s="world"),void 0===i||null===e||!1===this.dragging||null!==t&&-1!==t.button)return;null!==t&&BE.setFromCamera(t,this.camera);const r=OE(this._plane,BE,!0);if(r){if(this.pointEnd.copy(r.point).sub(this.worldPositionStart),"translate"===n)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===s&&"XYZ"!==e&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===e.indexOf("X")&&(this._offset.x=0),-1===e.indexOf("Y")&&(this._offset.y=0),-1===e.indexOf("Z")&&(this._offset.z=0),"local"===s&&"XYZ"!==e?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===s&&(i.position.applyQuaternion(ME.copy(this._quaternionStart).invert()),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),"world"===s&&(i.parent&&i.position.add(SE.setFromMatrixPosition(i.parent.matrixWorld)),-1!==e.search("X")&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),-1!==e.search("Y")&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),-1!==e.search("Z")&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub(SE.setFromMatrixPosition(i.parent.matrixWorld)))),i.position.x=Math.max(this.minX,Math.min(this.maxX,i.position.x)),i.position.y=Math.max(this.minY,Math.min(this.maxY,i.position.y)),i.position.z=Math.max(this.minZ,Math.min(this.maxZ,i.position.z));else if("scale"===n){if(-1!==e.search("XYZ")){let t=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(t*=-1),bE.set(t,t,t)}else SE.copy(this.pointStart),bE.copy(this.pointEnd),SE.applyQuaternion(this._worldQuaternionInv),bE.applyQuaternion(this._worldQuaternionInv),bE.divide(SE),-1===e.search("X")&&(bE.x=1),-1===e.search("Y")&&(bE.y=1),-1===e.search("Z")&&(bE.z=1);i.scale.copy(this._scaleStart).multiply(bE),this.scaleSnap&&(-1!==e.search("X")&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Y")&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==e.search("Z")&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===n){this._offset.copy(this.pointEnd).sub(this.pointStart);const t=20/this.worldPosition.distanceTo(SE.setFromMatrixPosition(this.camera.matrixWorld));let n=!1;"XYZE"===e?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(SE.copy(this.rotationAxis).cross(this.eye))*t):"X"!==e&&"Y"!==e&&"Z"!==e||(this.rotationAxis.copy(TE[e]),SE.copy(TE[e]),"local"===s&&SE.applyQuaternion(this.worldQuaternion),SE.cross(this.eye),0===SE.length()?n=!0:this.rotationAngle=this._offset.dot(SE.normalize())*t),("E"===e||n)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===s&&"E"!==e&&"XYZE"!==e?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(ME.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(ME.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(QE),this.dispatchEvent(UE)}}pointerUp(t){null!==t&&0!==t.button||(this.dragging&&null!==this.axis&&(RE.mode=this.mode,this.dispatchEvent(RE)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(t){return this.object=t,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(QE),this.dispatchEvent(UE),this.pointStart.copy(this.pointEnd))}getRaycaster(){return BE}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}setColors(t,e,n,i){const s=this._gizmo.materialLib;s.xAxis.color.set(t),s.yAxis.color.set(e),s.zAxis.color.set(n),s.active.color.set(i),s.xAxisTransparent.color.set(t),s.yAxisTransparent.color.set(e),s.zAxisTransparent.color.set(n),s.activeTransparent.color.set(i),s.xAxis._color&&s.xAxis._color.set(t),s.yAxis._color&&s.yAxis._color.set(e),s.zAxis._color&&s.zAxis._color.set(n),s.active._color&&s.active._color.set(i),s.xAxisTransparent._color&&s.xAxisTransparent._color.set(t),s.yAxisTransparent._color&&s.yAxisTransparent._color.set(e),s.zAxisTransparent._color&&s.zAxisTransparent._color.set(n),s.activeTransparent._color&&s.activeTransparent._color.set(i)}},i.CSS3DRenderer=class{constructor(t={}){const e=this;let n,i,s,r;const a={camera:{style:""},objects:new WeakMap},o=void 0!==t.element?t.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");l.style.transformOrigin="0 0",l.style.pointerEvents="none",o.appendChild(l);const c=document.createElement("div");function A(t){return Math.abs(t)<1e-10?0:t}function h(t){const e=t.elements;return"matrix3d("+A(e[0])+","+A(-e[1])+","+A(e[2])+","+A(e[3])+","+A(e[4])+","+A(-e[5])+","+A(e[6])+","+A(e[7])+","+A(e[8])+","+A(-e[9])+","+A(e[10])+","+A(e[11])+","+A(e[12])+","+A(-e[13])+","+A(e[14])+","+A(e[15])+")"}function u(t){const e=t.elements;return"translate(-50%,-50%)matrix3d("+A(e[0])+","+A(e[1])+","+A(e[2])+","+A(e[3])+","+A(-e[4])+","+A(-e[5])+","+A(-e[6])+","+A(-e[7])+","+A(e[8])+","+A(e[9])+","+A(e[10])+","+A(e[11])+","+A(e[12])+","+A(e[13])+","+A(e[14])+","+A(e[15])+")"}function d(t){t.isCSS3DObject&&(t.element.style.display="none");for(let e=0,n=t.children.length;e<n;e++)d(t.children[e])}function p(t,n,i,s){if(!1!==t.visible){if(t.isCSS3DObject){const s=!0===t.layers.test(i.layers),r=t.element;if(r.style.display=!0===s?"":"none",!0===s){let s;t.onBeforeRender(e,n,i),t.isCSS3DSprite?(jI.copy(i.matrixWorldInverse),jI.transpose(),0!==t.rotation2D&&jI.multiply(XI.makeRotationZ(t.rotation2D)),t.matrixWorld.decompose(qI,WI,JI),jI.setPosition(qI),jI.scale(JI),jI.elements[3]=0,jI.elements[7]=0,jI.elements[11]=0,jI.elements[15]=1,s=u(jI)):s=u(t.matrixWorld);const o=a.objects.get(t);if(void 0===o||o.style!==s){r.style.transform=s;const e={style:s};a.objects.set(t,e)}r.parentNode!==c&&c.appendChild(r),t.onAfterRender(e,n,i)}}for(let e=0,r=t.children.length;e<r;e++)p(t.children[e],n,i,s)}else d(t)}c.style.transformStyle="preserve-3d",l.appendChild(c),this.getSize=function(){return{width:n,height:i}},this.render=function(t,e){const o=e.projectionMatrix.elements[5]*r;let u,d;e.view&&e.view.enabled?(l.style.transform=`translate( ${-e.view.offsetX*(n/e.view.width)}px, ${-e.view.offsetY*(i/e.view.height)}px )`,l.style.transform+=`scale( ${e.view.fullWidth/e.view.width}, ${e.view.fullHeight/e.view.height} )`):l.style.transform="",!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),e.isOrthographicCamera&&(u=-(e.right+e.left)/2,d=(e.top+e.bottom)/2);const g=e.view&&e.view.enabled?e.view.height/e.view.fullHeight:1,f=e.isOrthographicCamera?`scale( ${g} )scale(`+o+")translate("+A(u)+"px,"+A(d)+"px)"+h(e.matrixWorldInverse):`scale( ${g} )translateZ(`+o+"px)"+h(e.matrixWorldInverse),m=(e.isPerspectiveCamera?"perspective("+o+"px) ":"")+f+"translate("+s+"px,"+r+"px)";a.camera.style!==m&&(c.style.transform=m,a.camera.style=m),p(t,t,e,f)},this.setSize=function(t,e){n=t,i=e,s=n/2,r=i/2,o.style.width=t+"px",o.style.height=e+"px",l.style.width=t+"px",l.style.height=e+"px",c.style.width=t+"px",c.style.height=e+"px"}}},i.CSS3DObject=class extends Js{constructor(t=document.createElement("div")){super(),this.isCSS3DObject=!0,this.element=t,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&null!==t.element.parentNode&&t.element.remove()})})}copy(t,e){return super.copy(t,e),this.element=t.element.cloneNode(!0),this}},p.TilesFadePlugin=class{get fadeDuration(){return this._fadeManager.duration}set fadeDuration(t){this._fadeManager.duration=Number(t)}get fadingTiles(){return this._fadeManager.fadeCount}constructor(t){t={maximumFadeOutTiles:50,fadeRootTiles:!1,fadeDuration:250,...t},this.name="FADE_TILES_PLUGIN",this.priority=-2,this.tiles=null,this.batchedMesh=null,this._quickFadeTiles=new Set,this._fadeManager=new UQ,this._fadeMaterialManager=new FQ,this._prevCameraTransforms=null,this._fadingOutCount=0,this.maximumFadeOutTiles=t.maximumFadeOutTiles,this.fadeRootTiles=t.fadeRootTiles,this.fadeDuration=t.fadeDuration}init(t){this._onLoadModel=({scene:t})=>{this._fadeMaterialManager.prepareScene(t)},this._onDisposeModel=({tile:t,scene:e})=>{this.tiles.visibleTiles.has(t)&&this._quickFadeTiles.add(t.parent),this._fadeManager.deleteObject(t),this._fadeMaterialManager.deleteScene(e)},this._onAddCamera=({camera:t})=>{this._prevCameraTransforms.set(t,new Es)},this._onDeleteCamera=({camera:t})=>{this._prevCameraTransforms.delete(t)},this._onTileVisibilityChange=({tile:t,visible:e})=>{const n=t.cached.scene;n&&(n.visible=!0),this.forEachBatchIds(t,(t,e,n)=>{e.setFadeAt(t,0,0),e.setVisibleAt(t,!1),n.batchedMesh.setVisibleAt(t,!1)})},this._onUpdateBefore=()=>{WQ.call(this)},this._onUpdateAfter=()=>{JQ.call(this)},t.addEventListener("load-model",this._onLoadModel),t.addEventListener("dispose-model",this._onDisposeModel),t.addEventListener("add-camera",this._onAddCamera),t.addEventListener("delete-camera",this._onDeleteCamera),t.addEventListener("update-before",this._onUpdateBefore),t.addEventListener("update-after",this._onUpdateAfter),t.addEventListener("tile-visibility-change",this._onTileVisibilityChange);const e=this._fadeManager;e.onFadeSetStart=()=>{t.dispatchEvent({type:"fade-start"}),t.dispatchEvent({type:"needs-render"})},e.onFadeSetComplete=()=>{t.dispatchEvent({type:"fade-end"}),t.dispatchEvent({type:"needs-render"})},e.onFadeComplete=(e,n)=>{this._fadeMaterialManager.setFade(e.cached.scene,0,0),this.forEachBatchIds(e,(t,e,i)=>{e.setFadeAt(t,0,0),e.setVisibleAt(t,!1),i.batchedMesh.setVisibleAt(t,n)}),n||(t.invokeOnePlugin(t=>t!==this&&t.setTileVisible&&t.setTileVisible(e,!1)),this._fadingOutCount--)};const n=new Map;t.cameras.forEach(t=>{n.set(t,new Es)}),t.forEachLoadedModel((t,e)=>{this._onLoadModel({scene:t})}),this.tiles=t,this._fadeManager=e,this._prevCameraTransforms=n}initBatchedMesh(){const t=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN")?.batchedMesh;if(t){if(null===this.batchedMesh){this._onBatchedMeshDispose=()=>{this.batchedMesh.dispose(),this.batchedMesh.removeFromParent(),this.batchedMesh=null,t.removeEventListener("dispose",this._onBatchedMeshDispose)};const e=t.material.clone();e.onBeforeCompile=t.material.onBeforeCompile,this.batchedMesh=new kQ(t,e),this.tiles.group.add(this.batchedMesh)}}else null!==this.batchedMesh&&(this._onBatchedMeshDispose(),this._onBatchedMeshDispose=null)}setTileVisible(t,e){const n=this._fadeManager,i=n.isFading(t);if(n.isFadingOut(t)&&this._fadingOutCount--,e?1===t.__depthFromRenderedParent?((t[zQ]||this.fadeRootTiles)&&this._fadeManager.fadeIn(t),t[zQ]=!0):this._fadeManager.fadeIn(t):(this._fadingOutCount++,n.fadeOut(t)),this._quickFadeTiles.has(t)&&(this._fadeManager.completeFade(t),this._quickFadeTiles.delete(t)),i)return!0;const s=this._fadeManager.isFading(t);return!(e||!s)}dispose(){const t=this.tiles;this._fadeManager.completeAllFades(),null!==this.batchedMesh&&this._onBatchedMeshDispose(),t.removeEventListener("load-model",this._onLoadModel),t.removeEventListener("dispose-model",this._onDisposeModel),t.removeEventListener("add-camera",this._onAddCamera),t.removeEventListener("delete-camera",this._onDeleteCamera),t.removeEventListener("update-before",this._onUpdateBefore),t.removeEventListener("update-after",this._onUpdateAfter),t.removeEventListener("tile-visibility-change",this._onTileVisibilityChange),t.forEachLoadedModel((t,e)=>{this._fadeManager.deleteObject(e),t&&(t.visible=!0)})}forEachBatchIds(t,e){if(this.initBatchedMesh(),this.batchedMesh){const n=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN"),i=n.getTileBatchIds(t);i&&i.forEach(t=>{e(t,this.batchedMesh,n)})}}},p.ImplicitTilingPlugin=class{constructor(){this.name="IMPLICIT_TILING_PLUGIN"}init(t){this.tiles=t}preprocessNode(t,e,n){t.implicitTiling?(t.__hasUnrenderableContent=!0,t.__hasRenderableContent=!1,t.__subtreeIdx=0,t.__implicitRoot=t,t.__x=0,t.__y=0,t.__z=0,t.__level=0):/.subtree$/i.test(t.content?.uri)&&(t.__hasUnrenderableContent=!0,t.__hasRenderableContent=!1)}parseTile(t,e,n){if(/^subtree$/i.test(n)){const n=new ZQ(e);return n.workingPath=e.__basePath,n.fetchOptions=this.tiles.fetchOptions,n.parse(t)}}preprocessURL(t,e){if(e&&e.implicitTiling){const t=e.implicitTiling.subtrees.uri.replace("{level}",e.__level).replace("{x}",e.__x).replace("{y}",e.__y).replace("{z}",e.__z);return new URL(t,e.__basePath+"/").toString()}return t}disposeTile(t){/.subtree$/i.test(t.content?.uri)&&(t.children.forEach(t=>{this.tiles.processNodeQueue.remove(t)}),t.children.length=0,t.__childrenProcessed=0)}},p.DeepZoomImagePlugin=class extends iD{constructor(t={}){const{url:e,...n}=t;super(n),this.name="DZI_TILES_PLUGIN",this.imageSource=new lD({url:e})}},p.UpdateOnChangePlugin=class{constructor(){this.name="UPDATE_ON_CHANGE_PLUGIN",this.tiles=null,this.needsUpdate=!1,this.cameraMatrices=new Map}init(t){this.tiles=t,this._needsUpdateCallback=()=>{this.needsUpdate=!0},this._onCameraAdd=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.set(t,new Es)},this._onCameraDelete=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.delete(t)},t.addEventListener("needs-update",this._needsUpdateCallback),t.addEventListener("add-camera",this._onCameraAdd),t.addEventListener("delete-camera",this._onCameraDelete),t.addEventListener("camera-resolution-change",this._needsUpdateCallback),t.cameras.forEach(t=>{this._onCameraAdd({camera:t})})}doTilesNeedUpdate(){const t=this.tiles;let e=!1;this.cameraMatrices.forEach((n,i)=>{cD.copy(t.group.matrixWorld).premultiply(i.matrixWorldInverse).premultiply(i.projectionMatrixInverse),e=e||!cD.equals(n),n.copy(cD)});const n=this.needsUpdate;return this.needsUpdate=!1,n||e}preprocessNode(){this.needsUpdate=!0}dispose(){const t=this.tiles;t.removeEventListener("camera-resolution-change",this._needsUpdateCallback),t.removeEventListener("needs-update",this._needsUpdateCallback),t.removeEventListener("add-camera",this._onCameraAdd),t.removeEventListener("delete-camera",this._onCameraDelete)}},window.THREE=i,window.ThreeMeshUI=sw,window.ThreeMeshBVH=u,window.TILES=p,window.SPARK=g,window.CustomShaderMaterial=class extends fr{constructor({baseMaterial:t,vertexShader:e,fragmentShader:n,uniforms:i,patchMap:s,cacheKey:r,...a}){if(!t)throw new Error("CustomShaderMaterial: baseMaterial is required.");let o;if(function(t){try{new t}catch(t){if(t.message.indexOf("is not a constructor")>=0)return!1}return!0}(t)){const e=0===Object.keys(a).length;o=new t(e?void 0:a)}else o=t,Object.assign(o,a);if(["ShaderMaterial","RawShaderMaterial"].includes(o.type))throw new Error(`CustomShaderMaterial does not support ${o.type} as a base material.`);super(),this.uniforms={},this.vertexShader="",this.fragmentShader="";const l=o;l.name=`CustomShaderMaterial<${o.name||o.type}>`,l.update=this.update,l.__csm={prevOnBeforeCompile:o.onBeforeCompile,baseMaterial:o,vertexShader:e,fragmentShader:n,uniforms:i,patchMap:s,cacheKey:r};const c={...l.uniforms||{},...i||{}};l.uniforms=this.uniforms=c,l.vertexShader=this.vertexShader=e||"",l.fragmentShader=this.fragmentShader=n||"",l.update({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:l.uniforms,patchMap:s,cacheKey:r}),Object.assign(this,l);const A=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(l));for(const t in A){const e=A[t];(e.get||e.set)&&Object.defineProperty(this,t,e)}return Object.defineProperty(this,"type",{get:()=>o.type,set(t){o.type=t}}),this}update({fragmentShader:t,vertexShader:e,uniforms:n,cacheKey:i,patchMap:s}){const r=Sv(e||""),a=Sv(t||""),o=this;n&&(o.uniforms=n),e&&(o.vertexShader=e),t&&(o.fragmentShader=t),Object.entries(Bv).forEach(([t,e])=>{for(const n in e){const i=e[n];(a&&a.includes(i)||r&&r.includes(i))&&(o[t]||(o[t]=1))}});const l=o.__csm.prevOnBeforeCompile,c=(t,e,n)=>{let i,s="";if(e){const t=e.search(/void\s+main\s*\(\s*\)\s*{/);if(-1!==t){s=e.slice(0,t);let n=0,r=-1;for(let i=t;i<e.length;i++)if("{"===e[i]&&n++,"}"===e[i]&&(n--,0===n)){r=i;break}if(-1!==r){const n=e.slice(t,r+1);i=n.slice(n.indexOf("{")+1,-1)}}else s=e}if(n&&e&&e.includes(yv)&&i&&(i="csm_UnlitFac = 1.0;\n"+i),t.includes("//~CSM_DEFAULTS")){const e=(t=t.replace("void main() {",`\n          // THREE-CustomShaderMaterial by Faraz Shaikh: https://github.com/FarazzShaikh/THREE-CustomShaderMaterial\n  \n          ${s}\n          \n          void main() {\n          `)).lastIndexOf("//~CSM_MAIN_END");if(-1!==e){const n=`\n            ${i?`${i}`:""}\n            //~CSM_MAIN_END\n          `;t=t.slice(0,e)+n+t.slice(e)}}else{const e=/void\s*main\s*\(\s*\)\s*{/gm;t=t.replace(e,`\n          // THREE-CustomShaderMaterial by Faraz Shaikh: https://github.com/FarazzShaikh/THREE-CustomShaderMaterial\n  \n          //~CSM_DEFAULTS\n          \n    varying mat4 csm_internal_vModelViewMatrix;\n\n          \n    \n#ifdef IS_VERTEX\n    vec3 csm_Position;\n    vec4 csm_PositionRaw;\n    vec3 csm_Normal;\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        float csm_PointSize;\n    #endif\n#else\n    vec4 csm_DiffuseColor;\n    vec4 csm_FragColor;\n    float csm_UnlitFac;\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        vec3 csm_Emissive;\n        float csm_Roughness;\n        float csm_Metalness;\n        float csm_Iridescence;\n        \n        #if defined IS_MESHPHYSICALMATERIAL\n            float csm_Clearcoat;\n            float csm_ClearcoatRoughness;\n            vec3 csm_ClearcoatNormal;\n            float csm_Transmission;\n            float csm_Thickness;\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        float csm_AO;\n    #endif\n\n    // csm_Bump\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        vec3 csm_Bump;\n        vec3 csm_FragNormal;\n    #endif\n\n    float csm_DepthAlpha;\n#endif\n\n  \n          ${s}\n          \n          void main() {\n            {\n              \n\n#ifdef IS_VERTEX\n    // csm_Position & csm_PositionRaw\n    #ifdef IS_UNKNOWN\n        csm_Position = vec3(0.0);\n        csm_PositionRaw = vec4(0.0);\n        csm_Normal = vec3(0.0);\n    #else\n        csm_Position = position;\n        csm_PositionRaw = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n        csm_Normal = normal;\n    #endif\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        csm_PointSize = size;\n    #endif\n#else\n    csm_UnlitFac = 0.0;\n\n    // csm_DiffuseColor & csm_FragColor\n    #if defined IS_UNKNOWN || defined IS_SHADERMATERIAL || defined IS_MESHDEPTHMATERIAL || defined IS_MESHDISTANCEMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_SHADOWMATERIAL\n        csm_DiffuseColor = vec4(1.0, 0.0, 1.0, 1.0);\n        csm_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n    #else\n        #ifdef USE_MAP\n            vec4 _csm_sampledDiffuseColor = texture2D(map, vMapUv);\n\n            #ifdef DECODE_VIDEO_TEXTURE\n            // inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n            _csm_sampledDiffuseColor = vec4(mix(pow(_csm_sampledDiffuseColor.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), _csm_sampledDiffuseColor.rgb * 0.0773993808, vec3(lessThanEqual(_csm_sampledDiffuseColor.rgb, vec3(0.04045)))), _csm_sampledDiffuseColor.w);\n            #endif\n\n            csm_DiffuseColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n            csm_FragColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n        #else\n            csm_DiffuseColor = vec4(diffuse, opacity);\n            csm_FragColor = vec4(diffuse, opacity);\n        #endif\n    #endif\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        csm_Emissive = emissive;\n        csm_Roughness = roughness;\n        csm_Metalness = metalness;\n\n        #ifdef USE_IRIDESCENCE\n            csm_Iridescence = iridescence;\n        #else\n            csm_Iridescence = 0.0;\n        #endif\n\n        #if defined IS_MESHPHYSICALMATERIAL\n            #ifdef USE_CLEARCOAT\n                csm_Clearcoat = clearcoat;\n                csm_ClearcoatRoughness = clearcoatRoughness;\n            #else\n                csm_Clearcoat = 0.0;\n                csm_ClearcoatRoughness = 0.0;\n            #endif\n\n            #ifdef USE_TRANSMISSION\n                csm_Transmission = transmission;\n                csm_Thickness = thickness;\n            #else\n                csm_Transmission = 0.0;\n                csm_Thickness = 0.0;\n            #endif\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        csm_AO = 0.0;\n    #endif\n\n    // csm_Bump\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        csm_Bump = vec3(0.0);\n        #ifdef FLAT_SHADED\n            vec3 fdx = dFdx( vViewPosition );\n            vec3 fdy = dFdy( vViewPosition );\n            csm_FragNormal = normalize( cross( fdx, fdy ) );\n        #else\n            csm_FragNormal = normalize(vNormal);\n            #ifdef DOUBLE_SIDED\n                csm_FragNormal *= gl_FrontFacing ? 1.0 : - 1.0;\n            #endif\n        #endif\n    #endif\n\n    csm_DepthAlpha = 1.0;\n#endif\n\n            }\n            ${n?"\n    \n":"\n    csm_internal_vModelViewMatrix = modelViewMatrix;\n"}\n\n            ${i?`${i}`:""}\n            //~CSM_MAIN_END\n          `)}return t};o.onBeforeCompile=(t,e)=>{null==l||l(t,e);const i=s||{},A=o.type,h=A?`#define IS_${A.toUpperCase()};\n`:"#define IS_UNKNOWN;\n";t.vertexShader=h+"#define IS_VERTEX\n"+t.vertexShader,t.fragmentShader=h+"#define IS_FRAGMENT\n"+t.fragmentShader;const u=e=>{for(const n in e){const i="*"===n||r&&r.includes(n);if("*"===n||a&&a.includes(n)||i){const i=wv[n];if(i&&"*"!==i&&(Array.isArray(i)?!i.includes(A):i!==A))return void console.error(`CustomShaderMaterial: ${n} is not available in ${A}. Shader cannot compile.`);const s=e[n];for(const e in s){const n=s[e];if("object"==typeof n){const i=n.type,s=n.value;"fs"===i?t.fragmentShader=t.fragmentShader.replace(e,s):"vs"===i&&(t.vertexShader=t.vertexShader.replace(e,s))}else n&&(t.vertexShader=t.vertexShader.replace(e,n),t.fragmentShader=t.fragmentShader.replace(e,n))}}}};u(_v),u(i),t.vertexShader=c(t.vertexShader,r,!1),t.fragmentShader=c(t.fragmentShader,a,!0),n&&(t.uniforms={...t.uniforms,...o.uniforms}),o.uniforms=t.uniforms};const A=o.customProgramCacheKey;o.customProgramCacheKey=()=>((null==i?void 0:i())||function(t){let e=0;for(let n=0;n<t.length;n++)e=t.charCodeAt(n)+(e<<6)+(e<<16)-e;return String(e>>>0)}((r||"")+(a||"")))+(null==A?void 0:A.call(o)),o.needsUpdate=!0}clone(){const t=this;return new t.constructor({baseMaterial:t.__csm.baseMaterial.clone(),vertexShader:t.__csm.vertexShader,fragmentShader:t.__csm.fragmentShader,uniforms:t.__csm.uniforms,patchMap:t.__csm.patchMap,cacheKey:t.__csm.cacheKey})}}})();